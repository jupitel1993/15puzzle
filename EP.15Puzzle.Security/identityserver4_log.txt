2019-07-17 14:30:45.621 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 14:30:45.765 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 14:30:45.772 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 14:30:45.772 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 14:30:45.778 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 14:30:45.778 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 14:30:45.779 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 14:30:46.713 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 14:30:46.718 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 14:30:46.719 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 14:30:46.719 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 14:30:46.719 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 14:30:46.719 +03:00 [DBG] Error Url: /home/error
2019-07-17 14:30:46.719 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 14:30:50.263 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-17 14:30:53.733 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-17 14:30:55.840 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-17 14:30:56.978 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"fc81bab0-b9d6-4285-ba1a-4c6da8a32308","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOAL8R0P87F:00000006","TimeStamp":"2019-07-17T11:30:56.0000000Z","ProcessId":5868,"LocalIpAddress":"127.0.0.1:24264","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-17 14:30:57.010 +03:00 [DBG] Augmenting SignInContext
2019-07-17 14:30:57.015 +03:00 [DBG] Adding amr claim with value: external
2019-07-17 14:30:57.026 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 14:30:57.034 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-17 14:31:02.582 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 14:31:02.636 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-17 14:31:02.636 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-17 14:31:02.637 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-17 14:31:02.639 +03:00 [INF] {"SubjectId":"fc81bab0-b9d6-4285-ba1a-4c6da8a32308","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOAL8R0P87F:0000000B","TimeStamp":"2019-07-17T11:31:02.0000000Z","ProcessId":5868,"LocalIpAddress":"127.0.0.1:24264","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-17 14:42:57.661 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-17 14:42:57.672 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:42:57.672 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:42:57.678 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:42:57.688 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:42:57.689 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:42:57.697 +03:00 [DBG] Start discovery request
2019-07-17 14:42:57.783 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-17 14:42:57.789 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-17 14:42:57.789 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-17 14:42:57.798 +03:00 [DBG] Start authorize request
2019-07-17 14:42:57.808 +03:00 [DBG] No user present in authorize request
2019-07-17 14:42:57.815 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:42:57.842 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:42:57.907 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:42:57.930 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1d7f52680ff64b15a7e9454632d48698","UiLocales":null,"Nonce":"9de4c9685770410d8b35e5dbcf4ac33e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1d7f52680ff64b15a7e9454632d48698","nonce":"9de4c9685770410d8b35e5dbcf4ac33e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 14:42:57.955 +03:00 [INF] Showing login: User is not authenticated
2019-07-17 14:42:57.975 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:42:57.976 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:42:57.976 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:42:57.980 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:42:59.947 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-17 14:43:01.426 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-17 14:43:01.480 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"fc81bab0-b9d6-4285-ba1a-4c6da8a32308","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOAL8R0P87G:00000006","TimeStamp":"2019-07-17T11:43:01.0000000Z","ProcessId":5868,"LocalIpAddress":"127.0.0.1:24264","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-17 14:43:01.480 +03:00 [DBG] Augmenting SignInContext
2019-07-17 14:43:01.480 +03:00 [DBG] Adding amr claim with value: external
2019-07-17 14:43:01.481 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 14:43:01.481 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-17 14:43:01.494 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-17 14:43:01.497 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-17 14:43:01.497 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-17 14:43:01.508 +03:00 [DBG] Start authorize callback request
2019-07-17 14:43:01.517 +03:00 [DBG] User in authorize request: fc81bab0-b9d6-4285-ba1a-4c6da8a32308
2019-07-17 14:43:01.518 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:43:01.518 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:43:01.518 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:43:01.519 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"fc81bab0-b9d6-4285-ba1a-4c6da8a32308","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1d7f52680ff64b15a7e9454632d48698","UiLocales":null,"Nonce":"9de4c9685770410d8b35e5dbcf4ac33e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"cb3214f0e78c41b0ef03ff9b9e669baa","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1d7f52680ff64b15a7e9454632d48698","nonce":"9de4c9685770410d8b35e5dbcf4ac33e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 14:43:01.570 +03:00 [DBG] user_consent grant with value: spa|fc81bab0-b9d6-4285-ba1a-4c6da8a32308 not found in store.
2019-07-17 14:43:01.571 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-17 14:43:01.571 +03:00 [INF] Showing consent: User has not yet consented
2019-07-17 14:43:01.592 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:43:01.593 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:43:01.593 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:43:01.593 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:43:04.663 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 14:43:04.693 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:43:04.693 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:43:04.693 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:43:04.696 +03:00 [INF] {"SubjectId":"fc81bab0-b9d6-4285-ba1a-4c6da8a32308","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOAL8R0P87G:0000000A","TimeStamp":"2019-07-17T11:43:04.0000000Z","ProcessId":5868,"LocalIpAddress":"127.0.0.1:24264","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-17 14:43:04.717 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:43:04.726 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-17 14:43:04.727 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-17 14:43:04.727 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-17 14:43:04.727 +03:00 [DBG] Start authorize callback request
2019-07-17 14:43:04.734 +03:00 [DBG] User in authorize request: fc81bab0-b9d6-4285-ba1a-4c6da8a32308
2019-07-17 14:43:04.734 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:43:04.734 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:43:04.734 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:43:04.735 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"fc81bab0-b9d6-4285-ba1a-4c6da8a32308","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1d7f52680ff64b15a7e9454632d48698","UiLocales":null,"Nonce":"9de4c9685770410d8b35e5dbcf4ac33e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"cb3214f0e78c41b0ef03ff9b9e669baa","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1d7f52680ff64b15a7e9454632d48698","nonce":"9de4c9685770410d8b35e5dbcf4ac33e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 14:43:04.740 +03:00 [DBG] user_consent grant with value: spa|fc81bab0-b9d6-4285-ba1a-4c6da8a32308 not found in store.
2019-07-17 14:43:04.740 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-17 14:43:04.756 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-17 14:43:04.760 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-17 14:43:04.767 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: fc81bab0-b9d6-4285-ba1a-4c6da8a32308
2019-07-17 14:43:04.801 +03:00 [DBG] Creating Implicit Flow response.
2019-07-17 14:43:04.821 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-17 14:43:04.824 +03:00 [DBG] Getting claims for access token for subject: fc81bab0-b9d6-4285-ba1a-4c6da8a32308
2019-07-17 14:43:04.966 +03:00 [DBG] Getting claims for identity token for subject: fc81bab0-b9d6-4285-ba1a-4c6da8a32308 and client: spa
2019-07-17 14:43:04.967 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-17 14:43:04.981 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"fc81bab0-b9d6-4285-ba1a-4c6da8a32308","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****qq-Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****k36A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOAL8R0P87G:0000000B","TimeStamp":"2019-07-17T11:43:04.0000000Z","ProcessId":5868,"LocalIpAddress":"127.0.0.1:24264","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-17 14:43:04.983 +03:00 [INF] Authorize endpoint response
{"SubjectId":"fc81bab0-b9d6-4285-ba1a-4c6da8a32308","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"1d7f52680ff64b15a7e9454632d48698","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-17 14:43:05.001 +03:00 [DBG] Augmenting SignInContext
2019-07-17 14:43:05.002 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 14:43:05.643 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-17 14:43:05.644 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:43:05.644 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:43:05.646 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:43:05.647 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:43:05.647 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:43:05.647 +03:00 [DBG] Start discovery request
2019-07-17 14:43:05.716 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-17 14:43:05.716 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:43:05.716 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:43:05.717 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:43:05.718 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:43:05.719 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:43:05.728 +03:00 [DBG] Start key discovery request
2019-07-17 14:43:05.805 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-17 14:43:05.805 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:43:05.805 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:43:05.814 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-17 14:43:05.814 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:43:05.814 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:43:05.815 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-17 14:43:05.820 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-17 14:43:05.820 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-17 14:43:05.834 +03:00 [DBG] Start userinfo request
2019-07-17 14:43:05.841 +03:00 [DBG] Bearer token found in header
2019-07-17 14:43:05.948 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:43:05.952 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:43:05.959 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-17 14:43:05.964 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563363784,"exp":1563367384,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"fc81bab0-b9d6-4285-ba1a-4c6da8a32308","auth_time":1563363781,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-17 14:43:05.976 +03:00 [DBG] Creating userinfo response
2019-07-17 14:43:05.985 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 14:43:05.990 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 14:43:05.997 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-17 14:43:05.997 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 14:43:06.003 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username
2019-07-17 14:43:06.003 +03:00 [DBG] End userinfo request
2019-07-17 14:43:06.052 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-17 14:43:06.053 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-17 14:43:06.054 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-17 14:43:06.057 +03:00 [DBG] Rendering check session result
2019-07-17 14:44:04.389 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-17 14:44:04.389 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:44:04.389 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:44:04.390 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:44:04.390 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:44:04.390 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:44:04.391 +03:00 [DBG] Start discovery request
2019-07-17 14:44:04.413 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-17 14:44:04.414 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-17 14:44:04.415 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-17 14:44:04.415 +03:00 [DBG] Start authorize request
2019-07-17 14:44:04.415 +03:00 [DBG] No user present in authorize request
2019-07-17 14:44:04.415 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:44:04.415 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:44:04.416 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:44:04.416 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"4d1fc1fb0f2c40e5a86608da4deae2a3","UiLocales":null,"Nonce":"f0f7f26dfbf44ad8933b1baeb0b82dc3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"4d1fc1fb0f2c40e5a86608da4deae2a3","nonce":"f0f7f26dfbf44ad8933b1baeb0b82dc3"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 14:44:04.416 +03:00 [INF] Showing login: User is not authenticated
2019-07-17 14:44:04.437 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:44:04.437 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:44:04.438 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:44:04.438 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:44:06.361 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-17 14:44:12.132 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-17 14:44:12.275 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"9807ce3f-883c-411d-95fe-6d3a32c64f97","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOAL8R0P87G:00000016","TimeStamp":"2019-07-17T11:44:12.0000000Z","ProcessId":5868,"LocalIpAddress":"127.0.0.1:24264","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-17 14:44:12.276 +03:00 [DBG] Augmenting SignInContext
2019-07-17 14:44:12.276 +03:00 [DBG] Adding amr claim with value: external
2019-07-17 14:44:12.276 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 14:44:12.276 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-17 14:44:12.291 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-17 14:44:12.291 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-17 14:44:12.292 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-17 14:44:12.292 +03:00 [DBG] Start authorize callback request
2019-07-17 14:44:12.292 +03:00 [DBG] User in authorize request: 9807ce3f-883c-411d-95fe-6d3a32c64f97
2019-07-17 14:44:12.292 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:44:12.292 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:44:12.293 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:44:12.293 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9807ce3f-883c-411d-95fe-6d3a32c64f97","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"4d1fc1fb0f2c40e5a86608da4deae2a3","UiLocales":null,"Nonce":"f0f7f26dfbf44ad8933b1baeb0b82dc3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"91c48d9bd776a306525963e6e632806e","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"4d1fc1fb0f2c40e5a86608da4deae2a3","nonce":"f0f7f26dfbf44ad8933b1baeb0b82dc3"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 14:44:12.299 +03:00 [DBG] user_consent grant with value: spa|9807ce3f-883c-411d-95fe-6d3a32c64f97 not found in store.
2019-07-17 14:44:12.299 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-17 14:44:12.299 +03:00 [INF] Showing consent: User has not yet consented
2019-07-17 14:44:12.324 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:44:12.324 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:44:12.325 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:44:12.325 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:44:15.586 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 14:44:15.588 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:44:15.589 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:44:15.589 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:44:15.590 +03:00 [INF] {"SubjectId":"9807ce3f-883c-411d-95fe-6d3a32c64f97","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOAL8R0P87G:00000019","TimeStamp":"2019-07-17T11:44:15.0000000Z","ProcessId":5868,"LocalIpAddress":"127.0.0.1:24264","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-17 14:44:15.590 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:44:15.600 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-17 14:44:15.600 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-17 14:44:15.600 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-17 14:44:15.600 +03:00 [DBG] Start authorize callback request
2019-07-17 14:44:15.601 +03:00 [DBG] User in authorize request: 9807ce3f-883c-411d-95fe-6d3a32c64f97
2019-07-17 14:44:15.601 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:44:15.601 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:44:15.602 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:44:15.602 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9807ce3f-883c-411d-95fe-6d3a32c64f97","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"4d1fc1fb0f2c40e5a86608da4deae2a3","UiLocales":null,"Nonce":"f0f7f26dfbf44ad8933b1baeb0b82dc3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"91c48d9bd776a306525963e6e632806e","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"4d1fc1fb0f2c40e5a86608da4deae2a3","nonce":"f0f7f26dfbf44ad8933b1baeb0b82dc3"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 14:44:15.607 +03:00 [DBG] user_consent grant with value: spa|9807ce3f-883c-411d-95fe-6d3a32c64f97 not found in store.
2019-07-17 14:44:15.608 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-17 14:44:15.608 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-17 14:44:15.608 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-17 14:44:15.608 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 9807ce3f-883c-411d-95fe-6d3a32c64f97
2019-07-17 14:44:15.616 +03:00 [DBG] Creating Implicit Flow response.
2019-07-17 14:44:15.617 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-17 14:44:15.617 +03:00 [DBG] Getting claims for access token for subject: 9807ce3f-883c-411d-95fe-6d3a32c64f97
2019-07-17 14:44:15.629 +03:00 [DBG] Getting claims for identity token for subject: 9807ce3f-883c-411d-95fe-6d3a32c64f97 and client: spa
2019-07-17 14:44:15.629 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-17 14:44:15.636 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9807ce3f-883c-411d-95fe-6d3a32c64f97","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****TWyw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vmwQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOAL8R0P87G:0000001A","TimeStamp":"2019-07-17T11:44:15.0000000Z","ProcessId":5868,"LocalIpAddress":"127.0.0.1:24264","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-17 14:44:15.636 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9807ce3f-883c-411d-95fe-6d3a32c64f97","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"4d1fc1fb0f2c40e5a86608da4deae2a3","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-17 14:44:15.637 +03:00 [DBG] Augmenting SignInContext
2019-07-17 14:44:15.637 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 14:44:16.890 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-17 14:44:16.890 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:44:16.893 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:44:16.895 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:44:16.896 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:44:16.896 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:44:16.896 +03:00 [DBG] Start discovery request
2019-07-17 14:44:16.969 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-17 14:44:16.969 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:44:16.969 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:44:16.970 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:44:16.971 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:44:16.971 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:44:16.971 +03:00 [DBG] Start key discovery request
2019-07-17 14:44:17.071 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-17 14:44:17.071 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:44:17.071 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:44:17.080 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-17 14:44:17.080 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:44:17.080 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:44:17.082 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-17 14:44:17.083 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-17 14:44:17.083 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-17 14:44:17.083 +03:00 [DBG] Start userinfo request
2019-07-17 14:44:17.083 +03:00 [DBG] Bearer token found in header
2019-07-17 14:44:17.089 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:44:17.089 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:44:17.096 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-17 14:44:17.099 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563363855,"exp":1563367455,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9807ce3f-883c-411d-95fe-6d3a32c64f97","auth_time":1563363852,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-17 14:44:17.101 +03:00 [DBG] Creating userinfo response
2019-07-17 14:44:17.101 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 14:44:17.101 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 14:44:17.102 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-17 14:44:17.102 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 14:44:17.112 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username
2019-07-17 14:44:17.112 +03:00 [DBG] End userinfo request
2019-07-17 14:44:17.163 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-17 14:44:17.165 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-17 14:44:17.165 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-17 14:44:17.165 +03:00 [DBG] Rendering check session result
2019-07-17 14:45:01.206 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-17 14:45:01.207 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:45:01.207 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:45:01.209 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:45:01.209 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:45:01.209 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:45:01.209 +03:00 [DBG] Start discovery request
2019-07-17 14:45:01.247 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-17 14:45:01.248 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-17 14:45:01.248 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-17 14:45:01.248 +03:00 [DBG] Start authorize request
2019-07-17 14:45:01.249 +03:00 [DBG] No user present in authorize request
2019-07-17 14:45:01.249 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:45:01.249 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:01.249 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:45:01.250 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9fdda14fbe6c43b9b68011275695a010","UiLocales":null,"Nonce":"439e826486854e77919c0ca19f6356f0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9fdda14fbe6c43b9b68011275695a010","nonce":"439e826486854e77919c0ca19f6356f0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 14:45:01.250 +03:00 [INF] Showing login: User is not authenticated
2019-07-17 14:45:01.262 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:45:01.262 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:01.263 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:45:01.263 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:24.577 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 14:45:24.608 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:45:24.609 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:24.609 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:45:24.692 +03:00 [DBG] Augmenting SignInContext
2019-07-17 14:45:24.692 +03:00 [DBG] Adding idp claim with value: local
2019-07-17 14:45:24.692 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-17 14:45:24.692 +03:00 [DBG] Adding auth_time claim with value: 1563363924
2019-07-17 14:45:24.693 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 14:45:24.696 +03:00 [INF] {"Username":"bob","Provider":null,"ProviderUserId":null,"SubjectId":"b00308f1-7b31-4d2d-9301-0e41d3f41151","DisplayName":"bob","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOAL8R0P87G:00000023","TimeStamp":"2019-07-17T11:45:24.0000000Z","ProcessId":5868,"LocalIpAddress":"127.0.0.1:24264","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-17 14:45:24.697 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:24.705 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-17 14:45:24.705 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-17 14:45:24.706 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-17 14:45:24.707 +03:00 [DBG] Start authorize callback request
2019-07-17 14:45:24.707 +03:00 [DBG] User in authorize request: b00308f1-7b31-4d2d-9301-0e41d3f41151
2019-07-17 14:45:24.707 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:45:24.707 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:24.708 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:45:24.708 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"b00308f1-7b31-4d2d-9301-0e41d3f41151","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9fdda14fbe6c43b9b68011275695a010","UiLocales":null,"Nonce":"439e826486854e77919c0ca19f6356f0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"60b7b1eae9f48f79ea17bc96bff87531","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9fdda14fbe6c43b9b68011275695a010","nonce":"439e826486854e77919c0ca19f6356f0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 14:45:24.712 +03:00 [DBG] user_consent grant with value: spa|b00308f1-7b31-4d2d-9301-0e41d3f41151 not found in store.
2019-07-17 14:45:24.713 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-17 14:45:24.713 +03:00 [INF] Showing consent: User has not yet consented
2019-07-17 14:45:24.724 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:45:24.725 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:24.725 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:45:24.725 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:26.932 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 14:45:26.934 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:45:26.934 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:26.935 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:45:26.935 +03:00 [INF] {"SubjectId":"b00308f1-7b31-4d2d-9301-0e41d3f41151","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOAL8R0P87G:00000027","TimeStamp":"2019-07-17T11:45:26.0000000Z","ProcessId":5868,"LocalIpAddress":"127.0.0.1:24264","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-17 14:45:26.937 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:26.951 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-17 14:45:26.952 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-17 14:45:26.952 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-17 14:45:26.952 +03:00 [DBG] Start authorize callback request
2019-07-17 14:45:26.952 +03:00 [DBG] User in authorize request: b00308f1-7b31-4d2d-9301-0e41d3f41151
2019-07-17 14:45:26.952 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 14:45:26.953 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:26.953 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 14:45:26.953 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"b00308f1-7b31-4d2d-9301-0e41d3f41151","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9fdda14fbe6c43b9b68011275695a010","UiLocales":null,"Nonce":"439e826486854e77919c0ca19f6356f0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"60b7b1eae9f48f79ea17bc96bff87531","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9fdda14fbe6c43b9b68011275695a010","nonce":"439e826486854e77919c0ca19f6356f0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 14:45:26.958 +03:00 [DBG] user_consent grant with value: spa|b00308f1-7b31-4d2d-9301-0e41d3f41151 not found in store.
2019-07-17 14:45:26.958 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-17 14:45:26.958 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-17 14:45:26.959 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-17 14:45:26.959 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: b00308f1-7b31-4d2d-9301-0e41d3f41151
2019-07-17 14:45:26.967 +03:00 [DBG] Creating Implicit Flow response.
2019-07-17 14:45:26.967 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-17 14:45:26.967 +03:00 [DBG] Getting claims for access token for subject: b00308f1-7b31-4d2d-9301-0e41d3f41151
2019-07-17 14:45:26.979 +03:00 [DBG] Getting claims for identity token for subject: b00308f1-7b31-4d2d-9301-0e41d3f41151 and client: spa
2019-07-17 14:45:26.979 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-17 14:45:26.986 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"b00308f1-7b31-4d2d-9301-0e41d3f41151","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ViSg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****w5nQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOAL8R0P87G:00000028","TimeStamp":"2019-07-17T11:45:26.0000000Z","ProcessId":5868,"LocalIpAddress":"127.0.0.1:24264","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-17 14:45:26.986 +03:00 [INF] Authorize endpoint response
{"SubjectId":"b00308f1-7b31-4d2d-9301-0e41d3f41151","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"9fdda14fbe6c43b9b68011275695a010","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-17 14:45:26.987 +03:00 [DBG] Augmenting SignInContext
2019-07-17 14:45:26.987 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 14:45:28.276 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-17 14:45:28.276 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:45:28.276 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:45:28.277 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:45:28.277 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:45:28.277 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:45:28.278 +03:00 [DBG] Start discovery request
2019-07-17 14:45:28.357 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-17 14:45:28.357 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:45:28.357 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:45:28.358 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:45:28.358 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:45:28.359 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:45:28.359 +03:00 [DBG] Start key discovery request
2019-07-17 14:45:28.420 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-17 14:45:28.420 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:45:28.420 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:45:28.430 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-17 14:45:28.431 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 14:45:28.431 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 14:45:28.432 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-17 14:45:28.432 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-17 14:45:28.433 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-17 14:45:28.433 +03:00 [DBG] Start userinfo request
2019-07-17 14:45:28.434 +03:00 [DBG] Bearer token found in header
2019-07-17 14:45:28.439 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:28.439 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 14:45:28.444 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-17 14:45:28.444 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563363926,"exp":1563367526,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"b00308f1-7b31-4d2d-9301-0e41d3f41151","auth_time":1563363924,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-17 14:45:28.444 +03:00 [DBG] Creating userinfo response
2019-07-17 14:45:28.444 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 14:45:28.445 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 14:45:28.445 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-17 14:45:28.445 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 14:45:28.452 +03:00 [INF] Profile service returned the following claim types: sub name given_name family_name email website preferred_username
2019-07-17 14:45:28.452 +03:00 [DBG] End userinfo request
2019-07-17 14:45:28.474 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-17 14:45:28.476 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-17 14:45:28.476 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-17 14:45:28.476 +03:00 [DBG] Rendering check session result
2019-07-17 14:59:02.657 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 14:59:02.751 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 14:59:02.759 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 14:59:02.759 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 14:59:02.759 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 14:59:02.759 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 14:59:02.759 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 14:59:03.305 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 14:59:03.308 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 14:59:03.308 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 14:59:03.308 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 14:59:03.309 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 14:59:03.309 +03:00 [DBG] Error Url: /home/error
2019-07-17 14:59:03.309 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 15:43:38.285 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 15:43:38.369 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 15:43:38.374 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 15:43:38.374 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 15:43:38.374 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 15:43:38.374 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 15:43:38.374 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 15:43:38.764 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 15:43:38.768 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 15:43:38.768 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 15:43:38.768 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 15:43:38.768 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 15:43:38.768 +03:00 [DBG] Error Url: /home/error
2019-07-17 15:43:38.768 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 15:43:46.694 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-17 15:57:55.024 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 15:57:55.108 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 15:57:55.115 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 15:57:55.116 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 15:57:55.116 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 15:57:55.116 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 15:57:55.116 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 15:57:55.664 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 15:57:55.668 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 15:57:55.668 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 15:57:55.668 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 15:57:55.669 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 15:57:55.669 +03:00 [DBG] Error Url: /home/error
2019-07-17 15:57:55.669 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 15:57:59.145 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-17 16:04:29.526 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 16:04:29.592 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 16:04:29.598 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 16:04:29.598 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 16:04:29.598 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 16:04:29.598 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 16:04:29.598 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 16:04:29.982 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 16:04:29.985 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 16:04:29.985 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 16:04:29.985 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 16:04:29.985 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 16:04:29.985 +03:00 [DBG] Error Url: /home/error
2019-07-17 16:04:29.986 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 16:04:34.067 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-17 16:04:45.498 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:05:20.473 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:05:33.719 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:05:40.203 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:07:36.307 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 16:07:36.382 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 16:07:36.393 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 16:07:36.393 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 16:07:36.393 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 16:07:36.393 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 16:07:36.394 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 16:07:37.492 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 16:07:37.497 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 16:07:37.498 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 16:07:37.499 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 16:07:37.500 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 16:07:37.500 +03:00 [DBG] Error Url: /home/error
2019-07-17 16:07:37.500 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 16:08:50.395 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-17 16:09:21.350 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:11:12.323 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 16:11:12.440 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 16:11:12.447 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 16:11:12.447 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 16:11:12.448 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 16:11:12.448 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 16:11:12.450 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 16:11:13.481 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 16:11:13.496 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 16:11:13.496 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 16:11:13.496 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 16:11:13.496 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 16:11:13.496 +03:00 [DBG] Error Url: /home/error
2019-07-17 16:11:13.497 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 16:11:15.747 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-17 16:11:28.989 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:12:13.594 +03:00 [WRN] User 9554e144-0553-4ac4-94ef-c5a64494dfcc password validation failed: PasswordRequiresNonAlphanumeric;PasswordRequiresDigit;PasswordRequiresUpper.
2019-07-17 16:14:42.827 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 16:14:42.892 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 16:14:42.897 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 16:14:42.897 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 16:14:42.897 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 16:14:42.898 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 16:14:42.898 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 16:14:44.163 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 16:14:44.167 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 16:14:44.167 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 16:14:44.167 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 16:14:44.167 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 16:14:44.168 +03:00 [DBG] Error Url: /home/error
2019-07-17 16:14:44.169 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 16:14:50.895 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-17 16:15:24.080 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:15:38.486 +03:00 [WRN] User 3acf1cc1-56ec-4b67-b325-2f42a748ebba validation failed: InvalidEmail.
2019-07-17 16:16:12.663 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:17:32.055 +03:00 [DBG] Augmenting SignInContext
2019-07-17 16:17:32.059 +03:00 [DBG] Adding idp claim with value: local
2019-07-17 16:17:32.059 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-17 16:17:32.060 +03:00 [DBG] Adding auth_time claim with value: 1563369452
2019-07-17 16:17:32.119 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 16:17:32.202 +03:00 [INF] {"Username":"blabla","Provider":null,"ProviderUserId":null,"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","DisplayName":"blabla","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOAN2TRO5E5:00000004","TimeStamp":"2019-07-17T13:17:32.0000000Z","ProcessId":9340,"LocalIpAddress":"127.0.0.1:37924","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-17 16:18:43.359 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 16:18:43.443 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 16:18:43.451 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 16:18:43.452 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 16:18:43.452 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 16:18:43.452 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 16:18:43.452 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 16:18:44.380 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 16:18:44.383 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 16:18:44.383 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 16:18:44.384 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 16:18:44.384 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 16:18:44.385 +03:00 [DBG] Error Url: /home/error
2019-07-17 16:18:44.385 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 16:28:31.133 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-17 16:28:45.897 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:28:47.299 +03:00 [DBG] Augmenting SignInContext
2019-07-17 16:28:47.303 +03:00 [DBG] Adding idp claim with value: local
2019-07-17 16:28:47.304 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-17 16:28:47.305 +03:00 [DBG] Adding auth_time claim with value: 1563370127
2019-07-17 16:28:47.336 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 16:28:47.392 +03:00 [INF] {"Username":"blabla","Provider":null,"ProviderUserId":null,"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","DisplayName":"blabla","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOAN55FMF1I:00000003","TimeStamp":"2019-07-17T13:28:47.0000000Z","ProcessId":1688,"LocalIpAddress":"127.0.0.1:39687","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-17 16:31:21.941 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-17 16:31:21.952 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 16:31:21.952 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 16:31:21.956 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 16:31:21.964 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 16:31:21.965 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 16:31:21.974 +03:00 [DBG] Start discovery request
2019-07-17 16:31:22.082 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-17 16:31:22.094 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-17 16:31:22.094 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-17 16:31:22.100 +03:00 [DBG] Start authorize request
2019-07-17 16:31:22.113 +03:00 [DBG] No user present in authorize request
2019-07-17 16:31:22.122 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:31:22.159 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:22.236 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:31:22.262 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e68186f4c37e488a9be78fcff0d1c414","UiLocales":null,"Nonce":"d9a44a4a65d74b4cac5e327d7205fd1e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e68186f4c37e488a9be78fcff0d1c414","nonce":"d9a44a4a65d74b4cac5e327d7205fd1e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 16:31:22.279 +03:00 [INF] Showing login: User is not authenticated
2019-07-17 16:31:22.335 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:31:22.336 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:22.336 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:31:22.340 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:24.824 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:31:24.900 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:31:24.900 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:24.901 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:31:24.951 +03:00 [DBG] Augmenting SignInContext
2019-07-17 16:31:24.951 +03:00 [DBG] Adding idp claim with value: local
2019-07-17 16:31:24.951 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-17 16:31:24.952 +03:00 [DBG] Adding auth_time claim with value: 1563370284
2019-07-17 16:31:24.953 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 16:31:24.968 +03:00 [INF] {"Username":"blabla","Provider":null,"ProviderUserId":null,"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","DisplayName":"blabla","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOAN55FMF1J:00000004","TimeStamp":"2019-07-17T13:31:24.0000000Z","ProcessId":1688,"LocalIpAddress":"127.0.0.1:39687","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-17 16:31:24.972 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:25.086 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-17 16:31:25.090 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-17 16:31:25.090 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-17 16:31:25.106 +03:00 [DBG] Start authorize callback request
2019-07-17 16:31:25.116 +03:00 [DBG] User in authorize request: e76a2bce-64d3-4a36-ae75-ecae83f4aaa4
2019-07-17 16:31:25.116 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:31:25.116 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:25.117 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:31:25.118 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e68186f4c37e488a9be78fcff0d1c414","UiLocales":null,"Nonce":"d9a44a4a65d74b4cac5e327d7205fd1e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e093b7eafeb2223c9eaf15ca4ff5c08b","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e68186f4c37e488a9be78fcff0d1c414","nonce":"d9a44a4a65d74b4cac5e327d7205fd1e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 16:31:25.175 +03:00 [DBG] user_consent grant with value: spa|e76a2bce-64d3-4a36-ae75-ecae83f4aaa4 not found in store.
2019-07-17 16:31:25.176 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-17 16:31:25.176 +03:00 [INF] Showing consent: User has not yet consented
2019-07-17 16:31:25.276 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:31:25.277 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:25.277 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:31:25.277 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:27.946 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:31:28.032 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:31:28.033 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:28.033 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:31:28.038 +03:00 [INF] {"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOAN55FMF1J:00000008","TimeStamp":"2019-07-17T13:31:28.0000000Z","ProcessId":1688,"LocalIpAddress":"127.0.0.1:39687","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-17 16:31:28.076 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:28.086 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-17 16:31:28.087 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-17 16:31:28.087 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-17 16:31:28.087 +03:00 [DBG] Start authorize callback request
2019-07-17 16:31:28.095 +03:00 [DBG] User in authorize request: e76a2bce-64d3-4a36-ae75-ecae83f4aaa4
2019-07-17 16:31:28.095 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:31:28.095 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:28.096 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:31:28.096 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e68186f4c37e488a9be78fcff0d1c414","UiLocales":null,"Nonce":"d9a44a4a65d74b4cac5e327d7205fd1e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e093b7eafeb2223c9eaf15ca4ff5c08b","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e68186f4c37e488a9be78fcff0d1c414","nonce":"d9a44a4a65d74b4cac5e327d7205fd1e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 16:31:28.103 +03:00 [DBG] user_consent grant with value: spa|e76a2bce-64d3-4a36-ae75-ecae83f4aaa4 not found in store.
2019-07-17 16:31:28.103 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-17 16:31:28.119 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-17 16:31:28.132 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: e76a2bce-64d3-4a36-ae75-ecae83f4aaa4
2019-07-17 16:31:28.161 +03:00 [DBG] Creating Implicit Flow response.
2019-07-17 16:31:28.196 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-17 16:31:28.198 +03:00 [DBG] Getting claims for access token for subject: e76a2bce-64d3-4a36-ae75-ecae83f4aaa4
2019-07-17 16:31:28.483 +03:00 [DBG] Getting claims for identity token for subject: e76a2bce-64d3-4a36-ae75-ecae83f4aaa4 and client: spa
2019-07-17 16:31:28.485 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-17 16:31:28.507 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****7h-w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****nKHQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOAN55FMF1J:00000009","TimeStamp":"2019-07-17T13:31:28.0000000Z","ProcessId":1688,"LocalIpAddress":"127.0.0.1:39687","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-17 16:31:28.511 +03:00 [INF] Authorize endpoint response
{"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"e68186f4c37e488a9be78fcff0d1c414","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-17 16:31:28.537 +03:00 [DBG] Augmenting SignInContext
2019-07-17 16:31:28.538 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 16:31:29.287 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-17 16:31:29.289 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 16:31:29.290 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 16:31:29.297 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 16:31:29.299 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 16:31:29.299 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 16:31:29.299 +03:00 [DBG] Start discovery request
2019-07-17 16:31:29.376 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-17 16:31:29.377 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 16:31:29.377 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 16:31:29.377 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 16:31:29.379 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 16:31:29.380 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 16:31:29.388 +03:00 [DBG] Start key discovery request
2019-07-17 16:31:29.524 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-17 16:31:29.525 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 16:31:29.525 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 16:31:29.567 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-17 16:31:29.567 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 16:31:29.567 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 16:31:29.568 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-17 16:31:29.573 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-17 16:31:29.573 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-17 16:31:29.593 +03:00 [DBG] Start userinfo request
2019-07-17 16:31:29.603 +03:00 [DBG] Bearer token found in header
2019-07-17 16:31:29.754 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:29.759 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:31:29.765 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-17 16:31:29.767 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563370288,"exp":1563373888,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","auth_time":1563370284,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-17 16:31:29.777 +03:00 [DBG] Creating userinfo response
2019-07-17 16:31:29.785 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 16:31:29.790 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 16:31:29.795 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-17 16:31:29.795 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 16:31:29.802 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-17 16:31:29.804 +03:00 [DBG] End userinfo request
2019-07-17 16:31:29.833 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-17 16:31:29.836 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-17 16:31:29.836 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-17 16:31:29.838 +03:00 [DBG] Rendering check session result
2019-07-17 16:43:12.302 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 16:43:12.392 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 16:43:12.402 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 16:43:12.403 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 16:43:12.403 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 16:43:12.403 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 16:43:12.403 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 16:43:13.477 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 16:43:13.483 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 16:43:13.483 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 16:43:13.483 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 16:43:13.483 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 16:43:13.484 +03:00 [DBG] Error Url: /home/error
2019-07-17 16:43:13.484 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 16:43:20.352 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-17 16:43:20.360 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 16:43:20.360 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 16:43:20.363 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 16:43:20.568 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 16:43:20.568 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 16:43:20.575 +03:00 [DBG] Start discovery request
2019-07-17 16:43:20.674 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-17 16:43:20.685 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-17 16:43:20.686 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-17 16:43:20.696 +03:00 [DBG] Start authorize request
2019-07-17 16:43:20.709 +03:00 [DBG] No user present in authorize request
2019-07-17 16:43:20.717 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:43:20.746 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:43:20.829 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:43:20.866 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"de79f6b65c684747a84c32c4c3a9e43f","UiLocales":null,"Nonce":"d917466f5e4c442980ca8ff439a02514","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"de79f6b65c684747a84c32c4c3a9e43f","nonce":"d917466f5e4c442980ca8ff439a02514"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 16:43:20.902 +03:00 [INF] Showing login: User is not authenticated
2019-07-17 16:43:21.120 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:43:21.121 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:43:21.121 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:43:21.130 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:43:29.229 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:43:29.473 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:43:29.473 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:43:29.474 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:43:30.695 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null.
Parameter name: user
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(TUser user, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at IdentityServer4.Quickstart.UI.AccountController.Login(LoginInputModel model, String button) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 112
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-17 16:44:25.138 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 16:44:25.245 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 16:44:25.252 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 16:44:25.252 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 16:44:25.253 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 16:44:25.253 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 16:44:25.253 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 16:44:26.443 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 16:44:26.447 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 16:44:26.447 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 16:44:26.447 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 16:44:26.447 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 16:44:26.447 +03:00 [DBG] Error Url: /home/error
2019-07-17 16:44:26.447 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 16:44:30.749 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-17 16:44:30.762 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 16:44:30.762 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 16:44:30.767 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 16:44:30.973 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 16:44:30.976 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 16:44:30.984 +03:00 [DBG] Start discovery request
2019-07-17 16:44:31.103 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-17 16:44:31.119 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-17 16:44:31.119 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-17 16:44:31.129 +03:00 [DBG] Start authorize request
2019-07-17 16:44:31.152 +03:00 [DBG] No user present in authorize request
2019-07-17 16:44:31.163 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:44:31.200 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:44:31.282 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:44:31.334 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0a7dca94b4244c46843319e2dfa69374","UiLocales":null,"Nonce":"f0bf3423f994413ea207e0b77155d7e8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0a7dca94b4244c46843319e2dfa69374","nonce":"f0bf3423f994413ea207e0b77155d7e8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 16:44:31.393 +03:00 [INF] Showing login: User is not authenticated
2019-07-17 16:44:31.547 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:44:31.550 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:44:31.551 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:44:31.557 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:44:34.595 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:44:34.792 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:44:34.792 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:44:34.793 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:44:50.088 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null.
Parameter name: user
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(TUser user, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at IdentityServer4.Quickstart.UI.AccountController.Login(LoginInputModel model, String button) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 112
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-17 16:46:39.497 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 16:46:39.554 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 16:46:39.558 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 16:46:39.559 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 16:46:39.559 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 16:46:39.559 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 16:46:39.559 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 16:46:40.473 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-17 16:46:40.485 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 16:46:40.485 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 16:46:40.516 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 16:46:40.516 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 16:46:40.516 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 16:46:40.516 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 16:46:40.516 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 16:46:40.516 +03:00 [DBG] Error Url: /home/error
2019-07-17 16:46:40.516 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 16:46:40.577 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 16:46:40.920 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 16:46:40.920 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 16:46:40.927 +03:00 [DBG] Start discovery request
2019-07-17 16:46:41.194 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-17 16:46:41.208 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-17 16:46:41.208 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-17 16:46:41.217 +03:00 [DBG] Start authorize request
2019-07-17 16:46:41.243 +03:00 [DBG] No user present in authorize request
2019-07-17 16:46:41.257 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:46:41.328 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:46:41.440 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:46:41.489 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"020502288f9748a19522d86fa48f4be0","UiLocales":null,"Nonce":"df2a39a5222348859c99d63a41765143","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"020502288f9748a19522d86fa48f4be0","nonce":"df2a39a5222348859c99d63a41765143"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 16:46:41.563 +03:00 [INF] Showing login: User is not authenticated
2019-07-17 16:46:41.782 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:46:41.783 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:46:41.785 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:46:41.791 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:46:45.703 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:46:45.906 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:46:45.906 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:46:45.907 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:46:46.797 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:46:46.797 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:46:46.799 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:46:46.800 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:46:50.803 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:46:50.867 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:46:50.868 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:46:50.868 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:46:50.876 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:46:50.876 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:46:50.877 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:46:50.877 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:47:10.888 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:47:10.944 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:47:10.944 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:47:10.945 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:47:11.291 +03:00 [DBG] Augmenting SignInContext
2019-07-17 16:47:11.296 +03:00 [DBG] Adding idp claim with value: local
2019-07-17 16:47:11.296 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-17 16:47:11.296 +03:00 [DBG] Adding auth_time claim with value: 1563371231
2019-07-17 16:47:11.328 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 16:47:11.355 +03:00 [INF] {"Username":"blabla","Provider":null,"ProviderUserId":null,"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","DisplayName":"blabla","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOANKOVVOAP:00000003","TimeStamp":"2019-07-17T13:47:11.0000000Z","ProcessId":10576,"LocalIpAddress":"127.0.0.1:41533","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-17 16:47:11.359 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:47:11.387 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-17 16:47:11.388 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-17 16:47:11.389 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-17 16:47:11.402 +03:00 [DBG] Start authorize callback request
2019-07-17 16:47:11.410 +03:00 [DBG] User in authorize request: e76a2bce-64d3-4a36-ae75-ecae83f4aaa4
2019-07-17 16:47:11.411 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:47:11.411 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:47:11.412 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:47:11.414 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"020502288f9748a19522d86fa48f4be0","UiLocales":null,"Nonce":"df2a39a5222348859c99d63a41765143","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"468e5eb294ca98f6ef664f38d825dcef","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"020502288f9748a19522d86fa48f4be0","nonce":"df2a39a5222348859c99d63a41765143"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 16:47:11.490 +03:00 [DBG] user_consent grant with value: spa|e76a2bce-64d3-4a36-ae75-ecae83f4aaa4 not found in store.
2019-07-17 16:47:11.491 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-17 16:47:11.491 +03:00 [INF] Showing consent: User has not yet consented
2019-07-17 16:47:11.672 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:47:11.673 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:47:11.673 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:47:11.674 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:47:17.419 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 16:47:17.525 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:47:17.525 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:47:17.526 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:47:17.533 +03:00 [INF] {"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOANKOVVOAQ:00000004","TimeStamp":"2019-07-17T13:47:17.0000000Z","ProcessId":10576,"LocalIpAddress":"127.0.0.1:41533","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-17 16:47:17.569 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:47:17.581 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-17 16:47:17.582 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-17 16:47:17.582 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-17 16:47:17.582 +03:00 [DBG] Start authorize callback request
2019-07-17 16:47:17.591 +03:00 [DBG] User in authorize request: e76a2bce-64d3-4a36-ae75-ecae83f4aaa4
2019-07-17 16:47:17.591 +03:00 [DBG] Start authorize request protocol validation
2019-07-17 16:47:17.591 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:47:17.592 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-17 16:47:17.592 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"020502288f9748a19522d86fa48f4be0","UiLocales":null,"Nonce":"df2a39a5222348859c99d63a41765143","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"468e5eb294ca98f6ef664f38d825dcef","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"020502288f9748a19522d86fa48f4be0","nonce":"df2a39a5222348859c99d63a41765143"},"$type":"AuthorizeRequestValidationLog"}
2019-07-17 16:47:17.598 +03:00 [DBG] user_consent grant with value: spa|e76a2bce-64d3-4a36-ae75-ecae83f4aaa4 not found in store.
2019-07-17 16:47:17.599 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-17 16:47:17.617 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-17 16:47:17.621 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-17 16:47:17.630 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: e76a2bce-64d3-4a36-ae75-ecae83f4aaa4
2019-07-17 16:47:17.685 +03:00 [DBG] Creating Implicit Flow response.
2019-07-17 16:47:17.725 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-17 16:47:17.727 +03:00 [DBG] Getting claims for access token for subject: e76a2bce-64d3-4a36-ae75-ecae83f4aaa4
2019-07-17 16:47:18.020 +03:00 [DBG] Getting claims for identity token for subject: e76a2bce-64d3-4a36-ae75-ecae83f4aaa4 and client: spa
2019-07-17 16:47:18.021 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-17 16:47:18.039 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****046w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gtzA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOANKOVVOAR:00000005","TimeStamp":"2019-07-17T13:47:18.0000000Z","ProcessId":10576,"LocalIpAddress":"127.0.0.1:41533","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-17 16:47:18.042 +03:00 [INF] Authorize endpoint response
{"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"020502288f9748a19522d86fa48f4be0","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-17 16:47:18.073 +03:00 [DBG] Augmenting SignInContext
2019-07-17 16:47:18.074 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 16:47:19.527 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-17 16:47:19.528 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 16:47:19.528 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 16:47:19.529 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 16:47:19.529 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 16:47:19.530 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 16:47:19.530 +03:00 [DBG] Start discovery request
2019-07-17 16:47:19.601 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-17 16:47:19.603 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 16:47:19.603 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 16:47:19.603 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 16:47:19.605 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 16:47:19.606 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 16:47:19.614 +03:00 [DBG] Start key discovery request
2019-07-17 16:47:19.711 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-17 16:47:19.711 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 16:47:19.711 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 16:47:19.742 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-17 16:47:19.742 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-17 16:47:19.743 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-17 16:47:19.743 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-17 16:47:19.752 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-17 16:47:19.752 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-17 16:47:19.770 +03:00 [DBG] Start userinfo request
2019-07-17 16:47:19.779 +03:00 [DBG] Bearer token found in header
2019-07-17 16:47:19.941 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:47:19.955 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-17 16:47:19.960 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-17 16:47:19.963 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563371237,"exp":1563374837,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","auth_time":1563371231,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-17 16:47:19.977 +03:00 [DBG] Creating userinfo response
2019-07-17 16:47:19.985 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 16:47:19.989 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 16:47:19.994 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-17 16:47:19.994 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-17 16:47:20.000 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-17 16:47:20.002 +03:00 [DBG] End userinfo request
2019-07-17 16:47:20.038 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-17 16:47:20.042 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-17 16:47:20.043 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-17 16:47:20.045 +03:00 [DBG] Rendering check session result
2019-07-17 17:16:58.711 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 17:16:58.800 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 17:16:58.808 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 17:16:58.808 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 17:16:58.808 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 17:16:58.808 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 17:16:58.808 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 17:16:59.427 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 17:16:59.431 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 17:16:59.431 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 17:16:59.431 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 17:16:59.431 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 17:16:59.432 +03:00 [DBG] Error Url: /home/error
2019-07-17 17:16:59.432 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 17:17:04.389 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-17 17:17:10.824 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 17:17:11.526 +03:00 [INF] {"Username":"blabla","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOAO5N4N8Q7:00000005","TimeStamp":"2019-07-17T14:17:11.0000000Z","ProcessId":12124,"LocalIpAddress":"127.0.0.1:21094","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-17 17:18:09.617 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 17:18:09.676 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 17:18:09.681 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 17:18:09.681 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 17:18:09.681 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 17:18:09.681 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 17:18:09.681 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 17:18:10.068 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 17:18:10.133 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 17:18:10.134 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 17:18:10.134 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 17:18:10.134 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 17:18:10.134 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 17:18:10.134 +03:00 [DBG] Error Url: /home/error
2019-07-17 17:18:10.134 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 17:18:11.731 +03:00 [DBG] Augmenting SignInContext
2019-07-17 17:18:11.736 +03:00 [DBG] Adding idp claim with value: local
2019-07-17 17:18:11.736 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-17 17:18:11.737 +03:00 [DBG] Adding auth_time claim with value: 1563373091
2019-07-17 17:18:11.764 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 17:18:11.785 +03:00 [INF] {"Username":"blabla","Provider":null,"ProviderUserId":null,"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","DisplayName":"blabla","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOAO6C72Q9E:00000001","TimeStamp":"2019-07-17T14:18:11.0000000Z","ProcessId":12416,"LocalIpAddress":"127.0.0.1:18853","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-17 17:18:21.613 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 17:18:21.642 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-17 17:18:21.643 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-17 17:18:21.646 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-17 17:18:21.648 +03:00 [INF] {"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","DisplayName":"blabla","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOAO6C72Q9E:00000006","TimeStamp":"2019-07-17T14:18:21.0000000Z","ProcessId":12416,"LocalIpAddress":"127.0.0.1:18853","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-17 17:18:23.935 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-17 17:24:28.098 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-17 17:25:30.936 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 17:25:31.019 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-17 17:25:31.029 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-17 17:25:31.030 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-17 17:25:31.031 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-17 17:25:31.031 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-17 17:25:31.031 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-17 17:25:31.980 +03:00 [DBG] Login Url: /Account/Login
2019-07-17 17:25:31.987 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 17:25:31.987 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-17 17:25:31.987 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-17 17:25:31.987 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 17:25:31.987 +03:00 [DBG] Error Url: /home/error
2019-07-17 17:25:31.988 +03:00 [DBG] Error Id Parameter: errorId
2019-07-17 17:25:34.997 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-17 17:26:26.568 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-17 17:26:28.298 +03:00 [DBG] Augmenting SignInContext
2019-07-17 17:26:28.303 +03:00 [DBG] Adding idp claim with value: local
2019-07-17 17:26:28.303 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-17 17:26:28.304 +03:00 [DBG] Adding auth_time claim with value: 1563373588
2019-07-17 17:26:28.328 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-17 17:26:28.364 +03:00 [INF] {"Username":"blabla","Provider":null,"ProviderUserId":null,"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","DisplayName":"blabla","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOAOAFQVNVS:00000003","TimeStamp":"2019-07-17T14:26:28.0000000Z","ProcessId":2020,"LocalIpAddress":"127.0.0.1:25132","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-18 09:39:24.177 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 09:39:24.286 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-18 09:39:24.289 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-18 09:39:24.294 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-18 09:39:24.297 +03:00 [INF] {"SubjectId":"e76a2bce-64d3-4a36-ae75-ecae83f4aaa4","DisplayName":"blabla","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOAOAFQVNVV:00000002","TimeStamp":"2019-07-18T06:39:24.0000000Z","ProcessId":2020,"LocalIpAddress":"127.0.0.1:25132","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-18 09:44:44.511 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 09:44:44.773 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 09:44:44.783 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 09:44:44.784 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 09:44:44.784 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 09:44:44.787 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 09:44:44.787 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 09:44:45.523 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 09:44:45.529 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 09:44:45.530 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 09:44:45.530 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 09:44:45.530 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 09:44:45.530 +03:00 [DBG] Error Url: /home/error
2019-07-18 09:44:45.530 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 09:44:49.172 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-18 09:56:45.300 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 09:57:31.649 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 09:57:31.657 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 09:57:31.657 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 09:57:31.660 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 09:57:31.666 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 09:57:31.667 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 09:57:31.676 +03:00 [DBG] Start discovery request
2019-07-18 09:57:31.766 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 09:57:31.771 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 09:57:31.771 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 09:57:31.778 +03:00 [DBG] Start authorize request
2019-07-18 09:57:31.795 +03:00 [DBG] No user present in authorize request
2019-07-18 09:57:31.803 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 09:57:31.832 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:57:31.895 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 09:57:31.918 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e2d9cb892b6f46f288e6173bfc4038c7","UiLocales":null,"Nonce":"83f66973fbc448b58a83f94fe06b8a9e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e2d9cb892b6f46f288e6173bfc4038c7","nonce":"83f66973fbc448b58a83f94fe06b8a9e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 09:57:31.952 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 09:57:31.969 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 09:57:31.969 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:57:31.970 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 09:57:31.973 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:57:34.568 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 09:57:34.572 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 09:57:34.573 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:57:34.573 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 09:57:34.609 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:57:34.620 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 09:57:34.622 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 09:57:34.622 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 09:57:34.635 +03:00 [DBG] Start authorize callback request
2019-07-18 09:57:34.643 +03:00 [DBG] No user present in authorize request
2019-07-18 09:57:34.643 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 09:57:34.643 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:57:34.644 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 09:57:34.644 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e2d9cb892b6f46f288e6173bfc4038c7","UiLocales":null,"Nonce":"83f66973fbc448b58a83f94fe06b8a9e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e2d9cb892b6f46f288e6173bfc4038c7","nonce":"83f66973fbc448b58a83f94fe06b8a9e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 09:57:34.644 +03:00 [INF] Error: User denied consent
2019-07-18 09:57:34.654 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e2d9cb892b6f46f288e6173bfc4038c7","UiLocales":null,"Nonce":"83f66973fbc448b58a83f94fe06b8a9e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e2d9cb892b6f46f288e6173bfc4038c7","nonce":"83f66973fbc448b58a83f94fe06b8a9e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 09:57:34.669 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLOB9DLPTKFB:00000007","TimeStamp":"2019-07-18T06:57:34.0000000Z","ProcessId":11932,"LocalIpAddress":"127.0.0.1:22997","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-18 09:57:40.388 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 09:57:40.388 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 09:57:40.389 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 09:57:40.389 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 09:57:40.390 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 09:57:40.390 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 09:57:40.390 +03:00 [DBG] Start discovery request
2019-07-18 09:57:40.434 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 09:57:40.436 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 09:57:40.436 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 09:57:40.437 +03:00 [DBG] Start authorize request
2019-07-18 09:57:40.437 +03:00 [DBG] No user present in authorize request
2019-07-18 09:57:40.437 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 09:57:40.437 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:57:40.437 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 09:57:40.438 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"023aab3ac0c744cb8cc7251ec26043fc","UiLocales":null,"Nonce":"eb3254af5cc645c898e8877807c4d75d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"023aab3ac0c744cb8cc7251ec26043fc","nonce":"eb3254af5cc645c898e8877807c4d75d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 09:57:40.438 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 09:57:40.478 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 09:57:40.479 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:57:40.480 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 09:57:40.480 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:58:11.696 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 09:58:11.701 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 09:58:11.701 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:58:11.702 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 09:58:11.703 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:58:11.715 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 09:58:11.716 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 09:58:11.717 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 09:58:11.718 +03:00 [DBG] Start authorize callback request
2019-07-18 09:58:11.720 +03:00 [DBG] No user present in authorize request
2019-07-18 09:58:11.720 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 09:58:11.720 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:58:11.721 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 09:58:11.721 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"023aab3ac0c744cb8cc7251ec26043fc","UiLocales":null,"Nonce":"eb3254af5cc645c898e8877807c4d75d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"023aab3ac0c744cb8cc7251ec26043fc","nonce":"eb3254af5cc645c898e8877807c4d75d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 09:58:11.721 +03:00 [INF] Error: User denied consent
2019-07-18 09:58:11.721 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"023aab3ac0c744cb8cc7251ec26043fc","UiLocales":null,"Nonce":"eb3254af5cc645c898e8877807c4d75d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"023aab3ac0c744cb8cc7251ec26043fc","nonce":"eb3254af5cc645c898e8877807c4d75d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 09:58:11.722 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLOB9DLPTKFB:0000000C","TimeStamp":"2019-07-18T06:58:11.0000000Z","ProcessId":11932,"LocalIpAddress":"127.0.0.1:22997","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-18 09:58:40.562 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 09:58:40.562 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 09:58:40.562 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 09:58:40.562 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 09:58:40.563 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 09:58:40.563 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 09:58:40.563 +03:00 [DBG] Start discovery request
2019-07-18 09:58:40.584 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 09:58:40.585 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 09:58:40.585 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 09:58:40.585 +03:00 [DBG] Start authorize request
2019-07-18 09:58:40.586 +03:00 [DBG] No user present in authorize request
2019-07-18 09:58:40.586 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 09:58:40.586 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:58:40.587 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 09:58:40.587 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"94c556f301ac45cdb152c836138ab74e","UiLocales":null,"Nonce":"0bd0a8f66df7495a9d123fa1a5296013","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"94c556f301ac45cdb152c836138ab74e","nonce":"0bd0a8f66df7495a9d123fa1a5296013"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 09:58:40.587 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 09:58:40.600 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 09:58:40.601 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 09:58:40.601 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 09:58:40.601 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:11:21.499 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 10:11:21.560 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 10:11:21.564 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 10:11:21.565 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 10:11:21.565 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 10:11:21.565 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 10:11:21.566 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 10:11:21.955 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 10:11:21.959 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 10:11:21.959 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 10:11:21.959 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 10:11:21.959 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 10:11:21.959 +03:00 [DBG] Error Url: /home/error
2019-07-18 10:11:21.959 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 10:11:28.338 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 10:11:28.347 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 10:11:28.347 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 10:11:28.351 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 10:11:28.452 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 10:11:28.452 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 10:11:28.458 +03:00 [DBG] Start discovery request
2019-07-18 10:11:28.560 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 10:11:28.573 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 10:11:28.573 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 10:11:28.580 +03:00 [DBG] Start authorize request
2019-07-18 10:11:28.598 +03:00 [DBG] No user present in authorize request
2019-07-18 10:11:28.613 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:11:28.642 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:11:28.698 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:11:28.723 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"09c60f9fcdf848cda03b4fc9e77e63eb","UiLocales":null,"Nonce":"e34200b2efab4a2caa26e070ae575b70","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"09c60f9fcdf848cda03b4fc9e77e63eb","nonce":"e34200b2efab4a2caa26e070ae575b70"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 10:11:28.753 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 10:11:28.849 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:11:28.850 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:11:28.851 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:11:28.857 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:11:34.950 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 10:11:35.042 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:11:35.043 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:11:35.043 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:11:35.769 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:11:35.769 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:11:35.771 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:11:35.779 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null.
Parameter name: email
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(String email)
   at IdentityServer4.Quickstart.UI.AccountController.Login(LoginInputModel model, String button) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 117
   at IdentityServer4.Quickstart.UI.AccountController.Register(RegisterInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 210
   at IdentityServer4.Quickstart.UI.AccountController.Login(LoginInputModel model, String button) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 84
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-18 10:12:28.641 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 10:12:28.757 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 10:12:28.763 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 10:12:28.763 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 10:12:28.763 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 10:12:28.763 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 10:12:28.763 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 10:12:29.652 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 10:12:29.657 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 10:12:29.657 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 10:12:29.657 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 10:12:29.657 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 10:12:29.657 +03:00 [DBG] Error Url: /home/error
2019-07-18 10:12:29.657 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 10:12:37.174 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 10:12:37.188 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 10:12:37.188 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 10:12:37.193 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 10:12:37.436 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 10:12:37.439 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 10:12:37.449 +03:00 [DBG] Start discovery request
2019-07-18 10:12:37.604 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 10:12:37.615 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 10:12:37.617 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 10:12:37.627 +03:00 [DBG] Start authorize request
2019-07-18 10:12:37.659 +03:00 [DBG] No user present in authorize request
2019-07-18 10:12:37.673 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:12:37.722 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:12:37.818 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:12:37.869 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"084ca118706d4b339ed771e2b8ca785e","UiLocales":null,"Nonce":"56471bab323c450da88a3e78c121947f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"084ca118706d4b339ed771e2b8ca785e","nonce":"56471bab323c450da88a3e78c121947f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 10:12:37.926 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 10:12:48.830 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:12:48.830 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:12:48.832 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:12:48.851 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:12:51.172 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 10:12:51.455 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:12:51.455 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:12:51.456 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:14:32.154 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:14:32.155 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:14:32.219 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:14:32.688 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null.
Parameter name: email
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(String email)
   at IdentityServer4.Quickstart.UI.AccountController.Login(LoginInputModel model, String button) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 117
   at IdentityServer4.Quickstart.UI.AccountController.Register(RegisterInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 210
   at IdentityServer4.Quickstart.UI.AccountController.Login(LoginInputModel model, String button) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 84
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-18 10:17:19.898 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 10:17:19.981 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 10:17:19.988 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 10:17:19.989 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 10:17:19.989 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 10:17:19.989 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 10:17:19.989 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 10:17:20.739 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 10:17:20.749 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 10:17:20.749 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 10:17:20.749 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 10:17:20.749 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 10:17:20.749 +03:00 [DBG] Error Url: /home/error
2019-07-18 10:17:20.749 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 10:17:23.171 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-18 10:17:25.686 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 10:22:37.961 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 10:22:38.020 +03:00 [INF] {"Username":"blabla@gmwwwail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOB9VSG8PQ2:00000001","TimeStamp":"2019-07-18T07:22:38.0000000Z","ProcessId":2972,"LocalIpAddress":"127.0.0.1:28287","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-18 10:29:24.339 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 10:29:24.433 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 10:29:24.439 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 10:29:24.439 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 10:29:24.439 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 10:29:24.439 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 10:29:24.439 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 10:29:25.196 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 10:29:25.200 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 10:29:25.200 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 10:29:25.200 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 10:29:25.200 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 10:29:25.201 +03:00 [DBG] Error Url: /home/error
2019-07-18 10:29:25.202 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 10:29:28.228 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-18 10:29:30.094 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 10:30:48.045 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 10:30:48.133 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 10:30:48.140 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 10:30:48.140 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 10:30:48.140 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 10:30:48.140 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 10:30:48.140 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 10:30:48.845 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 10:30:48.852 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 10:30:48.852 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 10:30:48.852 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 10:30:48.852 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 10:30:48.852 +03:00 [DBG] Error Url: /home/error
2019-07-18 10:30:48.852 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 10:30:51.008 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-18 10:30:52.915 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 10:31:14.388 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 10:31:14.394 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 10:31:14.394 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 10:31:14.397 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 10:31:14.403 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 10:31:14.404 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 10:31:14.415 +03:00 [DBG] Start discovery request
2019-07-18 10:31:14.489 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 10:31:14.493 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 10:31:14.494 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 10:31:14.501 +03:00 [DBG] Start authorize request
2019-07-18 10:31:14.516 +03:00 [DBG] No user present in authorize request
2019-07-18 10:31:14.523 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:31:14.550 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:31:14.662 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:31:14.690 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"40c93d14b2174792b15d590e8ece4c74","UiLocales":null,"Nonce":"191d74dd791b417fbc6fe1a73a6525b8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"40c93d14b2174792b15d590e8ece4c74","nonce":"191d74dd791b417fbc6fe1a73a6525b8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 10:31:14.729 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 10:31:14.753 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:31:14.753 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:31:14.754 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:31:14.758 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:31:16.613 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 10:31:16.619 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:31:16.619 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:31:16.620 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:31:16.661 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:31:16.672 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 10:31:16.675 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 10:31:16.675 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 10:31:16.686 +03:00 [DBG] Start authorize callback request
2019-07-18 10:31:16.695 +03:00 [DBG] No user present in authorize request
2019-07-18 10:31:16.695 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:31:16.695 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:31:16.695 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:31:16.696 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"40c93d14b2174792b15d590e8ece4c74","UiLocales":null,"Nonce":"191d74dd791b417fbc6fe1a73a6525b8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"40c93d14b2174792b15d590e8ece4c74","nonce":"191d74dd791b417fbc6fe1a73a6525b8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 10:31:16.696 +03:00 [INF] Error: User denied consent
2019-07-18 10:31:16.706 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"40c93d14b2174792b15d590e8ece4c74","UiLocales":null,"Nonce":"191d74dd791b417fbc6fe1a73a6525b8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"40c93d14b2174792b15d590e8ece4c74","nonce":"191d74dd791b417fbc6fe1a73a6525b8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 10:31:16.721 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLOBA7DAIP40:0000000B","TimeStamp":"2019-07-18T07:31:16.0000000Z","ProcessId":1736,"LocalIpAddress":"127.0.0.1:23043","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-18 10:31:19.627 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:31:19.627 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:31:19.628 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:31:19.628 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:41:36.209 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 10:41:36.303 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 10:41:36.311 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 10:41:36.311 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 10:41:36.312 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 10:41:36.312 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 10:41:36.312 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 10:41:36.888 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 10:41:36.893 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 10:41:36.893 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 10:41:36.894 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 10:41:36.894 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 10:41:36.894 +03:00 [DBG] Error Url: /home/error
2019-07-18 10:41:36.895 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 10:41:40.786 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 10:41:40.795 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 10:41:40.796 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 10:41:40.800 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 10:41:40.901 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 10:41:40.902 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 10:41:40.907 +03:00 [DBG] Start discovery request
2019-07-18 10:41:40.981 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 10:41:40.987 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 10:41:40.987 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 10:41:40.994 +03:00 [DBG] Start authorize request
2019-07-18 10:41:41.007 +03:00 [DBG] No user present in authorize request
2019-07-18 10:41:41.015 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:41:41.041 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:41:41.114 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:41:41.138 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b632d96f80d64de8bb26f232327f2b99","UiLocales":null,"Nonce":"537ebba48fc9412ca9fdc9613cb75ade","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b632d96f80d64de8bb26f232327f2b99","nonce":"537ebba48fc9412ca9fdc9613cb75ade"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 10:41:41.168 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 10:41:41.261 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:41:41.262 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:41:41.262 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:41:41.267 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:41:43.022 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 10:41:43.146 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:41:43.147 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:41:43.147 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:59:12.349 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 10:59:12.431 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 10:59:12.437 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 10:59:12.437 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 10:59:12.438 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 10:59:12.438 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 10:59:12.438 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 10:59:13.141 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 10:59:13.145 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 10:59:13.145 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 10:59:13.145 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 10:59:13.146 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 10:59:13.146 +03:00 [DBG] Error Url: /home/error
2019-07-18 10:59:13.146 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 10:59:19.370 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 10:59:19.376 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 10:59:19.376 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 10:59:19.379 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 10:59:19.523 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 10:59:19.523 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 10:59:19.530 +03:00 [DBG] Start discovery request
2019-07-18 10:59:19.613 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 10:59:19.621 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 10:59:19.621 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 10:59:19.627 +03:00 [DBG] Start authorize request
2019-07-18 10:59:19.641 +03:00 [DBG] No user present in authorize request
2019-07-18 10:59:19.650 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:59:19.676 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:59:19.734 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:59:19.756 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"90fd4aab1bf54c72b3ad91a36283eae9","UiLocales":null,"Nonce":"4d3dff4d90b64f18a72e6f4fa2d00d7a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"90fd4aab1bf54c72b3ad91a36283eae9","nonce":"4d3dff4d90b64f18a72e6f4fa2d00d7a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 10:59:19.785 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 10:59:19.868 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:59:19.869 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:59:19.869 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:59:19.875 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:59:21.706 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 10:59:21.819 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:59:21.821 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:59:21.822 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:59:26.257 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 10:59:26.260 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:59:26.260 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:59:26.261 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:59:28.010 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 10:59:28.014 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:59:28.014 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:59:28.015 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 10:59:29.041 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 10:59:29.044 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 10:59:29.044 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 10:59:29.044 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:00:13.113 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 11:00:13.197 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 11:00:13.202 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 11:00:13.202 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 11:00:13.202 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 11:00:13.202 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 11:00:13.202 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 11:00:13.715 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 11:00:13.720 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 11:00:13.720 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 11:00:13.721 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 11:00:13.722 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 11:00:13.722 +03:00 [DBG] Error Url: /home/error
2019-07-18 11:00:13.722 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 11:00:14.256 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:00:14.283 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:00:14.353 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:00:16.818 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:00:16.825 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:00:16.826 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:00:16.826 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:01:00.714 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 11:01:00.773 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 11:01:00.778 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 11:01:00.778 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 11:01:00.778 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 11:01:00.778 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 11:01:00.778 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 11:01:01.282 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 11:01:01.285 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 11:01:01.285 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 11:01:01.285 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 11:01:01.285 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 11:01:01.285 +03:00 [DBG] Error Url: /home/error
2019-07-18 11:01:01.286 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 11:01:01.877 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:01:01.918 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:01:02.002 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:01:06.290 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:01:06.302 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:01:06.303 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:01:06.303 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:01:31.077 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 11:01:31.083 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 11:01:31.084 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 11:01:31.087 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 11:01:31.101 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 11:01:31.102 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 11:01:31.110 +03:00 [DBG] Start discovery request
2019-07-18 11:01:31.178 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 11:01:31.184 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 11:01:31.185 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 11:01:31.191 +03:00 [DBG] Start authorize request
2019-07-18 11:01:31.208 +03:00 [DBG] No user present in authorize request
2019-07-18 11:01:31.208 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:01:31.208 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:01:31.209 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:01:31.233 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"12a37420aaa245ea8b98df2df9c7adb5","UiLocales":null,"Nonce":"89522cfd5e224aa5886211012ea43e06","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"12a37420aaa245ea8b98df2df9c7adb5","nonce":"89522cfd5e224aa5886211012ea43e06"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 11:01:31.263 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 11:01:31.292 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:01:31.292 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:01:31.293 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:01:31.296 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:02:16.695 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 11:02:16.807 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 11:02:16.817 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 11:02:16.818 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 11:02:16.818 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 11:02:16.818 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 11:02:16.818 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 11:02:17.826 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 11:02:17.850 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 11:02:17.850 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 11:02:17.850 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 11:02:17.850 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 11:02:17.851 +03:00 [DBG] Error Url: /home/error
2019-07-18 11:02:17.851 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 11:02:52.889 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 11:02:52.901 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 11:02:52.901 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 11:02:52.953 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 11:02:53.387 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 11:02:53.391 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 11:02:53.400 +03:00 [DBG] Start discovery request
2019-07-18 11:02:53.531 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 11:02:53.544 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 11:02:53.544 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 11:02:53.554 +03:00 [DBG] Start authorize request
2019-07-18 11:02:53.591 +03:00 [DBG] No user present in authorize request
2019-07-18 11:02:53.604 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:02:53.659 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:02:53.742 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:02:53.783 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"da06b40b9f8c451a87ce84e567355555","UiLocales":null,"Nonce":"4820ed7158c942e7a6a1917269055e7b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"da06b40b9f8c451a87ce84e567355555","nonce":"4820ed7158c942e7a6a1917269055e7b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 11:02:53.845 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 11:02:54.095 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:02:54.098 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:02:54.098 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:02:54.105 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:02:56.561 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:02:56.815 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:02:56.816 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:02:56.817 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:03:55.917 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:03:56.009 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:03:56.009 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:03:56.010 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:07:44.795 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 11:07:44.897 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 11:07:44.906 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 11:07:44.907 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 11:07:44.907 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 11:07:44.907 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 11:07:44.907 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 11:07:45.910 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 11:07:45.914 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 11:07:45.914 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 11:07:45.914 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 11:07:45.914 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 11:07:45.915 +03:00 [DBG] Error Url: /home/error
2019-07-18 11:07:45.915 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 11:09:39.541 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 11:09:39.547 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 11:09:39.547 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 11:09:39.551 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 11:09:39.759 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 11:09:39.759 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 11:09:39.765 +03:00 [DBG] Start discovery request
2019-07-18 11:09:39.896 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 11:09:39.907 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 11:09:39.907 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 11:09:39.915 +03:00 [DBG] Start authorize request
2019-07-18 11:09:39.932 +03:00 [DBG] No user present in authorize request
2019-07-18 11:09:39.939 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:09:39.966 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:09:40.024 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:09:40.047 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"579744953181462fbedbf0766f1f0bcb","UiLocales":null,"Nonce":"0ad10400723f4574b9732b3832ed8c3d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"579744953181462fbedbf0766f1f0bcb","nonce":"0ad10400723f4574b9732b3832ed8c3d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 11:09:40.088 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 11:09:40.226 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:09:40.227 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:09:40.227 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:09:40.231 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:09:44.263 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:09:44.517 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:09:44.518 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:09:44.518 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:09:56.204 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:09:56.257 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:09:56.258 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:09:56.258 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:14:03.922 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 11:14:03.978 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 11:14:03.983 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 11:14:03.983 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 11:14:03.983 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 11:14:03.983 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 11:14:03.984 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 11:14:05.189 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 11:14:05.204 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 11:14:05.206 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 11:14:05.206 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 11:14:05.206 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 11:14:05.206 +03:00 [DBG] Error Url: /home/error
2019-07-18 11:14:05.207 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 11:14:12.648 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 11:14:12.654 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 11:14:12.654 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 11:14:12.658 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 11:14:12.861 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 11:14:12.861 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 11:14:12.867 +03:00 [DBG] Start discovery request
2019-07-18 11:14:12.986 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 11:14:12.999 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 11:14:12.999 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 11:14:13.008 +03:00 [DBG] Start authorize request
2019-07-18 11:14:13.031 +03:00 [DBG] No user present in authorize request
2019-07-18 11:14:13.043 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:14:13.090 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:14:13.186 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:14:13.214 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ac8536dbc4424f99a27a3bfa9c474be1","UiLocales":null,"Nonce":"ff3fc553c9b24b40b3e03e8549c4decf","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ac8536dbc4424f99a27a3bfa9c474be1","nonce":"ff3fc553c9b24b40b3e03e8549c4decf"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 11:14:13.255 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 11:14:13.418 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:14:13.418 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:14:13.419 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:14:13.429 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:14:15.495 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:14:15.714 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:14:15.714 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:14:15.715 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:14:51.825 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:16:12.362 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 11:16:12.435 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 11:16:12.441 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 11:16:12.441 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 11:16:12.441 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 11:16:12.441 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 11:16:12.441 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 11:16:13.673 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 11:16:13.679 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 11:16:13.680 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 11:16:13.680 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 11:16:13.680 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 11:16:13.680 +03:00 [DBG] Error Url: /home/error
2019-07-18 11:16:13.680 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 11:16:20.670 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 11:16:20.677 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 11:16:20.678 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 11:16:20.681 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 11:16:20.880 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 11:16:20.881 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 11:16:20.886 +03:00 [DBG] Start discovery request
2019-07-18 11:16:21.011 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 11:16:21.021 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 11:16:21.025 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 11:16:21.034 +03:00 [DBG] Start authorize request
2019-07-18 11:16:21.052 +03:00 [DBG] No user present in authorize request
2019-07-18 11:16:21.065 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:16:21.098 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:16:21.171 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:16:21.206 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c29bdb5071214cbaa97ce8d6b3a4758a","UiLocales":null,"Nonce":"bbac65c980db449681764fb53d5a3583","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c29bdb5071214cbaa97ce8d6b3a4758a","nonce":"bbac65c980db449681764fb53d5a3583"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 11:16:21.279 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 11:16:21.482 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:16:21.483 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:16:21.485 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:16:21.494 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:16:23.752 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:16:23.976 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:16:23.977 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:16:23.977 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:16:30.986 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:16:56.384 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 11:16:56.395 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 11:16:56.396 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 11:16:56.396 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 11:16:56.397 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 11:16:56.397 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 11:16:56.397 +03:00 [DBG] Start discovery request
2019-07-18 11:16:56.474 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 11:16:56.476 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 11:16:56.477 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 11:16:56.477 +03:00 [DBG] Start authorize request
2019-07-18 11:16:56.477 +03:00 [DBG] No user present in authorize request
2019-07-18 11:16:56.477 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:16:56.478 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:16:56.478 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:16:56.479 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0d1128a252ce49ca98247158e997ba4e","UiLocales":null,"Nonce":"079a345019f945c38e3e4b6aabceca54","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0d1128a252ce49ca98247158e997ba4e","nonce":"079a345019f945c38e3e4b6aabceca54"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 11:16:56.479 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 11:16:56.593 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:16:56.594 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:16:56.594 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:16:56.594 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:17:11.721 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:17:11.783 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:17:11.784 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:17:11.784 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:17:41.542 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:18:31.422 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:20:35.560 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 11:20:35.655 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 11:20:35.662 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 11:20:35.662 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 11:20:35.662 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 11:20:35.662 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 11:20:35.663 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 11:20:36.620 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 11:20:36.627 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 11:20:36.628 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 11:20:36.628 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 11:20:36.628 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 11:20:36.628 +03:00 [DBG] Error Url: /home/error
2019-07-18 11:20:36.628 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 11:20:45.145 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 11:20:45.156 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 11:20:45.156 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 11:20:45.179 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 11:20:45.453 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 11:20:45.454 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 11:20:45.462 +03:00 [DBG] Start discovery request
2019-07-18 11:20:45.588 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 11:20:45.598 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 11:20:45.598 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 11:20:45.607 +03:00 [DBG] Start authorize request
2019-07-18 11:20:45.625 +03:00 [DBG] No user present in authorize request
2019-07-18 11:20:45.641 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:20:45.689 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:20:45.764 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:20:45.790 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"321527edc2834683aac3a1b93e071980","UiLocales":null,"Nonce":"201c358e326b485b94d2994ffc975198","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"321527edc2834683aac3a1b93e071980","nonce":"201c358e326b485b94d2994ffc975198"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 11:20:45.829 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 11:20:46.021 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:20:46.021 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:20:46.023 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:20:46.027 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:20:53.880 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:20:54.096 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:20:54.096 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:20:54.097 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:21:00.725 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:21:27.557 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:22:59.379 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:24:13.158 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:24:29.183 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:24:41.567 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:24:54.701 +03:00 [WRN] User 37a6814d-08df-49ee-8a0a-06fb71033819 validation failed: DuplicateUserName.
2019-07-18 11:27:03.341 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 11:27:03.425 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 11:27:03.432 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 11:27:03.433 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 11:27:03.433 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 11:27:03.433 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 11:27:03.433 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 11:27:04.448 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 11:27:04.453 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 11:27:04.454 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 11:27:04.454 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 11:27:04.454 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 11:27:04.454 +03:00 [DBG] Error Url: /home/error
2019-07-18 11:27:04.454 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 11:35:11.895 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 11:35:11.903 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 11:35:11.904 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 11:35:11.999 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 11:35:12.217 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 11:35:12.217 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 11:35:12.230 +03:00 [DBG] Start discovery request
2019-07-18 11:35:12.406 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 11:35:12.427 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 11:35:12.428 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 11:35:12.434 +03:00 [DBG] Start authorize request
2019-07-18 11:35:12.450 +03:00 [DBG] No user present in authorize request
2019-07-18 11:35:12.459 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:35:12.518 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:35:12.651 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:35:12.703 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"5a5c9c3173fd491a93c9625b260c7b32","UiLocales":null,"Nonce":"703b50d78b5644eeab1ec5d7e7f3f3ae","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"5a5c9c3173fd491a93c9625b260c7b32","nonce":"703b50d78b5644eeab1ec5d7e7f3f3ae"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 11:35:12.785 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 11:35:12.999 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:35:13.000 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:35:13.001 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:35:13.008 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:35:16.339 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 11:35:16.640 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 11:35:16.641 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 11:35:16.641 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 11:35:34.580 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:22:08.527 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 13:22:08.641 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 13:22:08.650 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 13:22:08.650 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 13:22:08.650 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 13:22:08.650 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 13:22:08.650 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 13:22:09.723 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 13:22:09.766 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 13:22:09.766 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 13:22:09.819 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 13:22:09.819 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 13:22:09.819 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 13:22:09.819 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 13:22:09.819 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 13:22:09.820 +03:00 [DBG] Error Url: /home/error
2019-07-18 13:22:09.820 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 13:22:09.878 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 13:22:10.273 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 13:22:10.274 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 13:22:10.282 +03:00 [DBG] Start discovery request
2019-07-18 13:22:10.727 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 13:22:10.755 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 13:22:10.756 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 13:22:10.763 +03:00 [DBG] Start authorize request
2019-07-18 13:22:10.785 +03:00 [DBG] No user present in authorize request
2019-07-18 13:22:10.799 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:22:10.895 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:22:10.999 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:22:11.044 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"7e723c3f94ed40ef94da6ed47e3242ff","UiLocales":null,"Nonce":"1e77656023be4043801aa79ab9a5b198","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"7e723c3f94ed40ef94da6ed47e3242ff","nonce":"1e77656023be4043801aa79ab9a5b198"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 13:22:11.141 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 13:22:11.385 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:22:11.386 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:22:11.388 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:22:11.399 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:22:27.927 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:23:55.675 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:23:55.675 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:23:55.678 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:23:57.372 +03:00 [INF] {"Username":"blabla@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOBD7574D10:00000002","TimeStamp":"2019-07-18T10:23:57.0000000Z","ProcessId":1360,"LocalIpAddress":"127.0.0.1:26384","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-18 13:23:57.377 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:23:57.377 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:23:57.379 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:23:57.379 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:24:08.128 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:24:11.214 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:24:11.214 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:24:11.217 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:24:20.337 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:24:35.374 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:26:18.036 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 13:26:18.134 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 13:26:18.141 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 13:26:18.142 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 13:26:18.142 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 13:26:18.142 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 13:26:18.142 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 13:26:19.180 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 13:26:19.189 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 13:26:19.189 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 13:26:19.251 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 13:26:19.251 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 13:26:19.251 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 13:26:19.251 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 13:26:19.251 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 13:26:19.252 +03:00 [DBG] Error Url: /home/error
2019-07-18 13:26:19.252 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 13:26:19.323 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 13:26:19.654 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 13:26:19.654 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 13:26:19.662 +03:00 [DBG] Start discovery request
2019-07-18 13:26:20.038 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 13:26:20.039 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 13:26:20.039 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 13:26:20.039 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 13:26:20.039 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 13:26:20.041 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 13:26:20.042 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 13:26:20.042 +03:00 [DBG] Start discovery request
2019-07-18 13:26:20.046 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 13:26:20.046 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 13:26:20.056 +03:00 [DBG] Start authorize request
2019-07-18 13:26:20.097 +03:00 [DBG] No user present in authorize request
2019-07-18 13:26:20.112 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:26:20.201 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:26:20.203 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 13:26:20.212 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 13:26:20.212 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 13:26:20.212 +03:00 [DBG] Start authorize request
2019-07-18 13:26:20.212 +03:00 [DBG] No user present in authorize request
2019-07-18 13:26:20.213 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:26:20.213 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:26:20.355 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:26:20.355 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:26:20.419 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"116ad38ef37b4341897851e7f1f2c3db","UiLocales":null,"Nonce":"85093680c4b84805be9469db632c1c2b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"116ad38ef37b4341897851e7f1f2c3db","nonce":"85093680c4b84805be9469db632c1c2b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 13:26:20.419 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"372241d2c2c94853aad865abf6ab762f","UiLocales":null,"Nonce":"054df72498114173b30bd82beef0b818","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"372241d2c2c94853aad865abf6ab762f","nonce":"054df72498114173b30bd82beef0b818"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 13:26:20.478 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 13:26:20.478 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 13:26:20.690 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:26:20.691 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:26:20.693 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:26:20.700 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:26:26.281 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:26:31.309 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:26:31.311 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:26:31.311 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:26:36.486 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:29:47.250 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 13:29:47.490 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 13:29:47.502 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 13:29:47.502 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 13:29:47.503 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 13:29:47.503 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 13:29:47.503 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 13:29:48.662 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 13:29:48.668 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 13:29:48.668 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 13:29:48.668 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 13:29:48.668 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 13:29:48.668 +03:00 [DBG] Error Url: /home/error
2019-07-18 13:29:48.669 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 13:29:55.430 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 13:29:55.439 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 13:29:55.439 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 13:29:55.443 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 13:29:55.644 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 13:29:55.645 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 13:29:55.650 +03:00 [DBG] Start discovery request
2019-07-18 13:29:55.765 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 13:29:55.800 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 13:29:55.800 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 13:29:55.808 +03:00 [DBG] Start authorize request
2019-07-18 13:29:55.828 +03:00 [DBG] No user present in authorize request
2019-07-18 13:29:55.835 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:29:55.863 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:29:55.945 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:29:55.985 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1c556c6c57364f49a18e85467f691884","UiLocales":null,"Nonce":"7c59b50051854f9792d039e7ecddd018","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1c556c6c57364f49a18e85467f691884","nonce":"7c59b50051854f9792d039e7ecddd018"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 13:29:56.042 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 13:29:56.241 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:29:56.244 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:29:56.246 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:29:56.251 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:30:00.170 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:30:06.138 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:30:06.138 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:30:06.139 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:30:24.141 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:30:37.529 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:30:41.142 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 13:30:41.146 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 13:30:41.146 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 13:30:41.168 +03:00 [DBG] Start authorize callback request
2019-07-18 13:30:41.182 +03:00 [DBG] No user present in authorize request
2019-07-18 13:30:41.182 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:30:41.182 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:30:41.183 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:30:41.183 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1c556c6c57364f49a18e85467f691884","UiLocales":null,"Nonce":"7c59b50051854f9792d039e7ecddd018","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1c556c6c57364f49a18e85467f691884","nonce":"7c59b50051854f9792d039e7ecddd018"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 13:30:41.183 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 13:30:41.401 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:30:41.402 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:30:41.402 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:30:41.403 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:31:14.051 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:31:21.891 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:31:21.892 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:31:21.896 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:31:22.344 +03:00 [DBG] Augmenting SignInContext
2019-07-18 13:31:22.352 +03:00 [DBG] Adding idp claim with value: local
2019-07-18 13:31:22.352 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-18 13:31:22.360 +03:00 [DBG] Adding auth_time claim with value: 1563445882
2019-07-18 13:31:22.405 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-18 13:31:22.443 +03:00 [INF] {"Username":"asdbla@gmail.com","Provider":null,"ProviderUserId":null,"SubjectId":"8a8dc805-e3f5-4fd2-9c2d-b454fe797d06","DisplayName":"asdbla@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOBDBE00486:00000007","TimeStamp":"2019-07-18T10:31:22.0000000Z","ProcessId":12808,"LocalIpAddress":"127.0.0.1:42685","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-18 13:31:22.448 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:31:22.475 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 13:31:22.475 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 13:31:22.475 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 13:31:22.476 +03:00 [DBG] Start authorize callback request
2019-07-18 13:31:22.476 +03:00 [DBG] User in authorize request: 8a8dc805-e3f5-4fd2-9c2d-b454fe797d06
2019-07-18 13:31:22.476 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:31:22.476 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:31:22.477 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:31:22.477 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"8a8dc805-e3f5-4fd2-9c2d-b454fe797d06","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1c556c6c57364f49a18e85467f691884","UiLocales":null,"Nonce":"7c59b50051854f9792d039e7ecddd018","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bea712205973e37a98c2b3810928b9c7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1c556c6c57364f49a18e85467f691884","nonce":"7c59b50051854f9792d039e7ecddd018"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 13:31:22.564 +03:00 [DBG] user_consent grant with value: spa|8a8dc805-e3f5-4fd2-9c2d-b454fe797d06 not found in store.
2019-07-18 13:31:22.566 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-18 13:31:22.566 +03:00 [INF] Showing consent: User has not yet consented
2019-07-18 13:31:22.758 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:31:22.758 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:31:22.758 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:31:22.759 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:31:26.482 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:31:26.563 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:31:26.564 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:31:26.564 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:31:26.567 +03:00 [INF] {"SubjectId":"8a8dc805-e3f5-4fd2-9c2d-b454fe797d06","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOBDBE00486:00000009","TimeStamp":"2019-07-18T10:31:26.0000000Z","ProcessId":12808,"LocalIpAddress":"127.0.0.1:42685","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-18 13:31:26.603 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:31:26.653 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 13:31:26.653 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 13:31:26.653 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 13:31:26.653 +03:00 [DBG] Start authorize callback request
2019-07-18 13:31:26.664 +03:00 [DBG] User in authorize request: 8a8dc805-e3f5-4fd2-9c2d-b454fe797d06
2019-07-18 13:31:26.664 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:31:26.665 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:31:26.665 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:31:26.665 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"8a8dc805-e3f5-4fd2-9c2d-b454fe797d06","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1c556c6c57364f49a18e85467f691884","UiLocales":null,"Nonce":"7c59b50051854f9792d039e7ecddd018","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bea712205973e37a98c2b3810928b9c7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1c556c6c57364f49a18e85467f691884","nonce":"7c59b50051854f9792d039e7ecddd018"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 13:31:26.672 +03:00 [DBG] user_consent grant with value: spa|8a8dc805-e3f5-4fd2-9c2d-b454fe797d06 not found in store.
2019-07-18 13:31:26.672 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-18 13:31:26.686 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-18 13:31:26.688 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-18 13:31:26.695 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 8a8dc805-e3f5-4fd2-9c2d-b454fe797d06
2019-07-18 13:31:26.721 +03:00 [DBG] Creating Implicit Flow response.
2019-07-18 13:31:26.739 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-18 13:31:26.740 +03:00 [DBG] Getting claims for access token for subject: 8a8dc805-e3f5-4fd2-9c2d-b454fe797d06
2019-07-18 13:31:27.102 +03:00 [DBG] Getting claims for identity token for subject: 8a8dc805-e3f5-4fd2-9c2d-b454fe797d06 and client: spa
2019-07-18 13:31:27.102 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-18 13:31:27.123 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"8a8dc805-e3f5-4fd2-9c2d-b454fe797d06","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****D8Cw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****AIrQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOBDBE00487:0000000A","TimeStamp":"2019-07-18T10:31:27.0000000Z","ProcessId":12808,"LocalIpAddress":"127.0.0.1:42685","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-18 13:31:27.130 +03:00 [INF] Authorize endpoint response
{"SubjectId":"8a8dc805-e3f5-4fd2-9c2d-b454fe797d06","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"1c556c6c57364f49a18e85467f691884","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-18 13:31:27.168 +03:00 [DBG] Augmenting SignInContext
2019-07-18 13:31:27.170 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-18 13:31:28.969 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 13:31:28.976 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 13:31:28.976 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 13:31:28.976 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 13:31:28.977 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 13:31:28.977 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 13:31:28.977 +03:00 [DBG] Start discovery request
2019-07-18 13:31:29.179 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-18 13:31:29.179 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 13:31:29.179 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 13:31:29.180 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-18 13:31:29.182 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-18 13:31:29.182 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-18 13:31:29.191 +03:00 [DBG] Start key discovery request
2019-07-18 13:31:29.278 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-18 13:31:29.279 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 13:31:29.279 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 13:31:29.288 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-18 13:31:29.288 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 13:31:29.288 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 13:31:29.289 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-18 13:31:29.293 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-18 13:31:29.293 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-18 13:31:29.310 +03:00 [DBG] Start userinfo request
2019-07-18 13:31:29.318 +03:00 [DBG] Bearer token found in header
2019-07-18 13:31:29.436 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:31:29.443 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:31:29.452 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-18 13:31:29.455 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563445886,"exp":1563449486,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"8a8dc805-e3f5-4fd2-9c2d-b454fe797d06","auth_time":1563445882,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-18 13:31:29.476 +03:00 [DBG] Creating userinfo response
2019-07-18 13:31:29.483 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-18 13:31:29.489 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-18 13:31:29.501 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-18 13:31:29.501 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-18 13:31:29.511 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-18 13:31:29.513 +03:00 [DBG] End userinfo request
2019-07-18 13:31:29.586 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-18 13:31:29.589 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-18 13:31:29.589 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-18 13:31:29.592 +03:00 [DBG] Rendering check session result
2019-07-18 13:34:44.179 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 13:34:44.266 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 13:34:44.270 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 13:34:44.270 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 13:34:44.270 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 13:34:44.270 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 13:34:44.270 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 13:34:45.171 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 13:34:45.196 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 13:34:45.196 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 13:34:45.252 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 13:34:45.252 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 13:34:45.253 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 13:34:45.253 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 13:34:45.253 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 13:34:45.253 +03:00 [DBG] Error Url: /home/error
2019-07-18 13:34:45.253 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 13:34:45.307 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 13:34:45.545 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 13:34:45.546 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 13:34:45.554 +03:00 [DBG] Start discovery request
2019-07-18 13:34:45.819 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 13:34:45.828 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 13:34:45.828 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 13:34:45.836 +03:00 [DBG] Start authorize request
2019-07-18 13:34:45.875 +03:00 [DBG] User in authorize request: 8a8dc805-e3f5-4fd2-9c2d-b454fe797d06
2019-07-18 13:34:45.890 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:34:45.957 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:34:46.304 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:34:46.341 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"8a8dc805-e3f5-4fd2-9c2d-b454fe797d06","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b557dcdd1ffb4b7aae26533ed5e5dfa2","UiLocales":null,"Nonce":"921a2f6a5b1a493a8d8a617b4a129ca4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bea712205973e37a98c2b3810928b9c7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b557dcdd1ffb4b7aae26533ed5e5dfa2","nonce":"921a2f6a5b1a493a8d8a617b4a129ca4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 13:34:47.559 +03:00 [DBG] user_consent grant with value: spa|8a8dc805-e3f5-4fd2-9c2d-b454fe797d06 not found in store.
2019-07-18 13:34:47.559 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-18 13:34:47.560 +03:00 [INF] Showing consent: User has not yet consented
2019-07-18 13:34:47.784 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:34:47.786 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:34:47.787 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:34:47.790 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:34:54.419 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:34:54.565 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-18 13:34:54.567 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-18 13:34:54.569 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-18 13:34:54.614 +03:00 [INF] {"SubjectId":"8a8dc805-e3f5-4fd2-9c2d-b454fe797d06","DisplayName":"asdbla@gmail.com","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOBDE6CCR4L:00000003","TimeStamp":"2019-07-18T10:34:54.0000000Z","ProcessId":12264,"LocalIpAddress":"127.0.0.1:27032","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-18 13:34:54.716 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-18 13:34:54.722 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-18 13:34:54.723 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-18 13:34:54.734 +03:00 [DBG] Processing signout callback request
2019-07-18 13:34:54.765 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:34:54.767 +03:00 [DBG] No client front-channel logout URLs
2019-07-18 13:34:54.768 +03:00 [DBG] No client back-channel logout URLs
2019-07-18 13:34:54.768 +03:00 [INF] Successful signout callback.
2019-07-18 13:34:54.768 +03:00 [DBG] No client front-channel iframe urls
2019-07-18 13:34:54.768 +03:00 [DBG] No client back-channel iframe urls
2019-07-18 13:35:08.218 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 13:35:08.220 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 13:35:08.220 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 13:35:08.221 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 13:35:08.222 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 13:35:08.223 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 13:35:08.223 +03:00 [DBG] Start discovery request
2019-07-18 13:35:08.288 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 13:35:08.291 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 13:35:08.291 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 13:35:08.291 +03:00 [DBG] Start authorize request
2019-07-18 13:35:08.292 +03:00 [DBG] No user present in authorize request
2019-07-18 13:35:08.292 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:35:08.294 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:35:08.295 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:35:08.295 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e1a31308c87c4bdba64751d93646f075","UiLocales":null,"Nonce":"9d8e8ec076034c93874de645e7ae90fd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e1a31308c87c4bdba64751d93646f075","nonce":"9d8e8ec076034c93874de645e7ae90fd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 13:35:08.295 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 13:35:13.575 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:35:13.599 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:35:13.613 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:35:13.617 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:35:26.530 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:35:29.044 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:35:29.055 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:35:29.101 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:35:44.740 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 13:35:50.557 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 13:35:50.563 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 13:35:50.564 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 13:35:50.592 +03:00 [DBG] Start authorize callback request
2019-07-18 13:35:50.606 +03:00 [DBG] No user present in authorize request
2019-07-18 13:35:50.606 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:35:50.607 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:35:50.607 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:35:50.607 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e1a31308c87c4bdba64751d93646f075","UiLocales":null,"Nonce":"9d8e8ec076034c93874de645e7ae90fd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e1a31308c87c4bdba64751d93646f075","nonce":"9d8e8ec076034c93874de645e7ae90fd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 13:35:50.607 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 13:37:04.012 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 13:37:04.013 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 13:37:04.013 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 13:37:04.018 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:23:43.632 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 14:23:43.696 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 14:23:43.701 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 14:23:43.702 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 14:23:43.702 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 14:23:43.702 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 14:23:43.702 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 14:23:44.480 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 14:23:44.499 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 14:23:44.499 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 14:23:44.555 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 14:23:44.555 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 14:23:44.555 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 14:23:44.556 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 14:23:44.556 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 14:23:44.557 +03:00 [DBG] Error Url: /home/error
2019-07-18 14:23:44.557 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 14:23:44.618 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 14:23:45.097 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 14:23:45.097 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 14:23:45.104 +03:00 [DBG] Start discovery request
2019-07-18 14:23:45.345 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 14:23:45.346 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 14:23:45.346 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 14:23:45.346 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 14:23:45.348 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 14:23:45.348 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 14:23:45.348 +03:00 [DBG] Start discovery request
2019-07-18 14:23:45.378 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 14:23:45.378 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 14:23:45.379 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 14:23:45.380 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 14:23:45.381 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 14:23:45.382 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 14:23:45.382 +03:00 [DBG] Start discovery request
2019-07-18 14:23:45.450 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 14:23:45.453 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 14:23:45.458 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 14:23:45.458 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 14:23:45.465 +03:00 [DBG] Start authorize request
2019-07-18 14:23:45.468 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 14:23:45.468 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 14:23:45.468 +03:00 [DBG] Start authorize request
2019-07-18 14:23:45.487 +03:00 [DBG] No user present in authorize request
2019-07-18 14:23:45.488 +03:00 [DBG] No user present in authorize request
2019-07-18 14:23:45.497 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 14:23:45.497 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 14:23:45.543 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:23:45.544 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:23:45.636 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 14:23:45.636 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 14:23:46.438 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"56c2e79725c84d5c82698dfe858efecf","UiLocales":null,"Nonce":"b784eaf53d1e447c86afe6ca6e328769","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"56c2e79725c84d5c82698dfe858efecf","nonce":"b784eaf53d1e447c86afe6ca6e328769"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 14:23:46.438 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a922dba1ee5e461e9be18ca5b9184e44","UiLocales":null,"Nonce":"cbcda6a3a00f4b959cb2fa1b6a0f9482","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a922dba1ee5e461e9be18ca5b9184e44","nonce":"cbcda6a3a00f4b959cb2fa1b6a0f9482"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 14:23:46.470 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 14:23:46.470 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 14:23:46.714 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 14:23:46.715 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:23:46.716 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 14:23:46.725 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:23:51.096 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 14:23:54.525 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 14:23:54.525 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:23:54.526 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 14:24:04.318 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 14:24:09.664 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 14:24:09.669 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 14:24:09.670 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 14:24:09.687 +03:00 [DBG] Start authorize callback request
2019-07-18 14:24:09.710 +03:00 [DBG] No user present in authorize request
2019-07-18 14:24:09.710 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 14:24:09.710 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:24:09.710 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 14:24:09.711 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"56c2e79725c84d5c82698dfe858efecf","UiLocales":null,"Nonce":"b784eaf53d1e447c86afe6ca6e328769","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"56c2e79725c84d5c82698dfe858efecf","nonce":"b784eaf53d1e447c86afe6ca6e328769"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 14:24:09.711 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 14:24:09.916 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 14:24:09.916 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:24:09.917 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 14:24:09.918 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:25:28.370 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 14:25:28.444 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 14:25:28.449 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 14:25:28.449 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 14:25:28.449 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 14:25:28.449 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 14:25:28.450 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 14:25:29.328 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 14:25:29.334 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 14:25:29.334 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 14:25:29.334 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 14:25:29.334 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 14:25:29.334 +03:00 [DBG] Error Url: /home/error
2019-07-18 14:25:29.334 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 14:25:40.047 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 14:25:40.056 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 14:25:40.057 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 14:25:40.067 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 14:25:40.281 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 14:25:40.281 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 14:25:40.287 +03:00 [DBG] Start discovery request
2019-07-18 14:25:40.433 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 14:25:40.453 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 14:25:40.453 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 14:25:40.460 +03:00 [DBG] Start authorize request
2019-07-18 14:25:40.478 +03:00 [DBG] No user present in authorize request
2019-07-18 14:25:40.486 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 14:25:40.528 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:25:40.641 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 14:25:40.667 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b38638425153440bb724549ba9cdc0ab","UiLocales":null,"Nonce":"94dd4260f6c04c048973cf8edb631f24","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b38638425153440bb724549ba9cdc0ab","nonce":"94dd4260f6c04c048973cf8edb631f24"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 14:25:40.702 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 14:25:40.913 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 14:25:40.913 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:25:40.914 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 14:25:40.920 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:25:44.471 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 14:25:47.421 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 14:25:47.422 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:25:47.423 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 14:25:56.774 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 14:26:02.168 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 14:26:02.174 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 14:26:02.174 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 14:26:02.198 +03:00 [DBG] Start authorize callback request
2019-07-18 14:26:02.217 +03:00 [DBG] No user present in authorize request
2019-07-18 14:26:02.218 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 14:26:02.218 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:26:02.218 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 14:26:02.219 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b38638425153440bb724549ba9cdc0ab","UiLocales":null,"Nonce":"94dd4260f6c04c048973cf8edb631f24","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b38638425153440bb724549ba9cdc0ab","nonce":"94dd4260f6c04c048973cf8edb631f24"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 14:26:02.219 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 14:26:02.298 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 14:26:02.299 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:26:02.299 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 14:26:02.300 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:28:28.702 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 14:28:28.760 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 14:28:28.765 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 14:28:28.765 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 14:28:28.765 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 14:28:28.765 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 14:28:28.766 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 14:28:29.266 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 14:28:29.320 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 14:28:29.321 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 14:28:29.321 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 14:28:29.321 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 14:28:29.321 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 14:28:29.321 +03:00 [DBG] Error Url: /home/error
2019-07-18 14:28:29.321 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 14:28:29.760 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 14:28:29.792 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 14:28:29.861 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 14:33:19.906 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 14:33:20.049 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 14:33:20.057 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 14:33:20.058 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 14:33:20.058 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 14:33:20.058 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 14:33:20.058 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 14:33:22.187 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 14:33:22.195 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 14:33:22.195 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 14:33:22.195 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 14:33:22.195 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 14:33:22.195 +03:00 [DBG] Error Url: /home/error
2019-07-18 14:33:22.195 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 15:03:27.356 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 15:03:27.368 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 15:03:27.369 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 15:03:27.374 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 15:03:27.691 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 15:03:27.692 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 15:03:27.699 +03:00 [DBG] Start discovery request
2019-07-18 15:03:27.828 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 15:03:27.838 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 15:03:27.838 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 15:03:27.860 +03:00 [DBG] Start authorize request
2019-07-18 15:03:27.873 +03:00 [DBG] No user present in authorize request
2019-07-18 15:03:27.879 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 15:03:27.906 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 15:03:27.962 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 15:03:27.985 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ee39d587dc5648abb7ba0b09750456d8","UiLocales":null,"Nonce":"866b8a61598542ea98442ae765b472a2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ee39d587dc5648abb7ba0b09750456d8","nonce":"866b8a61598542ea98442ae765b472a2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 15:03:28.014 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 15:03:28.158 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 15:03:28.159 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 15:03:28.159 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 15:03:28.163 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 15:03:30.820 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 15:03:34.640 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 15:03:34.643 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 15:03:34.644 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 15:20:51.595 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 15:20:51.649 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 15:20:51.652 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 15:20:51.652 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 15:20:51.652 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 15:20:51.653 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 15:20:51.653 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 15:20:52.060 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 15:20:52.063 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 15:20:52.063 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 15:20:52.063 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 15:20:52.063 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 15:20:52.063 +03:00 [DBG] Error Url: /home/error
2019-07-18 15:20:52.063 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 15:21:14.486 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 15:22:06.545 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-18 15:46:28.606 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 15:46:28.752 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 15:46:28.765 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 15:46:28.765 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 15:46:28.765 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 15:46:28.766 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 15:46:28.766 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 15:46:30.219 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 15:46:30.227 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 15:46:30.228 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 15:46:30.228 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 15:46:30.228 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 15:46:30.228 +03:00 [DBG] Error Url: /home/error
2019-07-18 15:46:30.228 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 15:46:39.698 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 15:46:39.710 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 15:46:39.710 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 15:46:39.716 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 15:46:39.901 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 15:46:39.901 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 15:46:39.908 +03:00 [DBG] Start discovery request
2019-07-18 15:46:40.025 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 15:46:40.035 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 15:46:40.035 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 15:46:40.039 +03:00 [DBG] Start authorize request
2019-07-18 15:46:40.062 +03:00 [DBG] No user present in authorize request
2019-07-18 15:46:40.072 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 15:46:40.102 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 15:46:40.159 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 15:46:40.181 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9600b8495b3342dfa56f076e344c41f0","UiLocales":null,"Nonce":"b408723d86824d44b470ae7a336ec14b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9600b8495b3342dfa56f076e344c41f0","nonce":"b408723d86824d44b470ae7a336ec14b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 15:46:40.212 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 15:46:40.436 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 15:46:40.438 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 15:46:40.438 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 15:46:40.445 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 15:46:43.512 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 15:46:45.822 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 15:46:45.823 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 15:46:45.823 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 15:47:12.533 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 15:47:22.714 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 15:47:22.719 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 15:47:22.719 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 15:47:22.739 +03:00 [DBG] Start authorize callback request
2019-07-18 15:47:22.752 +03:00 [DBG] No user present in authorize request
2019-07-18 15:47:22.752 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 15:47:22.752 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 15:47:22.753 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 15:47:22.754 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9600b8495b3342dfa56f076e344c41f0","UiLocales":null,"Nonce":"b408723d86824d44b470ae7a336ec14b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9600b8495b3342dfa56f076e344c41f0","nonce":"b408723d86824d44b470ae7a336ec14b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 15:47:22.754 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 15:47:22.827 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 15:47:22.827 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 15:47:22.829 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 15:47:22.829 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:10:59.667 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 16:10:59.801 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 16:10:59.810 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 16:10:59.811 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 16:10:59.811 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 16:10:59.811 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 16:10:59.811 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 16:11:01.222 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 16:11:01.231 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 16:11:01.231 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 16:11:01.232 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 16:11:01.232 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 16:11:01.232 +03:00 [DBG] Error Url: /home/error
2019-07-18 16:11:01.232 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 16:11:37.748 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-18 16:11:47.928 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 16:11:47.948 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 16:11:47.949 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 16:11:47.953 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 16:11:47.966 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 16:11:47.967 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 16:11:47.975 +03:00 [DBG] Start discovery request
2019-07-18 16:11:48.108 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 16:11:48.118 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 16:11:48.119 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 16:11:48.130 +03:00 [DBG] Start authorize request
2019-07-18 16:11:48.150 +03:00 [DBG] No user present in authorize request
2019-07-18 16:11:48.163 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:11:48.192 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:11:48.248 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:11:48.278 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cb2c9417bace405f9b9bbcf9eb02a2dd","UiLocales":null,"Nonce":"5e6a56b8f30b4c5c822696539ea693ba","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cb2c9417bace405f9b9bbcf9eb02a2dd","nonce":"5e6a56b8f30b4c5c822696539ea693ba"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:11:48.324 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 16:11:48.407 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:11:48.409 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:11:48.410 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:11:48.414 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:12:09.332 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:12:09.497 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:12:09.497 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:12:09.498 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:12:10.750 +03:00 [DBG] Augmenting SignInContext
2019-07-18 16:12:10.755 +03:00 [DBG] Adding idp claim with value: local
2019-07-18 16:12:10.755 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-18 16:12:10.756 +03:00 [DBG] Adding auth_time claim with value: 1563455530
2019-07-18 16:12:10.792 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-18 16:12:10.839 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"d5779cee-3fcf-4cce-8e68-22b76b9ae294","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOBG5GKILVR:00000005","TimeStamp":"2019-07-18T13:12:10.0000000Z","ProcessId":6520,"LocalIpAddress":"127.0.0.1:29167","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-18 16:12:10.843 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:12:10.874 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 16:12:10.876 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 16:12:10.876 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 16:12:10.886 +03:00 [DBG] Start authorize callback request
2019-07-18 16:12:10.893 +03:00 [DBG] User in authorize request: d5779cee-3fcf-4cce-8e68-22b76b9ae294
2019-07-18 16:12:10.893 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:12:10.893 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:12:10.893 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:12:10.894 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d5779cee-3fcf-4cce-8e68-22b76b9ae294","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cb2c9417bace405f9b9bbcf9eb02a2dd","UiLocales":null,"Nonce":"5e6a56b8f30b4c5c822696539ea693ba","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"884b6ee46ba92a9ebff2a20c9693cf97","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cb2c9417bace405f9b9bbcf9eb02a2dd","nonce":"5e6a56b8f30b4c5c822696539ea693ba"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:12:11.003 +03:00 [DBG] user_consent grant with value: spa|d5779cee-3fcf-4cce-8e68-22b76b9ae294 not found in store.
2019-07-18 16:12:11.003 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-18 16:12:11.003 +03:00 [INF] Showing consent: User has not yet consented
2019-07-18 16:12:11.116 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:12:11.116 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:12:11.117 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:12:11.117 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:12:15.618 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:12:15.713 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-18 16:12:15.714 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-18 16:12:15.715 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-18 16:12:15.717 +03:00 [INF] {"SubjectId":"d5779cee-3fcf-4cce-8e68-22b76b9ae294","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOBG5GKILVQ:00000007","TimeStamp":"2019-07-18T13:12:15.0000000Z","ProcessId":6520,"LocalIpAddress":"127.0.0.1:29167","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-18 16:12:57.501 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 16:12:57.515 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 16:12:57.515 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 16:12:57.515 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 16:12:57.516 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 16:12:57.516 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 16:12:57.516 +03:00 [DBG] Start discovery request
2019-07-18 16:12:57.569 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 16:12:57.571 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 16:12:57.572 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 16:12:57.572 +03:00 [DBG] Start authorize request
2019-07-18 16:12:57.572 +03:00 [DBG] No user present in authorize request
2019-07-18 16:12:57.572 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:12:57.573 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:12:57.573 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:12:57.573 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cd74c695bce74eb5834f0291ff059d7e","UiLocales":null,"Nonce":"f5e1415f2d604102a03d68c5b2a92bf8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cd74c695bce74eb5834f0291ff059d7e","nonce":"f5e1415f2d604102a03d68c5b2a92bf8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:12:57.573 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 16:12:57.691 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:12:57.692 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:12:57.692 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:12:57.692 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:13:00.650 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:13:00.715 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:13:00.716 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:13:00.716 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:13:00.724 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOBG5GKILVR:0000000A","TimeStamp":"2019-07-18T13:13:00.0000000Z","ProcessId":6520,"LocalIpAddress":"127.0.0.1:29167","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-18 16:13:00.733 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:13:00.733 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:13:00.735 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:13:00.735 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:13:03.862 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:13:03.922 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:13:03.922 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:13:03.922 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:13:24.160 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-18 16:13:30.723 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 16:13:30.724 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 16:13:30.724 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 16:13:30.725 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 16:13:30.725 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 16:13:30.726 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 16:13:30.726 +03:00 [DBG] Start discovery request
2019-07-18 16:13:30.765 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 16:13:30.766 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 16:13:30.766 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 16:13:30.766 +03:00 [DBG] Start authorize request
2019-07-18 16:13:30.766 +03:00 [DBG] No user present in authorize request
2019-07-18 16:13:30.766 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:13:30.766 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:13:30.767 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:13:30.767 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"18e2df710c4541ecbc84e2303b04dc48","UiLocales":null,"Nonce":"48bee5e258c64e35adbd40396391d946","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"18e2df710c4541ecbc84e2303b04dc48","nonce":"48bee5e258c64e35adbd40396391d946"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:13:30.767 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 16:13:30.858 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:13:30.859 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:13:30.860 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:13:30.860 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:15:10.067 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:15:10.126 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:15:10.127 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:15:10.127 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:15:42.614 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:15:46.201 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 16:15:46.219 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 16:15:46.219 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 16:15:46.219 +03:00 [DBG] Start authorize callback request
2019-07-18 16:15:46.219 +03:00 [DBG] No user present in authorize request
2019-07-18 16:15:46.219 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:15:46.220 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:15:46.220 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:15:46.220 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"18e2df710c4541ecbc84e2303b04dc48","UiLocales":null,"Nonce":"48bee5e258c64e35adbd40396391d946","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"18e2df710c4541ecbc84e2303b04dc48","nonce":"48bee5e258c64e35adbd40396391d946"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:15:46.220 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 16:15:46.311 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:15:46.311 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:15:46.312 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:15:46.313 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:16:12.172 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:16:12.246 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:16:12.246 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:16:12.248 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:16:12.283 +03:00 [DBG] Augmenting SignInContext
2019-07-18 16:16:12.283 +03:00 [DBG] Adding idp claim with value: local
2019-07-18 16:16:12.283 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-18 16:16:12.284 +03:00 [DBG] Adding auth_time claim with value: 1563455772
2019-07-18 16:16:12.285 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-18 16:16:12.286 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Provider":null,"ProviderUserId":null,"SubjectId":"fe380401-c1be-4009-81ed-6cb9ae7ad251","DisplayName":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOBG5GKILVU:00000003","TimeStamp":"2019-07-18T13:16:12.0000000Z","ProcessId":6520,"LocalIpAddress":"127.0.0.1:29167","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-18 16:16:12.286 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:16:12.333 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 16:16:12.333 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 16:16:12.334 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 16:16:12.334 +03:00 [DBG] Start authorize callback request
2019-07-18 16:16:12.334 +03:00 [DBG] User in authorize request: fe380401-c1be-4009-81ed-6cb9ae7ad251
2019-07-18 16:16:12.334 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:16:12.334 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:16:12.335 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:16:12.335 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"fe380401-c1be-4009-81ed-6cb9ae7ad251","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"18e2df710c4541ecbc84e2303b04dc48","UiLocales":null,"Nonce":"48bee5e258c64e35adbd40396391d946","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"545d7ed2dfadd4c426d641548be4fcaf","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"18e2df710c4541ecbc84e2303b04dc48","nonce":"48bee5e258c64e35adbd40396391d946"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:16:12.341 +03:00 [DBG] user_consent grant with value: spa|fe380401-c1be-4009-81ed-6cb9ae7ad251 not found in store.
2019-07-18 16:16:12.341 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-18 16:16:12.341 +03:00 [INF] Showing consent: User has not yet consented
2019-07-18 16:16:12.420 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:16:12.420 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:16:12.420 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:16:12.421 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:16:16.555 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:16:16.555 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:16:16.556 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:16:16.556 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:16:23.163 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:16:23.236 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-18 16:16:23.236 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-18 16:16:23.237 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-18 16:16:23.237 +03:00 [INF] {"SubjectId":"fe380401-c1be-4009-81ed-6cb9ae7ad251","DisplayName":"jupitel1993trash@gmail.com","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOBG5GKILVT:00000004","TimeStamp":"2019-07-18T13:16:23.0000000Z","ProcessId":6520,"LocalIpAddress":"127.0.0.1:29167","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-18 16:21:41.972 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 16:21:42.042 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 16:21:42.048 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 16:21:42.048 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 16:21:42.048 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 16:21:42.048 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 16:21:42.048 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 16:21:42.540 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 16:21:42.550 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 16:21:42.550 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 16:21:42.597 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 16:21:42.597 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 16:21:42.597 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 16:21:42.597 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 16:21:42.597 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 16:21:42.597 +03:00 [DBG] Error Url: /home/error
2019-07-18 16:21:42.597 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 16:21:42.635 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 16:21:42.735 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 16:21:42.735 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 16:21:42.741 +03:00 [DBG] Start discovery request
2019-07-18 16:21:42.869 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 16:21:42.886 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 16:21:42.887 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 16:21:42.896 +03:00 [DBG] Start authorize request
2019-07-18 16:21:42.914 +03:00 [DBG] No user present in authorize request
2019-07-18 16:21:42.922 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:21:42.950 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:21:43.019 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:21:43.060 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"089ce37c0b3d4468888658f68b8c8b7a","UiLocales":null,"Nonce":"5764602b29a746f184c725ad14c3551c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"089ce37c0b3d4468888658f68b8c8b7a","nonce":"5764602b29a746f184c725ad14c3551c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:21:43.098 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 16:21:43.397 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:21:43.398 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:21:43.399 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:21:43.406 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:21:57.137 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:21:57.223 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:21:57.224 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:21:57.224 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:21:57.862 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOBGBFS30MJ:00000004","TimeStamp":"2019-07-18T13:21:57.0000000Z","ProcessId":9716,"LocalIpAddress":"127.0.0.1:37196","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-18 16:21:57.865 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:21:57.865 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:21:57.867 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:21:57.867 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:22:00.483 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:22:00.487 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:22:00.488 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:22:00.489 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:24:00.608 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:24:03.836 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 16:24:03.840 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 16:24:03.840 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 16:24:03.852 +03:00 [DBG] Start authorize callback request
2019-07-18 16:24:03.875 +03:00 [DBG] No user present in authorize request
2019-07-18 16:24:03.876 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:24:03.876 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:24:03.877 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:24:03.877 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"089ce37c0b3d4468888658f68b8c8b7a","UiLocales":null,"Nonce":"5764602b29a746f184c725ad14c3551c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"089ce37c0b3d4468888658f68b8c8b7a","nonce":"5764602b29a746f184c725ad14c3551c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:24:03.878 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 16:24:03.906 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:24:03.907 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:24:03.908 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:24:03.909 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:24:17.468 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:24:17.472 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:24:17.472 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:24:17.473 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:24:17.695 +03:00 [DBG] Augmenting SignInContext
2019-07-18 16:24:17.699 +03:00 [DBG] Adding idp claim with value: local
2019-07-18 16:24:17.699 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-18 16:24:17.700 +03:00 [DBG] Adding auth_time claim with value: 1563456257
2019-07-18 16:24:17.717 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-18 16:24:17.718 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"20303617-52ec-4cb2-ac6b-aae86fc5fdb3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOBGBFS30MK:00000004","TimeStamp":"2019-07-18T13:24:17.0000000Z","ProcessId":9716,"LocalIpAddress":"127.0.0.1:37196","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-18 16:24:17.720 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:24:17.739 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 16:24:17.740 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 16:24:17.740 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 16:24:17.740 +03:00 [DBG] Start authorize callback request
2019-07-18 16:24:17.740 +03:00 [DBG] User in authorize request: 20303617-52ec-4cb2-ac6b-aae86fc5fdb3
2019-07-18 16:24:17.740 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:24:17.741 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:24:17.741 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:24:17.741 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"20303617-52ec-4cb2-ac6b-aae86fc5fdb3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"089ce37c0b3d4468888658f68b8c8b7a","UiLocales":null,"Nonce":"5764602b29a746f184c725ad14c3551c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"42944b7f7a28fe32dabd68ba94b420b2","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"089ce37c0b3d4468888658f68b8c8b7a","nonce":"5764602b29a746f184c725ad14c3551c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:24:17.803 +03:00 [DBG] user_consent grant with value: spa|20303617-52ec-4cb2-ac6b-aae86fc5fdb3 not found in store.
2019-07-18 16:24:17.804 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-18 16:24:17.804 +03:00 [INF] Showing consent: User has not yet consented
2019-07-18 16:24:17.874 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:24:17.874 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:24:17.875 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:24:17.875 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:24:29.585 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:24:29.628 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-18 16:24:29.630 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-18 16:24:29.631 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-18 16:24:29.633 +03:00 [INF] {"SubjectId":"20303617-52ec-4cb2-ac6b-aae86fc5fdb3","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOBGBFS30MK:00000008","TimeStamp":"2019-07-18T13:24:29.0000000Z","ProcessId":9716,"LocalIpAddress":"127.0.0.1:37196","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-18 16:24:58.917 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 16:24:58.918 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 16:24:58.918 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 16:24:58.919 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 16:24:58.920 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 16:24:58.920 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 16:24:58.920 +03:00 [DBG] Start discovery request
2019-07-18 16:24:58.970 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 16:24:58.972 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 16:24:58.972 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 16:24:58.975 +03:00 [DBG] Start authorize request
2019-07-18 16:24:58.976 +03:00 [DBG] No user present in authorize request
2019-07-18 16:24:58.976 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:24:58.976 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:24:58.977 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:24:58.980 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1a3a76f59c2c4156b851cfd7a0684891","UiLocales":null,"Nonce":"4424d5620a3f4f5188e0e517e8496992","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1a3a76f59c2c4156b851cfd7a0684891","nonce":"4424d5620a3f4f5188e0e517e8496992"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:24:58.980 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 16:24:59.031 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:24:59.031 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:24:59.032 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:24:59.032 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:25:07.362 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:25:07.366 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:25:07.368 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:25:07.368 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:25:07.393 +03:00 [DBG] Augmenting SignInContext
2019-07-18 16:25:07.394 +03:00 [DBG] Adding idp claim with value: local
2019-07-18 16:25:07.394 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-18 16:25:07.394 +03:00 [DBG] Adding auth_time claim with value: 1563456307
2019-07-18 16:25:07.395 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-18 16:25:07.395 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"20303617-52ec-4cb2-ac6b-aae86fc5fdb3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOBGBFS30MK:0000000D","TimeStamp":"2019-07-18T13:25:07.0000000Z","ProcessId":9716,"LocalIpAddress":"127.0.0.1:37196","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-18 16:25:07.395 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:25:07.410 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 16:25:07.411 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 16:25:07.411 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 16:25:07.411 +03:00 [DBG] Start authorize callback request
2019-07-18 16:25:07.411 +03:00 [DBG] User in authorize request: 20303617-52ec-4cb2-ac6b-aae86fc5fdb3
2019-07-18 16:25:07.411 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:25:07.411 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:25:07.412 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:25:07.412 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"20303617-52ec-4cb2-ac6b-aae86fc5fdb3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1a3a76f59c2c4156b851cfd7a0684891","UiLocales":null,"Nonce":"4424d5620a3f4f5188e0e517e8496992","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"784fff3fab5111f876aef382d7544c5d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1a3a76f59c2c4156b851cfd7a0684891","nonce":"4424d5620a3f4f5188e0e517e8496992"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:25:07.422 +03:00 [DBG] user_consent grant with value: spa|20303617-52ec-4cb2-ac6b-aae86fc5fdb3 not found in store.
2019-07-18 16:25:07.422 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-18 16:25:07.422 +03:00 [INF] Showing consent: User has not yet consented
2019-07-18 16:25:07.442 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:25:07.443 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:25:07.443 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:25:07.443 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:26:38.445 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 16:26:38.501 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 16:26:38.505 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 16:26:38.506 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 16:26:38.506 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 16:26:38.506 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 16:26:38.506 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 16:26:46.546 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 16:26:46.669 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 16:26:46.677 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 16:26:46.678 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 16:26:46.678 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 16:26:46.678 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 16:26:46.678 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 16:26:47.322 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 16:26:47.327 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 16:26:47.327 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 16:26:47.327 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 16:26:47.327 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 16:26:47.327 +03:00 [DBG] Error Url: /home/error
2019-07-18 16:26:47.327 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 16:27:17.278 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 16:27:17.286 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 16:27:17.286 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 16:27:17.290 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 16:27:17.403 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 16:27:17.405 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 16:27:17.413 +03:00 [DBG] Start discovery request
2019-07-18 16:27:17.502 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 16:27:17.509 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 16:27:17.510 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 16:27:17.518 +03:00 [DBG] Start authorize request
2019-07-18 16:27:17.533 +03:00 [DBG] No user present in authorize request
2019-07-18 16:27:17.543 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:27:17.573 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:27:17.654 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:27:17.682 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"85a43ee73e4247929c97004f0332cb4e","UiLocales":null,"Nonce":"f001cc0b672a4fabb8b34d497364b164","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"85a43ee73e4247929c97004f0332cb4e","nonce":"f001cc0b672a4fabb8b34d497364b164"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:27:17.725 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 16:27:17.825 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:27:17.826 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:27:17.828 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:27:17.835 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:27:20.577 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:27:20.683 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:27:20.684 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:27:20.685 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:27:21.400 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOBGEAM1O5G:00000005","TimeStamp":"2019-07-18T13:27:21.0000000Z","ProcessId":15108,"LocalIpAddress":"127.0.0.1:21059","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-18 16:27:21.403 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:27:21.403 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:27:21.404 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:27:21.405 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:28:13.496 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:28:13.731 +03:00 [DBG] Augmenting SignInContext
2019-07-18 16:28:13.737 +03:00 [DBG] Adding idp claim with value: local
2019-07-18 16:28:13.737 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-18 16:28:13.738 +03:00 [DBG] Adding auth_time claim with value: 1563456493
2019-07-18 16:28:13.755 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-18 16:28:13.758 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"20303617-52ec-4cb2-ac6b-aae86fc5fdb3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOBGEAM1O5G:00000008","TimeStamp":"2019-07-18T13:28:13.0000000Z","ProcessId":15108,"LocalIpAddress":"127.0.0.1:21059","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-18 16:28:19.499 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:28:29.051 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 16:28:29.052 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 16:28:29.052 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 16:28:29.053 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 16:28:29.054 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 16:28:29.054 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 16:28:29.055 +03:00 [DBG] Start discovery request
2019-07-18 16:28:29.111 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 16:28:29.112 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 16:28:29.113 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 16:28:29.113 +03:00 [DBG] Start authorize request
2019-07-18 16:28:29.113 +03:00 [DBG] User in authorize request: 20303617-52ec-4cb2-ac6b-aae86fc5fdb3
2019-07-18 16:28:29.113 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:28:29.113 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:28:29.114 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:28:29.114 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"20303617-52ec-4cb2-ac6b-aae86fc5fdb3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"27dcd416214e411e992e19572a26a6a4","UiLocales":null,"Nonce":"3d43c8fc29bd4c259203a46432ecf4a9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e8ef28088baf49cc14c62db0408a7344","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"27dcd416214e411e992e19572a26a6a4","nonce":"3d43c8fc29bd4c259203a46432ecf4a9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:28:29.176 +03:00 [DBG] user_consent grant with value: spa|20303617-52ec-4cb2-ac6b-aae86fc5fdb3 not found in store.
2019-07-18 16:28:29.179 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-18 16:28:29.180 +03:00 [INF] Showing consent: User has not yet consented
2019-07-18 16:28:29.241 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:28:29.242 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:28:29.242 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:28:29.242 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:57:22.210 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 16:57:22.265 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 16:57:22.269 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 16:57:22.270 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 16:57:22.270 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 16:57:22.270 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 16:57:22.270 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 16:57:22.970 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 16:57:22.973 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 16:57:22.973 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 16:57:22.973 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 16:57:22.974 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 16:57:22.974 +03:00 [DBG] Error Url: /home/error
2019-07-18 16:57:22.974 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 16:57:50.369 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 16:57:50.495 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 16:57:50.502 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 16:57:50.503 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 16:57:50.503 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 16:57:50.503 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 16:57:50.503 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 16:57:51.344 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 16:57:51.350 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 16:57:51.350 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 16:57:51.350 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 16:57:51.350 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 16:57:51.351 +03:00 [DBG] Error Url: /home/error
2019-07-18 16:57:51.351 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 16:57:59.885 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 16:57:59.892 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 16:57:59.892 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 16:57:59.895 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 16:57:59.995 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 16:57:59.995 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 16:58:00.000 +03:00 [DBG] Start discovery request
2019-07-18 16:58:00.094 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 16:58:00.100 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 16:58:00.101 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 16:58:00.115 +03:00 [DBG] Start authorize request
2019-07-18 16:58:00.133 +03:00 [DBG] No user present in authorize request
2019-07-18 16:58:00.144 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:58:00.172 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:58:00.234 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:58:00.259 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"84564011b13648a78dafb2c386746a90","UiLocales":null,"Nonce":"bdc4fa7fa25f4c9da6f442bfcab9edb2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"84564011b13648a78dafb2c386746a90","nonce":"bdc4fa7fa25f4c9da6f442bfcab9edb2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:58:00.293 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 16:58:00.391 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:58:00.392 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:58:00.392 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:58:00.397 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:58:30.157 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:58:30.263 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:58:30.265 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:58:30.266 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:58:30.996 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOBGVM5JNR8:00000005","TimeStamp":"2019-07-18T13:58:30.0000000Z","ProcessId":6912,"LocalIpAddress":"127.0.0.1:33023","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-18 16:58:30.999 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:58:30.999 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:58:31.001 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:58:31.001 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:58:34.827 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:58:34.881 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:58:34.882 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:58:34.883 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:58:59.391 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:59:02.922 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 16:59:02.925 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 16:59:02.925 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 16:59:02.940 +03:00 [DBG] Start authorize callback request
2019-07-18 16:59:02.946 +03:00 [DBG] No user present in authorize request
2019-07-18 16:59:02.947 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:59:02.947 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:02.947 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:59:02.948 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"84564011b13648a78dafb2c386746a90","UiLocales":null,"Nonce":"bdc4fa7fa25f4c9da6f442bfcab9edb2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"84564011b13648a78dafb2c386746a90","nonce":"bdc4fa7fa25f4c9da6f442bfcab9edb2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:59:02.948 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 16:59:02.959 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:59:02.959 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:02.960 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:59:02.960 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:43.705 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:59:43.711 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:59:43.711 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:43.712 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:59:43.719 +03:00 [INF] {"Username":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOBGVM5JNR8:0000000C","TimeStamp":"2019-07-18T13:59:43.0000000Z","ProcessId":6912,"LocalIpAddress":"127.0.0.1:33023","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-18 16:59:43.719 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:59:43.720 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:43.720 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:59:43.720 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:48.286 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:59:48.292 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:59:48.292 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:48.292 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:59:48.513 +03:00 [DBG] Augmenting SignInContext
2019-07-18 16:59:48.517 +03:00 [DBG] Adding idp claim with value: local
2019-07-18 16:59:48.517 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-18 16:59:48.518 +03:00 [DBG] Adding auth_time claim with value: 1563458388
2019-07-18 16:59:48.535 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-18 16:59:48.539 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a4ae3a78-a69a-4449-b8ea-e58a3348b72f","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOBGVM5JNR8:0000000D","TimeStamp":"2019-07-18T13:59:48.0000000Z","ProcessId":6912,"LocalIpAddress":"127.0.0.1:33023","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-18 16:59:48.542 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:48.564 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 16:59:48.565 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 16:59:48.565 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 16:59:48.565 +03:00 [DBG] Start authorize callback request
2019-07-18 16:59:48.565 +03:00 [DBG] User in authorize request: a4ae3a78-a69a-4449-b8ea-e58a3348b72f
2019-07-18 16:59:48.565 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:59:48.566 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:48.566 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:59:48.567 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a4ae3a78-a69a-4449-b8ea-e58a3348b72f","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"84564011b13648a78dafb2c386746a90","UiLocales":null,"Nonce":"bdc4fa7fa25f4c9da6f442bfcab9edb2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"428c12a5bce61b03ef88e5e627271b86","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"84564011b13648a78dafb2c386746a90","nonce":"bdc4fa7fa25f4c9da6f442bfcab9edb2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:59:48.627 +03:00 [DBG] user_consent grant with value: spa|a4ae3a78-a69a-4449-b8ea-e58a3348b72f not found in store.
2019-07-18 16:59:48.628 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-18 16:59:48.628 +03:00 [INF] Showing consent: User has not yet consented
2019-07-18 16:59:48.708 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:59:48.708 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:48.709 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:59:48.709 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:51.567 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 16:59:51.602 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:59:51.602 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:51.602 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:59:51.605 +03:00 [INF] {"SubjectId":"a4ae3a78-a69a-4449-b8ea-e58a3348b72f","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOBGVM5JNR8:00000010","TimeStamp":"2019-07-18T13:59:51.0000000Z","ProcessId":6912,"LocalIpAddress":"127.0.0.1:33023","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-18 16:59:51.625 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:51.634 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 16:59:51.634 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 16:59:51.634 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 16:59:51.635 +03:00 [DBG] Start authorize callback request
2019-07-18 16:59:51.641 +03:00 [DBG] User in authorize request: a4ae3a78-a69a-4449-b8ea-e58a3348b72f
2019-07-18 16:59:51.642 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 16:59:51.642 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:51.642 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 16:59:51.642 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a4ae3a78-a69a-4449-b8ea-e58a3348b72f","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"84564011b13648a78dafb2c386746a90","UiLocales":null,"Nonce":"bdc4fa7fa25f4c9da6f442bfcab9edb2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"428c12a5bce61b03ef88e5e627271b86","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"84564011b13648a78dafb2c386746a90","nonce":"bdc4fa7fa25f4c9da6f442bfcab9edb2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 16:59:51.647 +03:00 [DBG] user_consent grant with value: spa|a4ae3a78-a69a-4449-b8ea-e58a3348b72f not found in store.
2019-07-18 16:59:51.648 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-18 16:59:51.657 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-18 16:59:51.660 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-18 16:59:51.666 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a4ae3a78-a69a-4449-b8ea-e58a3348b72f
2019-07-18 16:59:51.689 +03:00 [DBG] Creating Implicit Flow response.
2019-07-18 16:59:51.706 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-18 16:59:51.707 +03:00 [DBG] Getting claims for access token for subject: a4ae3a78-a69a-4449-b8ea-e58a3348b72f
2019-07-18 16:59:51.859 +03:00 [DBG] Getting claims for identity token for subject: a4ae3a78-a69a-4449-b8ea-e58a3348b72f and client: spa
2019-07-18 16:59:51.860 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-18 16:59:51.876 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a4ae3a78-a69a-4449-b8ea-e58a3348b72f","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****h9kw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8tTw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOBGVM5JNR8:00000011","TimeStamp":"2019-07-18T13:59:51.0000000Z","ProcessId":6912,"LocalIpAddress":"127.0.0.1:33023","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-18 16:59:51.879 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a4ae3a78-a69a-4449-b8ea-e58a3348b72f","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"84564011b13648a78dafb2c386746a90","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-18 16:59:51.906 +03:00 [DBG] Augmenting SignInContext
2019-07-18 16:59:51.907 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-18 16:59:53.272 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 16:59:53.273 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 16:59:53.273 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 16:59:53.273 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 16:59:53.274 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 16:59:53.274 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 16:59:53.274 +03:00 [DBG] Start discovery request
2019-07-18 16:59:53.385 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-18 16:59:53.386 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 16:59:53.386 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 16:59:53.386 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-18 16:59:53.388 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-18 16:59:53.389 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-18 16:59:53.398 +03:00 [DBG] Start key discovery request
2019-07-18 16:59:53.500 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-18 16:59:53.500 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 16:59:53.501 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 16:59:53.511 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-18 16:59:53.511 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 16:59:53.511 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 16:59:53.511 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-18 16:59:53.517 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-18 16:59:53.518 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-18 16:59:53.531 +03:00 [DBG] Start userinfo request
2019-07-18 16:59:53.538 +03:00 [DBG] Bearer token found in header
2019-07-18 16:59:53.642 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:53.648 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 16:59:53.657 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-18 16:59:53.660 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563458391,"exp":1563461991,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a4ae3a78-a69a-4449-b8ea-e58a3348b72f","auth_time":1563458388,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-18 16:59:53.682 +03:00 [DBG] Creating userinfo response
2019-07-18 16:59:53.691 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-18 16:59:53.696 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-18 16:59:53.703 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-18 16:59:53.703 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-18 16:59:53.714 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-18 16:59:53.716 +03:00 [DBG] End userinfo request
2019-07-18 16:59:53.746 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-18 16:59:53.747 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-18 16:59:53.747 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-18 16:59:53.752 +03:00 [DBG] Rendering check session result
2019-07-18 17:00:05.360 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 17:00:05.361 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 17:00:05.362 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 17:00:05.362 +03:00 [DBG] Start discovery request
2019-07-18 17:00:05.866 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-18 17:00:05.868 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-18 17:00:05.868 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-18 17:00:05.868 +03:00 [DBG] Start key discovery request
2019-07-18 17:03:15.166 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 17:03:15.166 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 17:03:15.166 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 17:03:15.169 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 17:03:15.169 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 17:03:15.170 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 17:03:15.170 +03:00 [DBG] Start discovery request
2019-07-18 17:03:15.212 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 17:03:15.213 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 17:03:15.213 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 17:03:15.214 +03:00 [DBG] Start authorize request
2019-07-18 17:03:15.214 +03:00 [DBG] No user present in authorize request
2019-07-18 17:03:15.214 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:03:15.214 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:03:15.215 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:03:15.215 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"360519abfde74ba98a0782d7678ce61a","UiLocales":null,"Nonce":"2490dc8ac9234e15bddae5ee62ba1dce","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"360519abfde74ba98a0782d7678ce61a","nonce":"2490dc8ac9234e15bddae5ee62ba1dce"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 17:03:15.216 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 17:03:15.239 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:03:15.240 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:03:15.240 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:03:15.240 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:03:18.122 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-18 17:03:24.097 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-18 17:03:24.161 +03:00 [WRN] User 7bb5cb79-f216-40e8-ba6f-676099a4317a validation failed: InvalidEmail.
2019-07-18 17:03:24.174 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: Email '' is invalid.
   at Host.Quickstart.Account.ExternalController.AutoProvisionUserAsync(String provider, String providerUserId, IEnumerable`1 claims) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 255
   at Host.Quickstart.Account.ExternalController.Callback() in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-18 17:03:51.249 +03:00 [WRN] '.AspNetCore.Correlation.Google.uZ9OWT3o3wFDtq2jDxNfOVvu-SzYTut_gM0kvvm_51w' cookie not found.
2019-07-18 17:03:51.249 +03:00 [INF] Error from RemoteAuthentication: Correlation failed..
2019-07-18 17:03:51.251 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: An error was encountered while handling the remote login. ---> System.Exception: Correlation failed.
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync() in C:\local\identity\server4\IdentityServer4\src\Hosting\FederatedSignOut\AuthenticationRequestHandlerWrapper.cs:line 38
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-18 17:05:44.357 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 17:05:44.358 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 17:05:44.358 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 17:05:44.358 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 17:05:44.360 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 17:05:44.360 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 17:05:44.360 +03:00 [DBG] Start discovery request
2019-07-18 17:05:44.407 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 17:05:44.410 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 17:05:44.410 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 17:05:44.410 +03:00 [DBG] Start authorize request
2019-07-18 17:05:44.410 +03:00 [DBG] No user present in authorize request
2019-07-18 17:05:44.410 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:05:44.410 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:05:44.411 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:05:44.411 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"be381bd217084e558f4b4c25896eb3d8","UiLocales":null,"Nonce":"b04bbdbda6e44760aac3d50297b1f1df","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"be381bd217084e558f4b4c25896eb3d8","nonce":"b04bbdbda6e44760aac3d50297b1f1df"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 17:05:44.411 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 17:05:44.426 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:05:44.427 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:05:44.427 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:05:44.427 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:05:50.441 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 17:05:50.449 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:05:50.450 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:05:50.450 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:05:50.492 +03:00 [DBG] Augmenting SignInContext
2019-07-18 17:05:50.496 +03:00 [DBG] Adding idp claim with value: local
2019-07-18 17:05:50.497 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-18 17:05:50.497 +03:00 [DBG] Adding auth_time claim with value: 1563458750
2019-07-18 17:05:50.498 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-18 17:05:50.499 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a4ae3a78-a69a-4449-b8ea-e58a3348b72f","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOBGVM5JNRA:00000004","TimeStamp":"2019-07-18T14:05:50.0000000Z","ProcessId":6912,"LocalIpAddress":"127.0.0.1:33023","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-18 17:05:50.499 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:05:50.529 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-18 17:05:50.530 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-18 17:05:50.530 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-18 17:05:50.530 +03:00 [DBG] Start authorize callback request
2019-07-18 17:05:50.530 +03:00 [DBG] User in authorize request: a4ae3a78-a69a-4449-b8ea-e58a3348b72f
2019-07-18 17:05:50.531 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:05:50.531 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:05:50.531 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:05:50.531 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a4ae3a78-a69a-4449-b8ea-e58a3348b72f","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"be381bd217084e558f4b4c25896eb3d8","UiLocales":null,"Nonce":"b04bbdbda6e44760aac3d50297b1f1df","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5084461e0a5e40c35542956cb8c159f7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"be381bd217084e558f4b4c25896eb3d8","nonce":"b04bbdbda6e44760aac3d50297b1f1df"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 17:05:50.549 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-18 17:05:50.549 +03:00 [DBG] Creating Implicit Flow response.
2019-07-18 17:05:50.549 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-18 17:05:50.550 +03:00 [DBG] Getting claims for access token for subject: a4ae3a78-a69a-4449-b8ea-e58a3348b72f
2019-07-18 17:05:50.563 +03:00 [DBG] Getting claims for identity token for subject: a4ae3a78-a69a-4449-b8ea-e58a3348b72f and client: spa
2019-07-18 17:05:50.563 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-18 17:05:50.572 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a4ae3a78-a69a-4449-b8ea-e58a3348b72f","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****73fQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****XllQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOBGVM5JNRA:00000005","TimeStamp":"2019-07-18T14:05:50.0000000Z","ProcessId":6912,"LocalIpAddress":"127.0.0.1:33023","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-18 17:05:50.573 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a4ae3a78-a69a-4449-b8ea-e58a3348b72f","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"be381bd217084e558f4b4c25896eb3d8","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-18 17:05:50.573 +03:00 [DBG] Augmenting SignInContext
2019-07-18 17:05:50.574 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-18 17:05:51.246 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 17:05:51.247 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 17:05:51.247 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 17:05:51.247 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 17:05:51.247 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 17:05:51.248 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 17:05:51.248 +03:00 [DBG] Start discovery request
2019-07-18 17:05:51.313 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-18 17:05:51.314 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 17:05:51.314 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 17:05:51.314 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-18 17:05:51.315 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-18 17:05:51.315 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-18 17:05:51.315 +03:00 [DBG] Start key discovery request
2019-07-18 17:05:51.375 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-18 17:05:51.376 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 17:05:51.377 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 17:05:51.398 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-18 17:05:51.399 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 17:05:51.399 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 17:05:51.400 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-18 17:05:51.400 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-18 17:05:51.401 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-18 17:05:51.401 +03:00 [DBG] Start userinfo request
2019-07-18 17:05:51.401 +03:00 [DBG] Bearer token found in header
2019-07-18 17:05:51.409 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:05:51.410 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:05:51.415 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-18 17:05:51.416 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563458750,"exp":1563462350,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a4ae3a78-a69a-4449-b8ea-e58a3348b72f","auth_time":1563458750,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-18 17:05:51.428 +03:00 [DBG] Creating userinfo response
2019-07-18 17:05:51.428 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-18 17:05:51.428 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-18 17:05:51.428 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-18 17:05:51.428 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-18 17:05:51.434 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-18 17:05:51.434 +03:00 [DBG] End userinfo request
2019-07-18 17:05:51.540 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-18 17:05:51.541 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-18 17:05:51.541 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-18 17:05:51.541 +03:00 [DBG] Rendering check session result
2019-07-18 17:06:04.115 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 17:06:04.116 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 17:06:04.116 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 17:06:04.117 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 17:06:04.118 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 17:06:04.118 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 17:06:04.118 +03:00 [DBG] Start discovery request
2019-07-18 17:06:04.165 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 17:06:04.165 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 17:06:04.165 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 17:06:04.166 +03:00 [DBG] Start authorize request
2019-07-18 17:06:04.166 +03:00 [DBG] No user present in authorize request
2019-07-18 17:06:04.166 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:06:04.166 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:06:04.166 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:06:04.167 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2147175bdbd346b88e2c0a80c62497b5","UiLocales":null,"Nonce":"f060c892e16d4304b482cbb2c03c06f7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2147175bdbd346b88e2c0a80c62497b5","nonce":"f060c892e16d4304b482cbb2c03c06f7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 17:06:04.167 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 17:06:04.180 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:06:04.180 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:06:04.181 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:06:04.181 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:06:06.106 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-18 17:06:08.627 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-18 17:06:08.644 +03:00 [WRN] User a4e1f0bd-a0a7-4e9a-9940-d27c5743b12b validation failed: InvalidEmail.
2019-07-18 17:06:08.647 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: Email '' is invalid.
   at Host.Quickstart.Account.ExternalController.AutoProvisionUserAsync(String provider, String providerUserId, IEnumerable`1 claims) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 255
   at Host.Quickstart.Account.ExternalController.Callback() in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-18 17:07:31.231 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 17:07:31.233 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 17:07:31.233 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 17:07:31.234 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 17:07:31.235 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 17:07:31.235 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 17:07:31.235 +03:00 [DBG] Start discovery request
2019-07-18 17:07:31.285 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 17:07:31.286 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 17:07:31.286 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 17:07:31.286 +03:00 [DBG] Start authorize request
2019-07-18 17:07:31.286 +03:00 [DBG] No user present in authorize request
2019-07-18 17:07:31.287 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:07:31.287 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:07:31.287 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:07:31.288 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"84953b2702934605826455f72b0d49aa","UiLocales":null,"Nonce":"bd8560a26a004880a428754622cd9055","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"84953b2702934605826455f72b0d49aa","nonce":"bd8560a26a004880a428754622cd9055"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 17:07:31.288 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 17:07:31.297 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:07:31.298 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:07:31.298 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:07:31.298 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:07:33.804 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-18 17:07:34.938 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-18 17:07:34.958 +03:00 [WRN] User 6e7a5aa0-abe8-4501-a23d-426d37af2cc8 validation failed: InvalidEmail.
2019-07-18 17:07:34.960 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: Email '' is invalid.
   at Host.Quickstart.Account.ExternalController.AutoProvisionUserAsync(String provider, String providerUserId, IEnumerable`1 claims) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 255
   at Host.Quickstart.Account.ExternalController.Callback() in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-18 17:08:31.391 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 17:08:31.480 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 17:08:31.487 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 17:08:31.489 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 17:08:31.489 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 17:08:31.494 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 17:08:31.495 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 17:08:32.508 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 17:08:32.515 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 17:08:32.516 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 17:08:32.516 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 17:08:32.516 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 17:08:32.516 +03:00 [DBG] Error Url: /home/error
2019-07-18 17:08:32.516 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 17:08:38.692 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-18 17:08:45.777 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-18 17:08:47.970 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-18 17:15:26.141 +03:00 [WRN] User ee777b65-d2f0-4a1a-ba59-a9b42105f38d validation failed: InvalidEmail.
2019-07-18 17:15:26.542 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: Email '' is invalid.
   at Host.Quickstart.Account.ExternalController.AutoProvisionUserAsync(String provider, String providerUserId, IEnumerable`1 claims) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 255
   at Host.Quickstart.Account.ExternalController.Callback() in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-18 17:16:13.398 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-18 17:16:19.677 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-18 17:18:08.564 +03:00 [WRN] User 8b33d9b2-b5af-4396-9d16-b260333287ca validation failed: InvalidEmail.
2019-07-18 17:18:08.830 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: Email '' is invalid.
   at Host.Quickstart.Account.ExternalController.AutoProvisionUserAsync(String provider, String providerUserId, IEnumerable`1 claims) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 255
   at Host.Quickstart.Account.ExternalController.Callback() in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-18 17:21:17.270 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 17:21:17.411 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-18 17:21:17.418 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-18 17:21:17.418 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-18 17:21:17.418 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-18 17:21:17.418 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-18 17:21:17.418 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-18 17:21:18.549 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 17:21:18.561 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 17:21:18.562 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 17:21:18.646 +03:00 [DBG] Login Url: /Account/Login
2019-07-18 17:21:18.646 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 17:21:18.646 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-18 17:21:18.646 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-18 17:21:18.646 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 17:21:18.647 +03:00 [DBG] Error Url: /home/error
2019-07-18 17:21:18.647 +03:00 [DBG] Error Id Parameter: errorId
2019-07-18 17:21:18.705 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 17:21:18.994 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 17:21:18.995 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 17:21:19.000 +03:00 [DBG] Start discovery request
2019-07-18 17:21:19.333 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-18 17:21:19.333 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-18 17:21:19.333 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-18 17:21:19.334 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 17:21:19.334 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 17:21:19.336 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 17:21:19.336 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 17:21:19.336 +03:00 [DBG] Start discovery request
2019-07-18 17:21:19.342 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 17:21:19.343 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 17:21:19.379 +03:00 [DBG] Start authorize request
2019-07-18 17:21:19.426 +03:00 [DBG] No user present in authorize request
2019-07-18 17:21:19.436 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:21:19.476 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-18 17:21:19.478 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-18 17:21:19.478 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-18 17:21:19.478 +03:00 [DBG] Start authorize request
2019-07-18 17:21:19.479 +03:00 [DBG] No user present in authorize request
2019-07-18 17:21:19.479 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:21:19.505 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:21:19.505 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:21:19.619 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:21:19.619 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:21:19.674 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"45831874cfb34a84bc1b1f197e8f3ac0","UiLocales":null,"Nonce":"7ecfc4dc3c2645a8b7af66612b3f346e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"45831874cfb34a84bc1b1f197e8f3ac0","nonce":"7ecfc4dc3c2645a8b7af66612b3f346e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 17:21:19.674 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"269ad7feba44407b931483630bdd9cb7","UiLocales":null,"Nonce":"50550338cda745adac613fd0d5e757e4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"269ad7feba44407b931483630bdd9cb7","nonce":"50550338cda745adac613fd0d5e757e4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-18 17:21:19.756 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 17:21:19.756 +03:00 [INF] Showing login: User is not authenticated
2019-07-18 17:21:19.979 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:21:19.980 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:21:19.980 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:21:19.985 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:21:22.516 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-18 17:21:24.683 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-18 17:21:58.336 +03:00 [WRN] User adacc92e-1c54-4d33-97b9-a79ca2ed879f validation failed: InvalidEmail.
2019-07-18 17:21:58.606 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: Email '' is invalid.
   at Host.Quickstart.Account.ExternalController.AutoProvisionUserAsync(String provider, String providerUserId, IEnumerable`1 claims) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 255
   at Host.Quickstart.Account.ExternalController.Callback() in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-18 17:25:04.496 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:25:04.496 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:25:04.497 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:25:04.497 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:25:09.623 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-18 17:25:14.168 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-18 17:27:23.126 +03:00 [WRN] User edaa2a99-90fe-4d00-a5cd-1dee07fbac41 validation failed: InvalidEmail.
2019-07-18 17:27:48.455 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: Email '' is invalid.
   at Host.Quickstart.Account.ExternalController.AutoProvisionUserAsync(String provider, String providerUserId, IEnumerable`1 claims) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 255
   at Host.Quickstart.Account.ExternalController.Callback() in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-18 17:27:50.331 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:27:50.332 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:27:50.333 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:27:50.333 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:28:00.187 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-18 17:28:00.344 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:28:00.345 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:28:00.345 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:28:00.407 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOBHCPGVE9A:00000006","TimeStamp":"2019-07-18T14:28:00.0000000Z","ProcessId":3016,"LocalIpAddress":"127.0.0.1:16320","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-18 17:28:00.413 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:28:00.413 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:28:00.415 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:28:00.416 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:28:03.971 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-18 17:28:05.449 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-18 17:28:16.821 +03:00 [WRN] User 0ab1d973-3309-43dc-bada-203996a464b1 validation failed: InvalidEmail.
2019-07-18 17:28:31.748 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: Email '' is invalid.
   at Host.Quickstart.Account.ExternalController.AutoProvisionUserAsync(String provider, String providerUserId, IEnumerable`1 claims) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 255
   at Host.Quickstart.Account.ExternalController.Callback() in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-18 17:28:36.509 +03:00 [DBG] Start authorize request protocol validation
2019-07-18 17:28:36.509 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:28:36.510 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-18 17:28:36.510 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-18 17:28:39.443 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-18 17:28:40.734 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 08:11:54.316 +03:00 [WRN] User f006dc86-8d43-4c9c-a6c4-f1af563383ce validation failed: InvalidEmail.
2019-07-19 08:11:54.524 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: Email '' is invalid.
   at Host.Quickstart.Account.ExternalController.AutoProvisionUserAsync(String provider, String providerUserId, IEnumerable`1 claims) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 255
   at Host.Quickstart.Account.ExternalController.Callback() in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\ExternalController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-19 08:12:49.021 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 08:12:49.133 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-19 08:12:49.141 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-19 08:12:49.142 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-19 08:12:49.142 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-19 08:12:49.143 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-19 08:12:49.143 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-19 08:12:50.112 +03:00 [DBG] Login Url: /Account/Login
2019-07-19 08:12:50.117 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 08:12:50.117 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-19 08:12:50.118 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-19 08:12:50.119 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 08:12:50.120 +03:00 [DBG] Error Url: /home/error
2019-07-19 08:12:50.120 +03:00 [DBG] Error Id Parameter: errorId
2019-07-19 08:12:57.782 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 08:12:57.792 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 08:12:57.792 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 08:12:57.797 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 08:12:58.096 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 08:12:58.097 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 08:12:58.105 +03:00 [DBG] Start discovery request
2019-07-19 08:12:58.243 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 08:12:58.251 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 08:12:58.252 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 08:12:58.260 +03:00 [DBG] Start authorize request
2019-07-19 08:12:58.279 +03:00 [DBG] No user present in authorize request
2019-07-19 08:12:58.287 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 08:12:58.330 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 08:12:58.411 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 08:12:58.440 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f5c2a98ba3ca42f89b2c8028f3bc2a87","UiLocales":null,"Nonce":"3e9f6dfd0035430b8c969270489ba8d6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f5c2a98ba3ca42f89b2c8028f3bc2a87","nonce":"3e9f6dfd0035430b8c969270489ba8d6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 08:12:58.484 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 08:12:58.671 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 08:12:58.672 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 08:12:58.672 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 08:12:58.684 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 08:13:00.853 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-19 08:13:02.821 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 08:13:02.822 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 08:13:02.823 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 08:13:02.823 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 08:13:17.883 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-19 08:13:20.551 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 08:13:38.711 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"eec553c0-805c-4577-ad27-df70303dfad4","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC0UV7BRVQ:00000003","TimeStamp":"2019-07-19T05:13:38.0000000Z","ProcessId":12500,"LocalIpAddress":"127.0.0.1:10020","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 08:13:38.791 +03:00 [DBG] Augmenting SignInContext
2019-07-19 08:13:38.798 +03:00 [DBG] Adding amr claim with value: external
2019-07-19 08:13:38.812 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 08:13:38.838 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-19 08:13:38.907 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 08:13:38.909 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 08:13:38.909 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 08:13:38.920 +03:00 [DBG] Start authorize callback request
2019-07-19 08:13:38.927 +03:00 [DBG] User in authorize request: eec553c0-805c-4577-ad27-df70303dfad4
2019-07-19 08:13:38.928 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 08:13:38.928 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 08:13:38.928 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 08:13:38.929 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"eec553c0-805c-4577-ad27-df70303dfad4","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f5c2a98ba3ca42f89b2c8028f3bc2a87","UiLocales":null,"Nonce":"3e9f6dfd0035430b8c969270489ba8d6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"82779f5c05ce6c54686caee25c4c9489","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f5c2a98ba3ca42f89b2c8028f3bc2a87","nonce":"3e9f6dfd0035430b8c969270489ba8d6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 08:13:39.073 +03:00 [DBG] user_consent grant with value: spa|eec553c0-805c-4577-ad27-df70303dfad4 not found in store.
2019-07-19 08:13:39.074 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 08:13:39.074 +03:00 [INF] Showing consent: User has not yet consented
2019-07-19 08:13:39.254 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 08:13:39.254 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 08:13:39.254 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 08:13:39.255 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:21:09.602 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 09:21:09.690 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-19 09:21:09.710 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-19 09:21:09.710 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-19 09:21:09.710 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-19 09:21:09.710 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-19 09:21:09.710 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-19 09:21:11.013 +03:00 [DBG] Login Url: /Account/Login
2019-07-19 09:21:11.019 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 09:21:11.019 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-19 09:21:11.019 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-19 09:21:11.019 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 09:21:11.019 +03:00 [DBG] Error Url: /home/error
2019-07-19 09:21:11.019 +03:00 [DBG] Error Id Parameter: errorId
2019-07-19 09:21:17.424 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 09:21:17.584 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-19 09:21:17.587 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-19 09:21:17.593 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-19 09:21:17.634 +03:00 [INF] {"SubjectId":"eec553c0-805c-4577-ad27-df70303dfad4","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOC255CJL7E:00000002","TimeStamp":"2019-07-19T06:21:17.0000000Z","ProcessId":14184,"LocalIpAddress":"127.0.0.1:32115","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-19 09:21:21.219 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-19 09:21:25.458 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-19 09:21:30.566 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 09:30:57.907 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 09:30:58.010 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-19 09:30:58.018 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-19 09:30:58.018 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-19 09:30:58.018 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-19 09:30:58.019 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-19 09:30:58.019 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-19 09:30:58.999 +03:00 [DBG] Login Url: /Account/Login
2019-07-19 09:30:59.004 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 09:30:59.004 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-19 09:30:59.004 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-19 09:30:59.004 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 09:30:59.005 +03:00 [DBG] Error Url: /home/error
2019-07-19 09:30:59.005 +03:00 [DBG] Error Id Parameter: errorId
2019-07-19 09:31:27.643 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 09:31:27.648 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:31:27.648 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:31:27.690 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 09:31:27.879 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 09:31:27.880 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 09:31:27.887 +03:00 [DBG] Start discovery request
2019-07-19 09:31:28.008 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 09:31:28.022 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 09:31:28.022 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 09:31:28.031 +03:00 [DBG] Start authorize request
2019-07-19 09:31:28.046 +03:00 [DBG] No user present in authorize request
2019-07-19 09:31:28.063 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:31:28.112 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:31:28.187 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:31:28.218 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"96fc16dccc614237abfac201d3b62fa5","UiLocales":null,"Nonce":"3a4d2006074640e6af9ddca920316f45","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"96fc16dccc614237abfac201d3b62fa5","nonce":"3a4d2006074640e6af9ddca920316f45"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 09:31:28.270 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 09:31:28.465 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:31:28.465 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:31:28.466 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:31:28.471 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:31:53.397 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 09:31:53.401 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:31:53.401 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:31:53.402 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 09:31:53.403 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 09:31:53.403 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 09:31:53.403 +03:00 [DBG] Start discovery request
2019-07-19 09:31:53.496 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 09:31:53.498 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 09:31:53.498 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 09:31:53.498 +03:00 [DBG] Start authorize request
2019-07-19 09:31:53.498 +03:00 [DBG] No user present in authorize request
2019-07-19 09:31:53.498 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:31:53.498 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:31:53.499 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:31:53.499 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8bc5dbc2b33d4ae5abbbae87a5237197","UiLocales":null,"Nonce":"448adbe510eb47ed98cb97f69320b42e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8bc5dbc2b33d4ae5abbbae87a5237197","nonce":"448adbe510eb47ed98cb97f69320b42e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 09:31:53.500 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 09:31:53.644 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:31:53.645 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:31:53.645 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:31:53.645 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:32:01.086 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 09:32:01.298 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:32:01.298 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:32:01.299 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:32:02.271 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOC2AKLEKM8:00000005","TimeStamp":"2019-07-19T06:32:02.0000000Z","ProcessId":15468,"LocalIpAddress":"127.0.0.1:7095","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-19 09:32:02.275 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:32:02.275 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:32:02.278 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:32:02.279 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:32:05.994 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 09:32:06.051 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:32:06.051 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:32:06.051 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:32:27.703 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 09:32:32.455 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 09:32:32.457 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 09:32:32.457 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 09:32:32.469 +03:00 [DBG] Start authorize callback request
2019-07-19 09:32:32.477 +03:00 [DBG] No user present in authorize request
2019-07-19 09:32:32.477 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:32:32.477 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:32:32.478 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:32:32.478 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8bc5dbc2b33d4ae5abbbae87a5237197","UiLocales":null,"Nonce":"448adbe510eb47ed98cb97f69320b42e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8bc5dbc2b33d4ae5abbbae87a5237197","nonce":"448adbe510eb47ed98cb97f69320b42e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 09:32:32.478 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 09:32:32.587 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:32:32.588 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:32:32.588 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:32:32.588 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:04.714 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 09:33:04.783 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:33:04.784 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:04.784 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:33:05.043 +03:00 [DBG] Augmenting SignInContext
2019-07-19 09:33:05.050 +03:00 [DBG] Adding idp claim with value: local
2019-07-19 09:33:05.050 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-19 09:33:05.051 +03:00 [DBG] Adding auth_time claim with value: 1563517985
2019-07-19 09:33:05.074 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 09:33:05.078 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC2AKLEKM8:00000009","TimeStamp":"2019-07-19T06:33:05.0000000Z","ProcessId":15468,"LocalIpAddress":"127.0.0.1:7095","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 09:33:05.083 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:05.146 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 09:33:05.147 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 09:33:05.147 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 09:33:05.148 +03:00 [DBG] Start authorize callback request
2019-07-19 09:33:05.148 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 09:33:05.148 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:33:05.148 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:05.149 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:33:05.149 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8bc5dbc2b33d4ae5abbbae87a5237197","UiLocales":null,"Nonce":"448adbe510eb47ed98cb97f69320b42e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"39ab4bc8ed6add1b21b964a29fb2151d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8bc5dbc2b33d4ae5abbbae87a5237197","nonce":"448adbe510eb47ed98cb97f69320b42e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 09:33:05.227 +03:00 [DBG] user_consent grant with value: spa|d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf not found in store.
2019-07-19 09:33:05.229 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 09:33:05.229 +03:00 [INF] Showing consent: User has not yet consented
2019-07-19 09:33:05.371 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:33:05.372 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:05.372 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:33:05.372 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:07.341 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 09:33:07.452 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:33:07.453 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:07.454 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:33:07.457 +03:00 [INF] {"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOC2AKLEKM7:0000000A","TimeStamp":"2019-07-19T06:33:07.0000000Z","ProcessId":15468,"LocalIpAddress":"127.0.0.1:7095","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-19 09:33:07.489 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:07.497 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 09:33:07.497 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 09:33:07.497 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 09:33:07.497 +03:00 [DBG] Start authorize callback request
2019-07-19 09:33:07.507 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 09:33:07.508 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:33:07.508 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:07.508 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:33:07.508 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8bc5dbc2b33d4ae5abbbae87a5237197","UiLocales":null,"Nonce":"448adbe510eb47ed98cb97f69320b42e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"39ab4bc8ed6add1b21b964a29fb2151d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8bc5dbc2b33d4ae5abbbae87a5237197","nonce":"448adbe510eb47ed98cb97f69320b42e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 09:33:07.513 +03:00 [DBG] user_consent grant with value: spa|d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf not found in store.
2019-07-19 09:33:07.513 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 09:33:07.526 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-19 09:33:07.530 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-19 09:33:07.540 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 09:33:07.582 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 09:33:07.608 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 09:33:07.609 +03:00 [DBG] Getting claims for access token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 09:33:07.924 +03:00 [DBG] Getting claims for identity token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf and client: spa
2019-07-19 09:33:07.924 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 09:33:07.945 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****rNiA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gjtA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC2AKLEKM8:0000000B","TimeStamp":"2019-07-19T06:33:07.0000000Z","ProcessId":15468,"LocalIpAddress":"127.0.0.1:7095","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 09:33:07.949 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"8bc5dbc2b33d4ae5abbbae87a5237197","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 09:33:07.983 +03:00 [DBG] Augmenting SignInContext
2019-07-19 09:33:07.985 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 09:33:09.381 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 09:33:09.381 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:33:09.381 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:33:09.382 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 09:33:09.383 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 09:33:09.383 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 09:33:09.383 +03:00 [DBG] Start discovery request
2019-07-19 09:33:09.491 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 09:33:09.491 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:33:09.491 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:33:09.492 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 09:33:09.496 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 09:33:09.497 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 09:33:09.507 +03:00 [DBG] Start key discovery request
2019-07-19 09:33:09.585 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 09:33:09.586 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:33:09.586 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:33:09.598 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 09:33:09.598 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:33:09.598 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:33:09.599 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 09:33:09.606 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 09:33:09.606 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 09:33:09.623 +03:00 [DBG] Start userinfo request
2019-07-19 09:33:09.635 +03:00 [DBG] Bearer token found in header
2019-07-19 09:33:09.784 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:09.798 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:09.816 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 09:33:09.829 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563517987,"exp":1563521587,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","auth_time":1563517985,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-19 09:33:09.848 +03:00 [DBG] Creating userinfo response
2019-07-19 09:33:09.860 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 09:33:09.864 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 09:33:09.868 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 09:33:09.869 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 09:33:09.884 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 09:33:09.886 +03:00 [DBG] End userinfo request
2019-07-19 09:33:09.920 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 09:33:09.922 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 09:33:09.922 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 09:33:09.924 +03:00 [DBG] Rendering check session result
2019-07-19 09:33:24.165 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 09:33:24.165 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:33:24.165 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:33:24.166 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 09:33:24.167 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 09:33:24.167 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 09:33:24.167 +03:00 [DBG] Start discovery request
2019-07-19 09:33:24.239 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 09:33:24.239 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 09:33:24.239 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 09:33:24.240 +03:00 [DBG] Start authorize request
2019-07-19 09:33:24.240 +03:00 [DBG] No user present in authorize request
2019-07-19 09:33:24.240 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:33:24.240 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:24.240 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:33:24.241 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a9e67e0b1d01442a80fbe0f01cc34f95","UiLocales":null,"Nonce":"ed2eee01a37d4ad29b1e8b1a4549638a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a9e67e0b1d01442a80fbe0f01cc34f95","nonce":"ed2eee01a37d4ad29b1e8b1a4549638a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 09:33:24.241 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 09:33:24.530 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:33:24.531 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:24.531 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:33:24.531 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:30.046 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-19 09:33:35.260 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 09:33:42.747 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC2AKLEKM7:00000010","TimeStamp":"2019-07-19T06:33:42.0000000Z","ProcessId":15468,"LocalIpAddress":"127.0.0.1:7095","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 09:33:42.772 +03:00 [DBG] Augmenting SignInContext
2019-07-19 09:33:42.772 +03:00 [DBG] Adding amr claim with value: external
2019-07-19 09:33:42.773 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 09:33:42.799 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-19 09:33:42.814 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 09:33:42.814 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 09:33:42.815 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 09:33:42.815 +03:00 [DBG] Start authorize callback request
2019-07-19 09:33:42.815 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 09:33:42.816 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:33:42.816 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:42.816 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:33:42.816 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a9e67e0b1d01442a80fbe0f01cc34f95","UiLocales":null,"Nonce":"ed2eee01a37d4ad29b1e8b1a4549638a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3153d761b3d0d3e55a689b340ec67167","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a9e67e0b1d01442a80fbe0f01cc34f95","nonce":"ed2eee01a37d4ad29b1e8b1a4549638a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 09:33:42.835 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-19 09:33:42.835 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 09:33:42.835 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 09:33:42.835 +03:00 [DBG] Getting claims for access token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 09:33:42.849 +03:00 [DBG] Getting claims for identity token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf and client: spa
2019-07-19 09:33:42.849 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 09:33:42.859 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****g_bw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****fwlA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC2AKLEKM8:00000011","TimeStamp":"2019-07-19T06:33:42.0000000Z","ProcessId":15468,"LocalIpAddress":"127.0.0.1:7095","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 09:33:42.860 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"a9e67e0b1d01442a80fbe0f01cc34f95","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 09:33:42.861 +03:00 [DBG] Augmenting SignInContext
2019-07-19 09:33:42.862 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 09:33:44.790 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 09:33:44.793 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:33:44.793 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:33:44.794 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 09:33:44.794 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 09:33:44.794 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 09:33:44.795 +03:00 [DBG] Start discovery request
2019-07-19 09:33:44.921 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 09:33:44.921 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:33:44.921 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:33:44.922 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 09:33:44.923 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 09:33:44.923 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 09:33:44.923 +03:00 [DBG] Start key discovery request
2019-07-19 09:33:45.054 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 09:33:45.054 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:33:45.055 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:33:45.075 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 09:33:45.075 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:33:45.076 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:33:45.079 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 09:33:45.080 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 09:33:45.080 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 09:33:45.080 +03:00 [DBG] Start userinfo request
2019-07-19 09:33:45.080 +03:00 [DBG] Bearer token found in header
2019-07-19 09:33:45.087 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:45.093 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:33:45.098 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 09:33:45.108 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563518022,"exp":1563521622,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","auth_time":1563518022,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-19 09:33:45.110 +03:00 [DBG] Creating userinfo response
2019-07-19 09:33:45.110 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 09:33:45.111 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 09:33:45.114 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 09:33:45.114 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 09:33:45.122 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 09:33:45.122 +03:00 [DBG] End userinfo request
2019-07-19 09:33:45.228 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 09:33:45.228 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 09:33:45.228 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 09:33:45.229 +03:00 [DBG] Rendering check session result
2019-07-19 09:34:29.298 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 09:34:29.298 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:34:29.298 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:34:29.299 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 09:34:29.300 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 09:34:29.301 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 09:34:29.301 +03:00 [DBG] Start discovery request
2019-07-19 09:34:29.373 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 09:34:29.373 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 09:34:29.374 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 09:34:29.374 +03:00 [DBG] Start authorize request
2019-07-19 09:34:29.374 +03:00 [DBG] No user present in authorize request
2019-07-19 09:34:29.374 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:34:29.374 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:34:29.375 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:34:29.375 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"30f4d91c9ed94596bf4e164040b10245","UiLocales":null,"Nonce":"f2ed4788df9943c08153a2fe452de71d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"30f4d91c9ed94596bf4e164040b10245","nonce":"f2ed4788df9943c08153a2fe452de71d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 09:34:29.375 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 09:34:29.456 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:34:29.456 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:34:29.457 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:34:29.457 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:34:31.528 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-19 09:34:33.563 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 09:34:39.739 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC2AKLEKM7:00000016","TimeStamp":"2019-07-19T06:34:39.0000000Z","ProcessId":15468,"LocalIpAddress":"127.0.0.1:7095","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 09:34:39.740 +03:00 [DBG] Augmenting SignInContext
2019-07-19 09:34:39.740 +03:00 [DBG] Adding amr claim with value: external
2019-07-19 09:34:39.741 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 09:34:39.741 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-19 09:34:39.772 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 09:34:39.773 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 09:34:39.773 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 09:34:39.773 +03:00 [DBG] Start authorize callback request
2019-07-19 09:34:39.778 +03:00 [DBG] User in authorize request: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 09:34:39.778 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:34:39.778 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:34:39.778 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:34:39.779 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"30f4d91c9ed94596bf4e164040b10245","UiLocales":null,"Nonce":"f2ed4788df9943c08153a2fe452de71d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"579e949c1b4a1d99e2b8cd4caa241d16","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"30f4d91c9ed94596bf4e164040b10245","nonce":"f2ed4788df9943c08153a2fe452de71d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 09:34:39.785 +03:00 [DBG] user_consent grant with value: spa|70077fc0-1c48-4ef4-a9ad-540b536fdd52 not found in store.
2019-07-19 09:34:39.785 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 09:34:39.785 +03:00 [INF] Showing consent: User has not yet consented
2019-07-19 09:34:39.931 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:34:39.931 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:34:39.931 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:34:39.932 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:34:43.871 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 09:34:43.930 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:34:43.930 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:34:43.931 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:34:43.931 +03:00 [INF] {"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOC2AKLEKM8:00000018","TimeStamp":"2019-07-19T06:34:43.0000000Z","ProcessId":15468,"LocalIpAddress":"127.0.0.1:7095","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-19 09:34:43.932 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:34:43.946 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 09:34:43.946 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 09:34:43.946 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 09:34:43.946 +03:00 [DBG] Start authorize callback request
2019-07-19 09:34:43.947 +03:00 [DBG] User in authorize request: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 09:34:43.948 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 09:34:43.948 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:34:43.948 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 09:34:43.949 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"30f4d91c9ed94596bf4e164040b10245","UiLocales":null,"Nonce":"f2ed4788df9943c08153a2fe452de71d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"579e949c1b4a1d99e2b8cd4caa241d16","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"30f4d91c9ed94596bf4e164040b10245","nonce":"f2ed4788df9943c08153a2fe452de71d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 09:34:43.955 +03:00 [DBG] user_consent grant with value: spa|70077fc0-1c48-4ef4-a9ad-540b536fdd52 not found in store.
2019-07-19 09:34:43.955 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 09:34:43.955 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-19 09:34:43.955 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-19 09:34:43.956 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 09:34:43.963 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 09:34:43.963 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 09:34:43.964 +03:00 [DBG] Getting claims for access token for subject: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 09:34:43.977 +03:00 [DBG] Getting claims for identity token for subject: 70077fc0-1c48-4ef4-a9ad-540b536fdd52 and client: spa
2019-07-19 09:34:43.977 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 09:34:43.984 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****M-dQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****0w7A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC2AKLEKM7:00000018","TimeStamp":"2019-07-19T06:34:43.0000000Z","ProcessId":15468,"LocalIpAddress":"127.0.0.1:7095","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 09:34:43.984 +03:00 [INF] Authorize endpoint response
{"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"30f4d91c9ed94596bf4e164040b10245","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 09:34:43.984 +03:00 [DBG] Augmenting SignInContext
2019-07-19 09:34:43.985 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 09:34:45.535 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 09:34:45.561 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:34:45.561 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:34:45.562 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 09:34:45.562 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 09:34:45.562 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 09:34:45.563 +03:00 [DBG] Start discovery request
2019-07-19 09:34:45.617 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 09:34:45.618 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:34:45.618 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:34:45.618 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 09:34:45.619 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 09:34:45.619 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 09:34:45.619 +03:00 [DBG] Start key discovery request
2019-07-19 09:34:45.703 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 09:34:45.703 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:34:45.703 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:34:45.729 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 09:34:45.731 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 09:34:45.732 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 09:34:45.732 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 09:34:45.732 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 09:34:45.733 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 09:34:45.733 +03:00 [DBG] Start userinfo request
2019-07-19 09:34:45.733 +03:00 [DBG] Bearer token found in header
2019-07-19 09:34:45.738 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:34:45.738 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 09:34:45.748 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 09:34:45.748 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563518083,"exp":1563521683,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","auth_time":1563518079,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-19 09:34:45.748 +03:00 [DBG] Creating userinfo response
2019-07-19 09:34:45.748 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 09:34:45.749 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 09:34:45.749 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 09:34:45.749 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 09:34:45.755 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 09:34:45.755 +03:00 [DBG] End userinfo request
2019-07-19 09:34:45.781 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 09:34:45.782 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 09:34:45.782 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 09:34:45.782 +03:00 [DBG] Rendering check session result
2019-07-19 10:48:32.035 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 10:48:32.101 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-19 10:48:32.105 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-19 10:48:32.105 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-19 10:48:32.105 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-19 10:48:32.105 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-19 10:48:32.105 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-19 10:48:32.595 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:48:32.605 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:48:32.605 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:48:32.646 +03:00 [DBG] Login Url: /Account/Login
2019-07-19 10:48:32.646 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 10:48:32.646 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-19 10:48:32.646 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-19 10:48:32.646 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 10:48:32.646 +03:00 [DBG] Error Url: /home/error
2019-07-19 10:48:32.646 +03:00 [DBG] Error Id Parameter: errorId
2019-07-19 10:48:32.674 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:48:32.769 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:48:32.769 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:48:32.775 +03:00 [DBG] Start discovery request
2019-07-19 10:48:32.876 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 10:48:32.899 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 10:48:32.899 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 10:48:32.905 +03:00 [DBG] Start authorize request
2019-07-19 10:48:32.917 +03:00 [DBG] No user present in authorize request
2019-07-19 10:48:32.925 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:48:32.957 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:33.040 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:48:33.077 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a9c32abb7daf40ab9f810484a6535e2b","UiLocales":null,"Nonce":"f77f7676fc6a42148861f7f2994ac44c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a9c32abb7daf40ab9f810484a6535e2b","nonce":"f77f7676fc6a42148861f7f2994ac44c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:48:33.114 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 10:48:33.375 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:48:33.376 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:33.376 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:48:33.381 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:42.372 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 10:48:42.480 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:48:42.480 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:42.483 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:48:43.300 +03:00 [DBG] Augmenting SignInContext
2019-07-19 10:48:43.305 +03:00 [DBG] Adding idp claim with value: local
2019-07-19 10:48:43.305 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-19 10:48:43.307 +03:00 [DBG] Adding auth_time claim with value: 1563522523
2019-07-19 10:48:43.323 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 10:48:43.335 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC3LVJV8HO:00000004","TimeStamp":"2019-07-19T07:48:43.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 10:48:43.338 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:43.358 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 10:48:43.360 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 10:48:43.360 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 10:48:43.370 +03:00 [DBG] Start authorize callback request
2019-07-19 10:48:43.377 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 10:48:43.377 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:48:43.377 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:43.378 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:48:43.378 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a9c32abb7daf40ab9f810484a6535e2b","UiLocales":null,"Nonce":"f77f7676fc6a42148861f7f2994ac44c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6aa00541c17d0782c351182b492723b1","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a9c32abb7daf40ab9f810484a6535e2b","nonce":"f77f7676fc6a42148861f7f2994ac44c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:48:43.437 +03:00 [DBG] user_consent grant with value: spa|d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf not found in store.
2019-07-19 10:48:43.438 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 10:48:43.438 +03:00 [INF] Showing consent: User has not yet consented
2019-07-19 10:48:43.484 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:48:43.484 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:43.485 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:48:43.485 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:48.811 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 10:48:48.839 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:48:48.839 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:48.840 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:48:48.844 +03:00 [INF] {"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOC3LVJV8HO:00000007","TimeStamp":"2019-07-19T07:48:48.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-19 10:48:48.865 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:48.873 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 10:48:48.875 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 10:48:48.875 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 10:48:48.875 +03:00 [DBG] Start authorize callback request
2019-07-19 10:48:48.882 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 10:48:48.882 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:48:48.882 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:48.883 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:48:48.883 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a9c32abb7daf40ab9f810484a6535e2b","UiLocales":null,"Nonce":"f77f7676fc6a42148861f7f2994ac44c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6aa00541c17d0782c351182b492723b1","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a9c32abb7daf40ab9f810484a6535e2b","nonce":"f77f7676fc6a42148861f7f2994ac44c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:48:48.890 +03:00 [DBG] user_consent grant with value: spa|d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf not found in store.
2019-07-19 10:48:48.890 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 10:48:48.905 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-19 10:48:48.909 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-19 10:48:48.917 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 10:48:48.950 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 10:48:48.972 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 10:48:48.974 +03:00 [DBG] Getting claims for access token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 10:48:49.122 +03:00 [DBG] Getting claims for identity token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf and client: spa
2019-07-19 10:48:49.122 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 10:48:49.138 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****GzcQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gTdQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC3LVJV8HO:00000008","TimeStamp":"2019-07-19T07:48:49.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 10:48:49.141 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"a9c32abb7daf40ab9f810484a6535e2b","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 10:48:49.176 +03:00 [DBG] Augmenting SignInContext
2019-07-19 10:48:49.178 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 10:48:50.425 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:48:50.426 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:48:50.426 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:48:50.426 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:48:50.427 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:48:50.428 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:48:50.428 +03:00 [DBG] Start discovery request
2019-07-19 10:48:50.507 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 10:48:50.507 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:48:50.507 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:48:50.508 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 10:48:50.529 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 10:48:50.530 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 10:48:50.537 +03:00 [DBG] Start key discovery request
2019-07-19 10:48:50.606 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 10:48:50.606 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:48:50.606 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:48:50.616 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 10:48:50.617 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:48:50.617 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:48:50.618 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 10:48:50.622 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 10:48:50.622 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 10:48:50.636 +03:00 [DBG] Start userinfo request
2019-07-19 10:48:50.641 +03:00 [DBG] Bearer token found in header
2019-07-19 10:48:50.727 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:50.733 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:48:50.738 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 10:48:50.740 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563522529,"exp":1563526129,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","auth_time":1563522523,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-19 10:48:50.750 +03:00 [DBG] Creating userinfo response
2019-07-19 10:48:50.756 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:48:50.760 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:48:50.765 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 10:48:50.766 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:48:50.771 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 10:48:50.772 +03:00 [DBG] End userinfo request
2019-07-19 10:48:50.801 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 10:48:50.802 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 10:48:50.802 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 10:48:50.808 +03:00 [DBG] Rendering check session result
2019-07-19 10:50:05.662 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:50:05.662 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:50:05.662 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:50:05.663 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:50:05.663 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:50:05.663 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:50:05.663 +03:00 [DBG] Start discovery request
2019-07-19 10:50:05.701 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 10:50:05.702 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 10:50:05.702 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 10:50:05.702 +03:00 [DBG] Start authorize request
2019-07-19 10:50:05.703 +03:00 [DBG] No user present in authorize request
2019-07-19 10:50:05.703 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:50:05.703 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:50:05.704 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:50:05.704 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d979a5b63c0149a4ac4141596a55a490","UiLocales":null,"Nonce":"7610cf0a4f974a12a15e808a5bee5904","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d979a5b63c0149a4ac4141596a55a490","nonce":"7610cf0a4f974a12a15e808a5bee5904"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:50:05.704 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 10:50:05.738 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:50:05.738 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:50:05.739 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:50:05.739 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:50:10.068 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 10:50:10.082 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:50:10.084 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:50:10.084 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:50:10.151 +03:00 [DBG] Augmenting SignInContext
2019-07-19 10:50:10.160 +03:00 [DBG] Adding idp claim with value: local
2019-07-19 10:50:10.161 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-19 10:50:10.161 +03:00 [DBG] Adding auth_time claim with value: 1563522610
2019-07-19 10:50:10.164 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 10:50:10.165 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC3LVJV8HP:00000004","TimeStamp":"2019-07-19T07:50:10.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 10:50:10.165 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:50:10.199 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 10:50:10.199 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 10:50:10.199 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 10:50:10.199 +03:00 [DBG] Start authorize callback request
2019-07-19 10:50:10.200 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 10:50:10.200 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:50:10.200 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:50:10.200 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:50:10.201 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d979a5b63c0149a4ac4141596a55a490","UiLocales":null,"Nonce":"7610cf0a4f974a12a15e808a5bee5904","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"277645acb643e42294c417cf8401458f","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d979a5b63c0149a4ac4141596a55a490","nonce":"7610cf0a4f974a12a15e808a5bee5904"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:50:10.229 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-19 10:50:10.229 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 10:50:10.229 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 10:50:10.229 +03:00 [DBG] Getting claims for access token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 10:50:10.249 +03:00 [DBG] Getting claims for identity token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf and client: spa
2019-07-19 10:50:10.249 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 10:50:10.259 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****s5oA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****-wyg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC3LVJV8HP:00000005","TimeStamp":"2019-07-19T07:50:10.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 10:50:10.259 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"d979a5b63c0149a4ac4141596a55a490","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 10:50:10.259 +03:00 [DBG] Augmenting SignInContext
2019-07-19 10:50:10.260 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 10:50:11.545 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:50:11.545 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:50:11.545 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:50:11.546 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:50:11.547 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:50:11.547 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:50:11.547 +03:00 [DBG] Start discovery request
2019-07-19 10:50:11.631 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 10:50:11.631 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:50:11.631 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:50:11.631 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 10:50:11.632 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 10:50:11.632 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 10:50:11.632 +03:00 [DBG] Start key discovery request
2019-07-19 10:50:11.736 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 10:50:11.737 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:50:11.737 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:50:11.752 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 10:50:11.752 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:50:11.752 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:50:11.753 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 10:50:11.753 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 10:50:11.753 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 10:50:11.754 +03:00 [DBG] Start userinfo request
2019-07-19 10:50:11.754 +03:00 [DBG] Bearer token found in header
2019-07-19 10:50:11.759 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:50:11.759 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:50:11.764 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 10:50:11.764 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563522610,"exp":1563526210,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","auth_time":1563522610,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-19 10:50:11.764 +03:00 [DBG] Creating userinfo response
2019-07-19 10:50:11.764 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:50:11.764 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:50:11.765 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 10:50:11.765 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:50:11.770 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 10:50:11.770 +03:00 [DBG] End userinfo request
2019-07-19 10:50:11.853 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 10:50:11.853 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 10:50:11.854 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 10:50:11.854 +03:00 [DBG] Rendering check session result
2019-07-19 10:50:22.066 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:50:22.068 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:50:22.068 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:50:22.068 +03:00 [DBG] Start discovery request
2019-07-19 10:50:22.378 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 10:50:22.379 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 10:50:22.379 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 10:50:22.379 +03:00 [DBG] Start key discovery request
2019-07-19 10:51:06.793 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:51:06.793 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:51:06.793 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:51:06.794 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:51:06.794 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:51:06.794 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:51:06.795 +03:00 [DBG] Start discovery request
2019-07-19 10:51:06.835 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 10:51:06.836 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 10:51:06.837 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 10:51:06.837 +03:00 [DBG] Start authorize request
2019-07-19 10:51:06.837 +03:00 [DBG] No user present in authorize request
2019-07-19 10:51:06.837 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:51:06.837 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:51:06.838 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:51:06.838 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6f4357102cc648858bf2ac90bef4438d","UiLocales":null,"Nonce":"e275e39dc2bf4b8a92e4c96a73bf0888","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6f4357102cc648858bf2ac90bef4438d","nonce":"e275e39dc2bf4b8a92e4c96a73bf0888"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:51:06.838 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 10:51:06.879 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:51:06.879 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:51:06.880 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:51:06.880 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:51:08.849 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-19 10:51:13.781 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 10:51:13.844 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC3LVJV8HP:00000012","TimeStamp":"2019-07-19T07:51:13.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 10:51:13.861 +03:00 [DBG] Augmenting SignInContext
2019-07-19 10:51:13.861 +03:00 [DBG] Adding amr claim with value: external
2019-07-19 10:51:13.861 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 10:51:13.873 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-19 10:51:13.885 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 10:51:13.885 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 10:51:13.885 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 10:51:13.886 +03:00 [DBG] Start authorize callback request
2019-07-19 10:51:13.886 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 10:51:13.886 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:51:13.886 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:51:13.887 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:51:13.888 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6f4357102cc648858bf2ac90bef4438d","UiLocales":null,"Nonce":"e275e39dc2bf4b8a92e4c96a73bf0888","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6025c3e2d0b809ef8c87011ce08c683d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6f4357102cc648858bf2ac90bef4438d","nonce":"e275e39dc2bf4b8a92e4c96a73bf0888"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:51:13.905 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-19 10:51:13.905 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 10:51:13.905 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 10:51:13.906 +03:00 [DBG] Getting claims for access token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 10:51:13.920 +03:00 [DBG] Getting claims for identity token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf and client: spa
2019-07-19 10:51:13.920 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 10:51:13.929 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****OFmg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8G8Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC3LVJV8HP:00000013","TimeStamp":"2019-07-19T07:51:13.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 10:51:13.930 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"6f4357102cc648858bf2ac90bef4438d","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 10:51:13.930 +03:00 [DBG] Augmenting SignInContext
2019-07-19 10:51:13.930 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 10:51:15.765 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:51:15.766 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:51:15.767 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:51:15.772 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:51:15.773 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:51:15.773 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:51:15.773 +03:00 [DBG] Start discovery request
2019-07-19 10:51:15.884 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 10:51:15.887 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:51:15.887 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:51:15.887 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 10:51:15.888 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 10:51:15.888 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 10:51:15.888 +03:00 [DBG] Start key discovery request
2019-07-19 10:51:15.946 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 10:51:15.946 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:51:15.946 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:51:15.961 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 10:51:15.961 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:51:15.961 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:51:15.961 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 10:51:15.962 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 10:51:15.962 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 10:51:15.963 +03:00 [DBG] Start userinfo request
2019-07-19 10:51:15.964 +03:00 [DBG] Bearer token found in header
2019-07-19 10:51:15.969 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:51:15.969 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:51:15.973 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 10:51:15.973 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563522673,"exp":1563526273,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","auth_time":1563522673,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-19 10:51:15.974 +03:00 [DBG] Creating userinfo response
2019-07-19 10:51:15.974 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:51:15.974 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:51:15.974 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 10:51:15.974 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:51:15.983 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 10:51:15.983 +03:00 [DBG] End userinfo request
2019-07-19 10:51:16.032 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 10:51:16.032 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 10:51:16.033 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 10:51:16.033 +03:00 [DBG] Rendering check session result
2019-07-19 10:52:51.379 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:52:51.379 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:52:51.379 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:52:51.380 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:52:51.380 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:52:51.380 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:52:51.381 +03:00 [DBG] Start discovery request
2019-07-19 10:52:51.407 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 10:52:51.408 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 10:52:51.409 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 10:52:51.409 +03:00 [DBG] Start authorize request
2019-07-19 10:52:51.409 +03:00 [DBG] No user present in authorize request
2019-07-19 10:52:51.409 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:52:51.409 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:52:51.410 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:52:51.410 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2e62debda171488c99ec4634e9dba6ac","UiLocales":null,"Nonce":"2938581321ad4e7eaa3628ef1dba5014","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2e62debda171488c99ec4634e9dba6ac","nonce":"2938581321ad4e7eaa3628ef1dba5014"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:52:51.410 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 10:52:51.419 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:52:51.419 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:52:51.419 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:52:51.420 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:52:56.840 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 10:52:56.846 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:52:56.847 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:52:56.848 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:52:56.886 +03:00 [DBG] Augmenting SignInContext
2019-07-19 10:52:56.886 +03:00 [DBG] Adding idp claim with value: local
2019-07-19 10:52:56.887 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-19 10:52:56.887 +03:00 [DBG] Adding auth_time claim with value: 1563522776
2019-07-19 10:52:56.887 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 10:52:56.888 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC3LVJV8HQ:00000004","TimeStamp":"2019-07-19T07:52:56.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 10:52:56.888 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:52:56.938 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 10:52:56.938 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 10:52:56.939 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 10:52:56.939 +03:00 [DBG] Start authorize callback request
2019-07-19 10:52:56.939 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 10:52:56.939 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:52:56.940 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:52:56.940 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:52:56.943 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2e62debda171488c99ec4634e9dba6ac","UiLocales":null,"Nonce":"2938581321ad4e7eaa3628ef1dba5014","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f224495a39cb1e4756751e5daf509563","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2e62debda171488c99ec4634e9dba6ac","nonce":"2938581321ad4e7eaa3628ef1dba5014"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:52:56.969 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-19 10:52:56.969 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 10:52:56.970 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 10:52:56.970 +03:00 [DBG] Getting claims for access token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 10:52:56.988 +03:00 [DBG] Getting claims for identity token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf and client: spa
2019-07-19 10:52:56.988 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 10:52:56.996 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****nDyw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****z4gQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC3LVJV8HQ:00000005","TimeStamp":"2019-07-19T07:52:56.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 10:52:56.997 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"2e62debda171488c99ec4634e9dba6ac","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 10:52:56.997 +03:00 [DBG] Augmenting SignInContext
2019-07-19 10:52:56.998 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 10:52:58.304 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:52:58.305 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:52:58.305 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:52:58.305 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:52:58.307 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:52:58.307 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:52:58.307 +03:00 [DBG] Start discovery request
2019-07-19 10:52:58.395 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 10:52:58.397 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:52:58.397 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:52:58.398 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 10:52:58.398 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 10:52:58.398 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 10:52:58.399 +03:00 [DBG] Start key discovery request
2019-07-19 10:52:58.460 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 10:52:58.460 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:52:58.460 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:52:58.474 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 10:52:58.475 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:52:58.475 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:52:58.475 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 10:52:58.476 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 10:52:58.476 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 10:52:58.476 +03:00 [DBG] Start userinfo request
2019-07-19 10:52:58.476 +03:00 [DBG] Bearer token found in header
2019-07-19 10:52:58.481 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:52:58.482 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:52:58.488 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 10:52:58.489 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563522776,"exp":1563526376,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","auth_time":1563522776,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-19 10:52:58.490 +03:00 [DBG] Creating userinfo response
2019-07-19 10:52:58.490 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:52:58.490 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:52:58.490 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 10:52:58.490 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:52:58.497 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 10:52:58.497 +03:00 [DBG] End userinfo request
2019-07-19 10:52:58.572 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 10:52:58.572 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 10:52:58.572 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 10:52:58.572 +03:00 [DBG] Rendering check session result
2019-07-19 10:53:33.387 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:53:33.387 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:53:33.388 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:53:33.389 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:53:33.390 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:53:33.390 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:53:33.390 +03:00 [DBG] Start discovery request
2019-07-19 10:53:33.449 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 10:53:33.450 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 10:53:33.450 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 10:53:33.450 +03:00 [DBG] Start authorize request
2019-07-19 10:53:33.450 +03:00 [DBG] No user present in authorize request
2019-07-19 10:53:33.450 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:53:33.450 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:53:33.451 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:53:33.451 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"5c4f4e800f2640f7b2180439d093fbfa","UiLocales":null,"Nonce":"1444b78325314644b71a2c700fb86200","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"5c4f4e800f2640f7b2180439d093fbfa","nonce":"1444b78325314644b71a2c700fb86200"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:53:33.451 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 10:53:33.461 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:53:33.461 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:53:33.462 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:53:33.462 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:53:36.241 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-19 10:53:42.254 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 10:53:42.273 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC3LVJV8HQ:00000010","TimeStamp":"2019-07-19T07:53:42.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 10:53:42.274 +03:00 [DBG] Augmenting SignInContext
2019-07-19 10:53:42.274 +03:00 [DBG] Adding amr claim with value: external
2019-07-19 10:53:42.274 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 10:53:42.275 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-19 10:53:42.291 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 10:53:42.297 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 10:53:42.297 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 10:53:42.297 +03:00 [DBG] Start authorize callback request
2019-07-19 10:53:42.297 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 10:53:42.298 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:53:42.298 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:53:42.298 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:53:42.298 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"5c4f4e800f2640f7b2180439d093fbfa","UiLocales":null,"Nonce":"1444b78325314644b71a2c700fb86200","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b0db617beeea85871d07dddcc04b87ce","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"5c4f4e800f2640f7b2180439d093fbfa","nonce":"1444b78325314644b71a2c700fb86200"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:53:42.319 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-19 10:53:42.319 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 10:53:42.319 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 10:53:42.319 +03:00 [DBG] Getting claims for access token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 10:53:42.335 +03:00 [DBG] Getting claims for identity token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf and client: spa
2019-07-19 10:53:42.335 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 10:53:42.342 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****1I8A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****h6Vw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC3LVJV8HQ:00000011","TimeStamp":"2019-07-19T07:53:42.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 10:53:42.343 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"5c4f4e800f2640f7b2180439d093fbfa","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 10:53:42.343 +03:00 [DBG] Augmenting SignInContext
2019-07-19 10:53:42.344 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 10:53:44.186 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:53:44.186 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:53:44.186 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:53:44.186 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:53:44.188 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:53:44.188 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:53:44.188 +03:00 [DBG] Start discovery request
2019-07-19 10:53:44.297 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 10:53:44.297 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:53:44.297 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:53:44.298 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 10:53:44.300 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 10:53:44.322 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 10:53:44.322 +03:00 [DBG] Start key discovery request
2019-07-19 10:53:44.398 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 10:53:44.399 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:53:44.399 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:53:44.407 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 10:53:44.407 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:53:44.407 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:53:44.408 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 10:53:44.408 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 10:53:44.408 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 10:53:44.408 +03:00 [DBG] Start userinfo request
2019-07-19 10:53:44.408 +03:00 [DBG] Bearer token found in header
2019-07-19 10:53:44.414 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:53:44.414 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:53:44.419 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 10:53:44.420 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563522822,"exp":1563526422,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","auth_time":1563522822,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-19 10:53:44.425 +03:00 [DBG] Creating userinfo response
2019-07-19 10:53:44.426 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:53:44.426 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:53:44.426 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 10:53:44.426 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:53:44.432 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 10:53:44.432 +03:00 [DBG] End userinfo request
2019-07-19 10:53:44.492 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 10:53:44.493 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 10:53:44.494 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 10:53:44.494 +03:00 [DBG] Rendering check session result
2019-07-19 10:56:58.379 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:56:58.379 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:56:58.379 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:56:58.380 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:56:58.380 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:56:58.381 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:56:58.381 +03:00 [DBG] Start discovery request
2019-07-19 10:56:58.421 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 10:56:58.422 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 10:56:58.422 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 10:56:58.422 +03:00 [DBG] Start authorize request
2019-07-19 10:56:58.422 +03:00 [DBG] No user present in authorize request
2019-07-19 10:56:58.422 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:56:58.422 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:56:58.423 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:56:58.424 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"61c20a715cdc4e6db0916ccbf9d3349f","UiLocales":null,"Nonce":"ef82ea058e154914b1c1d831efdf277a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"61c20a715cdc4e6db0916ccbf9d3349f","nonce":"ef82ea058e154914b1c1d831efdf277a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:56:58.424 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 10:56:58.437 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:56:58.437 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:56:58.437 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:56:58.437 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:57:03.969 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-19 10:57:05.993 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 10:57:06.010 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC3LVJV8HR:00000006","TimeStamp":"2019-07-19T07:57:06.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 10:57:06.010 +03:00 [DBG] Augmenting SignInContext
2019-07-19 10:57:06.010 +03:00 [DBG] Adding amr claim with value: external
2019-07-19 10:57:06.011 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 10:57:06.011 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-19 10:57:06.020 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 10:57:06.021 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 10:57:06.021 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 10:57:06.021 +03:00 [DBG] Start authorize callback request
2019-07-19 10:57:06.021 +03:00 [DBG] User in authorize request: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 10:57:06.021 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:57:06.021 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:57:06.022 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:57:06.022 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"61c20a715cdc4e6db0916ccbf9d3349f","UiLocales":null,"Nonce":"ef82ea058e154914b1c1d831efdf277a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9a8265be2eee6a89f40d18cc73582feb","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"61c20a715cdc4e6db0916ccbf9d3349f","nonce":"ef82ea058e154914b1c1d831efdf277a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:57:06.029 +03:00 [DBG] user_consent grant with value: spa|70077fc0-1c48-4ef4-a9ad-540b536fdd52 not found in store.
2019-07-19 10:57:06.029 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 10:57:06.029 +03:00 [INF] Showing consent: User has not yet consented
2019-07-19 10:57:06.068 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:57:06.069 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:57:06.069 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:57:06.069 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:57:10.592 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 10:57:10.595 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:57:10.595 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:57:10.596 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:57:10.596 +03:00 [INF] {"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOC3LVJV8HR:00000009","TimeStamp":"2019-07-19T07:57:10.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-19 10:57:10.598 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:57:10.611 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 10:57:10.611 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 10:57:10.612 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 10:57:10.612 +03:00 [DBG] Start authorize callback request
2019-07-19 10:57:10.613 +03:00 [DBG] User in authorize request: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 10:57:10.613 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:57:10.613 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:57:10.614 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:57:10.614 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"61c20a715cdc4e6db0916ccbf9d3349f","UiLocales":null,"Nonce":"ef82ea058e154914b1c1d831efdf277a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9a8265be2eee6a89f40d18cc73582feb","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"61c20a715cdc4e6db0916ccbf9d3349f","nonce":"ef82ea058e154914b1c1d831efdf277a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:57:10.619 +03:00 [DBG] user_consent grant with value: spa|70077fc0-1c48-4ef4-a9ad-540b536fdd52 not found in store.
2019-07-19 10:57:10.619 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 10:57:10.619 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-19 10:57:10.619 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-19 10:57:10.619 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 10:57:10.630 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 10:57:10.630 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 10:57:10.630 +03:00 [DBG] Getting claims for access token for subject: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 10:57:10.641 +03:00 [DBG] Getting claims for identity token for subject: 70077fc0-1c48-4ef4-a9ad-540b536fdd52 and client: spa
2019-07-19 10:57:10.642 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 10:57:10.649 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****YbKQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****hBfw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC3LVJV8HR:0000000A","TimeStamp":"2019-07-19T07:57:10.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 10:57:10.649 +03:00 [INF] Authorize endpoint response
{"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"61c20a715cdc4e6db0916ccbf9d3349f","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 10:57:10.649 +03:00 [DBG] Augmenting SignInContext
2019-07-19 10:57:10.650 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 10:57:11.629 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:57:11.629 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:57:11.629 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:57:11.629 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:57:11.630 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:57:11.631 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:57:11.631 +03:00 [DBG] Start discovery request
2019-07-19 10:57:11.702 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 10:57:11.702 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:57:11.702 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:57:11.703 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 10:57:11.703 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 10:57:11.704 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 10:57:11.704 +03:00 [DBG] Start key discovery request
2019-07-19 10:57:11.791 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 10:57:11.791 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:57:11.791 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:57:11.801 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 10:57:11.801 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:57:11.801 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:57:11.802 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 10:57:11.802 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 10:57:11.802 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 10:57:11.802 +03:00 [DBG] Start userinfo request
2019-07-19 10:57:11.803 +03:00 [DBG] Bearer token found in header
2019-07-19 10:57:11.808 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:57:11.808 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:57:11.814 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 10:57:11.814 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563523030,"exp":1563526630,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","auth_time":1563523026,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-19 10:57:11.815 +03:00 [DBG] Creating userinfo response
2019-07-19 10:57:11.815 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:57:11.815 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:57:11.815 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 10:57:11.816 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 10:57:11.822 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 10:57:11.822 +03:00 [DBG] End userinfo request
2019-07-19 10:57:11.852 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 10:57:11.852 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 10:57:11.853 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 10:57:11.853 +03:00 [DBG] Rendering check session result
2019-07-19 10:58:31.135 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 10:58:31.135 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 10:58:31.135 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 10:58:31.135 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 10:58:31.136 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 10:58:31.136 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 10:58:31.136 +03:00 [DBG] Start discovery request
2019-07-19 10:58:31.175 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 10:58:31.176 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 10:58:31.176 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 10:58:31.176 +03:00 [DBG] Start authorize request
2019-07-19 10:58:31.176 +03:00 [DBG] No user present in authorize request
2019-07-19 10:58:31.176 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:58:31.176 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:58:31.176 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:58:31.177 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b53da27001424310aad738b80d681d4f","UiLocales":null,"Nonce":"05cd1d2ecdb740e4b62e3e47d0714e75","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b53da27001424310aad738b80d681d4f","nonce":"05cd1d2ecdb740e4b62e3e47d0714e75"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 10:58:31.177 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 10:58:31.189 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:58:31.189 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:58:31.190 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:58:31.190 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:58:51.512 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 10:58:51.517 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:58:51.518 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:58:51.518 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:58:51.521 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:58:51.521 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:58:51.523 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:58:51.523 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:58:56.704 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 10:58:56.708 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:58:56.708 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:58:56.709 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:58:56.715 +03:00 [INF] {"Username":"zangetsu456@mail.ru","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOC3LVJV8HS:00000005","TimeStamp":"2019-07-19T07:58:56.0000000Z","ProcessId":16332,"LocalIpAddress":"127.0.0.1:4654","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-19 10:58:56.715 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 10:58:56.715 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 10:58:56.716 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 10:58:56.716 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:21.202 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 12:07:21.330 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-19 12:07:21.336 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-19 12:07:21.336 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-19 12:07:21.337 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-19 12:07:21.337 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-19 12:07:21.337 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-19 12:07:21.841 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 12:07:21.852 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 12:07:21.852 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 12:07:21.907 +03:00 [DBG] Login Url: /Account/Login
2019-07-19 12:07:21.907 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 12:07:21.907 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-19 12:07:21.907 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-19 12:07:21.907 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 12:07:21.907 +03:00 [DBG] Error Url: /home/error
2019-07-19 12:07:21.907 +03:00 [DBG] Error Id Parameter: errorId
2019-07-19 12:07:21.938 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 12:07:22.152 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 12:07:22.153 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 12:07:22.160 +03:00 [DBG] Start discovery request
2019-07-19 12:07:22.371 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 12:07:22.392 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 12:07:22.392 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 12:07:22.401 +03:00 [DBG] Start authorize request
2019-07-19 12:07:22.425 +03:00 [DBG] No user present in authorize request
2019-07-19 12:07:22.438 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 12:07:22.477 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:22.566 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 12:07:22.608 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"489b6bfc843a41bbb2fd24117f5c299a","UiLocales":null,"Nonce":"a5763d65f78f433d95b44e7ee2379fb9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"489b6bfc843a41bbb2fd24117f5c299a","nonce":"a5763d65f78f433d95b44e7ee2379fb9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 12:07:22.694 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 12:07:23.122 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 12:07:23.122 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:23.123 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 12:07:23.129 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:40.435 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 12:07:40.606 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 12:07:40.606 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:40.606 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 12:07:41.915 +03:00 [DBG] Augmenting SignInContext
2019-07-19 12:07:41.920 +03:00 [DBG] Adding idp claim with value: local
2019-07-19 12:07:41.920 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-19 12:07:41.921 +03:00 [DBG] Adding auth_time claim with value: 1563527261
2019-07-19 12:07:41.946 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 12:07:41.970 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC5210N17T:00000004","TimeStamp":"2019-07-19T09:07:41.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 12:07:41.975 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:41.999 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 12:07:42.001 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 12:07:42.001 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 12:07:42.009 +03:00 [DBG] Start authorize callback request
2019-07-19 12:07:42.017 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 12:07:42.017 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 12:07:42.017 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:42.018 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 12:07:42.018 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"489b6bfc843a41bbb2fd24117f5c299a","UiLocales":null,"Nonce":"a5763d65f78f433d95b44e7ee2379fb9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6b9af4d99c450e981dd85f698f129a0b","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"489b6bfc843a41bbb2fd24117f5c299a","nonce":"a5763d65f78f433d95b44e7ee2379fb9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 12:07:42.162 +03:00 [DBG] user_consent grant with value: spa|d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf not found in store.
2019-07-19 12:07:42.163 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 12:07:42.163 +03:00 [INF] Showing consent: User has not yet consented
2019-07-19 12:07:42.258 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 12:07:42.259 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:42.259 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 12:07:42.260 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:44.111 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 12:07:44.140 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 12:07:44.140 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:44.140 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 12:07:44.144 +03:00 [INF] {"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOC5210N17T:00000007","TimeStamp":"2019-07-19T09:07:44.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-19 12:07:44.166 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:44.174 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 12:07:44.175 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 12:07:44.175 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 12:07:44.176 +03:00 [DBG] Start authorize callback request
2019-07-19 12:07:44.183 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 12:07:44.183 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 12:07:44.183 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:44.184 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 12:07:44.184 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"489b6bfc843a41bbb2fd24117f5c299a","UiLocales":null,"Nonce":"a5763d65f78f433d95b44e7ee2379fb9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6b9af4d99c450e981dd85f698f129a0b","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"489b6bfc843a41bbb2fd24117f5c299a","nonce":"a5763d65f78f433d95b44e7ee2379fb9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 12:07:44.190 +03:00 [DBG] user_consent grant with value: spa|d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf not found in store.
2019-07-19 12:07:44.190 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 12:07:44.205 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-19 12:07:44.210 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-19 12:07:44.217 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 12:07:44.251 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 12:07:44.277 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 12:07:44.279 +03:00 [DBG] Getting claims for access token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 12:07:44.471 +03:00 [DBG] Getting claims for identity token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf and client: spa
2019-07-19 12:07:44.471 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 12:07:44.490 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****lIGw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****pCVQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC5210N17T:00000008","TimeStamp":"2019-07-19T09:07:44.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 12:07:44.495 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"489b6bfc843a41bbb2fd24117f5c299a","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 12:07:44.533 +03:00 [DBG] Augmenting SignInContext
2019-07-19 12:07:44.534 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 12:07:45.676 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 12:07:45.678 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 12:07:45.678 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 12:07:45.679 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 12:07:45.680 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 12:07:45.680 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 12:07:45.680 +03:00 [DBG] Start discovery request
2019-07-19 12:07:45.772 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 12:07:45.772 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 12:07:45.772 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 12:07:45.773 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 12:07:45.774 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 12:07:45.774 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 12:07:45.783 +03:00 [DBG] Start key discovery request
2019-07-19 12:07:45.891 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 12:07:45.891 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 12:07:45.891 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 12:07:45.905 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 12:07:45.906 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 12:07:45.906 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 12:07:45.906 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 12:07:45.911 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 12:07:45.912 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 12:07:45.926 +03:00 [DBG] Start userinfo request
2019-07-19 12:07:45.936 +03:00 [DBG] Bearer token found in header
2019-07-19 12:07:46.104 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:46.110 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 12:07:46.117 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 12:07:46.120 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563527264,"exp":1563530864,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","auth_time":1563527261,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-19 12:07:46.130 +03:00 [DBG] Creating userinfo response
2019-07-19 12:07:46.135 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 12:07:46.139 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 12:07:46.143 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 12:07:46.143 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 12:07:46.149 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 12:07:46.150 +03:00 [DBG] End userinfo request
2019-07-19 12:07:46.175 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 12:07:46.177 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 12:07:46.177 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 12:07:46.182 +03:00 [DBG] Rendering check session result
2019-07-19 12:07:57.067 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 12:07:57.068 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 12:07:57.068 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 12:07:57.068 +03:00 [DBG] Start discovery request
2019-07-19 12:07:57.381 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 12:07:57.381 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 12:07:57.382 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 12:07:57.382 +03:00 [DBG] Start key discovery request
2019-07-19 12:08:03.888 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 12:08:03.889 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 12:08:03.889 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 12:08:03.889 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 12:08:03.890 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 12:08:03.891 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 12:08:03.891 +03:00 [DBG] Start discovery request
2019-07-19 12:08:03.958 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 12:08:03.959 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 12:08:03.959 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 12:08:03.962 +03:00 [DBG] Rendering check session result
2019-07-19 12:08:45.024 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 12:08:45.025 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 12:08:45.025 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 12:08:45.025 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 12:08:45.026 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 12:08:45.026 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 12:08:45.026 +03:00 [DBG] Start discovery request
2019-07-19 12:08:45.214 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 12:08:45.221 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 12:08:45.221 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 12:08:45.221 +03:00 [DBG] Rendering check session result
2019-07-19 12:11:40.438 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 12:11:40.439 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 12:11:40.439 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 12:11:40.439 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 12:11:40.442 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 12:11:40.442 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 12:11:40.442 +03:00 [DBG] Start discovery request
2019-07-19 14:33:20.777 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 14:33:20.780 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 14:33:20.781 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 14:33:20.786 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:33:20.793 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:33:20.793 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:33:20.793 +03:00 [DBG] Start discovery request
2019-07-19 14:33:20.830 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 14:33:20.854 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 14:33:20.855 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 14:33:20.857 +03:00 [DBG] Start authorize request
2019-07-19 14:33:20.859 +03:00 [DBG] No user present in authorize request
2019-07-19 14:33:20.859 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 14:33:20.862 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:33:20.865 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 14:33:20.872 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a1232ce969c0475dad450fb1702aec33","UiLocales":null,"Nonce":"d80b0b23d98e4c6c8396fee69a93f13c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a1232ce969c0475dad450fb1702aec33","nonce":"d80b0b23d98e4c6c8396fee69a93f13c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 14:33:20.872 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 14:33:20.951 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 14:33:20.952 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:33:20.953 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 14:33:20.956 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:52:22.485 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 14:52:22.485 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 14:52:22.485 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 14:52:22.486 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:52:22.486 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:52:22.486 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:52:22.486 +03:00 [DBG] Start discovery request
2019-07-19 14:52:22.516 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 14:52:22.517 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 14:52:22.518 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 14:52:22.518 +03:00 [DBG] Start authorize request
2019-07-19 14:52:22.518 +03:00 [DBG] No user present in authorize request
2019-07-19 14:52:22.518 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 14:52:22.518 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:52:22.519 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 14:52:22.520 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"734a255822054633b484107f03c9701e","UiLocales":null,"Nonce":"02c56076abe7469689e1161752e7ae8d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"734a255822054633b484107f03c9701e","nonce":"02c56076abe7469689e1161752e7ae8d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 14:52:22.520 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 14:52:22.531 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 14:52:22.532 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:52:22.533 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 14:52:22.533 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:52:24.071 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 14:52:24.123 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 14:52:24.123 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:52:24.124 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 14:52:24.422 +03:00 [DBG] Augmenting SignInContext
2019-07-19 14:52:24.422 +03:00 [DBG] Adding idp claim with value: local
2019-07-19 14:52:24.422 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-19 14:52:24.423 +03:00 [DBG] Adding auth_time claim with value: 1563537144
2019-07-19 14:52:24.425 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 14:52:24.426 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC5210N184:00000004","TimeStamp":"2019-07-19T11:52:24.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 14:52:24.427 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:52:24.441 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 14:52:24.442 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 14:52:24.443 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 14:52:24.443 +03:00 [DBG] Start authorize callback request
2019-07-19 14:52:24.445 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 14:52:24.445 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 14:52:24.445 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:52:24.446 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 14:52:24.446 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"734a255822054633b484107f03c9701e","UiLocales":null,"Nonce":"02c56076abe7469689e1161752e7ae8d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9ad79982cb1dc51efc70363f2cfcaacd","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"734a255822054633b484107f03c9701e","nonce":"02c56076abe7469689e1161752e7ae8d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 14:52:24.473 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-19 14:52:24.474 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 14:52:24.474 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 14:52:24.474 +03:00 [DBG] Getting claims for access token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 14:52:24.492 +03:00 [DBG] Getting claims for identity token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf and client: spa
2019-07-19 14:52:24.492 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 14:52:24.500 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****66lw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ZzBA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC5210N184:00000005","TimeStamp":"2019-07-19T11:52:24.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 14:52:24.501 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"734a255822054633b484107f03c9701e","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 14:52:24.501 +03:00 [DBG] Augmenting SignInContext
2019-07-19 14:52:24.502 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 14:52:25.704 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 14:52:25.704 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 14:52:25.704 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 14:52:25.734 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:52:25.745 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:52:25.746 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:52:25.746 +03:00 [DBG] Start discovery request
2019-07-19 14:52:25.806 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 14:52:25.808 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 14:52:25.808 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 14:52:25.809 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 14:52:25.809 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 14:52:25.810 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 14:52:25.811 +03:00 [DBG] Start key discovery request
2019-07-19 14:52:25.902 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 14:52:25.902 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 14:52:25.902 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 14:52:25.915 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 14:52:25.917 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 14:52:25.917 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 14:52:25.918 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 14:52:25.919 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 14:52:25.919 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 14:52:25.920 +03:00 [DBG] Start userinfo request
2019-07-19 14:52:25.921 +03:00 [DBG] Bearer token found in header
2019-07-19 14:52:25.928 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:52:25.929 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:52:25.939 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 14:52:25.940 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563537144,"exp":1563540744,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","auth_time":1563537144,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-19 14:52:25.940 +03:00 [DBG] Creating userinfo response
2019-07-19 14:52:25.940 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 14:52:25.940 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 14:52:25.941 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 14:52:25.941 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 14:52:25.950 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 14:52:25.950 +03:00 [DBG] End userinfo request
2019-07-19 14:52:26.003 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 14:52:26.004 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 14:52:26.004 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 14:52:26.004 +03:00 [DBG] Rendering check session result
2019-07-19 14:54:06.090 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 14:54:06.090 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 14:54:06.090 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 14:54:06.091 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:54:06.093 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:54:06.093 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:54:06.093 +03:00 [DBG] Start discovery request
2019-07-19 14:54:06.169 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 14:54:06.170 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 14:54:06.170 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 14:54:06.170 +03:00 [DBG] Rendering check session result
2019-07-19 14:56:33.808 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 14:56:33.808 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 14:56:33.808 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 14:56:33.808 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:56:33.809 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:56:33.810 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:56:33.810 +03:00 [DBG] Start discovery request
2019-07-19 14:56:33.842 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 14:56:33.842 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 14:56:33.843 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 14:56:33.843 +03:00 [DBG] Start authorize request
2019-07-19 14:56:33.843 +03:00 [DBG] No user present in authorize request
2019-07-19 14:56:33.843 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 14:56:33.843 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:56:33.843 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 14:56:33.844 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"dad92c35060444049e111647f32bc96f","UiLocales":null,"Nonce":"23efc545bf1242619d86859e28e01c75","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"dad92c35060444049e111647f32bc96f","nonce":"23efc545bf1242619d86859e28e01c75"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 14:56:33.844 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 14:56:33.861 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 14:56:33.861 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:56:33.861 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 14:56:33.862 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:56:36.014 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-19 14:56:38.083 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 14:56:38.125 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC5210N186:00000006","TimeStamp":"2019-07-19T11:56:38.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 14:56:38.139 +03:00 [DBG] Augmenting SignInContext
2019-07-19 14:56:38.139 +03:00 [DBG] Adding amr claim with value: external
2019-07-19 14:56:38.140 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 14:56:38.151 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-19 14:56:38.161 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 14:56:38.163 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 14:56:38.163 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 14:56:38.164 +03:00 [DBG] Start authorize callback request
2019-07-19 14:56:38.164 +03:00 [DBG] User in authorize request: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 14:56:38.164 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 14:56:38.164 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:56:38.165 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 14:56:38.165 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"dad92c35060444049e111647f32bc96f","UiLocales":null,"Nonce":"23efc545bf1242619d86859e28e01c75","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"77ff282ab809649987fb0c89bd398f95","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"dad92c35060444049e111647f32bc96f","nonce":"23efc545bf1242619d86859e28e01c75"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 14:56:38.170 +03:00 [DBG] user_consent grant with value: spa|70077fc0-1c48-4ef4-a9ad-540b536fdd52 not found in store.
2019-07-19 14:56:38.170 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 14:56:38.170 +03:00 [INF] Showing consent: User has not yet consented
2019-07-19 14:56:38.202 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 14:56:38.203 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:56:38.203 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 14:56:38.203 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:56:39.691 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 14:56:39.695 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 14:56:39.695 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:56:39.695 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 14:56:39.696 +03:00 [INF] {"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOC5210N186:0000000A","TimeStamp":"2019-07-19T11:56:39.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-19 14:56:39.697 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:56:39.708 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 14:56:39.709 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 14:56:39.709 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 14:56:39.709 +03:00 [DBG] Start authorize callback request
2019-07-19 14:56:39.710 +03:00 [DBG] User in authorize request: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 14:56:39.710 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 14:56:39.710 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:56:39.710 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 14:56:39.711 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"dad92c35060444049e111647f32bc96f","UiLocales":null,"Nonce":"23efc545bf1242619d86859e28e01c75","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"77ff282ab809649987fb0c89bd398f95","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"dad92c35060444049e111647f32bc96f","nonce":"23efc545bf1242619d86859e28e01c75"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 14:56:39.719 +03:00 [DBG] user_consent grant with value: spa|70077fc0-1c48-4ef4-a9ad-540b536fdd52 not found in store.
2019-07-19 14:56:39.720 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 14:56:39.720 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-19 14:56:39.720 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-19 14:56:39.721 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 14:56:39.728 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 14:56:39.729 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 14:56:39.729 +03:00 [DBG] Getting claims for access token for subject: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 14:56:39.743 +03:00 [DBG] Getting claims for identity token for subject: 70077fc0-1c48-4ef4-a9ad-540b536fdd52 and client: spa
2019-07-19 14:56:39.743 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 14:56:39.751 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****plRg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****VIJw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC5210N186:0000000B","TimeStamp":"2019-07-19T11:56:39.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 14:56:39.751 +03:00 [INF] Authorize endpoint response
{"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"dad92c35060444049e111647f32bc96f","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 14:56:39.752 +03:00 [DBG] Augmenting SignInContext
2019-07-19 14:56:39.752 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 14:56:40.747 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 14:56:40.748 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 14:56:40.748 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 14:56:40.748 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:56:40.748 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:56:40.749 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:56:40.749 +03:00 [DBG] Start discovery request
2019-07-19 14:56:40.808 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 14:56:40.808 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 14:56:40.808 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 14:56:40.809 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 14:56:40.809 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 14:56:40.809 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 14:56:40.810 +03:00 [DBG] Start key discovery request
2019-07-19 14:56:40.909 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 14:56:40.910 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 14:56:40.910 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 14:56:40.925 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 14:56:40.925 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 14:56:40.925 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 14:56:40.925 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 14:56:40.926 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 14:56:40.926 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 14:56:40.926 +03:00 [DBG] Start userinfo request
2019-07-19 14:56:40.926 +03:00 [DBG] Bearer token found in header
2019-07-19 14:56:40.931 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:56:40.932 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 14:56:40.937 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 14:56:40.938 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563537399,"exp":1563540999,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","auth_time":1563537398,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-19 14:56:40.938 +03:00 [DBG] Creating userinfo response
2019-07-19 14:56:40.938 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 14:56:40.938 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 14:56:40.939 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 14:56:40.939 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 14:56:40.946 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 14:56:40.946 +03:00 [DBG] End userinfo request
2019-07-19 14:56:40.971 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 14:56:40.972 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 14:56:40.972 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 14:56:40.972 +03:00 [DBG] Rendering check session result
2019-07-19 15:01:34.342 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:01:34.342 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:01:34.345 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:01:34.345 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:01:34.346 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:01:34.346 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:01:34.346 +03:00 [DBG] Start discovery request
2019-07-19 15:01:34.480 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:01:34.481 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:01:34.481 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:01:34.481 +03:00 [DBG] Rendering check session result
2019-07-19 15:04:07.830 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:04:07.831 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:04:07.831 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:04:07.832 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:04:07.832 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:04:07.833 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:04:07.833 +03:00 [DBG] Start discovery request
2019-07-19 15:04:07.975 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:04:07.976 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:04:07.976 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:04:07.979 +03:00 [DBG] Rendering check session result
2019-07-19 15:04:35.153 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:04:35.156 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:04:35.156 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:04:35.157 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:04:35.157 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:04:35.158 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:04:35.158 +03:00 [DBG] Start discovery request
2019-07-19 15:04:35.321 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:04:35.322 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:04:35.322 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:04:35.322 +03:00 [DBG] Rendering check session result
2019-07-19 15:05:29.814 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:05:29.814 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:05:29.814 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:05:29.814 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:05:29.815 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:05:29.815 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:05:29.819 +03:00 [DBG] Start discovery request
2019-07-19 15:05:29.974 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:05:29.975 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:05:29.975 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:05:29.975 +03:00 [DBG] Rendering check session result
2019-07-19 15:08:05.982 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:08:05.983 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:08:05.984 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:08:05.985 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:08:05.985 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:08:05.985 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:08:05.987 +03:00 [DBG] Start discovery request
2019-07-19 15:08:06.120 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:08:06.121 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:08:06.121 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:08:06.121 +03:00 [DBG] Rendering check session result
2019-07-19 15:08:19.812 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:08:19.813 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:08:19.813 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:08:19.814 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:08:19.814 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:08:19.814 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:08:19.814 +03:00 [DBG] Start discovery request
2019-07-19 15:08:20.000 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:08:20.001 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:08:20.001 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:08:20.001 +03:00 [DBG] Rendering check session result
2019-07-19 15:09:16.680 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:09:16.682 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:09:16.682 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:09:16.684 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:09:16.684 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:09:16.684 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:09:16.684 +03:00 [DBG] Start discovery request
2019-07-19 15:09:16.811 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:09:16.811 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:09:16.811 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:09:16.812 +03:00 [DBG] Rendering check session result
2019-07-19 15:09:24.344 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:09:24.344 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:09:24.344 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:09:24.344 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:09:24.345 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:09:24.345 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:09:24.345 +03:00 [DBG] Start discovery request
2019-07-19 15:09:24.518 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:09:24.520 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:09:24.522 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:09:24.523 +03:00 [DBG] Rendering check session result
2019-07-19 15:10:24.235 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:10:24.235 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:10:24.235 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:10:24.236 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:10:24.238 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:10:24.238 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:10:24.238 +03:00 [DBG] Start discovery request
2019-07-19 15:10:24.335 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:10:24.335 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:10:24.335 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:10:24.336 +03:00 [DBG] Rendering check session result
2019-07-19 15:15:15.535 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:15:15.536 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:15:15.536 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:15:15.536 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:15:15.537 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:15:15.537 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:15:15.537 +03:00 [DBG] Start discovery request
2019-07-19 15:15:15.718 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:15:15.719 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:15:15.720 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:15:15.720 +03:00 [DBG] Rendering check session result
2019-07-19 15:16:26.901 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:16:26.901 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:16:26.901 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:16:26.902 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:16:26.902 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:16:26.902 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:16:26.902 +03:00 [DBG] Start discovery request
2019-07-19 15:16:27.003 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:16:27.003 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:16:27.003 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:16:27.003 +03:00 [DBG] Rendering check session result
2019-07-19 15:16:58.316 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:16:58.316 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:16:58.316 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:16:58.317 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:16:58.318 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:16:58.318 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:16:58.318 +03:00 [DBG] Start discovery request
2019-07-19 15:16:58.431 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:16:58.432 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:16:58.432 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:16:58.432 +03:00 [DBG] Rendering check session result
2019-07-19 15:17:12.509 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:17:12.510 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:17:12.515 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:17:12.516 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:17:12.516 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:17:12.517 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:17:12.517 +03:00 [DBG] Start discovery request
2019-07-19 15:17:12.624 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:17:12.624 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:17:12.624 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:17:12.624 +03:00 [DBG] Rendering check session result
2019-07-19 15:17:27.119 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:17:27.119 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:17:27.119 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:17:27.120 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:17:27.120 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:17:27.120 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:17:27.120 +03:00 [DBG] Start discovery request
2019-07-19 15:17:27.268 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:17:27.269 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:17:27.270 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:17:27.270 +03:00 [DBG] Rendering check session result
2019-07-19 15:18:25.668 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:18:25.669 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:18:25.669 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:18:25.669 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:18:25.670 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:18:25.670 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:18:25.670 +03:00 [DBG] Start discovery request
2019-07-19 15:18:26.065 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:18:26.065 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:18:26.065 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:18:26.065 +03:00 [DBG] Rendering check session result
2019-07-19 15:18:54.772 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:18:54.773 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:18:54.773 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:18:54.774 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:18:54.776 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:18:54.776 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:18:54.776 +03:00 [DBG] Start discovery request
2019-07-19 15:18:55.008 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:18:55.008 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:18:55.008 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:18:55.009 +03:00 [DBG] Rendering check session result
2019-07-19 15:20:23.377 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:20:23.377 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:20:23.378 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:20:23.378 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:20:23.378 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:20:23.379 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:20:23.380 +03:00 [DBG] Start discovery request
2019-07-19 15:20:23.504 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:20:23.505 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:20:23.505 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:20:23.505 +03:00 [DBG] Rendering check session result
2019-07-19 15:31:08.418 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:31:08.423 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:31:08.423 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:31:08.425 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:31:08.429 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:31:08.429 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:31:08.429 +03:00 [DBG] Start discovery request
2019-07-19 15:31:10.404 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:31:10.404 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:31:10.404 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:31:10.404 +03:00 [DBG] Rendering check session result
2019-07-19 15:36:10.479 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:36:10.481 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:36:10.482 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:36:10.482 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:36:10.483 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:36:10.483 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:36:10.483 +03:00 [DBG] Start discovery request
2019-07-19 15:36:10.783 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:36:10.783 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:36:10.783 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:36:10.783 +03:00 [DBG] Rendering check session result
2019-07-19 15:36:18.810 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:36:18.811 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:36:18.811 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:36:18.811 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:36:18.812 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:36:18.812 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:36:18.812 +03:00 [DBG] Start discovery request
2019-07-19 15:36:18.934 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:36:18.934 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:36:18.934 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:36:18.935 +03:00 [DBG] Rendering check session result
2019-07-19 15:38:24.738 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:38:24.739 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:38:24.739 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:38:24.739 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:38:24.740 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:38:24.740 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:38:24.740 +03:00 [DBG] Start discovery request
2019-07-19 15:38:24.839 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:38:24.839 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:38:24.839 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:38:24.839 +03:00 [DBG] Rendering check session result
2019-07-19 15:38:40.274 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:38:40.274 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:38:40.274 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:38:40.277 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:38:40.278 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:38:40.278 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:38:40.278 +03:00 [DBG] Start discovery request
2019-07-19 15:38:40.347 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:38:40.348 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:38:40.348 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:38:40.348 +03:00 [DBG] Rendering check session result
2019-07-19 15:39:25.580 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:39:25.580 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:39:25.581 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:39:25.582 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:39:25.582 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:39:25.582 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:39:25.583 +03:00 [DBG] Start discovery request
2019-07-19 15:39:25.720 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:39:25.720 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:39:25.720 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:39:25.720 +03:00 [DBG] Rendering check session result
2019-07-19 15:39:46.971 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:39:46.971 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:39:46.977 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:39:46.977 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:39:46.982 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:39:46.982 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:39:46.982 +03:00 [DBG] Start discovery request
2019-07-19 15:39:47.085 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:39:47.086 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:39:47.086 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:39:47.086 +03:00 [DBG] Rendering check session result
2019-07-19 15:40:02.082 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:40:02.083 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:40:02.083 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:40:02.084 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:40:02.085 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:40:02.085 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:40:02.086 +03:00 [DBG] Start discovery request
2019-07-19 15:42:31.861 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:42:31.869 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:42:31.869 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:42:31.869 +03:00 [DBG] Rendering check session result
2019-07-19 15:51:45.355 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:51:45.355 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:51:45.355 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:51:45.356 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:51:45.358 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:51:45.358 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:51:45.358 +03:00 [DBG] Start discovery request
2019-07-19 15:59:39.073 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:59:39.074 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:59:39.074 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:59:39.075 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:59:39.076 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:59:39.076 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:59:39.076 +03:00 [DBG] Start discovery request
2019-07-19 15:59:39.103 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 15:59:39.110 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 15:59:39.110 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 15:59:39.110 +03:00 [DBG] Start authorize request
2019-07-19 15:59:39.114 +03:00 [DBG] User in authorize request: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 15:59:39.114 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 15:59:39.116 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 15:59:39.118 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 15:59:39.124 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2f033297530a4e6cb7055d106b8597b9","UiLocales":null,"Nonce":"9bc8e713fff541939154398dea633e04","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"77ff282ab809649987fb0c89bd398f95","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2f033297530a4e6cb7055d106b8597b9","nonce":"9bc8e713fff541939154398dea633e04"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 15:59:39.190 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-19 15:59:39.190 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 15:59:39.190 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 15:59:39.191 +03:00 [DBG] Getting claims for access token for subject: 70077fc0-1c48-4ef4-a9ad-540b536fdd52
2019-07-19 15:59:39.212 +03:00 [DBG] Getting claims for identity token for subject: 70077fc0-1c48-4ef4-a9ad-540b536fdd52 and client: spa
2019-07-19 15:59:39.212 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 15:59:39.226 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****O1ww","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5xnw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC5210N18I:00000002","TimeStamp":"2019-07-19T12:59:39.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 15:59:39.227 +03:00 [INF] Authorize endpoint response
{"SubjectId":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"2f033297530a4e6cb7055d106b8597b9","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 15:59:39.991 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 15:59:39.991 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:59:39.991 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:59:39.992 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:59:39.995 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:59:39.995 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:59:39.995 +03:00 [DBG] Start discovery request
2019-07-19 15:59:40.058 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 15:59:40.059 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:59:40.059 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:59:40.060 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 15:59:40.061 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 15:59:40.062 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 15:59:40.062 +03:00 [DBG] Start key discovery request
2019-07-19 15:59:40.127 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 15:59:40.128 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:59:40.128 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:59:40.138 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 15:59:40.138 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 15:59:40.138 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 15:59:40.139 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 15:59:40.140 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 15:59:40.141 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 15:59:40.141 +03:00 [DBG] Start userinfo request
2019-07-19 15:59:40.142 +03:00 [DBG] Bearer token found in header
2019-07-19 15:59:40.150 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 15:59:40.150 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 15:59:40.155 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 15:59:40.157 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563541179,"exp":1563544779,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"70077fc0-1c48-4ef4-a9ad-540b536fdd52","auth_time":1563537398,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-19 15:59:40.157 +03:00 [DBG] Creating userinfo response
2019-07-19 15:59:40.157 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 15:59:40.157 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 15:59:40.158 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 15:59:40.158 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 15:59:40.164 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 15:59:40.164 +03:00 [DBG] End userinfo request
2019-07-19 15:59:40.199 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 15:59:40.200 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 15:59:40.200 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 15:59:40.200 +03:00 [DBG] Rendering check session result
2019-07-19 16:01:03.093 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:01:03.093 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:01:03.093 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:01:03.094 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:01:03.094 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:01:03.094 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:01:03.094 +03:00 [DBG] Start discovery request
2019-07-19 16:01:03.256 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:01:03.256 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:01:03.256 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:01:03.257 +03:00 [DBG] Rendering check session result
2019-07-19 16:01:35.128 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:01:35.128 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:01:35.128 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:01:35.129 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:01:35.129 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:01:35.129 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:01:35.129 +03:00 [DBG] Start discovery request
2019-07-19 16:01:35.155 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 16:01:35.156 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 16:01:35.156 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 16:01:35.156 +03:00 [DBG] Start authorize request
2019-07-19 16:01:35.157 +03:00 [DBG] No user present in authorize request
2019-07-19 16:01:35.157 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 16:01:35.157 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 16:01:35.158 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 16:01:35.158 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"65d9963dea234f58b7deb28e1a915c7b","UiLocales":null,"Nonce":"6559955ed42b4ee1816be6c9137a891c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"65d9963dea234f58b7deb28e1a915c7b","nonce":"6559955ed42b4ee1816be6c9137a891c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 16:01:35.159 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 16:01:35.202 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 16:01:35.202 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 16:01:35.202 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 16:01:35.203 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 16:01:38.196 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-19 16:01:43.075 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 16:01:43.097 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOC5210N18J:00000008","TimeStamp":"2019-07-19T13:01:43.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 16:01:43.097 +03:00 [DBG] Augmenting SignInContext
2019-07-19 16:01:43.097 +03:00 [DBG] Adding amr claim with value: external
2019-07-19 16:01:43.098 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 16:01:43.098 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-19 16:01:43.111 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 16:01:43.111 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 16:01:43.112 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 16:01:43.112 +03:00 [DBG] Start authorize callback request
2019-07-19 16:01:43.112 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 16:01:43.112 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 16:01:43.113 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 16:01:43.113 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 16:01:43.113 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"65d9963dea234f58b7deb28e1a915c7b","UiLocales":null,"Nonce":"6559955ed42b4ee1816be6c9137a891c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1822a19ea67f4d8181a807628dac3a1c","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"65d9963dea234f58b7deb28e1a915c7b","nonce":"6559955ed42b4ee1816be6c9137a891c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 16:01:43.131 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-19 16:01:43.131 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 16:01:43.131 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 16:01:43.131 +03:00 [DBG] Getting claims for access token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 16:01:43.145 +03:00 [DBG] Getting claims for identity token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf and client: spa
2019-07-19 16:01:43.146 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 16:01:43.155 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****LaJw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zsxg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC5210N18J:00000009","TimeStamp":"2019-07-19T13:01:43.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 16:01:43.155 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"65d9963dea234f58b7deb28e1a915c7b","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 16:01:43.155 +03:00 [DBG] Augmenting SignInContext
2019-07-19 16:01:43.156 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 16:01:44.839 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:01:44.839 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:01:44.839 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:01:44.841 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:01:44.842 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:01:44.842 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:01:44.842 +03:00 [DBG] Start discovery request
2019-07-19 16:01:44.947 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 16:01:44.948 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:01:44.948 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:01:44.948 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 16:01:44.949 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 16:01:44.949 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 16:01:44.949 +03:00 [DBG] Start key discovery request
2019-07-19 16:01:45.027 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 16:01:45.029 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:01:45.030 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:01:45.043 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 16:01:45.043 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:01:45.043 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:01:45.044 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 16:01:45.045 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 16:01:45.045 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 16:01:45.045 +03:00 [DBG] Start userinfo request
2019-07-19 16:01:45.045 +03:00 [DBG] Bearer token found in header
2019-07-19 16:01:45.051 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 16:01:45.051 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 16:01:45.055 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 16:01:45.056 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563541303,"exp":1563544903,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","auth_time":1563541303,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-19 16:01:45.056 +03:00 [DBG] Creating userinfo response
2019-07-19 16:01:45.056 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 16:01:45.060 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 16:01:45.060 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 16:01:45.060 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 16:01:45.068 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 16:01:45.068 +03:00 [DBG] End userinfo request
2019-07-19 16:01:45.092 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:01:45.092 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:01:45.092 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:01:45.092 +03:00 [DBG] Rendering check session result
2019-07-19 16:03:09.436 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:03:09.437 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:03:09.437 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:03:09.438 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:03:09.439 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:03:09.439 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:03:09.439 +03:00 [DBG] Start discovery request
2019-07-19 16:03:09.600 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:03:09.602 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:03:09.602 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:03:09.603 +03:00 [DBG] Rendering check session result
2019-07-19 16:03:17.430 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:03:17.436 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:03:17.436 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:03:17.437 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:03:17.438 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:03:17.439 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:03:17.439 +03:00 [DBG] Start discovery request
2019-07-19 16:03:17.499 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:03:17.499 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:03:17.499 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:03:17.499 +03:00 [DBG] Rendering check session result
2019-07-19 16:04:03.740 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:04:03.740 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:04:03.741 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:04:03.742 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:04:03.743 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:04:03.743 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:04:03.744 +03:00 [DBG] Start discovery request
2019-07-19 16:04:03.831 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:04:03.831 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:04:03.831 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:04:03.831 +03:00 [DBG] Rendering check session result
2019-07-19 16:04:11.091 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:04:11.092 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:04:11.094 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:04:11.095 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:04:11.095 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:04:11.095 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:04:11.096 +03:00 [DBG] Start discovery request
2019-07-19 16:04:11.164 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:04:11.164 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:04:11.164 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:04:11.164 +03:00 [DBG] Rendering check session result
2019-07-19 16:05:41.354 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:05:41.354 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:05:41.354 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:05:41.356 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:05:41.356 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:05:41.356 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:05:41.357 +03:00 [DBG] Start discovery request
2019-07-19 16:05:41.425 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:05:41.426 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:05:41.426 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:05:41.426 +03:00 [DBG] Rendering check session result
2019-07-19 16:12:02.001 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:12:02.001 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:12:02.001 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:12:02.002 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:12:02.002 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:12:02.003 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:12:02.003 +03:00 [DBG] Start discovery request
2019-07-19 16:12:02.078 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:12:02.078 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:12:02.078 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:12:02.078 +03:00 [DBG] Rendering check session result
2019-07-19 16:12:25.554 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:12:25.554 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:12:25.555 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:12:25.555 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:12:25.556 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:12:25.556 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:12:25.557 +03:00 [DBG] Start discovery request
2019-07-19 16:12:25.597 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:12:25.600 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:12:25.600 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:12:25.600 +03:00 [DBG] Rendering check session result
2019-07-19 16:13:32.483 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:13:32.484 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:13:32.484 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:13:32.484 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:13:32.485 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:13:32.485 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:13:32.485 +03:00 [DBG] Start discovery request
2019-07-19 16:13:32.548 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:13:32.548 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:13:32.548 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:13:32.548 +03:00 [DBG] Rendering check session result
2019-07-19 16:13:58.613 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:13:58.620 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:13:58.620 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:13:58.624 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:13:58.625 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:13:58.625 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:13:58.625 +03:00 [DBG] Start discovery request
2019-07-19 16:13:58.695 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:13:58.695 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:13:58.695 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:13:58.695 +03:00 [DBG] Rendering check session result
2019-07-19 16:15:30.278 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:15:30.279 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:15:30.279 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:15:30.279 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:15:30.279 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:15:30.280 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:15:30.280 +03:00 [DBG] Start discovery request
2019-07-19 16:15:30.443 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:15:30.443 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:15:30.443 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:15:30.443 +03:00 [DBG] Rendering check session result
2019-07-19 16:18:42.511 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:18:42.512 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:18:42.512 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:18:42.513 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:18:42.514 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:18:42.514 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:18:42.514 +03:00 [DBG] Start discovery request
2019-07-19 16:18:42.592 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:18:42.592 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:18:42.592 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:18:42.593 +03:00 [DBG] Rendering check session result
2019-07-19 16:23:19.952 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:23:19.953 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:23:19.954 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:23:19.955 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:23:19.957 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:23:19.957 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:23:19.957 +03:00 [DBG] Start discovery request
2019-07-19 16:23:54.972 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:23:54.972 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:23:54.973 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:23:54.973 +03:00 [DBG] Rendering check session result
2019-07-19 16:24:20.807 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:24:20.807 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:24:20.807 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:24:20.810 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:24:20.811 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:24:20.811 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:24:20.811 +03:00 [DBG] Start discovery request
2019-07-19 16:24:22.999 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:24:22.999 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:24:22.999 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:24:22.999 +03:00 [DBG] Rendering check session result
2019-07-19 16:27:15.798 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:27:15.802 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:27:15.802 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:27:15.803 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:27:15.803 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:27:15.804 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:27:15.804 +03:00 [DBG] Start discovery request
2019-07-19 16:27:15.896 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:27:15.896 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:27:15.896 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:27:15.896 +03:00 [DBG] Rendering check session result
2019-07-19 16:27:29.485 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:27:29.486 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:27:29.486 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:27:29.488 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:27:29.489 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:27:29.489 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:27:29.489 +03:00 [DBG] Start discovery request
2019-07-19 16:27:29.616 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:27:29.616 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:27:29.617 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:27:29.617 +03:00 [DBG] Rendering check session result
2019-07-19 16:29:41.490 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:29:41.491 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:29:41.491 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:29:41.492 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:29:41.492 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:29:41.493 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:29:41.493 +03:00 [DBG] Start discovery request
2019-07-19 16:29:43.123 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:29:43.124 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:29:43.129 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:29:43.129 +03:00 [DBG] Rendering check session result
2019-07-19 16:32:28.974 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:32:28.974 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:32:28.974 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:32:28.975 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:32:28.976 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:32:28.976 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:32:28.976 +03:00 [DBG] Start discovery request
2019-07-19 16:32:31.070 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:32:31.070 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:32:31.070 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:32:31.070 +03:00 [DBG] Rendering check session result
2019-07-19 16:33:24.288 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 16:33:24.290 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 16:33:24.291 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 16:33:24.292 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:33:24.292 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:33:24.293 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:33:24.293 +03:00 [DBG] Start discovery request
2019-07-19 16:33:24.383 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 16:33:24.384 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 16:33:24.384 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 16:33:24.385 +03:00 [DBG] Rendering check session result
2019-07-19 16:40:36.646 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 16:40:36.650 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 16:40:36.650 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 16:40:36.650 +03:00 [DBG] Start authorize request
2019-07-19 16:40:36.652 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 16:40:36.652 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 16:40:36.653 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-19 16:40:36.659 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 16:40:36.662 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"RnJpIEp1bCAxOSAyMDE5IDE2OjQwOjM2IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1822a19ea67f4d8181a807628dac3a1c","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"RnJpIEp1bCAxOSAyMDE5IDE2OjQwOjM2IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 16:40:36.670 +03:00 [DBG] user_consent grant with value: swagger|d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf not found in store.
2019-07-19 16:40:36.670 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 16:40:36.670 +03:00 [INF] Showing consent: User has not yet consented
2019-07-19 16:40:36.706 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 16:40:36.706 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-19 16:40:36.707 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 16:40:36.707 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-19 16:40:38.515 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 16:40:38.527 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 16:40:38.528 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-19 16:40:38.528 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 16:40:38.531 +03:00 [INF] {"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"swagger","RequestedScopes":["pyatnashki_api"],"GrantedScopes":["pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOC5210N18U:00000003","TimeStamp":"2019-07-19T13:40:38.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-19 16:40:38.534 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-19 16:40:38.545 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 16:40:38.546 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 16:40:38.546 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 16:40:38.546 +03:00 [DBG] Start authorize callback request
2019-07-19 16:40:38.549 +03:00 [DBG] User in authorize request: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 16:40:38.549 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 16:40:38.550 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-19 16:40:38.550 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 16:40:38.550 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"RnJpIEp1bCAxOSAyMDE5IDE2OjQwOjM2IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1822a19ea67f4d8181a807628dac3a1c","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"RnJpIEp1bCAxOSAyMDE5IDE2OjQwOjM2IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 16:40:38.556 +03:00 [DBG] user_consent grant with value: swagger|d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf not found in store.
2019-07-19 16:40:38.556 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 16:40:38.557 +03:00 [INF] User consented to scopes: ["pyatnashki_api"]
2019-07-19 16:40:38.557 +03:00 [DBG] User indicated to remember consent for scopes: ["pyatnashki_api"]
2019-07-19 16:40:38.557 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 16:40:38.577 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 16:40:38.577 +03:00 [DBG] Getting claims for access token for client: swagger
2019-07-19 16:40:38.577 +03:00 [DBG] Getting claims for access token for subject: d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf
2019-07-19 16:40:38.595 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","Scopes":"pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"access_token","TokenValue":"****uk2g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOC5210N18U:00000004","TimeStamp":"2019-07-19T13:40:38.0000000Z","ProcessId":5856,"LocalIpAddress":"127.0.0.1:27670","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 16:40:38.596 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d8c6e3e3-2b9c-4ca1-a4eb-b0fc8e6b19bf","ClientId":"swagger","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","State":"RnJpIEp1bCAxOSAyMDE5IDE2OjQwOjM2IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","Scope":"pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 16:40:38.597 +03:00 [DBG] Augmenting SignInContext
2019-07-19 16:40:38.598 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 18:18:36.026 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 18:18:36.149 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-19 18:18:36.160 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-19 18:18:36.160 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-19 18:18:36.160 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-19 18:18:36.160 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-19 18:18:36.161 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-19 18:18:37.054 +03:00 [DBG] Login Url: /Account/Login
2019-07-19 18:18:37.063 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 18:18:37.063 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-19 18:18:37.063 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-19 18:18:37.063 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 18:18:37.063 +03:00 [DBG] Error Url: /home/error
2019-07-19 18:18:37.063 +03:00 [DBG] Error Id Parameter: errorId
2019-07-19 20:55:23.026 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 20:55:23.053 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 20:55:23.053 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 20:55:23.073 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 20:55:23.343 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 20:55:23.344 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 20:55:23.355 +03:00 [DBG] Start discovery request
2019-07-19 20:55:23.499 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 20:55:23.509 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 20:55:23.509 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 20:55:23.519 +03:00 [DBG] Start authorize request
2019-07-19 20:55:23.537 +03:00 [DBG] No user present in authorize request
2019-07-19 20:55:23.548 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:55:23.589 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:55:23.657 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:55:23.683 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0e6bc2092c124911ae526a0fff19d6c8","UiLocales":null,"Nonce":"0d729d2b77c446a092cb118c4377a385","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0e6bc2092c124911ae526a0fff19d6c8","nonce":"0d729d2b77c446a092cb118c4377a385"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 20:55:23.720 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 20:55:23.871 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:55:23.872 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:55:23.873 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:55:23.880 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:55:31.131 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-19 20:55:32.800 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 20:55:34.515 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"338833cc-b52d-4610-ab1e-035c27451a49","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOCBHFFRSCL:00000002","TimeStamp":"2019-07-19T17:55:34.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 20:55:34.560 +03:00 [DBG] Augmenting SignInContext
2019-07-19 20:55:34.567 +03:00 [DBG] Adding amr claim with value: external
2019-07-19 20:55:34.584 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 20:55:34.599 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-19 20:55:34.630 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 20:55:34.632 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 20:55:34.633 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 20:55:34.649 +03:00 [DBG] Start authorize callback request
2019-07-19 20:55:34.661 +03:00 [DBG] User in authorize request: 338833cc-b52d-4610-ab1e-035c27451a49
2019-07-19 20:55:34.662 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:55:34.662 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:55:34.662 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:55:34.663 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"338833cc-b52d-4610-ab1e-035c27451a49","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0e6bc2092c124911ae526a0fff19d6c8","UiLocales":null,"Nonce":"0d729d2b77c446a092cb118c4377a385","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9264bb84889773cd3166edd3df13fa96","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0e6bc2092c124911ae526a0fff19d6c8","nonce":"0d729d2b77c446a092cb118c4377a385"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 20:55:34.776 +03:00 [DBG] user_consent grant with value: spa|338833cc-b52d-4610-ab1e-035c27451a49 not found in store.
2019-07-19 20:55:34.779 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 20:55:34.779 +03:00 [INF] Showing consent: User has not yet consented
2019-07-19 20:55:34.853 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:55:34.854 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:55:34.855 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:55:34.856 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:55:36.662 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 20:55:36.743 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:55:36.743 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:55:36.743 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:55:36.746 +03:00 [INF] {"SubjectId":"338833cc-b52d-4610-ab1e-035c27451a49","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOCBHFFRSCM:00000003","TimeStamp":"2019-07-19T17:55:36.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-19 20:55:36.775 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:55:36.785 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 20:55:36.786 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 20:55:36.787 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 20:55:36.787 +03:00 [DBG] Start authorize callback request
2019-07-19 20:55:36.795 +03:00 [DBG] User in authorize request: 338833cc-b52d-4610-ab1e-035c27451a49
2019-07-19 20:55:36.795 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:55:36.796 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:55:36.796 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:55:36.796 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"338833cc-b52d-4610-ab1e-035c27451a49","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0e6bc2092c124911ae526a0fff19d6c8","UiLocales":null,"Nonce":"0d729d2b77c446a092cb118c4377a385","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9264bb84889773cd3166edd3df13fa96","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0e6bc2092c124911ae526a0fff19d6c8","nonce":"0d729d2b77c446a092cb118c4377a385"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 20:55:36.803 +03:00 [DBG] user_consent grant with value: spa|338833cc-b52d-4610-ab1e-035c27451a49 not found in store.
2019-07-19 20:55:36.803 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 20:55:36.823 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-19 20:55:36.838 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-19 20:55:36.864 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 338833cc-b52d-4610-ab1e-035c27451a49
2019-07-19 20:55:36.909 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 20:55:36.940 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 20:55:36.942 +03:00 [DBG] Getting claims for access token for subject: 338833cc-b52d-4610-ab1e-035c27451a49
2019-07-19 20:55:37.190 +03:00 [DBG] Getting claims for identity token for subject: 338833cc-b52d-4610-ab1e-035c27451a49 and client: spa
2019-07-19 20:55:37.190 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 20:55:37.207 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"338833cc-b52d-4610-ab1e-035c27451a49","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****DQxg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****oT5w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOCBHFFRSCL:00000003","TimeStamp":"2019-07-19T17:55:37.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 20:55:37.210 +03:00 [INF] Authorize endpoint response
{"SubjectId":"338833cc-b52d-4610-ab1e-035c27451a49","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"0e6bc2092c124911ae526a0fff19d6c8","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 20:55:37.243 +03:00 [DBG] Augmenting SignInContext
2019-07-19 20:55:37.244 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 20:55:38.804 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 20:55:38.805 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 20:55:38.805 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 20:55:38.806 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 20:55:38.807 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 20:55:38.807 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 20:55:38.807 +03:00 [DBG] Start discovery request
2019-07-19 20:55:38.898 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 20:55:38.898 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 20:55:38.898 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 20:55:38.899 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 20:55:38.900 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 20:55:38.901 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 20:55:38.915 +03:00 [DBG] Start key discovery request
2019-07-19 20:55:39.012 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 20:55:39.012 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 20:55:39.012 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 20:55:39.024 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 20:55:39.025 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 20:55:39.025 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 20:55:39.025 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 20:55:39.030 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 20:55:39.031 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 20:55:39.045 +03:00 [DBG] Start userinfo request
2019-07-19 20:55:39.054 +03:00 [DBG] Bearer token found in header
2019-07-19 20:55:39.155 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:55:39.161 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:55:39.172 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 20:55:39.175 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563558937,"exp":1563562537,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"338833cc-b52d-4610-ab1e-035c27451a49","auth_time":1563558934,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-19 20:55:39.199 +03:00 [DBG] Creating userinfo response
2019-07-19 20:55:39.210 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 20:55:39.216 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 20:55:39.223 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 20:55:39.223 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 20:55:39.231 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 20:55:39.233 +03:00 [DBG] End userinfo request
2019-07-19 20:55:39.259 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 20:55:39.261 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 20:55:39.262 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 20:55:39.265 +03:00 [DBG] Rendering check session result
2019-07-19 20:55:51.681 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 20:55:51.682 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 20:55:51.683 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 20:55:51.683 +03:00 [DBG] Start discovery request
2019-07-19 20:55:52.143 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 20:55:52.144 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 20:55:52.144 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 20:55:52.145 +03:00 [DBG] Start key discovery request
2019-07-19 20:56:11.411 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 20:56:11.411 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 20:56:11.411 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 20:56:11.415 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 20:56:11.416 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 20:56:11.416 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 20:56:11.416 +03:00 [DBG] Start discovery request
2019-07-19 20:56:11.514 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 20:56:11.514 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 20:56:11.514 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 20:56:11.515 +03:00 [DBG] Rendering check session result
2019-07-19 20:56:26.160 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 20:56:26.161 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 20:56:26.161 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 20:56:26.161 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 20:56:26.162 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 20:56:26.162 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 20:56:26.162 +03:00 [DBG] Start discovery request
2019-07-19 20:56:26.188 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 20:56:26.190 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 20:56:26.190 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 20:56:26.190 +03:00 [DBG] Start authorize request
2019-07-19 20:56:26.191 +03:00 [DBG] No user present in authorize request
2019-07-19 20:56:26.191 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:56:26.191 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:56:26.191 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:56:26.192 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2a4b00f8fe36427ba33ac8b4288ca77d","UiLocales":null,"Nonce":"39e0e520635b482297acc7dc82cada0d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2a4b00f8fe36427ba33ac8b4288ca77d","nonce":"39e0e520635b482297acc7dc82cada0d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 20:56:26.192 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 20:56:26.227 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:56:26.228 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:56:26.228 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:56:26.229 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:56:39.574 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 20:56:39.598 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:56:39.598 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:56:39.599 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:56:39.605 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOCBHFFRSCK:00000009","TimeStamp":"2019-07-19T17:56:39.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-19 20:56:39.608 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:56:39.609 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:56:39.610 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:56:39.610 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:56:52.140 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 20:56:52.143 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:56:52.144 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:56:52.144 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:57:02.096 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 20:57:04.654 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 20:57:04.656 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 20:57:04.657 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 20:57:04.657 +03:00 [DBG] Start authorize callback request
2019-07-19 20:57:04.658 +03:00 [DBG] No user present in authorize request
2019-07-19 20:57:04.662 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:57:04.663 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:04.664 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:57:04.665 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2a4b00f8fe36427ba33ac8b4288ca77d","UiLocales":null,"Nonce":"39e0e520635b482297acc7dc82cada0d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2a4b00f8fe36427ba33ac8b4288ca77d","nonce":"39e0e520635b482297acc7dc82cada0d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 20:57:04.665 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 20:57:04.690 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:57:04.691 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:04.692 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:57:04.692 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:27.085 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 20:57:27.091 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:57:27.091 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:27.094 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:57:27.187 +03:00 [DBG] Augmenting SignInContext
2019-07-19 20:57:27.188 +03:00 [DBG] Adding idp claim with value: local
2019-07-19 20:57:27.188 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-19 20:57:27.188 +03:00 [DBG] Adding auth_time claim with value: 1563559047
2019-07-19 20:57:27.189 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 20:57:27.190 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Provider":null,"ProviderUserId":null,"SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","DisplayName":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOCBHFFRSCN:00000007","TimeStamp":"2019-07-19T17:57:27.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 20:57:27.190 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:27.203 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 20:57:27.203 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 20:57:27.203 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 20:57:27.204 +03:00 [DBG] Start authorize callback request
2019-07-19 20:57:27.204 +03:00 [DBG] User in authorize request: d056d571-6bfb-4f71-8eec-b089df579b30
2019-07-19 20:57:27.204 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:57:27.204 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:27.205 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:57:27.205 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2a4b00f8fe36427ba33ac8b4288ca77d","UiLocales":null,"Nonce":"39e0e520635b482297acc7dc82cada0d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"c6af948a407db2cc33935aab568849d0","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2a4b00f8fe36427ba33ac8b4288ca77d","nonce":"39e0e520635b482297acc7dc82cada0d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 20:57:27.210 +03:00 [DBG] user_consent grant with value: spa|d056d571-6bfb-4f71-8eec-b089df579b30 not found in store.
2019-07-19 20:57:27.211 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 20:57:27.211 +03:00 [INF] Showing consent: User has not yet consented
2019-07-19 20:57:27.233 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:57:27.234 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:27.234 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:57:27.235 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:28.689 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 20:57:28.692 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:57:28.693 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:28.693 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:57:28.694 +03:00 [INF] {"SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOCBHFFRSCM:00000008","TimeStamp":"2019-07-19T17:57:28.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-19 20:57:28.695 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:28.707 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 20:57:28.708 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 20:57:28.708 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 20:57:28.708 +03:00 [DBG] Start authorize callback request
2019-07-19 20:57:28.709 +03:00 [DBG] User in authorize request: d056d571-6bfb-4f71-8eec-b089df579b30
2019-07-19 20:57:28.709 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 20:57:28.710 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:28.710 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 20:57:28.710 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2a4b00f8fe36427ba33ac8b4288ca77d","UiLocales":null,"Nonce":"39e0e520635b482297acc7dc82cada0d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"c6af948a407db2cc33935aab568849d0","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2a4b00f8fe36427ba33ac8b4288ca77d","nonce":"39e0e520635b482297acc7dc82cada0d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 20:57:28.716 +03:00 [DBG] user_consent grant with value: spa|d056d571-6bfb-4f71-8eec-b089df579b30 not found in store.
2019-07-19 20:57:28.716 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 20:57:28.716 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-19 20:57:28.716 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-19 20:57:28.717 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: d056d571-6bfb-4f71-8eec-b089df579b30
2019-07-19 20:57:28.726 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 20:57:28.727 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 20:57:28.727 +03:00 [DBG] Getting claims for access token for subject: d056d571-6bfb-4f71-8eec-b089df579b30
2019-07-19 20:57:28.742 +03:00 [DBG] Getting claims for identity token for subject: d056d571-6bfb-4f71-8eec-b089df579b30 and client: spa
2019-07-19 20:57:28.742 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 20:57:28.751 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****WX1A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3Agw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOCBHFFRSCL:00000008","TimeStamp":"2019-07-19T17:57:28.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 20:57:28.751 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"2a4b00f8fe36427ba33ac8b4288ca77d","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 20:57:28.752 +03:00 [DBG] Augmenting SignInContext
2019-07-19 20:57:28.752 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 20:57:30.194 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 20:57:30.195 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 20:57:30.197 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 20:57:30.197 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 20:57:30.198 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 20:57:30.198 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 20:57:30.198 +03:00 [DBG] Start discovery request
2019-07-19 20:57:30.291 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 20:57:30.291 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 20:57:30.291 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 20:57:30.292 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 20:57:30.292 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 20:57:30.292 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 20:57:30.293 +03:00 [DBG] Start key discovery request
2019-07-19 20:57:30.375 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 20:57:30.375 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 20:57:30.375 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 20:57:30.385 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 20:57:30.385 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 20:57:30.386 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 20:57:30.387 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 20:57:30.387 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 20:57:30.388 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 20:57:30.388 +03:00 [DBG] Start userinfo request
2019-07-19 20:57:30.388 +03:00 [DBG] Bearer token found in header
2019-07-19 20:57:30.393 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:30.394 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 20:57:30.400 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 20:57:30.401 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563559048,"exp":1563562648,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d056d571-6bfb-4f71-8eec-b089df579b30","auth_time":1563559047,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-19 20:57:30.423 +03:00 [DBG] Creating userinfo response
2019-07-19 20:57:30.423 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 20:57:30.423 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 20:57:30.423 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 20:57:30.423 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 20:57:30.430 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 20:57:30.431 +03:00 [DBG] End userinfo request
2019-07-19 20:57:30.477 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 20:57:30.477 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 20:57:30.477 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 20:57:30.477 +03:00 [DBG] Rendering check session result
2019-07-19 20:59:13.500 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 20:59:13.501 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 20:59:13.501 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 20:59:13.504 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 20:59:13.505 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 20:59:13.505 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 20:59:13.505 +03:00 [DBG] Start discovery request
2019-07-19 20:59:13.941 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 20:59:13.942 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 20:59:13.942 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 20:59:13.942 +03:00 [DBG] Rendering check session result
2019-07-19 21:01:08.793 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:01:08.793 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:01:08.793 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:01:08.794 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:01:08.795 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:01:08.795 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:01:08.795 +03:00 [DBG] Start discovery request
2019-07-19 21:01:08.960 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 21:01:08.961 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 21:01:08.961 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 21:01:08.961 +03:00 [DBG] Rendering check session result
2019-07-19 21:01:50.168 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:01:50.170 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:01:50.170 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:01:50.171 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:01:50.171 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:01:50.171 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:01:50.171 +03:00 [DBG] Start discovery request
2019-07-19 21:02:39.418 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 21:02:39.418 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 21:02:39.418 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 21:02:39.419 +03:00 [DBG] Rendering check session result
2019-07-19 21:02:41.893 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:02:41.894 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:02:41.894 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:02:41.894 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:02:41.895 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:02:41.895 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:02:41.895 +03:00 [DBG] Start discovery request
2019-07-19 21:03:44.698 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:03:44.698 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:03:44.698 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:03:44.699 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:03:44.699 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:03:44.699 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:03:44.700 +03:00 [DBG] Start discovery request
2019-07-19 21:03:44.726 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 21:03:44.727 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 21:03:44.727 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 21:03:44.727 +03:00 [DBG] Start authorize request
2019-07-19 21:03:44.728 +03:00 [DBG] User in authorize request: d056d571-6bfb-4f71-8eec-b089df579b30
2019-07-19 21:03:44.728 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:03:44.728 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:03:44.729 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:03:44.730 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a973f27c6a054fb2a3f9134ddba9dfa1","UiLocales":null,"Nonce":"b6f897c8aca84c82aa3e74826f5bc97b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"c6af948a407db2cc33935aab568849d0","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a973f27c6a054fb2a3f9134ddba9dfa1","nonce":"b6f897c8aca84c82aa3e74826f5bc97b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:03:44.747 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-19 21:03:44.747 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 21:03:44.747 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 21:03:44.747 +03:00 [DBG] Getting claims for access token for subject: d056d571-6bfb-4f71-8eec-b089df579b30
2019-07-19 21:03:44.759 +03:00 [DBG] Getting claims for identity token for subject: d056d571-6bfb-4f71-8eec-b089df579b30 and client: spa
2019-07-19 21:03:44.759 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 21:03:44.768 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****-kwg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****F9xw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOCBHFFRSCR:00000002","TimeStamp":"2019-07-19T18:03:44.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 21:03:44.768 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"a973f27c6a054fb2a3f9134ddba9dfa1","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 21:03:45.457 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:03:45.457 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:03:45.457 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:03:45.458 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:03:45.459 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:03:45.459 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:03:45.459 +03:00 [DBG] Start discovery request
2019-07-19 21:03:45.521 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 21:03:45.521 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:03:45.521 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:03:45.522 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 21:03:45.522 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 21:03:45.522 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 21:03:45.522 +03:00 [DBG] Start key discovery request
2019-07-19 21:03:45.588 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 21:03:45.588 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:03:45.588 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:03:45.606 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 21:03:45.606 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:03:45.606 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:03:45.606 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 21:03:45.607 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 21:03:45.607 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 21:03:45.607 +03:00 [DBG] Start userinfo request
2019-07-19 21:03:45.607 +03:00 [DBG] Bearer token found in header
2019-07-19 21:03:45.613 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:03:45.613 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:03:45.622 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 21:03:45.622 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563559424,"exp":1563563024,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d056d571-6bfb-4f71-8eec-b089df579b30","auth_time":1563559047,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-19 21:03:45.623 +03:00 [DBG] Creating userinfo response
2019-07-19 21:03:45.623 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:03:45.623 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:03:45.623 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 21:03:45.623 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:03:45.630 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 21:03:45.631 +03:00 [DBG] End userinfo request
2019-07-19 21:03:45.663 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 21:03:45.664 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 21:03:45.665 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 21:03:45.665 +03:00 [DBG] Rendering check session result
2019-07-19 21:04:59.394 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:04:59.394 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:04:59.394 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:04:59.395 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:04:59.395 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:04:59.396 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:04:59.396 +03:00 [DBG] Start discovery request
2019-07-19 21:04:59.425 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 21:04:59.426 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 21:04:59.426 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 21:04:59.426 +03:00 [DBG] Start authorize request
2019-07-19 21:04:59.427 +03:00 [DBG] No user present in authorize request
2019-07-19 21:04:59.427 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:04:59.427 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:04:59.427 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:04:59.429 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a87c12bd7fa74d68abf04d78d02fe73c","UiLocales":null,"Nonce":"de4afc4ecf1d41c79257c2c89e997135","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a87c12bd7fa74d68abf04d78d02fe73c","nonce":"de4afc4ecf1d41c79257c2c89e997135"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:04:59.430 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 21:04:59.470 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:04:59.470 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:04:59.470 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:04:59.471 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:05:04.276 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 21:05:04.358 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:05:04.359 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:05:04.359 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:05:04.398 +03:00 [DBG] Augmenting SignInContext
2019-07-19 21:05:04.398 +03:00 [DBG] Adding idp claim with value: local
2019-07-19 21:05:04.399 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-19 21:05:04.399 +03:00 [DBG] Adding auth_time claim with value: 1563559504
2019-07-19 21:05:04.400 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 21:05:04.400 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Provider":null,"ProviderUserId":null,"SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","DisplayName":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOCBHFFRSCS:00000004","TimeStamp":"2019-07-19T18:05:04.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 21:05:04.401 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:05:04.413 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 21:05:04.413 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 21:05:04.414 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 21:05:04.414 +03:00 [DBG] Start authorize callback request
2019-07-19 21:05:04.414 +03:00 [DBG] User in authorize request: d056d571-6bfb-4f71-8eec-b089df579b30
2019-07-19 21:05:04.414 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:05:04.414 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:05:04.415 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:05:04.415 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a87c12bd7fa74d68abf04d78d02fe73c","UiLocales":null,"Nonce":"de4afc4ecf1d41c79257c2c89e997135","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"496203e4f82baa8a05aea0034bc26096","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a87c12bd7fa74d68abf04d78d02fe73c","nonce":"de4afc4ecf1d41c79257c2c89e997135"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:05:04.430 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-19 21:05:04.430 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 21:05:04.430 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 21:05:04.430 +03:00 [DBG] Getting claims for access token for subject: d056d571-6bfb-4f71-8eec-b089df579b30
2019-07-19 21:05:04.445 +03:00 [DBG] Getting claims for identity token for subject: d056d571-6bfb-4f71-8eec-b089df579b30 and client: spa
2019-07-19 21:05:04.445 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 21:05:04.454 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****CMvw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****eKQg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOCBHFFRSCS:00000005","TimeStamp":"2019-07-19T18:05:04.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 21:05:04.454 +03:00 [INF] Authorize endpoint response
{"SubjectId":"d056d571-6bfb-4f71-8eec-b089df579b30","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"a87c12bd7fa74d68abf04d78d02fe73c","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 21:05:04.455 +03:00 [DBG] Augmenting SignInContext
2019-07-19 21:05:04.456 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 21:05:05.435 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:05:05.436 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:05:05.436 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:05:05.438 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:05:05.441 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:05:05.441 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:05:05.441 +03:00 [DBG] Start discovery request
2019-07-19 21:05:05.486 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 21:05:05.486 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:05:05.487 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:05:05.488 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 21:05:05.489 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 21:05:05.490 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 21:05:05.490 +03:00 [DBG] Start key discovery request
2019-07-19 21:05:05.551 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 21:05:05.551 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:05:05.551 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:05:05.562 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 21:05:05.562 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:05:05.562 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:05:05.563 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 21:05:05.563 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 21:05:05.563 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 21:05:05.563 +03:00 [DBG] Start userinfo request
2019-07-19 21:05:05.563 +03:00 [DBG] Bearer token found in header
2019-07-19 21:05:05.568 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:05:05.569 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:05:05.574 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 21:05:05.574 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563559504,"exp":1563563104,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"d056d571-6bfb-4f71-8eec-b089df579b30","auth_time":1563559504,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-19 21:05:05.574 +03:00 [DBG] Creating userinfo response
2019-07-19 21:05:05.574 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:05:05.574 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:05:05.575 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 21:05:05.575 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:05:05.582 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 21:05:05.583 +03:00 [DBG] End userinfo request
2019-07-19 21:05:05.640 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 21:05:05.640 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 21:05:05.641 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 21:05:05.641 +03:00 [DBG] Rendering check session result
2019-07-19 21:05:52.915 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:05:52.915 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:05:52.915 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:05:52.916 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:05:52.917 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:05:52.917 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:05:52.917 +03:00 [DBG] Start discovery request
2019-07-19 21:05:52.966 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 21:05:52.966 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 21:05:52.967 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 21:05:52.967 +03:00 [DBG] Start authorize request
2019-07-19 21:05:52.967 +03:00 [DBG] No user present in authorize request
2019-07-19 21:05:52.967 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:05:52.967 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:05:52.967 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:05:52.968 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cd1c2c5ff82b46b7ba7f3ec22edacbe1","UiLocales":null,"Nonce":"acf1a4ed6de7457e8adaca65476b094a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cd1c2c5ff82b46b7ba7f3ec22edacbe1","nonce":"acf1a4ed6de7457e8adaca65476b094a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:05:52.968 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 21:05:52.981 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:05:52.981 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:05:52.981 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:05:52.982 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:05:55.438 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 21:05:55.442 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:05:55.443 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:05:55.443 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:05:55.448 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOCBHFFRSCS:0000000E","TimeStamp":"2019-07-19T18:05:55.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-19 21:05:55.448 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:05:55.448 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:05:55.449 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:05:55.449 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:00.406 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 21:06:00.409 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:06:00.409 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:00.409 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:06:08.033 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 21:06:09.271 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 21:06:09.272 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 21:06:09.272 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 21:06:09.273 +03:00 [DBG] Start authorize callback request
2019-07-19 21:06:09.273 +03:00 [DBG] No user present in authorize request
2019-07-19 21:06:09.273 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:06:09.274 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:09.274 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:06:09.274 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cd1c2c5ff82b46b7ba7f3ec22edacbe1","UiLocales":null,"Nonce":"acf1a4ed6de7457e8adaca65476b094a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cd1c2c5ff82b46b7ba7f3ec22edacbe1","nonce":"acf1a4ed6de7457e8adaca65476b094a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:06:09.275 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 21:06:09.288 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:06:09.289 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:09.290 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:06:09.291 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:32.453 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 21:06:32.456 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:06:32.457 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:32.457 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:06:32.469 +03:00 [INF] {"Username":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOCBHFFRSCS:00000015","TimeStamp":"2019-07-19T18:06:32.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-19 21:06:32.470 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:06:32.470 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:32.471 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:06:32.471 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:35.706 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 21:06:35.708 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:06:35.709 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:35.709 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:06:35.739 +03:00 [DBG] Augmenting SignInContext
2019-07-19 21:06:35.740 +03:00 [DBG] Adding idp claim with value: local
2019-07-19 21:06:35.740 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-19 21:06:35.740 +03:00 [DBG] Adding auth_time claim with value: 1563559595
2019-07-19 21:06:35.740 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 21:06:35.746 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOCBHFFRSCS:00000016","TimeStamp":"2019-07-19T18:06:35.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 21:06:35.747 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:35.782 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 21:06:35.782 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 21:06:35.782 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 21:06:35.782 +03:00 [DBG] Start authorize callback request
2019-07-19 21:06:35.783 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-19 21:06:35.783 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:06:35.783 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:35.783 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:06:35.784 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cd1c2c5ff82b46b7ba7f3ec22edacbe1","UiLocales":null,"Nonce":"acf1a4ed6de7457e8adaca65476b094a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1096922913a0eff6185d9a19628167b8","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cd1c2c5ff82b46b7ba7f3ec22edacbe1","nonce":"acf1a4ed6de7457e8adaca65476b094a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:06:35.790 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-19 21:06:35.790 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 21:06:35.790 +03:00 [INF] Showing consent: User has not yet consented
2019-07-19 21:06:35.807 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:06:35.807 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:35.808 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:06:35.808 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:37.239 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 21:06:37.241 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:06:37.241 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:37.242 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:06:37.243 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOCBHFFRSCS:00000019","TimeStamp":"2019-07-19T18:06:37.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-19 21:06:37.243 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:37.269 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 21:06:37.269 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 21:06:37.269 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 21:06:37.269 +03:00 [DBG] Start authorize callback request
2019-07-19 21:06:37.270 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-19 21:06:37.270 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:06:37.270 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:37.271 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:06:37.271 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cd1c2c5ff82b46b7ba7f3ec22edacbe1","UiLocales":null,"Nonce":"acf1a4ed6de7457e8adaca65476b094a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1096922913a0eff6185d9a19628167b8","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cd1c2c5ff82b46b7ba7f3ec22edacbe1","nonce":"acf1a4ed6de7457e8adaca65476b094a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:06:37.276 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-19 21:06:37.276 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 21:06:37.276 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-19 21:06:37.277 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-19 21:06:37.277 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-19 21:06:37.290 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 21:06:37.291 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 21:06:37.291 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-19 21:06:37.308 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-19 21:06:37.309 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 21:06:37.317 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****12mg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****0K0g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOCBHFFRSCS:0000001A","TimeStamp":"2019-07-19T18:06:37.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 21:06:37.317 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"cd1c2c5ff82b46b7ba7f3ec22edacbe1","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 21:06:37.317 +03:00 [DBG] Augmenting SignInContext
2019-07-19 21:06:37.318 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 21:06:38.885 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:06:38.885 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:06:38.886 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:06:38.889 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:06:38.889 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:06:38.889 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:06:38.890 +03:00 [DBG] Start discovery request
2019-07-19 21:06:38.945 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 21:06:38.946 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:06:38.946 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:06:38.946 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 21:06:38.947 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 21:06:38.947 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 21:06:38.947 +03:00 [DBG] Start key discovery request
2019-07-19 21:06:39.020 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 21:06:39.021 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:06:39.021 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:06:39.039 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 21:06:39.040 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:06:39.040 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:06:39.040 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 21:06:39.041 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 21:06:39.041 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 21:06:39.041 +03:00 [DBG] Start userinfo request
2019-07-19 21:06:39.041 +03:00 [DBG] Bearer token found in header
2019-07-19 21:06:39.046 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:39.046 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:06:39.053 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 21:06:39.054 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563559597,"exp":1563563197,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563559595,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-19 21:06:39.054 +03:00 [DBG] Creating userinfo response
2019-07-19 21:06:39.054 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:06:39.054 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:06:39.055 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 21:06:39.055 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:06:39.065 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 21:06:39.065 +03:00 [DBG] End userinfo request
2019-07-19 21:06:39.122 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 21:06:39.122 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 21:06:39.122 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 21:06:39.123 +03:00 [DBG] Rendering check session result
2019-07-19 21:10:38.434 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:10:38.435 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:10:38.435 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:10:38.437 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:10:38.437 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:10:38.438 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:10:38.438 +03:00 [DBG] Start discovery request
2019-07-19 21:10:38.466 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 21:10:38.467 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 21:10:38.468 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 21:10:38.468 +03:00 [DBG] Start authorize request
2019-07-19 21:10:38.469 +03:00 [DBG] No user present in authorize request
2019-07-19 21:10:38.469 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:10:38.469 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:10:38.469 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:10:38.470 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"870a02a12836434fa4f05d81f0d51fce","UiLocales":null,"Nonce":"5720637de3594f659616d99f69f55149","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"870a02a12836434fa4f05d81f0d51fce","nonce":"5720637de3594f659616d99f69f55149"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:10:38.470 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 21:10:38.481 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:10:38.481 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:10:38.482 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:10:38.482 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:10:40.940 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 21:10:40.942 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:10:40.943 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:10:40.943 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:10:40.994 +03:00 [DBG] Augmenting SignInContext
2019-07-19 21:10:40.994 +03:00 [DBG] Adding idp claim with value: local
2019-07-19 21:10:40.994 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-19 21:10:40.995 +03:00 [DBG] Adding auth_time claim with value: 1563559840
2019-07-19 21:10:40.995 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 21:10:40.996 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOCBHFFRSCT:00000004","TimeStamp":"2019-07-19T18:10:40.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 21:10:40.996 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:10:41.070 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 21:10:41.071 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 21:10:41.071 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 21:10:41.071 +03:00 [DBG] Start authorize callback request
2019-07-19 21:10:41.072 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-19 21:10:41.072 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:10:41.072 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:10:41.073 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:10:41.073 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"870a02a12836434fa4f05d81f0d51fce","UiLocales":null,"Nonce":"5720637de3594f659616d99f69f55149","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"a8d8341b30e8da46feab03fff30992e8","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"870a02a12836434fa4f05d81f0d51fce","nonce":"5720637de3594f659616d99f69f55149"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:10:41.094 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-19 21:10:41.094 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 21:10:41.094 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 21:10:41.094 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-19 21:10:41.117 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-19 21:10:41.118 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 21:10:41.127 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****BQVw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****iFMA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOCBHFFRSCT:00000005","TimeStamp":"2019-07-19T18:10:41.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 21:10:41.127 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"870a02a12836434fa4f05d81f0d51fce","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 21:10:41.127 +03:00 [DBG] Augmenting SignInContext
2019-07-19 21:10:41.128 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 21:10:42.096 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:10:42.096 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:10:42.096 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:10:42.097 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:10:42.098 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:10:42.098 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:10:42.098 +03:00 [DBG] Start discovery request
2019-07-19 21:10:42.186 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 21:10:42.187 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:10:42.187 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:10:42.188 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 21:10:42.189 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 21:10:42.189 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 21:10:42.189 +03:00 [DBG] Start key discovery request
2019-07-19 21:10:42.270 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 21:10:42.270 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:10:42.270 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:10:42.315 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 21:10:42.315 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:10:42.315 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:10:42.316 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 21:10:42.316 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 21:10:42.317 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 21:10:42.317 +03:00 [DBG] Start userinfo request
2019-07-19 21:10:42.317 +03:00 [DBG] Bearer token found in header
2019-07-19 21:10:42.322 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:10:42.322 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:10:42.331 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 21:10:42.332 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563559841,"exp":1563563441,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563559840,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-19 21:10:42.332 +03:00 [DBG] Creating userinfo response
2019-07-19 21:10:42.332 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:10:42.332 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:10:42.332 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 21:10:42.332 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:10:42.340 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 21:10:42.340 +03:00 [DBG] End userinfo request
2019-07-19 21:10:42.400 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 21:10:42.401 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 21:10:42.401 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 21:10:42.401 +03:00 [DBG] Rendering check session result
2019-07-19 21:11:05.284 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:11:05.285 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:11:05.285 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:11:05.285 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:11:05.286 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:11:05.286 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:11:05.286 +03:00 [DBG] Start discovery request
2019-07-19 21:11:05.315 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 21:11:05.316 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 21:11:05.316 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 21:11:05.316 +03:00 [DBG] Start authorize request
2019-07-19 21:11:05.317 +03:00 [DBG] No user present in authorize request
2019-07-19 21:11:05.317 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:11:05.317 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:11:05.318 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:11:05.318 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d4e11e4e634b4355bd071be8fd5ddc64","UiLocales":null,"Nonce":"c16ce5e7b99f40fcac003031f8190aaa","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d4e11e4e634b4355bd071be8fd5ddc64","nonce":"c16ce5e7b99f40fcac003031f8190aaa"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:11:05.318 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 21:11:05.331 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:11:05.332 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:11:05.332 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:11:05.333 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:11:15.054 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-19 21:11:18.837 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 21:11:18.862 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOCBHFFRSCT:00000010","TimeStamp":"2019-07-19T18:11:18.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 21:11:18.862 +03:00 [DBG] Augmenting SignInContext
2019-07-19 21:11:18.862 +03:00 [DBG] Adding amr claim with value: external
2019-07-19 21:11:18.863 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 21:11:18.863 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-19 21:11:18.877 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 21:11:18.878 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 21:11:18.878 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 21:11:18.878 +03:00 [DBG] Start authorize callback request
2019-07-19 21:11:18.878 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-19 21:11:18.879 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:11:18.879 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:11:18.879 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:11:18.879 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d4e11e4e634b4355bd071be8fd5ddc64","UiLocales":null,"Nonce":"c16ce5e7b99f40fcac003031f8190aaa","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2ed956bfa0414311bec85f281455b03f","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d4e11e4e634b4355bd071be8fd5ddc64","nonce":"c16ce5e7b99f40fcac003031f8190aaa"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:11:18.895 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-19 21:11:18.895 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 21:11:18.895 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 21:11:18.896 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-19 21:11:18.910 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-19 21:11:18.910 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 21:11:18.917 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****5fKQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****BB1A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOCBHFFRSCT:00000011","TimeStamp":"2019-07-19T18:11:18.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 21:11:18.917 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"d4e11e4e634b4355bd071be8fd5ddc64","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 21:11:18.919 +03:00 [DBG] Augmenting SignInContext
2019-07-19 21:11:18.919 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 21:11:20.809 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:11:20.809 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:11:20.810 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:11:20.810 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:11:20.810 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:11:20.811 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:11:20.812 +03:00 [DBG] Start discovery request
2019-07-19 21:11:20.952 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 21:11:20.952 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:11:20.953 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:11:20.955 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 21:11:20.956 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 21:11:20.956 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 21:11:20.956 +03:00 [DBG] Start key discovery request
2019-07-19 21:11:21.041 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 21:11:21.041 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:11:21.041 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:11:21.050 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 21:11:21.050 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:11:21.050 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:11:21.051 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 21:11:21.052 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 21:11:21.052 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 21:11:21.052 +03:00 [DBG] Start userinfo request
2019-07-19 21:11:21.052 +03:00 [DBG] Bearer token found in header
2019-07-19 21:11:21.057 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:11:21.057 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:11:21.063 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 21:11:21.064 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563559878,"exp":1563563478,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563559878,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-19 21:11:21.064 +03:00 [DBG] Creating userinfo response
2019-07-19 21:11:21.064 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:11:21.064 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:11:21.064 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 21:11:21.065 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:11:21.072 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 21:11:21.072 +03:00 [DBG] End userinfo request
2019-07-19 21:11:21.098 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 21:11:21.099 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 21:11:21.099 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 21:11:21.099 +03:00 [DBG] Rendering check session result
2019-07-19 21:12:42.045 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:12:42.045 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:12:42.046 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:12:42.046 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:12:42.047 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:12:42.047 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:12:42.047 +03:00 [DBG] Start discovery request
2019-07-19 21:12:42.077 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-19 21:12:42.079 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-19 21:12:42.079 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-19 21:12:42.079 +03:00 [DBG] Start authorize request
2019-07-19 21:12:42.080 +03:00 [DBG] No user present in authorize request
2019-07-19 21:12:42.080 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:12:42.080 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:12:42.080 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:12:42.081 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f86a60259ae345f98ec4df6790654063","UiLocales":null,"Nonce":"0c9fb707ff754359af70c54a6eb73648","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f86a60259ae345f98ec4df6790654063","nonce":"0c9fb707ff754359af70c54a6eb73648"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:12:42.081 +03:00 [INF] Showing login: User is not authenticated
2019-07-19 21:12:42.092 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:12:42.093 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:12:42.093 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:12:42.093 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:12:44.983 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-19 21:12:45.845 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-19 21:12:45.981 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOCBHFFRSCU:00000006","TimeStamp":"2019-07-19T18:12:45.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-19 21:12:45.981 +03:00 [DBG] Augmenting SignInContext
2019-07-19 21:12:45.982 +03:00 [DBG] Adding amr claim with value: external
2019-07-19 21:12:45.982 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 21:12:45.982 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-19 21:12:45.997 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 21:12:45.998 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 21:12:45.998 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 21:12:45.998 +03:00 [DBG] Start authorize callback request
2019-07-19 21:12:45.998 +03:00 [DBG] User in authorize request: f792d6b0-8232-467d-8ec2-b636e2795b99
2019-07-19 21:12:45.998 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:12:45.999 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:12:45.999 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:12:46.000 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f86a60259ae345f98ec4df6790654063","UiLocales":null,"Nonce":"0c9fb707ff754359af70c54a6eb73648","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"64cdde1022b17d02cf2805803a1d3640","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f86a60259ae345f98ec4df6790654063","nonce":"0c9fb707ff754359af70c54a6eb73648"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:12:46.007 +03:00 [DBG] user_consent grant with value: spa|f792d6b0-8232-467d-8ec2-b636e2795b99 not found in store.
2019-07-19 21:12:46.007 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 21:12:46.007 +03:00 [INF] Showing consent: User has not yet consented
2019-07-19 21:12:46.054 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:12:46.055 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:12:46.056 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:12:46.057 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:12:47.570 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-19 21:12:47.576 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:12:47.577 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:12:47.578 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:12:47.579 +03:00 [INF] {"SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOCBHFFRSCU:00000009","TimeStamp":"2019-07-19T18:12:47.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-19 21:12:47.579 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:12:47.599 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-19 21:12:47.600 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-19 21:12:47.600 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-19 21:12:47.600 +03:00 [DBG] Start authorize callback request
2019-07-19 21:12:47.601 +03:00 [DBG] User in authorize request: f792d6b0-8232-467d-8ec2-b636e2795b99
2019-07-19 21:12:47.601 +03:00 [DBG] Start authorize request protocol validation
2019-07-19 21:12:47.601 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:12:47.602 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-19 21:12:47.602 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f86a60259ae345f98ec4df6790654063","UiLocales":null,"Nonce":"0c9fb707ff754359af70c54a6eb73648","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"64cdde1022b17d02cf2805803a1d3640","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f86a60259ae345f98ec4df6790654063","nonce":"0c9fb707ff754359af70c54a6eb73648"},"$type":"AuthorizeRequestValidationLog"}
2019-07-19 21:12:47.607 +03:00 [DBG] user_consent grant with value: spa|f792d6b0-8232-467d-8ec2-b636e2795b99 not found in store.
2019-07-19 21:12:47.608 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-19 21:12:47.608 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-19 21:12:47.609 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-19 21:12:47.609 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: f792d6b0-8232-467d-8ec2-b636e2795b99
2019-07-19 21:12:47.621 +03:00 [DBG] Creating Implicit Flow response.
2019-07-19 21:12:47.621 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-19 21:12:47.621 +03:00 [DBG] Getting claims for access token for subject: f792d6b0-8232-467d-8ec2-b636e2795b99
2019-07-19 21:12:47.638 +03:00 [DBG] Getting claims for identity token for subject: f792d6b0-8232-467d-8ec2-b636e2795b99 and client: spa
2019-07-19 21:12:47.639 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-19 21:12:47.649 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****k1pw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****y3bA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOCBHFFRSCU:0000000A","TimeStamp":"2019-07-19T18:12:47.0000000Z","ProcessId":11676,"LocalIpAddress":"127.0.0.1:47131","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-19 21:12:47.649 +03:00 [INF] Authorize endpoint response
{"SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"f86a60259ae345f98ec4df6790654063","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-19 21:12:47.650 +03:00 [DBG] Augmenting SignInContext
2019-07-19 21:12:47.651 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-19 21:12:48.874 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-19 21:12:48.876 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:12:48.877 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:12:48.877 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 21:12:48.878 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 21:12:48.878 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 21:12:48.878 +03:00 [DBG] Start discovery request
2019-07-19 21:12:48.944 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-19 21:12:48.945 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:12:48.945 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:12:48.945 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 21:12:48.946 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 21:12:48.946 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 21:12:48.946 +03:00 [DBG] Start key discovery request
2019-07-19 21:12:49.084 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 21:12:49.084 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:12:49.084 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:12:49.097 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-19 21:12:49.097 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-19 21:12:49.098 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-19 21:12:49.098 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-19 21:12:49.099 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-19 21:12:49.099 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-19 21:12:49.099 +03:00 [DBG] Start userinfo request
2019-07-19 21:12:49.099 +03:00 [DBG] Bearer token found in header
2019-07-19 21:12:49.104 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:12:49.105 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-19 21:12:49.109 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-19 21:12:49.110 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563559967,"exp":1563563567,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"f792d6b0-8232-467d-8ec2-b636e2795b99","auth_time":1563559965,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-19 21:12:49.110 +03:00 [DBG] Creating userinfo response
2019-07-19 21:12:49.110 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:12:49.110 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:12:49.110 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-19 21:12:49.111 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-19 21:12:49.118 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-19 21:12:49.118 +03:00 [DBG] End userinfo request
2019-07-19 21:12:49.193 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-19 21:12:49.193 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-19 21:12:49.193 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-19 21:12:49.193 +03:00 [DBG] Rendering check session result
2019-07-20 20:09:28.843 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-20 20:09:28.948 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-20 20:09:28.955 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-20 20:09:28.955 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-20 20:09:28.955 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-20 20:09:28.955 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-20 20:09:28.956 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-20 20:09:29.822 +03:00 [DBG] Login Url: /Account/Login
2019-07-20 20:09:29.830 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-20 20:09:29.830 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-20 20:09:29.830 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-20 20:09:29.831 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-20 20:09:29.831 +03:00 [DBG] Error Url: /home/error
2019-07-20 20:09:29.831 +03:00 [DBG] Error Id Parameter: errorId
2019-07-20 20:14:10.686 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-20 20:14:14.206 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 20:14:14.946 +03:00 [DBG] Augmenting SignInContext
2019-07-20 20:14:14.953 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 20:14:14.954 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 20:14:14.955 +03:00 [DBG] Adding auth_time claim with value: 1563642854
2019-07-20 20:14:14.980 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 20:14:15.015 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD6K3CDAM8:00000005","TimeStamp":"2019-07-20T17:14:14.0000000Z","ProcessId":4728,"LocalIpAddress":"127.0.0.1:2681","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 20:58:06.874 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-20 20:58:07.011 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-20 20:58:07.017 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-20 20:58:07.017 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-20 20:58:07.022 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-20 20:58:07.022 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-20 20:58:07.022 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-20 20:58:07.921 +03:00 [DBG] Login Url: /Account/Login
2019-07-20 20:58:07.925 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-20 20:58:07.925 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-20 20:58:07.925 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-20 20:58:07.925 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-20 20:58:07.927 +03:00 [DBG] Error Url: /home/error
2019-07-20 20:58:07.927 +03:00 [DBG] Error Id Parameter: errorId
2019-07-20 20:58:45.458 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 20:58:45.466 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 20:58:45.466 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 20:58:45.473 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 20:58:45.483 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 20:58:45.483 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 20:58:45.490 +03:00 [DBG] Start discovery request
2019-07-20 20:58:45.590 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 20:58:45.600 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 20:58:45.608 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 20:58:45.620 +03:00 [DBG] Start authorize request
2019-07-20 20:58:45.639 +03:00 [DBG] No user present in authorize request
2019-07-20 20:58:45.651 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 20:58:45.694 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 20:58:45.777 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 20:58:45.808 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2fa2dced3893488eb144ef3bf2de613e","UiLocales":null,"Nonce":"592c67b373a94a8091c430882fd6b362","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2fa2dced3893488eb144ef3bf2de613e","nonce":"592c67b373a94a8091c430882fd6b362"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 20:58:45.855 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 20:58:45.971 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 20:58:45.972 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 20:58:45.972 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 20:58:45.978 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 20:58:49.668 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-20 20:58:51.923 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-20 20:58:52.070 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD7F91GBPD:00000002","TimeStamp":"2019-07-20T17:58:52.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 20:58:52.094 +03:00 [DBG] Augmenting SignInContext
2019-07-20 20:58:52.100 +03:00 [DBG] Adding amr claim with value: external
2019-07-20 20:58:52.108 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 20:58:52.119 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-20 20:58:52.136 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 20:58:52.138 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 20:58:52.138 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 20:58:52.152 +03:00 [DBG] Start authorize callback request
2019-07-20 20:58:52.162 +03:00 [DBG] User in authorize request: f792d6b0-8232-467d-8ec2-b636e2795b99
2019-07-20 20:58:52.162 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 20:58:52.162 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 20:58:52.162 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 20:58:52.163 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2fa2dced3893488eb144ef3bf2de613e","UiLocales":null,"Nonce":"592c67b373a94a8091c430882fd6b362","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2630fede7dcc1b4d079a3e46f4b40be7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2fa2dced3893488eb144ef3bf2de613e","nonce":"592c67b373a94a8091c430882fd6b362"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 20:58:52.205 +03:00 [DBG] user_consent grant with value: spa|f792d6b0-8232-467d-8ec2-b636e2795b99 not found in store.
2019-07-20 20:58:52.206 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 20:58:52.206 +03:00 [INF] Showing consent: User has not yet consented
2019-07-20 20:58:52.257 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 20:58:52.257 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 20:58:52.258 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 20:58:52.258 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 20:58:54.404 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 20:58:54.512 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 20:58:54.512 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 20:58:54.513 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 20:58:54.515 +03:00 [INF] {"SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOD7F91GBP8:00000004","TimeStamp":"2019-07-20T17:58:54.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-20 20:58:54.552 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 20:58:54.567 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 20:58:54.569 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 20:58:54.569 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 20:58:54.569 +03:00 [DBG] Start authorize callback request
2019-07-20 20:58:54.586 +03:00 [DBG] User in authorize request: f792d6b0-8232-467d-8ec2-b636e2795b99
2019-07-20 20:58:54.586 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 20:58:54.587 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 20:58:54.587 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 20:58:54.588 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2fa2dced3893488eb144ef3bf2de613e","UiLocales":null,"Nonce":"592c67b373a94a8091c430882fd6b362","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2630fede7dcc1b4d079a3e46f4b40be7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2fa2dced3893488eb144ef3bf2de613e","nonce":"592c67b373a94a8091c430882fd6b362"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 20:58:54.615 +03:00 [DBG] user_consent grant with value: spa|f792d6b0-8232-467d-8ec2-b636e2795b99 not found in store.
2019-07-20 20:58:54.615 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 20:58:54.661 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-20 20:58:54.676 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-20 20:58:54.715 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: f792d6b0-8232-467d-8ec2-b636e2795b99
2019-07-20 20:58:54.814 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 20:58:54.849 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 20:58:54.850 +03:00 [DBG] Getting claims for access token for subject: f792d6b0-8232-467d-8ec2-b636e2795b99
2019-07-20 20:58:55.042 +03:00 [DBG] Getting claims for identity token for subject: f792d6b0-8232-467d-8ec2-b636e2795b99 and client: spa
2019-07-20 20:58:55.043 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 20:58:55.061 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****D7EA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****L85Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBP9:00000003","TimeStamp":"2019-07-20T17:58:55.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 20:58:55.064 +03:00 [INF] Authorize endpoint response
{"SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"2fa2dced3893488eb144ef3bf2de613e","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 20:58:55.108 +03:00 [DBG] Augmenting SignInContext
2019-07-20 20:58:55.110 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 20:58:56.251 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 20:58:56.251 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 20:58:56.252 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 20:58:56.253 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 20:58:56.254 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 20:58:56.254 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 20:58:56.254 +03:00 [DBG] Start discovery request
2019-07-20 20:58:56.349 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 20:58:56.349 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 20:58:56.349 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 20:58:56.350 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 20:58:56.351 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 20:58:56.352 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 20:58:56.364 +03:00 [DBG] Start key discovery request
2019-07-20 20:58:56.494 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 20:58:56.497 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 20:58:56.497 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 20:58:56.546 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 20:58:56.547 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 20:58:56.547 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 20:58:56.548 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 20:58:56.556 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 20:58:56.556 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 20:58:56.578 +03:00 [DBG] Start userinfo request
2019-07-20 20:58:56.597 +03:00 [DBG] Bearer token found in header
2019-07-20 20:58:56.691 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 20:58:56.698 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 20:58:56.704 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 20:58:56.707 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563645534,"exp":1563649134,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"f792d6b0-8232-467d-8ec2-b636e2795b99","auth_time":1563645532,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-20 20:58:56.723 +03:00 [DBG] Creating userinfo response
2019-07-20 20:58:56.735 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 20:58:56.740 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 20:58:56.748 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 20:58:56.748 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 20:58:56.757 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 20:58:56.758 +03:00 [DBG] End userinfo request
2019-07-20 20:58:56.812 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 20:58:56.814 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 20:58:56.814 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 20:58:56.817 +03:00 [DBG] Rendering check session result
2019-07-20 20:59:26.641 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 20:59:26.642 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 20:59:26.642 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 20:59:26.643 +03:00 [DBG] Start discovery request
2019-07-20 20:59:27.067 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 20:59:27.068 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 20:59:27.068 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 20:59:27.068 +03:00 [DBG] Start key discovery request
2019-07-20 21:02:55.244 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:02:55.254 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:02:55.254 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:02:55.255 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:02:55.259 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:02:55.259 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:02:55.259 +03:00 [DBG] Start discovery request
2019-07-20 21:02:55.706 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:02:55.707 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:02:55.707 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:02:55.708 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:02:55.709 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:02:55.709 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:02:55.710 +03:00 [DBG] Start discovery request
2019-07-20 21:02:55.776 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 21:02:55.782 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 21:02:55.782 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 21:02:55.783 +03:00 [DBG] Start authorize request
2019-07-20 21:02:55.792 +03:00 [DBG] User in authorize request: f792d6b0-8232-467d-8ec2-b636e2795b99
2019-07-20 21:02:55.793 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:02:55.795 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:02:55.802 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:02:55.808 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c3aaea3ebeb64e1190fc73bb9b864c19","UiLocales":null,"Nonce":"63a7f7fa3b3449c2b9e25c05a4f25a6b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2630fede7dcc1b4d079a3e46f4b40be7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c3aaea3ebeb64e1190fc73bb9b864c19","nonce":"63a7f7fa3b3449c2b9e25c05a4f25a6b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 21:02:55.844 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:02:55.845 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:02:55.845 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:02:55.846 +03:00 [DBG] Rendering check session result
2019-07-20 21:02:55.950 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 21:02:55.950 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 21:02:55.951 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 21:02:55.951 +03:00 [DBG] Getting claims for access token for subject: f792d6b0-8232-467d-8ec2-b636e2795b99
2019-07-20 21:02:55.994 +03:00 [DBG] Getting claims for identity token for subject: f792d6b0-8232-467d-8ec2-b636e2795b99 and client: spa
2019-07-20 21:02:55.994 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 21:02:56.007 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****2Vsw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9rBw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPE:00000003","TimeStamp":"2019-07-20T18:02:56.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 21:02:56.011 +03:00 [INF] Authorize endpoint response
{"SubjectId":"f792d6b0-8232-467d-8ec2-b636e2795b99","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"c3aaea3ebeb64e1190fc73bb9b864c19","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 21:02:57.799 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:02:57.799 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:02:57.799 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:02:57.800 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:02:57.801 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:02:57.801 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:02:57.802 +03:00 [DBG] Start discovery request
2019-07-20 21:02:57.869 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:02:57.869 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:02:57.870 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:02:57.871 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:02:57.871 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:02:57.872 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:02:57.872 +03:00 [DBG] Start discovery request
2019-07-20 21:02:57.892 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:02:57.894 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:02:57.894 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:02:57.894 +03:00 [DBG] Rendering check session result
2019-07-20 21:02:57.981 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 21:02:57.982 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:02:57.982 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:02:57.982 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 21:02:57.983 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 21:02:57.983 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 21:02:57.983 +03:00 [DBG] Start key discovery request
2019-07-20 21:02:58.154 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 21:02:58.154 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:02:58.155 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:02:58.201 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 21:02:58.202 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:02:58.202 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:02:58.203 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 21:02:58.204 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 21:02:58.205 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 21:02:58.205 +03:00 [DBG] Start userinfo request
2019-07-20 21:02:58.205 +03:00 [DBG] Bearer token found in header
2019-07-20 21:02:58.215 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:02:58.216 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:02:58.221 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 21:02:58.222 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563645775,"exp":1563649375,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"f792d6b0-8232-467d-8ec2-b636e2795b99","auth_time":1563645532,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-20 21:02:58.222 +03:00 [DBG] Creating userinfo response
2019-07-20 21:02:58.223 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 21:02:58.223 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 21:02:58.223 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 21:02:58.223 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 21:02:58.231 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 21:02:58.231 +03:00 [DBG] End userinfo request
2019-07-20 21:05:18.091 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:05:18.094 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:05:18.094 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:05:18.099 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:05:18.107 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:05:18.108 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:05:18.108 +03:00 [DBG] Start discovery request
2019-07-20 21:05:18.223 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:05:18.224 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:05:18.224 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:05:18.224 +03:00 [DBG] Rendering check session result
2019-07-20 21:06:02.223 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:06:02.223 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:06:02.223 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:06:02.224 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:06:02.224 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:06:02.224 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:06:02.224 +03:00 [DBG] Start discovery request
2019-07-20 21:06:02.327 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:06:02.327 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:06:02.327 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:06:02.328 +03:00 [DBG] Rendering check session result
2019-07-20 21:06:26.200 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:06:26.280 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:06:26.281 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:06:26.281 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:06:26.282 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:06:26.282 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:06:26.282 +03:00 [DBG] Start discovery request
2019-07-20 21:06:26.481 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:06:26.481 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:06:26.481 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:06:26.481 +03:00 [DBG] Rendering check session result
2019-07-20 21:06:43.160 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:06:43.161 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:06:43.161 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:06:43.163 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:06:43.163 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:06:43.163 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:06:43.163 +03:00 [DBG] Start discovery request
2019-07-20 21:06:43.254 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:06:43.254 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:06:43.255 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:06:43.255 +03:00 [DBG] Rendering check session result
2019-07-20 21:07:02.002 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:07:02.003 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:07:02.004 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:07:02.006 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:07:02.006 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:07:02.006 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:07:02.006 +03:00 [DBG] Start discovery request
2019-07-20 21:07:02.400 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:07:02.400 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:07:02.400 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:07:02.409 +03:00 [DBG] Rendering check session result
2019-07-20 21:07:13.743 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:07:13.745 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:07:13.745 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:07:13.747 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:07:13.748 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:07:13.748 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:07:13.748 +03:00 [DBG] Start discovery request
2019-07-20 21:07:13.940 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:07:13.940 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:07:13.940 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:07:13.941 +03:00 [DBG] Rendering check session result
2019-07-20 21:13:14.629 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:13:14.678 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:13:14.678 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:13:14.731 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:13:14.790 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:13:14.790 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:13:14.791 +03:00 [DBG] Start discovery request
2019-07-20 21:13:14.954 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:13:14.955 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:13:14.956 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:13:14.957 +03:00 [DBG] Rendering check session result
2019-07-20 21:13:43.081 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:13:43.082 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:13:43.082 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:13:43.082 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:13:43.083 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:13:43.083 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:13:43.083 +03:00 [DBG] Start discovery request
2019-07-20 21:13:43.155 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:13:43.155 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:13:43.155 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:13:43.156 +03:00 [DBG] Rendering check session result
2019-07-20 21:14:05.351 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:14:05.353 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:14:05.353 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:14:05.354 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:14:05.355 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:14:05.355 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:14:05.355 +03:00 [DBG] Start discovery request
2019-07-20 21:14:05.519 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:14:05.520 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:14:05.520 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:14:05.520 +03:00 [DBG] Rendering check session result
2019-07-20 21:14:24.050 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:14:24.051 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:14:24.051 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:14:24.052 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:14:24.053 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:14:24.054 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:14:24.054 +03:00 [DBG] Start discovery request
2019-07-20 21:14:24.168 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:14:24.169 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:14:24.169 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:14:24.169 +03:00 [DBG] Rendering check session result
2019-07-20 21:17:15.804 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:17:15.810 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:17:15.811 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:17:15.816 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:17:15.823 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:17:15.824 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:17:15.824 +03:00 [DBG] Start discovery request
2019-07-20 21:17:15.865 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 21:17:15.875 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 21:17:15.875 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 21:17:15.876 +03:00 [DBG] Start authorize request
2019-07-20 21:17:15.884 +03:00 [DBG] No user present in authorize request
2019-07-20 21:17:15.885 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:17:15.890 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:15.896 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:17:15.909 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2fbabea080f349dda55404c5ce50b1eb","UiLocales":null,"Nonce":"226a704ae0d048feb18877a7a13bf822","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2fbabea080f349dda55404c5ce50b1eb","nonce":"226a704ae0d048feb18877a7a13bf822"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 21:17:15.911 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 21:17:15.999 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:17:15.999 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:16.000 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:17:16.002 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:18.408 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 21:17:18.892 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:17:18.892 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:18.893 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:17:19.185 +03:00 [DBG] Augmenting SignInContext
2019-07-20 21:17:19.186 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 21:17:19.186 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 21:17:19.186 +03:00 [DBG] Adding auth_time claim with value: 1563646639
2019-07-20 21:17:19.199 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 21:17:19.204 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD7F91GBPI:00000004","TimeStamp":"2019-07-20T18:17:19.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 21:17:19.206 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:19.233 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 21:17:19.235 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 21:17:19.236 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 21:17:19.236 +03:00 [DBG] Start authorize callback request
2019-07-20 21:17:19.239 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 21:17:19.240 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:17:19.240 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:19.240 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:17:19.241 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2fbabea080f349dda55404c5ce50b1eb","UiLocales":null,"Nonce":"226a704ae0d048feb18877a7a13bf822","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df488d51562bfc30f95a8f489e8d3386","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2fbabea080f349dda55404c5ce50b1eb","nonce":"226a704ae0d048feb18877a7a13bf822"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 21:17:19.256 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-20 21:17:19.256 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 21:17:19.256 +03:00 [INF] Showing consent: User has not yet consented
2019-07-20 21:17:19.290 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:17:19.290 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:19.292 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:17:19.292 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:21.046 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 21:17:21.051 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:17:21.052 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:21.053 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:17:21.053 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOD7F91GBPI:00000007","TimeStamp":"2019-07-20T18:17:21.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-20 21:17:21.055 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:21.072 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 21:17:21.072 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 21:17:21.072 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 21:17:21.072 +03:00 [DBG] Start authorize callback request
2019-07-20 21:17:21.077 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 21:17:21.077 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:17:21.078 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:21.078 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:17:21.079 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2fbabea080f349dda55404c5ce50b1eb","UiLocales":null,"Nonce":"226a704ae0d048feb18877a7a13bf822","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df488d51562bfc30f95a8f489e8d3386","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2fbabea080f349dda55404c5ce50b1eb","nonce":"226a704ae0d048feb18877a7a13bf822"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 21:17:21.084 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-20 21:17:21.085 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 21:17:21.087 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-20 21:17:21.087 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-20 21:17:21.088 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 21:17:21.112 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 21:17:21.112 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 21:17:21.113 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 21:17:21.130 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 21:17:21.130 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 21:17:21.139 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****YOiA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****JA7g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPI:00000008","TimeStamp":"2019-07-20T18:17:21.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 21:17:21.140 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"2fbabea080f349dda55404c5ce50b1eb","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 21:17:21.142 +03:00 [DBG] Augmenting SignInContext
2019-07-20 21:17:21.144 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 21:17:23.020 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:17:23.021 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:17:23.021 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:17:23.027 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:17:23.028 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:17:23.028 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:17:23.028 +03:00 [DBG] Start discovery request
2019-07-20 21:17:23.195 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 21:17:23.197 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:17:23.197 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:17:23.197 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 21:17:23.198 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 21:17:23.198 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 21:17:23.198 +03:00 [DBG] Start key discovery request
2019-07-20 21:17:23.403 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 21:17:23.404 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:17:23.405 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:17:23.525 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 21:17:23.525 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:17:23.525 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:17:23.526 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 21:17:23.528 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 21:17:23.528 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 21:17:23.528 +03:00 [DBG] Start userinfo request
2019-07-20 21:17:23.528 +03:00 [DBG] Bearer token found in header
2019-07-20 21:17:23.571 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:23.571 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:17:23.580 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 21:17:23.581 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563646641,"exp":1563650241,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563646639,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 21:17:23.581 +03:00 [DBG] Creating userinfo response
2019-07-20 21:17:23.581 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 21:17:23.581 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 21:17:23.581 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 21:17:23.582 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 21:17:23.588 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 21:17:23.588 +03:00 [DBG] End userinfo request
2019-07-20 21:17:23.648 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:17:23.649 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:17:23.649 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:17:23.649 +03:00 [DBG] Rendering check session result
2019-07-20 21:19:06.666 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:19:06.666 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:19:06.666 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:19:06.667 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:19:06.668 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:19:06.668 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:19:06.668 +03:00 [DBG] Start discovery request
2019-07-20 21:19:06.742 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:19:06.742 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:19:06.742 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:19:06.743 +03:00 [DBG] Rendering check session result
2019-07-20 21:50:15.951 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:50:15.961 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:50:15.961 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:50:15.979 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:50:16.003 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:50:16.004 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:50:16.004 +03:00 [DBG] Start discovery request
2019-07-20 21:50:16.200 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 21:50:16.203 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 21:50:16.203 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 21:50:16.203 +03:00 [DBG] Start authorize request
2019-07-20 21:50:16.206 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 21:50:16.206 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:50:16.208 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:50:16.211 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:50:16.219 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b920c69b75454e46b8e0f35c979ed0e0","UiLocales":null,"Nonce":"67fb8158f2e840b5b555187c3f5a22d7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df488d51562bfc30f95a8f489e8d3386","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b920c69b75454e46b8e0f35c979ed0e0","nonce":"67fb8158f2e840b5b555187c3f5a22d7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 21:50:16.269 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 21:50:16.269 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 21:50:16.269 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 21:50:16.269 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 21:50:16.296 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 21:50:16.296 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 21:50:16.310 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****TRkw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****UzuQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPK:00000002","TimeStamp":"2019-07-20T18:50:16.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 21:50:16.312 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"b920c69b75454e46b8e0f35c979ed0e0","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 21:50:17.720 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:50:17.720 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:50:17.720 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:50:17.721 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:50:17.723 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:50:17.723 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:50:17.723 +03:00 [DBG] Start discovery request
2019-07-20 21:50:17.824 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 21:50:17.824 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:50:17.824 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:50:17.825 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 21:50:17.826 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 21:50:17.826 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 21:50:17.826 +03:00 [DBG] Start key discovery request
2019-07-20 21:50:17.935 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 21:50:17.936 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:50:17.937 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:50:17.958 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 21:50:17.958 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:50:17.959 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:50:17.959 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 21:50:17.961 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 21:50:17.962 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 21:50:17.962 +03:00 [DBG] Start userinfo request
2019-07-20 21:50:17.962 +03:00 [DBG] Bearer token found in header
2019-07-20 21:50:17.972 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:50:17.973 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:50:17.979 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 21:50:17.980 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563648616,"exp":1563652216,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563646639,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 21:50:17.981 +03:00 [DBG] Creating userinfo response
2019-07-20 21:50:17.981 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 21:50:17.981 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 21:50:17.982 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 21:50:17.983 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 21:50:17.990 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 21:50:17.990 +03:00 [DBG] End userinfo request
2019-07-20 21:50:18.056 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:50:18.057 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:50:18.057 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:50:18.057 +03:00 [DBG] Rendering check session result
2019-07-20 21:50:37.819 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 21:50:37.874 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-20 21:50:37.875 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-20 21:50:37.882 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-20 21:50:37.884 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOD7F91GBPK:0000000A","TimeStamp":"2019-07-20T18:50:37.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-20 21:50:38.037 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-20 21:50:38.059 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-20 21:50:38.060 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-20 21:50:38.087 +03:00 [DBG] Processing signout callback request
2019-07-20 21:50:38.155 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:50:38.157 +03:00 [DBG] No client front-channel logout URLs
2019-07-20 21:50:38.157 +03:00 [DBG] No client back-channel logout URLs
2019-07-20 21:50:38.157 +03:00 [INF] Successful signout callback.
2019-07-20 21:50:38.157 +03:00 [DBG] No client front-channel iframe urls
2019-07-20 21:50:38.158 +03:00 [DBG] No client back-channel iframe urls
2019-07-20 21:58:24.828 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:58:24.869 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:58:24.870 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:58:24.908 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:58:24.983 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:58:24.984 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:58:24.985 +03:00 [DBG] Start discovery request
2019-07-20 21:58:25.138 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 21:58:25.151 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 21:58:25.151 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 21:58:25.152 +03:00 [DBG] Start authorize request
2019-07-20 21:58:25.202 +03:00 [DBG] No user present in authorize request
2019-07-20 21:58:25.202 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:58:25.207 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:58:25.216 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:58:25.241 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"11ce969a36684b10a0434cefa50a2e77","UiLocales":null,"Nonce":"f3ea7eab49444044bb9e965a4bfe96d6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"11ce969a36684b10a0434cefa50a2e77","nonce":"f3ea7eab49444044bb9e965a4bfe96d6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 21:58:25.242 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 21:58:25.390 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:58:25.392 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:58:25.396 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:58:25.398 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:58:28.790 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 21:58:28.816 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:58:28.817 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:58:28.820 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:58:29.344 +03:00 [DBG] Augmenting SignInContext
2019-07-20 21:58:29.345 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 21:58:29.346 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 21:58:29.346 +03:00 [DBG] Adding auth_time claim with value: 1563649109
2019-07-20 21:58:29.351 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 21:58:29.357 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD7F91GBPL:00000004","TimeStamp":"2019-07-20T18:58:29.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 21:58:29.360 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:58:29.385 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 21:58:29.389 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 21:58:29.389 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 21:58:29.389 +03:00 [DBG] Start authorize callback request
2019-07-20 21:58:29.394 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 21:58:29.395 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 21:58:29.395 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:58:29.395 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 21:58:29.397 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"11ce969a36684b10a0434cefa50a2e77","UiLocales":null,"Nonce":"f3ea7eab49444044bb9e965a4bfe96d6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"385b4f4819c7c7dacf4f5371dd90aa14","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"11ce969a36684b10a0434cefa50a2e77","nonce":"f3ea7eab49444044bb9e965a4bfe96d6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 21:58:29.473 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 21:58:29.474 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 21:58:29.475 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 21:58:29.476 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 21:58:29.516 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 21:58:29.516 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 21:58:29.529 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****bKjg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****nZhw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPL:00000005","TimeStamp":"2019-07-20T18:58:29.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 21:58:29.530 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"11ce969a36684b10a0434cefa50a2e77","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 21:58:29.531 +03:00 [DBG] Augmenting SignInContext
2019-07-20 21:58:29.532 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 21:58:31.003 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:58:31.004 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:58:31.004 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:58:31.004 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:58:31.008 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:58:31.008 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:58:31.008 +03:00 [DBG] Start discovery request
2019-07-20 21:58:31.102 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 21:58:31.103 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:58:31.103 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:58:31.104 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 21:58:31.108 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 21:58:31.109 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 21:58:31.109 +03:00 [DBG] Start key discovery request
2019-07-20 21:58:31.210 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 21:58:31.210 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:58:31.211 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:58:31.249 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 21:58:31.249 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:58:31.249 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:58:31.250 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 21:58:31.251 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 21:58:31.251 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 21:58:31.251 +03:00 [DBG] Start userinfo request
2019-07-20 21:58:31.252 +03:00 [DBG] Bearer token found in header
2019-07-20 21:58:31.261 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:58:31.261 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 21:58:31.270 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 21:58:31.271 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563649109,"exp":1563652709,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563649109,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 21:58:31.276 +03:00 [DBG] Creating userinfo response
2019-07-20 21:58:31.280 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 21:58:31.280 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 21:58:31.285 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 21:58:31.289 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 21:58:31.378 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 21:58:31.378 +03:00 [DBG] End userinfo request
2019-07-20 21:58:31.520 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:58:31.521 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:58:31.521 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:58:31.522 +03:00 [DBG] Rendering check session result
2019-07-20 21:59:51.404 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 21:59:51.404 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 21:59:51.405 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 21:59:51.406 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 21:59:51.407 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 21:59:51.407 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 21:59:51.407 +03:00 [DBG] Start discovery request
2019-07-20 21:59:51.510 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 21:59:51.511 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 21:59:51.512 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 21:59:51.512 +03:00 [DBG] Rendering check session result
2019-07-20 22:01:01.981 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:01:01.983 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:01:01.983 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:01:01.984 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:01:01.984 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:01:01.985 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:01:01.985 +03:00 [DBG] Start discovery request
2019-07-20 22:01:02.155 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:01:02.155 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:01:02.155 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:01:02.156 +03:00 [DBG] Rendering check session result
2019-07-20 22:02:31.563 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:02:31.563 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:02:31.563 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:02:31.564 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:02:31.564 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:02:31.564 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:02:31.565 +03:00 [DBG] Start discovery request
2019-07-20 22:02:31.836 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:02:31.836 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:02:31.837 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:02:31.837 +03:00 [DBG] Rendering check session result
2019-07-20 22:03:05.765 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:03:05.769 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:03:05.770 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:03:05.770 +03:00 [DBG] Start authorize request
2019-07-20 22:03:05.775 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:03:05.775 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:03:05.779 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:03:05.783 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:03:05.787 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0dfafbcc1cb0439dbf4351301baa1b12","UiLocales":null,"Nonce":"579fac1e42cc4996b3c235383530168a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"385b4f4819c7c7dacf4f5371dd90aa14","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0dfafbcc1cb0439dbf4351301baa1b12","nonce":"579fac1e42cc4996b3c235383530168a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:03:05.881 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 22:03:05.882 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:03:05.882 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:03:05.882 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:03:05.919 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:03:05.921 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:03:05.941 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****7YqQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****F44A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPO:00000003","TimeStamp":"2019-07-20T19:03:05.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:03:05.943 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"0dfafbcc1cb0439dbf4351301baa1b12","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:03:07.961 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:03:07.961 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:03:07.961 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:03:07.962 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:03:07.964 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:03:07.964 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:03:07.964 +03:00 [DBG] Start discovery request
2019-07-20 22:03:08.078 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:03:08.079 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:03:08.079 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:03:08.080 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:03:08.081 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:03:08.082 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:03:08.082 +03:00 [DBG] Start discovery request
2019-07-20 22:03:08.212 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:03:08.213 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:03:08.213 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:03:08.213 +03:00 [DBG] Rendering check session result
2019-07-20 22:03:08.316 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:03:08.326 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:03:08.326 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:03:08.326 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:03:08.329 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:03:08.329 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:03:08.329 +03:00 [DBG] Start key discovery request
2019-07-20 22:03:08.546 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:03:08.547 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:03:08.547 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:03:08.670 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:03:08.671 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:03:08.671 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:03:08.671 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:03:08.719 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:03:08.720 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:03:08.720 +03:00 [DBG] Start userinfo request
2019-07-20 22:03:08.723 +03:00 [DBG] Bearer token found in header
2019-07-20 22:03:08.733 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:03:08.734 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:03:08.739 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:03:08.740 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563649385,"exp":1563652985,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563649109,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:03:08.741 +03:00 [DBG] Creating userinfo response
2019-07-20 22:03:08.741 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:03:08.741 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:03:08.742 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:03:08.742 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:03:08.760 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:03:08.760 +03:00 [DBG] End userinfo request
2019-07-20 22:03:17.602 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:03:17.602 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:03:17.602 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:03:17.602 +03:00 [DBG] Start authorize request
2019-07-20 22:03:17.602 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:03:17.603 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:03:17.603 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:03:17.603 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:03:17.605 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d322836cf7a24785a190bc71d2547a80","UiLocales":null,"Nonce":"1b48d7ec531046ae8c52d7be676f967a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"385b4f4819c7c7dacf4f5371dd90aa14","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d322836cf7a24785a190bc71d2547a80","nonce":"1b48d7ec531046ae8c52d7be676f967a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:03:17.623 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 22:03:17.623 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:03:17.623 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:03:17.624 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:03:17.642 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:03:17.643 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:03:17.655 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****wzzA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****lb0Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPO:0000000A","TimeStamp":"2019-07-20T19:03:17.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:03:17.656 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"d322836cf7a24785a190bc71d2547a80","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:03:18.967 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:03:18.974 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:03:18.974 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:03:18.974 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:03:18.978 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:03:18.978 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:03:18.978 +03:00 [DBG] Start discovery request
2019-07-20 22:03:19.070 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:03:19.070 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:03:19.070 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:03:19.071 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:03:19.083 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:03:19.083 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:03:19.083 +03:00 [DBG] Start discovery request
2019-07-20 22:03:19.098 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:03:19.098 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:03:19.098 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:03:19.098 +03:00 [DBG] Rendering check session result
2019-07-20 22:03:19.125 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:03:19.125 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:03:19.125 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:03:19.126 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:03:19.127 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:03:19.127 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:03:19.127 +03:00 [DBG] Start key discovery request
2019-07-20 22:03:19.196 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:03:19.196 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:03:19.196 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:03:19.210 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:03:19.211 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:03:19.211 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:03:19.212 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:03:19.214 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:03:19.215 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:03:19.215 +03:00 [DBG] Start userinfo request
2019-07-20 22:03:19.216 +03:00 [DBG] Bearer token found in header
2019-07-20 22:03:19.222 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:03:19.222 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:03:19.238 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:03:19.240 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563649397,"exp":1563652997,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563649109,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:03:19.240 +03:00 [DBG] Creating userinfo response
2019-07-20 22:03:19.240 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:03:19.240 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:03:19.241 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:03:19.241 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:03:19.250 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:03:19.250 +03:00 [DBG] End userinfo request
2019-07-20 22:09:24.296 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:09:24.311 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:09:24.311 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:09:24.328 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:09:24.360 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:09:24.361 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:09:24.362 +03:00 [DBG] Start discovery request
2019-07-20 22:09:29.472 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:09:29.473 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:09:29.473 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:09:29.475 +03:00 [DBG] Rendering check session result
2019-07-20 22:10:02.933 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:10:02.934 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:10:02.934 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:10:02.935 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:10:02.938 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:10:02.940 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:10:02.940 +03:00 [DBG] Start discovery request
2019-07-20 22:10:03.894 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:10:03.894 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:10:03.895 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:10:03.895 +03:00 [DBG] Rendering check session result
2019-07-20 22:10:12.023 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:10:12.031 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:10:12.032 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:10:12.033 +03:00 [DBG] Start authorize request
2019-07-20 22:10:12.038 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:10:12.038 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:10:12.040 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:10:12.044 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:10:12.050 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"81ef10c3e54244cf98722abcbd7ac28c","UiLocales":null,"Nonce":"592f2ead1a2d45de98530033f86f8268","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"385b4f4819c7c7dacf4f5371dd90aa14","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"81ef10c3e54244cf98722abcbd7ac28c","nonce":"592f2ead1a2d45de98530033f86f8268"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:10:12.109 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 22:10:12.109 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:10:12.109 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:10:12.109 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:10:12.135 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:10:12.135 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:10:12.144 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****mg4A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Sovw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPP:00000005","TimeStamp":"2019-07-20T19:10:12.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:10:12.146 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"81ef10c3e54244cf98722abcbd7ac28c","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:10:13.497 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:10:13.497 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:10:13.497 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:10:13.499 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:10:13.500 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:10:13.500 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:10:13.501 +03:00 [DBG] Start discovery request
2019-07-20 22:10:13.629 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:10:13.630 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:10:13.630 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:10:13.631 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:10:13.631 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:10:13.631 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:10:13.631 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:10:13.631 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:10:13.632 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:10:13.632 +03:00 [DBG] Rendering check session result
2019-07-20 22:10:13.632 +03:00 [DBG] Start discovery request
2019-07-20 22:10:13.676 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:10:13.676 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:10:13.676 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:10:13.677 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:10:13.680 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:10:13.681 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:10:13.681 +03:00 [DBG] Start key discovery request
2019-07-20 22:10:13.791 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:10:13.791 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:10:13.795 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:10:13.809 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:10:13.809 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:10:13.810 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:10:13.811 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:10:13.812 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:10:13.812 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:10:13.812 +03:00 [DBG] Start userinfo request
2019-07-20 22:10:13.812 +03:00 [DBG] Bearer token found in header
2019-07-20 22:10:13.819 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:10:13.819 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:10:13.826 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:10:13.827 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563649812,"exp":1563653412,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563649109,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:10:13.828 +03:00 [DBG] Creating userinfo response
2019-07-20 22:10:13.828 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:10:13.828 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:10:13.828 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:10:13.828 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:10:13.835 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:10:13.836 +03:00 [DBG] End userinfo request
2019-07-20 22:12:04.923 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:12:04.923 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:12:04.923 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:12:04.924 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:12:04.924 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:12:04.925 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:12:04.925 +03:00 [DBG] Start discovery request
2019-07-20 22:12:04.944 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:12:04.944 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:12:04.944 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:12:04.944 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:12:04.945 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:12:04.945 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:12:04.945 +03:00 [DBG] Start discovery request
2019-07-20 22:12:05.040 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:12:05.040 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:12:05.040 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:12:05.040 +03:00 [DBG] Rendering check session result
2019-07-20 22:12:05.071 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:12:05.072 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:12:05.072 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:12:05.072 +03:00 [DBG] Start authorize request
2019-07-20 22:12:05.072 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:12:05.072 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:12:05.073 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:12:05.074 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:12:05.075 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"17477117c5d84f97b2c5f3935d0e6f8a","UiLocales":null,"Nonce":"8cc01e0f23e543f58613c1feda674379","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"385b4f4819c7c7dacf4f5371dd90aa14","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"17477117c5d84f97b2c5f3935d0e6f8a","nonce":"8cc01e0f23e543f58613c1feda674379"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:12:05.109 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 22:12:05.110 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:12:05.110 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:12:05.110 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:12:05.131 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:12:05.131 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:12:05.142 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****5o5A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****wmzg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPR:00000004","TimeStamp":"2019-07-20T19:12:05.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:12:05.142 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"17477117c5d84f97b2c5f3935d0e6f8a","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:12:07.515 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:12:07.516 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:12:07.517 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:12:07.517 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:12:07.518 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:12:07.518 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:12:07.518 +03:00 [DBG] Start discovery request
2019-07-20 22:12:07.533 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:12:07.533 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:12:07.533 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:12:07.534 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:12:07.534 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:12:07.534 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:12:07.534 +03:00 [DBG] Start discovery request
2019-07-20 22:12:07.679 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:12:07.680 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:12:07.680 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:12:07.680 +03:00 [DBG] Rendering check session result
2019-07-20 22:12:07.683 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:12:07.683 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:12:07.683 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:12:07.684 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:12:07.685 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:12:07.685 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:12:07.685 +03:00 [DBG] Start key discovery request
2019-07-20 22:12:07.747 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:12:07.748 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:12:07.748 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:12:07.758 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:12:07.759 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:12:08.713 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:12:08.714 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:12:08.715 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:12:08.715 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:12:08.715 +03:00 [DBG] Start userinfo request
2019-07-20 22:12:08.715 +03:00 [DBG] Bearer token found in header
2019-07-20 22:12:08.720 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:12:08.720 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:12:08.728 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:12:08.729 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563649925,"exp":1563653525,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563649109,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:12:08.730 +03:00 [DBG] Creating userinfo response
2019-07-20 22:12:08.730 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:12:08.730 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:12:08.730 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:12:08.730 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:12:08.739 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:12:08.739 +03:00 [DBG] End userinfo request
2019-07-20 22:14:28.351 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:14:28.370 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-20 22:14:28.371 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-20 22:14:28.372 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-20 22:14:28.373 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOD7F91GBPT:00000002","TimeStamp":"2019-07-20T19:14:28.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-20 22:14:28.448 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-20 22:14:28.462 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-20 22:14:28.462 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-20 22:14:28.463 +03:00 [DBG] Processing signout callback request
2019-07-20 22:14:28.465 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:14:28.465 +03:00 [DBG] No client front-channel logout URLs
2019-07-20 22:14:28.465 +03:00 [DBG] No client back-channel logout URLs
2019-07-20 22:14:28.465 +03:00 [INF] Successful signout callback.
2019-07-20 22:14:28.465 +03:00 [DBG] No client front-channel iframe urls
2019-07-20 22:14:28.465 +03:00 [DBG] No client back-channel iframe urls
2019-07-20 22:18:34.550 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:18:34.552 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:18:34.552 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:18:34.557 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:18:34.562 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:18:34.562 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:18:34.562 +03:00 [DBG] Start discovery request
2019-07-20 22:18:34.618 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:18:34.626 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:18:34.626 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:18:34.627 +03:00 [DBG] Start authorize request
2019-07-20 22:18:34.627 +03:00 [DBG] No user present in authorize request
2019-07-20 22:18:34.627 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:18:34.629 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:18:34.637 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:18:34.641 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"676c21350d7549689f29fb2e12b40859","UiLocales":null,"Nonce":"5236aba6ae894f6e916a57ae39902130","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"676c21350d7549689f29fb2e12b40859","nonce":"5236aba6ae894f6e916a57ae39902130"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:18:34.642 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 22:18:34.665 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:18:34.665 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:18:34.668 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:18:34.670 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:18:36.562 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:18:36.974 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:18:36.974 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:18:36.975 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:18:37.095 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:18:37.095 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 22:18:37.095 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 22:18:37.095 +03:00 [DBG] Adding auth_time claim with value: 1563650317
2019-07-20 22:18:37.097 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:18:37.098 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD7F91GBPU:00000004","TimeStamp":"2019-07-20T19:18:37.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 22:18:37.100 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:18:37.240 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 22:18:37.246 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 22:18:37.246 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 22:18:37.246 +03:00 [DBG] Start authorize callback request
2019-07-20 22:18:37.248 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:18:37.248 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:18:37.248 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:18:37.249 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:18:37.249 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"676c21350d7549689f29fb2e12b40859","UiLocales":null,"Nonce":"5236aba6ae894f6e916a57ae39902130","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2879bdccc9c7e373d663a2aacc15819a","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"676c21350d7549689f29fb2e12b40859","nonce":"5236aba6ae894f6e916a57ae39902130"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:18:37.284 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 22:18:37.284 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:18:37.284 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:18:37.284 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:18:37.323 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:18:37.323 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:18:37.334 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****AdZw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****O4Vg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPU:00000005","TimeStamp":"2019-07-20T19:18:37.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:18:37.335 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"676c21350d7549689f29fb2e12b40859","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:18:37.336 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:18:37.336 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:18:38.472 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:18:38.473 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:18:38.475 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:18:38.476 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:18:38.477 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:18:38.477 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:18:38.477 +03:00 [DBG] Start discovery request
2019-07-20 22:18:38.615 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:18:38.615 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:18:38.616 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:18:38.616 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:18:38.645 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:18:38.645 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:18:38.645 +03:00 [DBG] Start key discovery request
2019-07-20 22:18:38.734 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:18:38.735 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:18:38.735 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:18:38.752 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:18:38.752 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:18:38.752 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:18:38.752 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:18:38.776 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:18:38.776 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:18:38.777 +03:00 [DBG] Start userinfo request
2019-07-20 22:18:38.777 +03:00 [DBG] Bearer token found in header
2019-07-20 22:18:38.808 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:18:38.815 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:18:38.832 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:18:38.833 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563650317,"exp":1563653917,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650317,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:18:38.833 +03:00 [DBG] Creating userinfo response
2019-07-20 22:18:38.833 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:18:38.833 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:18:38.833 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:18:38.834 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:18:38.849 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:18:38.849 +03:00 [DBG] End userinfo request
2019-07-20 22:18:38.880 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:18:38.884 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:18:38.885 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:18:38.885 +03:00 [DBG] Rendering check session result
2019-07-20 22:18:47.495 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 22:18:47.509 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 22:18:47.509 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 22:18:47.553 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:18:47.582 +03:00 [DBG] Start end session request validation
2019-07-20 22:18:47.608 +03:00 [DBG] Start identity token validation
2019-07-20 22:18:47.615 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:18:47.615 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 22:18:47.628 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:18:47.631 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563650317,"exp":1563650617,"iss":"http://localhost:5000","aud":"spa","nonce":"5236aba6ae894f6e916a57ae39902130","iat":1563650317,"at_hash":"RfqcNocz4EYa0cjzYwZ8_A","sid":"2879bdccc9c7e373d663a2aacc15819a","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650317,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:18:47.647 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTAzMTcsImV4cCI6MTU2MzY1MDYxNywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1MjM2YWJhNmFlODk0ZjZlOTE2YTU3YWUzOTkwMjEzMCIsImlhdCI6MTU2MzY1MDMxNywiYXRfaGFzaCI6IlJmcWNOb2N6NEVZYTBjanpZd1o4X0EiLCJzaWQiOiIyODc5YmRjY2M5YzdlMzczZDY2M2EyYWFjYzE1ODE5YSIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1MDMxNywiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.gSHQwEIcvS-NgiQ2wCMGGcTUfYPnWIUs3kZWWbE8pQm-G5a25pUlB7Vd30Gg6qf8_BuMevDRh-uao98W0OvhKbqVMSROuITFxiSZvijf_IdItLRZuMSUmkHriS0H2PZ2ntyXVcBQ1nrGcjbYTxuxdNLLRlsjOg6j4NqR93UKtvCU0jBvHF6NZDyagRHFz_nwBBNcTUDwDdQQcp87KpgPf3dh7yspI7mhEzMDzZCSf9Q3IJJC4mrPr-_YrOExdJmiwbNdtlZZLhJPfzLDr49FIMi59ebQpNLt3xWmqRututEyYA2-Xzt7r3qYpKxbxq6AUTjgEtpTJUyTdgEnKeAdZw","post_logout_redirect_uri":"http://localhost:4200/deck"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 22:18:47.648 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 22:18:49.718 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:18:49.722 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-20 22:18:49.722 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-20 22:18:49.723 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-20 22:18:49.724 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOD7F91GBPU:0000000D","TimeStamp":"2019-07-20T19:18:49.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-20 22:18:49.815 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-20 22:18:49.817 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-20 22:18:49.817 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-20 22:18:49.817 +03:00 [DBG] Processing signout callback request
2019-07-20 22:18:49.818 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:18:49.818 +03:00 [DBG] No client front-channel logout URLs
2019-07-20 22:18:49.818 +03:00 [DBG] No client back-channel logout URLs
2019-07-20 22:18:49.818 +03:00 [INF] Successful signout callback.
2019-07-20 22:18:49.820 +03:00 [DBG] No client front-channel iframe urls
2019-07-20 22:18:49.820 +03:00 [DBG] No client back-channel iframe urls
2019-07-20 22:19:00.830 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-20 22:19:02.011 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:19:02.038 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:19:02.038 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 22:19:02.039 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 22:19:02.039 +03:00 [DBG] Adding auth_time claim with value: 1563650342
2019-07-20 22:19:02.040 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:19:02.040 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD7F91GBPU:00000012","TimeStamp":"2019-07-20T19:19:02.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 22:19:02.184 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:19:47.714 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:19:47.714 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:19:47.714 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:19:47.715 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:19:47.715 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:19:47.715 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:19:47.715 +03:00 [DBG] Start discovery request
2019-07-20 22:19:47.758 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:19:47.759 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:19:47.759 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:19:47.759 +03:00 [DBG] Start authorize request
2019-07-20 22:19:47.759 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:19:47.759 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:19:47.760 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:19:47.760 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:19:47.761 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c6c33a4b95584be1a6ea0b231e33abde","UiLocales":null,"Nonce":"10173b0a41e14244917be17753fb9b0a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f159086dd60a9f8ff18967da3492cf35","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c6c33a4b95584be1a6ea0b231e33abde","nonce":"10173b0a41e14244917be17753fb9b0a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:19:47.786 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 22:19:47.787 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:19:47.787 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:19:47.787 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:19:47.806 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:19:47.807 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:19:47.817 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****0A-g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Ifgg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPU:00000016","TimeStamp":"2019-07-20T19:19:47.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:19:47.817 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"c6c33a4b95584be1a6ea0b231e33abde","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:19:47.818 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:19:47.818 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:19:48.535 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:19:48.535 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:19:48.535 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:19:48.538 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:19:48.540 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:19:48.540 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:19:48.540 +03:00 [DBG] Start discovery request
2019-07-20 22:19:48.590 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:19:48.590 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:19:48.590 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:19:48.594 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:19:48.595 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:19:48.595 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:19:48.595 +03:00 [DBG] Start key discovery request
2019-07-20 22:19:48.717 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:19:48.718 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:19:48.718 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:19:48.760 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:19:48.761 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:19:48.761 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:19:48.761 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:19:48.764 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:19:48.765 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:19:48.765 +03:00 [DBG] Start userinfo request
2019-07-20 22:19:48.765 +03:00 [DBG] Bearer token found in header
2019-07-20 22:19:48.770 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:19:48.770 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:19:48.776 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:19:48.777 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563650387,"exp":1563653987,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650342,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:19:48.777 +03:00 [DBG] Creating userinfo response
2019-07-20 22:19:48.777 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:19:48.778 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:19:48.778 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:19:48.778 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:19:48.785 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:19:48.785 +03:00 [DBG] End userinfo request
2019-07-20 22:19:48.867 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:19:48.868 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:19:48.869 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:19:48.869 +03:00 [DBG] Rendering check session result
2019-07-20 22:19:53.598 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 22:19:53.598 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 22:19:53.599 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 22:19:53.600 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:19:53.600 +03:00 [DBG] Start end session request validation
2019-07-20 22:19:53.600 +03:00 [DBG] Start identity token validation
2019-07-20 22:19:53.603 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:19:53.603 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 22:19:53.615 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:19:53.616 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563650387,"exp":1563650687,"iss":"http://localhost:5000","aud":"spa","nonce":"10173b0a41e14244917be17753fb9b0a","iat":1563650387,"at_hash":"fc5z1UCz8aKDUwd0kjDwTA","sid":"f159086dd60a9f8ff18967da3492cf35","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650342,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:19:53.616 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTAzODcsImV4cCI6MTU2MzY1MDY4NywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIxMDE3M2IwYTQxZTE0MjQ0OTE3YmUxNzc1M2ZiOWIwYSIsImlhdCI6MTU2MzY1MDM4NywiYXRfaGFzaCI6ImZjNXoxVUN6OGFLRFV3ZDBrakR3VEEiLCJzaWQiOiJmMTU5MDg2ZGQ2MGE5ZjhmZjE4OTY3ZGEzNDkyY2YzNSIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1MDM0MiwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.MuGNnYx6dR0--G0p0i-5mNyBYwIQuSu3P3v_Gnrsp8f4_Nuth-TnGKSvN7YkzH3t3wslS-uGLr537C4Mj7rpsUlk2YxmibD_vdtIFCz8OdmWjUUTbKwfj9wE_hDrB48ILz3Gl3lSXJPFkMZyL3W_Wbc2rJp0VrEHyYS5voU18i9887_J_KizIGRwvFkL5ZBpKToYsKTeXcp6Z-1Pd5yr_3YCbrrcuiu9Mtq4LScF9OIS3ZoZt20SmneGsCPy-ETYGVQRH8IL3IGQ1QAoqqDOawxn6XALYiWmJkJXbBvGAeWyXyQOhqWG0Y_SnmYKQsu2lEYMwcmM-Y_U3XuJrw0A-g","post_logout_redirect_uri":"http://localhost:4200/deck"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 22:19:53.617 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 22:19:55.373 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:19:55.376 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-20 22:19:55.377 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-20 22:19:55.377 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-20 22:19:55.379 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOD7F91GBPU:0000001E","TimeStamp":"2019-07-20T19:19:55.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-20 22:19:55.439 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-20 22:19:55.441 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-20 22:19:55.442 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-20 22:19:55.442 +03:00 [DBG] Processing signout callback request
2019-07-20 22:19:55.443 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:19:55.444 +03:00 [DBG] No client front-channel logout URLs
2019-07-20 22:19:55.444 +03:00 [DBG] No client back-channel logout URLs
2019-07-20 22:19:55.444 +03:00 [INF] Successful signout callback.
2019-07-20 22:19:55.444 +03:00 [DBG] No client front-channel iframe urls
2019-07-20 22:19:55.444 +03:00 [DBG] No client back-channel iframe urls
2019-07-20 22:20:50.488 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:20:50.489 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:20:50.491 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:20:50.492 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:20:50.494 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:20:50.494 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:20:50.494 +03:00 [DBG] Start discovery request
2019-07-20 22:20:50.534 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:20:50.535 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:20:50.536 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:20:50.536 +03:00 [DBG] Start authorize request
2019-07-20 22:20:50.536 +03:00 [DBG] No user present in authorize request
2019-07-20 22:20:50.536 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:20:50.536 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:20:50.538 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:20:50.539 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"928dfb47946d4a1696403eb19903e1bb","UiLocales":null,"Nonce":"0c546d96d0244fdc8533262c748db1c6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"928dfb47946d4a1696403eb19903e1bb","nonce":"0c546d96d0244fdc8533262c748db1c6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:20:50.539 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 22:20:50.567 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:20:50.567 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:20:50.567 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:20:50.568 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:20:52.203 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:20:52.205 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:20:52.205 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:20:52.205 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:20:52.278 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:20:52.279 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 22:20:52.280 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 22:20:52.281 +03:00 [DBG] Adding auth_time claim with value: 1563650452
2019-07-20 22:20:52.281 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:20:52.282 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD7F91GBPU:00000023","TimeStamp":"2019-07-20T19:20:52.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 22:20:52.282 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:20:52.329 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 22:20:52.330 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 22:20:52.330 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 22:20:52.330 +03:00 [DBG] Start authorize callback request
2019-07-20 22:20:52.330 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:20:52.331 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:20:52.331 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:20:52.331 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:20:52.331 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"928dfb47946d4a1696403eb19903e1bb","UiLocales":null,"Nonce":"0c546d96d0244fdc8533262c748db1c6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"235de5826f1f9ca39c48cad5025070c9","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"928dfb47946d4a1696403eb19903e1bb","nonce":"0c546d96d0244fdc8533262c748db1c6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:20:52.382 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 22:20:52.382 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:20:52.382 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:20:52.382 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:20:52.455 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:20:52.455 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:20:52.469 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****-KaA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****PZsQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPU:00000024","TimeStamp":"2019-07-20T19:20:52.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:20:52.469 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"928dfb47946d4a1696403eb19903e1bb","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:20:52.470 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:20:52.471 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:20:53.669 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:20:53.672 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:20:53.673 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:20:53.677 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:20:53.677 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:20:53.677 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:20:53.677 +03:00 [DBG] Start discovery request
2019-07-20 22:20:53.761 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:20:53.761 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:20:53.761 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:20:53.762 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:20:53.763 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:20:53.763 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:20:53.764 +03:00 [DBG] Start key discovery request
2019-07-20 22:20:53.825 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:20:53.826 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:20:53.826 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:20:53.873 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:20:53.874 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:20:53.874 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:20:53.875 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:20:53.876 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:20:53.876 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:20:53.876 +03:00 [DBG] Start userinfo request
2019-07-20 22:20:53.876 +03:00 [DBG] Bearer token found in header
2019-07-20 22:20:53.882 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:20:53.883 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:20:53.892 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:20:53.892 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563650452,"exp":1563654052,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650452,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:20:53.893 +03:00 [DBG] Creating userinfo response
2019-07-20 22:20:53.893 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:20:53.893 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:20:53.893 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:20:53.893 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:20:53.908 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:20:53.908 +03:00 [DBG] End userinfo request
2019-07-20 22:20:53.988 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:20:53.989 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:20:53.989 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:20:53.989 +03:00 [DBG] Rendering check session result
2019-07-20 22:20:59.900 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 22:20:59.900 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 22:20:59.900 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 22:20:59.900 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:20:59.901 +03:00 [DBG] Start end session request validation
2019-07-20 22:20:59.901 +03:00 [DBG] Start identity token validation
2019-07-20 22:20:59.901 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:20:59.901 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 22:20:59.912 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:20:59.912 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563650452,"exp":1563650752,"iss":"http://localhost:5000","aud":"spa","nonce":"0c546d96d0244fdc8533262c748db1c6","iat":1563650452,"at_hash":"yQnzwKF1E7o_H87sFy2KTQ","sid":"235de5826f1f9ca39c48cad5025070c9","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650452,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:20:59.913 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTA0NTIsImV4cCI6MTU2MzY1MDc1MiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIwYzU0NmQ5NmQwMjQ0ZmRjODUzMzI2MmM3NDhkYjFjNiIsImlhdCI6MTU2MzY1MDQ1MiwiYXRfaGFzaCI6InlRbnp3S0YxRTdvX0g4N3NGeTJLVFEiLCJzaWQiOiIyMzVkZTU4MjZmMWY5Y2EzOWM0OGNhZDUwMjUwNzBjOSIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1MDQ1MiwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.bzfk5vl2_1Bg38PF8-_R6osjguxble70ysYTO6oZIs3w0hC3xkB_dRh3IfW2JQ65BN8lW6C2YPMfZiQwP8wjUvoajpQmSf3clcMVlEhJ_RIf5SdKDV-GldWAqucFO_czCh1pfUVqQzkL8B0kWM1u2hseKKUlTOIUWYn6NZfg4Yclvh7lXmvNys5aG7My7VCTZ4a-vFjQqI0QCCxXeWbC0TOPQFuwx62k2TWmK4Ttr0OkuPtpw1C9QdHG55dNM1tCWC5xB2T776SkScyBVCA2P1Mnz1jeZE2YKLkn5VaiYZhj1UyanXn64n_PukGhqLB7Q7qmZiNSab1mJkT1D8-KaA","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 22:20:59.913 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 22:21:01.206 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:21:01.209 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-20 22:21:01.210 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-20 22:21:01.210 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-20 22:21:01.211 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOD7F91GBPU:0000002C","TimeStamp":"2019-07-20T19:21:01.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-20 22:21:01.268 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-20 22:21:01.269 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-20 22:21:01.270 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-20 22:21:01.270 +03:00 [DBG] Processing signout callback request
2019-07-20 22:21:01.270 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:21:01.270 +03:00 [DBG] No client front-channel logout URLs
2019-07-20 22:21:01.270 +03:00 [DBG] No client back-channel logout URLs
2019-07-20 22:21:01.270 +03:00 [INF] Successful signout callback.
2019-07-20 22:21:01.271 +03:00 [DBG] No client front-channel iframe urls
2019-07-20 22:21:01.271 +03:00 [DBG] No client back-channel iframe urls
2019-07-20 22:22:48.850 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:22:48.851 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:22:48.851 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:22:48.851 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:22:48.852 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:22:48.852 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:22:48.852 +03:00 [DBG] Start discovery request
2019-07-20 22:22:48.880 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:22:48.881 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:22:48.881 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:22:48.881 +03:00 [DBG] Start authorize request
2019-07-20 22:22:48.882 +03:00 [DBG] No user present in authorize request
2019-07-20 22:22:48.882 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:22:48.882 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:22:48.882 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:22:48.883 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"44953878d235413d80e98c64d6b9ebde","UiLocales":null,"Nonce":"e7d4fab7fb98460b9d636c9d49f29cd1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"44953878d235413d80e98c64d6b9ebde","nonce":"e7d4fab7fb98460b9d636c9d49f29cd1"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:22:48.883 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 22:22:48.910 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:22:48.910 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:22:48.911 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:22:48.911 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:22:50.631 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:22:50.634 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:22:50.635 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:22:50.635 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:22:50.746 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:22:50.747 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 22:22:50.748 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 22:22:50.748 +03:00 [DBG] Adding auth_time claim with value: 1563650570
2019-07-20 22:22:50.748 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:22:50.749 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD7F91GBPV:00000004","TimeStamp":"2019-07-20T19:22:50.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 22:22:50.749 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:22:50.780 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 22:22:50.780 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 22:22:50.780 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 22:22:50.780 +03:00 [DBG] Start authorize callback request
2019-07-20 22:22:50.781 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:22:50.781 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:22:50.781 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:22:50.782 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:22:50.782 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"44953878d235413d80e98c64d6b9ebde","UiLocales":null,"Nonce":"e7d4fab7fb98460b9d636c9d49f29cd1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"13e770fe974f19d997bd96b552b990ea","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"44953878d235413d80e98c64d6b9ebde","nonce":"e7d4fab7fb98460b9d636c9d49f29cd1"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:22:50.801 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 22:22:50.801 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:22:50.801 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:22:50.801 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:22:50.818 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:22:50.818 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:22:50.826 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****2mMw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****7q6A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPV:00000005","TimeStamp":"2019-07-20T19:22:50.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:22:50.827 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"44953878d235413d80e98c64d6b9ebde","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:22:50.827 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:22:50.828 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:22:52.062 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:22:52.063 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:22:52.063 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:22:52.064 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:22:52.065 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:22:52.065 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:22:52.065 +03:00 [DBG] Start discovery request
2019-07-20 22:22:52.142 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:22:52.142 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:22:52.142 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:22:52.151 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:22:52.152 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:22:52.152 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:22:52.152 +03:00 [DBG] Start key discovery request
2019-07-20 22:22:52.213 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:22:52.214 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:22:52.214 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:22:52.223 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:22:52.223 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:22:52.224 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:22:52.224 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:22:52.225 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:22:52.226 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:22:52.226 +03:00 [DBG] Start userinfo request
2019-07-20 22:22:52.226 +03:00 [DBG] Bearer token found in header
2019-07-20 22:22:52.233 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:22:52.233 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:22:52.248 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:22:52.249 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563650570,"exp":1563654170,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650570,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:22:52.249 +03:00 [DBG] Creating userinfo response
2019-07-20 22:22:52.249 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:22:52.249 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:22:52.249 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:22:52.250 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:22:52.269 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:22:52.269 +03:00 [DBG] End userinfo request
2019-07-20 22:22:52.329 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:22:52.330 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:22:52.330 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:22:52.330 +03:00 [DBG] Rendering check session result
2019-07-20 22:22:58.974 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:22:58.974 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:22:58.975 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:22:58.979 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:22:58.979 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:22:58.980 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:22:58.980 +03:00 [DBG] Start discovery request
2019-07-20 22:22:58.999 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:22:58.999 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:22:58.999 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:22:59.000 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:22:59.000 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:22:59.000 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:22:59.000 +03:00 [DBG] Start discovery request
2019-07-20 22:22:59.057 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:22:59.057 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:22:59.058 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:22:59.058 +03:00 [DBG] Rendering check session result
2019-07-20 22:22:59.116 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 22:22:59.117 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 22:22:59.117 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 22:22:59.118 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:22:59.118 +03:00 [DBG] Start end session request validation
2019-07-20 22:22:59.118 +03:00 [DBG] Start identity token validation
2019-07-20 22:22:59.118 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:22:59.118 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 22:22:59.138 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:22:59.138 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563650570,"exp":1563650870,"iss":"http://localhost:5000","aud":"spa","nonce":"e7d4fab7fb98460b9d636c9d49f29cd1","iat":1563650570,"at_hash":"R10c_lhvgrs8aa6q5qQSwA","sid":"13e770fe974f19d997bd96b552b990ea","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650570,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:22:59.139 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTA1NzAsImV4cCI6MTU2MzY1MDg3MCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJlN2Q0ZmFiN2ZiOTg0NjBiOWQ2MzZjOWQ0OWYyOWNkMSIsImlhdCI6MTU2MzY1MDU3MCwiYXRfaGFzaCI6IlIxMGNfbGh2Z3JzOGFhNnE1cVFTd0EiLCJzaWQiOiIxM2U3NzBmZTk3NGYxOWQ5OTdiZDk2YjU1MmI5OTBlYSIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1MDU3MCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.qhrcBPnsvo3U8N8I5eGHSp4rZcxMSUkNTMuAds280D3kL6vd-F7siZtlj0lPEmVuobaengTP9CCw0OwFlO7FOK-FmdTA0qyzvVM_K43TXELJahxAOXmgSH2KixVwDNkIhSUGwQdQm-XgXKR7Grww2W89f1jWc2tkzWpzGIAMCsN7ZfmguxBSoFPxy8oXwqbWO3bAy43jfPIrVZx10Oe9yBS76zd24I_v-t8B5xg0wt61sf4mERgXZEpueFyyDGuUV_iTAm_3GEGqZkA-6BsMeSri1DM7Ee7OeVLw0Q12Z8KLsEs40xcvprmUzp4r1u3Wlkq1PdV4s0Tc9Nhb2j2mMw","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 22:22:59.139 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 22:23:01.858 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:23:01.859 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:23:01.861 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:23:01.862 +03:00 [DBG] Start authorize request
2019-07-20 22:23:01.862 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:23:01.862 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:23:01.862 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:23:01.863 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:23:01.863 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"3c49817fa840475dbf419e9579c6fcd9","UiLocales":null,"Nonce":"5ae2fd9c3212481fa494c270462043d7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"13e770fe974f19d997bd96b552b990ea","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"3c49817fa840475dbf419e9579c6fcd9","nonce":"5ae2fd9c3212481fa494c270462043d7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:23:01.885 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 22:23:01.885 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:23:01.886 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:23:01.886 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:23:01.900 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:23:01.901 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:23:01.910 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Rhxw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3NIg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBPV:00000010","TimeStamp":"2019-07-20T19:23:01.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:23:01.910 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"3c49817fa840475dbf419e9579c6fcd9","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:23:02.407 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:23:02.408 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:23:02.409 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:23:02.411 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:23:02.412 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:23:02.413 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:23:02.413 +03:00 [DBG] Start discovery request
2019-07-20 22:23:02.560 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:23:02.560 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:23:02.560 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:23:02.561 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:23:02.561 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:23:02.561 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:23:02.561 +03:00 [DBG] Start key discovery request
2019-07-20 22:23:02.647 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:23:02.648 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:23:02.648 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:23:02.666 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:23:02.666 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:23:02.666 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:23:02.667 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:23:02.670 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:23:02.670 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:23:02.671 +03:00 [DBG] Start userinfo request
2019-07-20 22:23:02.671 +03:00 [DBG] Bearer token found in header
2019-07-20 22:23:02.676 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:23:02.676 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:23:02.683 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:23:02.684 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563650581,"exp":1563654181,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650570,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:23:02.684 +03:00 [DBG] Creating userinfo response
2019-07-20 22:23:02.685 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:23:02.685 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:23:02.685 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:23:02.685 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:23:02.696 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:23:02.696 +03:00 [DBG] End userinfo request
2019-07-20 22:23:02.743 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:23:02.744 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:23:02.744 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:23:02.744 +03:00 [DBG] Rendering check session result
2019-07-20 22:23:06.896 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 22:23:06.900 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 22:23:06.900 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 22:23:06.901 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:23:06.901 +03:00 [DBG] Start end session request validation
2019-07-20 22:23:06.901 +03:00 [DBG] Start identity token validation
2019-07-20 22:23:06.901 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:23:06.901 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 22:23:06.911 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:23:06.912 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563650581,"exp":1563650881,"iss":"http://localhost:5000","aud":"spa","nonce":"5ae2fd9c3212481fa494c270462043d7","iat":1563650581,"at_hash":"lr6BbeDOmX271GGh3S4apA","sid":"13e770fe974f19d997bd96b552b990ea","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650570,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:23:06.912 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTA1ODEsImV4cCI6MTU2MzY1MDg4MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1YWUyZmQ5YzMyMTI0ODFmYTQ5NGMyNzA0NjIwNDNkNyIsImlhdCI6MTU2MzY1MDU4MSwiYXRfaGFzaCI6ImxyNkJiZURPbVgyNzFHR2gzUzRhcEEiLCJzaWQiOiIxM2U3NzBmZTk3NGYxOWQ5OTdiZDk2YjU1MmI5OTBlYSIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1MDU3MCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.EpDT2N9d1hr6AGK_UzoKlcYkmYntL7xAGecuVAfhQEk6PlT3b7-pi28L8SgjP48khj1D7pzxLgMPQQg2utTFKPa7UAgqSKfiOpxLwh5eOmCHskYV6MLoNrLZIPm8RLBZ-jAEWefXply_HhupjGgPpLvWBYOsEA1AosPki0aTZh9rH-SQfCyk3l5RwDNDUFARn6DijgA6AL4tCXl00sDTBfm7IFQnK_2ejDdxs2dHrlX3wpljop6hbLRf-AAtbz9Mod_G30CNNBtDQdEJGwtfx336wGT2u_6YcTmCwRI7fcVQLTXicgKDREwzEllYU2Ni1NTouDtCXrwPasWZ23Rhxw","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 22:23:06.912 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 22:23:33.468 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:23:33.476 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-20 22:23:33.476 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-20 22:23:33.477 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-20 22:23:33.477 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOD7F91GBPV:00000019","TimeStamp":"2019-07-20T19:23:33.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-20 22:23:33.585 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-20 22:23:33.589 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-20 22:23:33.589 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-20 22:23:33.589 +03:00 [DBG] Processing signout callback request
2019-07-20 22:23:33.590 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:23:33.590 +03:00 [DBG] No client front-channel logout URLs
2019-07-20 22:23:33.590 +03:00 [DBG] No client back-channel logout URLs
2019-07-20 22:23:33.590 +03:00 [INF] Successful signout callback.
2019-07-20 22:23:33.590 +03:00 [DBG] No client front-channel iframe urls
2019-07-20 22:23:33.590 +03:00 [DBG] No client back-channel iframe urls
2019-07-20 22:24:14.473 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-20 22:24:14.475 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-20 22:24:14.475 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-20 22:24:14.476 +03:00 [DBG] Processing signout callback request
2019-07-20 22:24:14.477 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:24:14.477 +03:00 [DBG] No client front-channel logout URLs
2019-07-20 22:24:14.477 +03:00 [DBG] No client back-channel logout URLs
2019-07-20 22:24:14.477 +03:00 [INF] Successful signout callback.
2019-07-20 22:24:14.477 +03:00 [DBG] No client front-channel iframe urls
2019-07-20 22:24:14.478 +03:00 [DBG] No client back-channel iframe urls
2019-07-20 22:24:34.037 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:24:34.037 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:24:34.037 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:24:34.037 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:24:34.038 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:24:34.038 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:24:34.039 +03:00 [DBG] Start discovery request
2019-07-20 22:24:34.075 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:24:34.076 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:24:34.077 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:24:34.077 +03:00 [DBG] Start authorize request
2019-07-20 22:24:34.078 +03:00 [DBG] No user present in authorize request
2019-07-20 22:24:34.078 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:24:34.078 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:24:34.079 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:24:34.080 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"652e1aa395894f9f9e4fdd78b814d8d0","UiLocales":null,"Nonce":"57639caa50fa43c2a2ba2059e7483910","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"652e1aa395894f9f9e4fdd78b814d8d0","nonce":"57639caa50fa43c2a2ba2059e7483910"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:24:34.080 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 22:24:34.100 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:24:34.101 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:24:34.102 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:24:34.102 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:24:44.912 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:24:44.917 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:24:44.917 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:24:44.918 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:24:44.949 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:24:44.949 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 22:24:44.949 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 22:24:44.949 +03:00 [DBG] Adding auth_time claim with value: 1563650684
2019-07-20 22:24:44.950 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:24:44.951 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD7F91GBQ7:00000002","TimeStamp":"2019-07-20T19:24:44.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 22:24:44.952 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:24:44.969 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 22:24:44.969 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 22:24:44.969 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 22:24:44.970 +03:00 [DBG] Start authorize callback request
2019-07-20 22:24:44.970 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:24:44.970 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:24:44.970 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:24:44.971 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:24:44.972 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"652e1aa395894f9f9e4fdd78b814d8d0","UiLocales":null,"Nonce":"57639caa50fa43c2a2ba2059e7483910","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5b2321246e530c1e722c4736fb56ae53","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"652e1aa395894f9f9e4fdd78b814d8d0","nonce":"57639caa50fa43c2a2ba2059e7483910"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:24:44.991 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 22:24:44.991 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:24:44.992 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:24:44.992 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:24:45.008 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:24:45.008 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:24:45.016 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****yBHw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****A1eg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD7F91GBQ5:00000002","TimeStamp":"2019-07-20T19:24:45.0000000Z","ProcessId":7840,"LocalIpAddress":"127.0.0.1:40382","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:24:45.016 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"652e1aa395894f9f9e4fdd78b814d8d0","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:24:45.017 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:24:45.017 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:24:47.684 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:24:47.685 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:24:47.687 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:24:47.687 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:24:47.692 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:24:47.693 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:24:47.693 +03:00 [DBG] Start discovery request
2019-07-20 22:24:47.766 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:24:47.766 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:24:47.766 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:24:47.767 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:24:47.768 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:24:47.768 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:24:47.768 +03:00 [DBG] Start key discovery request
2019-07-20 22:24:47.853 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:24:47.854 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:24:47.854 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:24:47.886 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:24:47.887 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:24:47.887 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:24:47.888 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:24:47.889 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:24:47.889 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:24:47.892 +03:00 [DBG] Start userinfo request
2019-07-20 22:24:47.892 +03:00 [DBG] Bearer token found in header
2019-07-20 22:24:47.898 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:24:47.899 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:24:47.906 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:24:47.907 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563650684,"exp":1563654284,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650684,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:24:47.907 +03:00 [DBG] Creating userinfo response
2019-07-20 22:24:47.907 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:24:47.907 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:24:47.908 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:24:47.908 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:24:47.923 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:24:47.923 +03:00 [DBG] End userinfo request
2019-07-20 22:24:48.017 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:24:48.017 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:24:48.017 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:24:48.017 +03:00 [DBG] Rendering check session result
2019-07-20 22:25:03.596 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 22:25:03.600 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 22:25:03.600 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 22:25:03.601 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:25:03.601 +03:00 [DBG] Start end session request validation
2019-07-20 22:25:03.601 +03:00 [DBG] Start identity token validation
2019-07-20 22:25:03.601 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:25:03.602 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 22:25:03.620 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:25:03.621 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563650685,"exp":1563650985,"iss":"http://localhost:5000","aud":"spa","nonce":"57639caa50fa43c2a2ba2059e7483910","iat":1563650685,"at_hash":"XbhKGDE1EhQufmi_Q-LrtQ","sid":"5b2321246e530c1e722c4736fb56ae53","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650684,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:25:03.621 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTA2ODUsImV4cCI6MTU2MzY1MDk4NSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1NzYzOWNhYTUwZmE0M2MyYTJiYTIwNTllNzQ4MzkxMCIsImlhdCI6MTU2MzY1MDY4NSwiYXRfaGFzaCI6IlhiaEtHREUxRWhRdWZtaV9RLUxydFEiLCJzaWQiOiI1YjIzMjEyNDZlNTMwYzFlNzIyYzQ3MzZmYjU2YWU1MyIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1MDY4NCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.yWqM7jlnnm6-gC57oEG3T8te_vzFYGPs4crY6OV6Sk-ySn_zNMqqNeDkifmfU_wJC3FgrzMwal_7JKgFo2SPn6TTHoAA885B0h9Cdx8uxQ2bfCVtSX80vx0LjvXwWhbDSQli1icmmh3iN1t0s95zzHCYyGiYP0zr6Mke1zScDOb2Z5paO_cxzvwqI1u3nF_8TsgG_QYTEYcK1ctLwQm3fCk4AzxjOs_fabhS3pH75TmWkjxl2lFOfkfgilt6FDY_dBxYvGzYl0P2IGtOHrSaoCNtQlaVeFUbeI7xEhOtEc1F5BpIoAbwG5ghPjrzKECoDIIb6T7rGMUak5-RhNyBHw","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 22:25:03.621 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 22:31:33.555 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-20 22:31:33.644 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-20 22:31:33.652 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-20 22:31:33.652 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-20 22:31:33.653 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-20 22:31:33.654 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-20 22:31:33.654 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-20 22:31:34.257 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:31:34.271 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:31:34.271 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:31:34.395 +03:00 [DBG] Login Url: /Account/Login
2019-07-20 22:31:34.395 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-20 22:31:34.395 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-20 22:31:34.396 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-20 22:31:34.396 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-20 22:31:34.396 +03:00 [DBG] Error Url: /home/error
2019-07-20 22:31:34.396 +03:00 [DBG] Error Id Parameter: errorId
2019-07-20 22:31:34.452 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:31:34.870 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:31:34.870 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:31:34.879 +03:00 [DBG] Start discovery request
2019-07-20 22:31:35.022 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:31:35.023 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:31:35.024 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:31:35.025 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:31:35.027 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:31:35.027 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:31:35.027 +03:00 [DBG] Start discovery request
2019-07-20 22:31:35.156 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:31:35.178 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:31:35.189 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:31:35.189 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:31:35.189 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:31:35.189 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:31:35.199 +03:00 [DBG] Start authorize request
2019-07-20 22:31:35.200 +03:00 [DBG] Start authorize request
2019-07-20 22:31:35.240 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:31:35.240 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:31:35.255 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:31:35.255 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:31:35.323 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:31:35.323 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:31:35.468 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:31:35.468 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:31:35.520 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"02c0464d8aa3431c8750e023311cfbc4","UiLocales":null,"Nonce":"de6ef1eb99aa4622be7453af1f5671a9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5b2321246e530c1e722c4736fb56ae53","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"02c0464d8aa3431c8750e023311cfbc4","nonce":"de6ef1eb99aa4622be7453af1f5671a9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:31:35.520 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ac3ddd17f5b44e129c296213fd03d283","UiLocales":null,"Nonce":"064fa65a3bdf460a80c5149699da8573","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5b2321246e530c1e722c4736fb56ae53","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ac3ddd17f5b44e129c296213fd03d283","nonce":"064fa65a3bdf460a80c5149699da8573"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:31:39.934 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-20 22:31:39.934 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-20 22:31:39.934 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 22:31:39.934 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 22:31:39.934 +03:00 [INF] Showing consent: User has not yet consented
2019-07-20 22:31:39.934 +03:00 [INF] Showing consent: User has not yet consented
2019-07-20 22:31:40.351 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:31:40.352 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:31:40.352 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:31:40.356 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:31:44.197 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:31:44.316 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:31:44.316 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:31:44.317 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:31:44.343 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOD93FTCAGI:00000002","TimeStamp":"2019-07-20T19:31:44.0000000Z","ProcessId":2224,"LocalIpAddress":"127.0.0.1:41563","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-20 22:31:44.381 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:31:44.394 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 22:31:44.396 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 22:31:44.396 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 22:31:44.410 +03:00 [DBG] Start authorize callback request
2019-07-20 22:31:44.419 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:31:44.419 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:31:44.419 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:31:44.420 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:31:44.421 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"02c0464d8aa3431c8750e023311cfbc4","UiLocales":null,"Nonce":"de6ef1eb99aa4622be7453af1f5671a9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5b2321246e530c1e722c4736fb56ae53","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"02c0464d8aa3431c8750e023311cfbc4","nonce":"de6ef1eb99aa4622be7453af1f5671a9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:31:44.430 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-20 22:31:44.430 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 22:31:44.443 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-20 22:31:44.447 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-20 22:31:44.454 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:31:44.483 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:31:44.503 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:31:44.505 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:31:45.021 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:31:45.021 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:31:45.040 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****LUyA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****54LA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD93FTCAGH:00000005","TimeStamp":"2019-07-20T19:31:45.0000000Z","ProcessId":2224,"LocalIpAddress":"127.0.0.1:41563","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:31:45.045 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"02c0464d8aa3431c8750e023311cfbc4","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:31:46.240 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:31:46.276 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:31:46.276 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:31:46.283 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:31:46.283 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:31:46.284 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:31:46.284 +03:00 [DBG] Start discovery request
2019-07-20 22:31:46.320 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:31:46.320 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:31:46.320 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:31:46.321 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:31:46.322 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:31:46.323 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:31:46.333 +03:00 [DBG] Start key discovery request
2019-07-20 22:31:46.419 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:31:46.420 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:31:46.420 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:31:46.431 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:31:46.432 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:31:46.432 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:31:46.434 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:31:46.440 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:31:46.440 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:31:46.462 +03:00 [DBG] Start userinfo request
2019-07-20 22:31:46.469 +03:00 [DBG] Bearer token found in header
2019-07-20 22:31:46.517 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:31:46.523 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:31:46.529 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:31:46.532 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563651104,"exp":1563654704,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650684,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:31:46.547 +03:00 [DBG] Creating userinfo response
2019-07-20 22:31:46.556 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:31:46.561 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:31:46.569 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:31:46.569 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:31:46.581 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:31:46.582 +03:00 [DBG] End userinfo request
2019-07-20 22:31:46.626 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:31:46.628 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:31:46.628 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:31:46.634 +03:00 [DBG] Rendering check session result
2019-07-20 22:31:52.455 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 22:31:52.462 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 22:31:52.463 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 22:31:52.473 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:31:52.486 +03:00 [DBG] Start end session request validation
2019-07-20 22:31:52.499 +03:00 [DBG] Start identity token validation
2019-07-20 22:31:52.500 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:31:52.501 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 22:31:52.510 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:31:52.512 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563651105,"exp":1563651405,"iss":"http://localhost:5000","aud":"spa","nonce":"de6ef1eb99aa4622be7453af1f5671a9","iat":1563651105,"at_hash":"bEbomGc9mVtZL72PNRg-ug","sid":"5b2321246e530c1e722c4736fb56ae53","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563650684,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:31:52.517 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTExMDUsImV4cCI6MTU2MzY1MTQwNSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJkZTZlZjFlYjk5YWE0NjIyYmU3NDUzYWYxZjU2NzFhOSIsImlhdCI6MTU2MzY1MTEwNSwiYXRfaGFzaCI6ImJFYm9tR2M5bVZ0Wkw3MlBOUmctdWciLCJzaWQiOiI1YjIzMjEyNDZlNTMwYzFlNzIyYzQ3MzZmYjU2YWU1MyIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1MDY4NCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.iwQFe6N-iGPka6_bdqY9SzSp00rvA_omwrZdJ5tYrjm4faeEAdtXtpkHbGcfmfkGyn-L_jJ_AcTwjkk5cvzIH0rIzZxtH5YExNmMqLpm6-iHOtXyA495QZhcJ-J3IONZpipkWZYvRXtpg3NP_l7ilAX7b9Jo_yieGPkoNBBnSYhfBnu4AfpSnBKk65_xSXabvNp-Avv5Fgz19EvbszxjEAxq5lt5JYaYfqTYl7p2UmGj-ZnXHA_INYQFTj7aiTgLLfy4WVpyeHws86rAy83nzOYiNEGkgDaYrp9gfK0zerQHRqHgLUI_skyZe3oLfpNajMe3Yppg3iMRZte9R9LUyA","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 22:31:52.517 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 22:31:52.536 +03:00 [ERR] Request matched multiple actions resulting in ambiguity. Matching actions: IdentityServer4.Quickstart.UI.AccountController.Logout (EP.15Puzzle.Security)
IdentityServer4.Quickstart.UI.AccountController.Logout (EP.15Puzzle.Security)
2019-07-20 22:31:52.547 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Mvc.Internal.AmbiguousActionException: Multiple actions matched. The following actions matched route data and had all constraints satisfied:

IdentityServer4.Quickstart.UI.AccountController.Logout (EP.15Puzzle.Security)
IdentityServer4.Quickstart.UI.AccountController.Logout (EP.15Puzzle.Security)
   at Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestCandidate(RouteContext context, IReadOnlyList`1 candidates)
   at Microsoft.AspNetCore.Mvc.Internal.MvcRouteHandler.RouteAsync(RouteContext context)
   at Microsoft.AspNetCore.Routing.Route.OnRouteMatched(RouteContext context)
   at Microsoft.AspNetCore.Routing.RouteBase.RouteAsync(RouteContext context)
   at Microsoft.AspNetCore.Routing.RouteCollection.RouteAsync(RouteContext context)
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-20 22:33:09.234 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:33:09.234 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:33:09.234 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:33:09.235 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:33:09.236 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:33:09.236 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:33:09.236 +03:00 [DBG] Start discovery request
2019-07-20 22:33:09.312 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:33:09.316 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:33:09.316 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:33:09.316 +03:00 [DBG] Start authorize request
2019-07-20 22:33:09.317 +03:00 [DBG] No user present in authorize request
2019-07-20 22:33:09.317 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:33:09.318 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:33:09.319 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:33:09.319 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ebdbf5c204fc474b80f59dd8984c99a5","UiLocales":null,"Nonce":"504ce7cd0a2b4e52b74f2c7fececcdbb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ebdbf5c204fc474b80f59dd8984c99a5","nonce":"504ce7cd0a2b4e52b74f2c7fececcdbb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:33:09.320 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 22:33:09.410 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:33:09.412 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:33:09.412 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:33:09.416 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:33:12.391 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:33:12.454 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:33:12.455 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:33:12.457 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:33:12.746 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:33:12.757 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 22:33:12.757 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 22:33:12.759 +03:00 [DBG] Adding auth_time claim with value: 1563651192
2019-07-20 22:33:12.785 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:33:12.789 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD93FTCAGJ:00000005","TimeStamp":"2019-07-20T19:33:12.0000000Z","ProcessId":2224,"LocalIpAddress":"127.0.0.1:41563","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 22:33:12.790 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:33:12.812 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 22:33:12.813 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 22:33:12.813 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 22:33:12.813 +03:00 [DBG] Start authorize callback request
2019-07-20 22:33:12.814 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:33:12.814 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:33:12.814 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:33:12.814 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:33:12.815 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ebdbf5c204fc474b80f59dd8984c99a5","UiLocales":null,"Nonce":"504ce7cd0a2b4e52b74f2c7fececcdbb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4104e923c1861c6d3bf9d11b752f5b8b","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ebdbf5c204fc474b80f59dd8984c99a5","nonce":"504ce7cd0a2b4e52b74f2c7fececcdbb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:33:12.848 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 22:33:12.848 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:33:12.848 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:33:12.848 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:33:12.871 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:33:12.871 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:33:12.881 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****N0Dw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****AIpQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD93FTCAGL:00000002","TimeStamp":"2019-07-20T19:33:12.0000000Z","ProcessId":2224,"LocalIpAddress":"127.0.0.1:41563","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:33:12.881 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"ebdbf5c204fc474b80f59dd8984c99a5","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:33:12.901 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:33:12.903 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:33:15.910 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:33:15.911 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:33:15.912 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:33:15.915 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:33:15.916 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:33:15.916 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:33:15.916 +03:00 [DBG] Start discovery request
2019-07-20 22:33:16.012 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:33:16.015 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:33:16.016 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:33:16.017 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:33:16.018 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:33:16.018 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:33:16.019 +03:00 [DBG] Start key discovery request
2019-07-20 22:33:16.171 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:33:16.172 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:33:16.172 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:33:16.209 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:33:16.210 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:33:16.210 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:33:16.211 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:33:16.213 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:33:16.213 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:33:16.214 +03:00 [DBG] Start userinfo request
2019-07-20 22:33:16.214 +03:00 [DBG] Bearer token found in header
2019-07-20 22:33:16.219 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:33:16.219 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:33:16.240 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:33:16.240 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563651192,"exp":1563654792,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563651192,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:33:16.241 +03:00 [DBG] Creating userinfo response
2019-07-20 22:33:16.241 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:33:16.241 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:33:16.241 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:33:16.241 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:33:16.252 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:33:16.252 +03:00 [DBG] End userinfo request
2019-07-20 22:33:16.448 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:33:16.449 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:33:16.449 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:33:16.449 +03:00 [DBG] Rendering check session result
2019-07-20 22:33:43.420 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 22:33:43.422 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 22:33:43.422 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 22:33:43.422 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:33:43.423 +03:00 [DBG] Start end session request validation
2019-07-20 22:33:43.423 +03:00 [DBG] Start identity token validation
2019-07-20 22:33:43.423 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:33:43.424 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 22:33:43.444 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:33:43.444 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563651192,"exp":1563651492,"iss":"http://localhost:5000","aud":"spa","nonce":"504ce7cd0a2b4e52b74f2c7fececcdbb","iat":1563651192,"at_hash":"gScaVppKKKJQ_rEfzf_peQ","sid":"4104e923c1861c6d3bf9d11b752f5b8b","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563651192,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:33:43.445 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTExOTIsImV4cCI6MTU2MzY1MTQ5MiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1MDRjZTdjZDBhMmI0ZTUyYjc0ZjJjN2ZlY2VjY2RiYiIsImlhdCI6MTU2MzY1MTE5MiwiYXRfaGFzaCI6ImdTY2FWcHBLS0tKUV9yRWZ6Zl9wZVEiLCJzaWQiOiI0MTA0ZTkyM2MxODYxYzZkM2JmOWQxMWI3NTJmNWI4YiIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1MTE5MiwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.HAXiqWZv6J9ziZOnbpNA9SJu3h0CKOXbZi8-W2GiETO8J8J8cCjnkiGdzC5sCed8bRdbmdDm3rivYo1hYogVx-AvQ4Yz66-DtCAcT0ADhs7Y5G1P1rXnovxFCTEbYs623JLTamCKKCsYMfdo1Hs1p_j-t8fp_DPusFG7pPjgT3jeZB6uIXSYxKZg3oSRPuBQfwLdlkmX5yrYt-v9DbsirfE9-iYUET_6UEFLThDcFLww5XdML9B6rtZqoRdqGTAK7iLbkN-B0qk55ss9AcO5FWYQcfhdDPuIkgaxZA_-VKWE3UIGhpkMrU-w0wWMH8FeqEOePMumnBm0AXRNLyN0Dw","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 22:33:43.445 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 22:33:43.519 +03:00 [ERR] Request matched multiple actions resulting in ambiguity. Matching actions: IdentityServer4.Quickstart.UI.AccountController.Logout (EP.15Puzzle.Security)
IdentityServer4.Quickstart.UI.AccountController.Logout (EP.15Puzzle.Security)
2019-07-20 22:33:43.521 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Mvc.Internal.AmbiguousActionException: Multiple actions matched. The following actions matched route data and had all constraints satisfied:

IdentityServer4.Quickstart.UI.AccountController.Logout (EP.15Puzzle.Security)
IdentityServer4.Quickstart.UI.AccountController.Logout (EP.15Puzzle.Security)
   at Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestCandidate(RouteContext context, IReadOnlyList`1 candidates)
   at Microsoft.AspNetCore.Mvc.Internal.MvcRouteHandler.RouteAsync(RouteContext context)
   at Microsoft.AspNetCore.Routing.Route.OnRouteMatched(RouteContext context)
   at Microsoft.AspNetCore.Routing.RouteBase.RouteAsync(RouteContext context)
   at Microsoft.AspNetCore.Routing.RouteCollection.RouteAsync(RouteContext context)
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-20 22:38:00.014 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-20 22:38:00.133 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-20 22:38:00.141 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-20 22:38:00.141 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-20 22:38:00.142 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-20 22:38:00.142 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-20 22:38:00.142 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-20 22:38:00.942 +03:00 [DBG] Login Url: /Account/Login
2019-07-20 22:38:00.949 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-20 22:38:00.950 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-20 22:38:00.950 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-20 22:38:00.950 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-20 22:38:00.950 +03:00 [DBG] Error Url: /home/error
2019-07-20 22:38:00.950 +03:00 [DBG] Error Id Parameter: errorId
2019-07-20 22:38:19.443 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:38:19.450 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:38:19.450 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:38:19.454 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:38:19.463 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:38:19.464 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:38:19.471 +03:00 [DBG] Start discovery request
2019-07-20 22:38:19.580 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:38:19.589 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:38:19.589 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:38:19.601 +03:00 [DBG] Start authorize request
2019-07-20 22:38:19.643 +03:00 [DBG] No user present in authorize request
2019-07-20 22:38:19.661 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:38:19.714 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:19.812 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:38:19.840 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6f6a35c973fc41a4a2f794f7a3af88a1","UiLocales":null,"Nonce":"1f54bb032d9c4978bce4526c99397beb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6f6a35c973fc41a4a2f794f7a3af88a1","nonce":"1f54bb032d9c4978bce4526c99397beb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:38:19.881 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 22:38:19.986 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:38:19.987 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:19.987 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:38:19.993 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:21.321 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:38:21.470 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:38:21.470 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:21.471 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:38:24.478 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:38:24.483 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 22:38:24.483 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 22:38:24.484 +03:00 [DBG] Adding auth_time claim with value: 1563651504
2019-07-20 22:38:24.507 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:38:24.531 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD9732RQI5:00000006","TimeStamp":"2019-07-20T19:38:24.0000000Z","ProcessId":6420,"LocalIpAddress":"127.0.0.1:4988","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 22:38:24.538 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:24.559 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 22:38:24.562 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 22:38:24.562 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 22:38:24.578 +03:00 [DBG] Start authorize callback request
2019-07-20 22:38:24.593 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:38:24.593 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:38:24.593 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:24.595 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:38:24.596 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6f6a35c973fc41a4a2f794f7a3af88a1","UiLocales":null,"Nonce":"1f54bb032d9c4978bce4526c99397beb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ac9568e5c1d8e303e8640f775ecdbb1b","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6f6a35c973fc41a4a2f794f7a3af88a1","nonce":"1f54bb032d9c4978bce4526c99397beb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:38:24.747 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-20 22:38:24.748 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 22:38:24.748 +03:00 [INF] Showing consent: User has not yet consented
2019-07-20 22:38:24.799 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:38:24.800 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:24.800 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:38:24.800 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:26.246 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:38:26.289 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:38:26.289 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:26.289 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:38:26.293 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOD9732RQI5:00000009","TimeStamp":"2019-07-20T19:38:26.0000000Z","ProcessId":6420,"LocalIpAddress":"127.0.0.1:4988","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-20 22:38:26.323 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:26.335 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 22:38:26.336 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 22:38:26.336 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 22:38:26.337 +03:00 [DBG] Start authorize callback request
2019-07-20 22:38:26.349 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:38:26.349 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:38:26.349 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:26.349 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:38:26.350 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6f6a35c973fc41a4a2f794f7a3af88a1","UiLocales":null,"Nonce":"1f54bb032d9c4978bce4526c99397beb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ac9568e5c1d8e303e8640f775ecdbb1b","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6f6a35c973fc41a4a2f794f7a3af88a1","nonce":"1f54bb032d9c4978bce4526c99397beb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:38:26.370 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-20 22:38:26.370 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 22:38:26.398 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-20 22:38:26.402 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-20 22:38:26.413 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:38:26.459 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:38:26.491 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:38:26.494 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:38:26.651 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:38:26.651 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:38:26.672 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****JbBw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****MVlg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD9732RQI5:0000000A","TimeStamp":"2019-07-20T19:38:26.0000000Z","ProcessId":6420,"LocalIpAddress":"127.0.0.1:4988","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:38:26.676 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"6f6a35c973fc41a4a2f794f7a3af88a1","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:38:26.721 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:38:26.723 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:38:27.833 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:38:27.836 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:38:27.837 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:38:27.838 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:38:27.839 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:38:27.839 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:38:27.839 +03:00 [DBG] Start discovery request
2019-07-20 22:38:27.926 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:38:27.927 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:38:27.927 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:38:27.927 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:38:27.937 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:38:27.937 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:38:27.948 +03:00 [DBG] Start key discovery request
2019-07-20 22:38:28.042 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:38:28.043 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:38:28.043 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:38:28.058 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:38:28.059 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:38:28.059 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:38:28.059 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:38:28.066 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:38:28.066 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:38:28.090 +03:00 [DBG] Start userinfo request
2019-07-20 22:38:28.099 +03:00 [DBG] Bearer token found in header
2019-07-20 22:38:28.157 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:28.166 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:28.173 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:38:28.175 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563651506,"exp":1563655106,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563651504,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:38:28.191 +03:00 [DBG] Creating userinfo response
2019-07-20 22:38:28.199 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:38:28.205 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:38:28.212 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:38:28.213 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:38:28.223 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:38:28.224 +03:00 [DBG] End userinfo request
2019-07-20 22:38:28.298 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:38:28.300 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:38:28.300 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:38:28.303 +03:00 [DBG] Rendering check session result
2019-07-20 22:38:29.337 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 22:38:29.340 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 22:38:29.342 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 22:38:29.356 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:38:29.368 +03:00 [DBG] Start end session request validation
2019-07-20 22:38:29.381 +03:00 [DBG] Start identity token validation
2019-07-20 22:38:29.383 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:38:29.383 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 22:38:29.393 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:38:29.394 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563651506,"exp":1563651806,"iss":"http://localhost:5000","aud":"spa","nonce":"1f54bb032d9c4978bce4526c99397beb","iat":1563651506,"at_hash":"K8iRnmmidTSFn9BvpoJ2Dw","sid":"ac9568e5c1d8e303e8640f775ecdbb1b","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563651504,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:38:29.401 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTE1MDYsImV4cCI6MTU2MzY1MTgwNiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIxZjU0YmIwMzJkOWM0OTc4YmNlNDUyNmM5OTM5N2JlYiIsImlhdCI6MTU2MzY1MTUwNiwiYXRfaGFzaCI6Iks4aVJubW1pZFRTRm45QnZwb0oyRHciLCJzaWQiOiJhYzk1NjhlNWMxZDhlMzAzZTg2NDBmNzc1ZWNkYmIxYiIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1MTUwNCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.0nNN4Ojk9dK7uyLB2-J_hmRxYprCIzHX1Jr3lMLL3hHpecm4E2Gx46oKccdX3kcZlaJkkR7YM1uZpBQ3GYLDc_UOkz7CuA1lVVC_XU3CYjF_rKol-HzB5btfIQHDRfLanRYmwoTq0P379Ke7-soJVOhFamdXvL5bEs1P3FAZ9Yp4bRUOhoF1Bs6Qub275zKonez1mZ75ZmcG3Oy-MLOWr63x1k9E-vXJi7aMZUNFGhoxwvRDWyRJdtctWlfY1ATrpuqIYE-81z574JZJ3hAg1Jo4dkjwkANWE4km-T3GPxByA4c33MXMKSRHoE_n31pNiwfWL70U8BA5RgVN4vJbBw","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 22:38:29.401 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 22:38:29.453 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String quer) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 265
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-20 22:40:52.968 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-20 22:40:53.116 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-20 22:40:53.121 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-20 22:40:53.121 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-20 22:40:53.121 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-20 22:40:53.121 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-20 22:40:53.122 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-20 22:40:55.887 +03:00 [DBG] Login Url: /Account/Login
2019-07-20 22:40:55.894 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-20 22:40:55.894 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-20 22:40:55.894 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-20 22:40:55.895 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-20 22:40:55.895 +03:00 [DBG] Error Url: /home/error
2019-07-20 22:40:55.895 +03:00 [DBG] Error Id Parameter: errorId
2019-07-20 22:41:05.736 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:41:05.743 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:41:05.744 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:41:05.749 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:41:06.776 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:41:06.776 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:41:06.784 +03:00 [DBG] Start discovery request
2019-07-20 22:41:06.933 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:41:06.944 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:41:06.945 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:41:06.956 +03:00 [DBG] Start authorize request
2019-07-20 22:41:06.975 +03:00 [DBG] No user present in authorize request
2019-07-20 22:41:06.987 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:41:07.044 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:07.140 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:41:07.168 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ffca52a230944a93bb314b3a59784e67","UiLocales":null,"Nonce":"d2199d3ee41e424f9a4d40f9b3368117","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ffca52a230944a93bb314b3a59784e67","nonce":"d2199d3ee41e424f9a4d40f9b3368117"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:41:07.221 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 22:41:07.443 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:41:07.443 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:07.445 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:41:07.458 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:09.894 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:41:10.587 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:41:10.588 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:10.588 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:41:15.214 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:41:15.220 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 22:41:15.221 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 22:41:15.222 +03:00 [DBG] Adding auth_time claim with value: 1563651675
2019-07-20 22:41:15.247 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:41:15.312 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD98N1E2JE:00000003","TimeStamp":"2019-07-20T19:41:15.0000000Z","ProcessId":10936,"LocalIpAddress":"127.0.0.1:44423","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 22:41:15.318 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:15.369 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 22:41:15.371 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 22:41:15.371 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 22:41:15.388 +03:00 [DBG] Start authorize callback request
2019-07-20 22:41:15.397 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:41:15.397 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:41:15.397 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:15.398 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:41:15.399 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ffca52a230944a93bb314b3a59784e67","UiLocales":null,"Nonce":"d2199d3ee41e424f9a4d40f9b3368117","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"414505563351f65b05e62f9c597be903","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ffca52a230944a93bb314b3a59784e67","nonce":"d2199d3ee41e424f9a4d40f9b3368117"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:41:15.650 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-20 22:41:15.650 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 22:41:15.650 +03:00 [INF] Showing consent: User has not yet consented
2019-07-20 22:41:15.900 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:41:15.901 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:15.902 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:41:15.903 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:19.085 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:41:19.177 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:41:19.178 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:19.178 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:41:19.185 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOD98N1E2JF:00000005","TimeStamp":"2019-07-20T19:41:19.0000000Z","ProcessId":10936,"LocalIpAddress":"127.0.0.1:44423","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-20 22:41:19.227 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:19.241 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 22:41:19.242 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 22:41:19.242 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 22:41:19.242 +03:00 [DBG] Start authorize callback request
2019-07-20 22:41:19.263 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:41:19.263 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:41:19.263 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:19.264 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:41:19.264 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ffca52a230944a93bb314b3a59784e67","UiLocales":null,"Nonce":"d2199d3ee41e424f9a4d40f9b3368117","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"414505563351f65b05e62f9c597be903","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ffca52a230944a93bb314b3a59784e67","nonce":"d2199d3ee41e424f9a4d40f9b3368117"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:41:19.283 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-20 22:41:19.284 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 22:41:19.307 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-20 22:41:19.310 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-20 22:41:19.321 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:41:19.393 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:41:19.438 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:41:19.440 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:41:19.842 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:41:19.842 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:41:19.860 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****CLHg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****-LTA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD98N1E2JE:00000005","TimeStamp":"2019-07-20T19:41:19.0000000Z","ProcessId":10936,"LocalIpAddress":"127.0.0.1:44423","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:41:19.865 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"ffca52a230944a93bb314b3a59784e67","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:41:19.904 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:41:19.918 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:41:22.345 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:41:22.346 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:41:22.346 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:41:22.347 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:41:22.348 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:41:22.349 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:41:22.349 +03:00 [DBG] Start discovery request
2019-07-20 22:41:22.518 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:41:22.519 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:41:22.519 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:41:22.521 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:41:22.525 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:41:22.526 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:41:22.544 +03:00 [DBG] Start key discovery request
2019-07-20 22:41:22.650 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:41:22.651 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:41:22.651 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:41:22.713 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:41:22.713 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:41:22.714 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:41:22.714 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:41:22.723 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:41:22.723 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:41:22.741 +03:00 [DBG] Start userinfo request
2019-07-20 22:41:22.749 +03:00 [DBG] Bearer token found in header
2019-07-20 22:41:22.797 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:22.802 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:22.809 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:41:22.811 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563651679,"exp":1563655279,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563651675,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:41:22.823 +03:00 [DBG] Creating userinfo response
2019-07-20 22:41:22.836 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:41:22.847 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:41:22.864 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:41:22.864 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:41:22.881 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:41:22.884 +03:00 [DBG] End userinfo request
2019-07-20 22:41:22.917 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:41:22.925 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:41:22.926 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:41:22.928 +03:00 [DBG] Rendering check session result
2019-07-20 22:41:24.758 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 22:41:24.768 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 22:41:24.768 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 22:41:24.783 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:41:24.803 +03:00 [DBG] Start end session request validation
2019-07-20 22:41:24.829 +03:00 [DBG] Start identity token validation
2019-07-20 22:41:24.831 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:41:24.831 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 22:41:24.841 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:41:24.842 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563651679,"exp":1563651979,"iss":"http://localhost:5000","aud":"spa","nonce":"d2199d3ee41e424f9a4d40f9b3368117","iat":1563651679,"at_hash":"P37IuSoc8LikcKxgEP8AWw","sid":"414505563351f65b05e62f9c597be903","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563651675,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:41:24.853 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTE2NzksImV4cCI6MTU2MzY1MTk3OSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJkMjE5OWQzZWU0MWU0MjRmOWE0ZDQwZjliMzM2ODExNyIsImlhdCI6MTU2MzY1MTY3OSwiYXRfaGFzaCI6IlAzN0l1U29jOExpa2NLeGdFUDhBV3ciLCJzaWQiOiI0MTQ1MDU1NjMzNTFmNjViMDVlNjJmOWM1OTdiZTkwMyIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1MTY3NSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.MvetKnCFihE7IESNWuaL9OPf8vTeHfqXIvN7li8GMCyWiYtSAVullZhbehsdGegcANH_Y6YHpEPW88Yk0m0lckzqrwRRuY6G77qfwGoK4T3f6iHR-kd7ANfvr7INyawcPU-hidue9MAKvcV3HdttKZix-Owk7z1hSl-1qgxAQLbon_hK43sge__JRjSNokcqqYfq-KKeSk5iDNTIm8_lMFaiiwv-S56eboxMmmTbjR8rxbMVMyR2EWXXd_iYZ34OP28FM16yDVFxwmr33ln_2osaNftT4M9b5uUjjIqiRJh_5o8J3_wjPkKI5nMGL_7UzksNzfOEtWE1MrPdS5CLHg","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 22:41:24.854 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 22:48:16.152 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:49:06.185 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-20 22:49:06.189 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-20 22:49:06.192 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-20 22:49:08.046 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOD98N1E2JF:0000000A","TimeStamp":"2019-07-20T19:49:08.0000000Z","ProcessId":10936,"LocalIpAddress":"127.0.0.1:44423","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-20 22:49:42.669 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-20 22:49:42.678 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-20 22:49:42.678 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-20 22:49:42.696 +03:00 [DBG] Processing signout callback request
2019-07-20 22:49:42.741 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:49:42.742 +03:00 [DBG] No client front-channel logout URLs
2019-07-20 22:49:42.742 +03:00 [DBG] No client back-channel logout URLs
2019-07-20 22:49:42.742 +03:00 [INF] Successful signout callback.
2019-07-20 22:49:42.742 +03:00 [DBG] No client front-channel iframe urls
2019-07-20 22:49:42.742 +03:00 [DBG] No client back-channel iframe urls
2019-07-20 22:52:33.843 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:52:33.873 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:52:33.873 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:52:33.888 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:52:33.924 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:52:33.924 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:52:33.924 +03:00 [DBG] Start discovery request
2019-07-20 22:52:34.148 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:52:34.233 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:52:34.233 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:52:34.234 +03:00 [DBG] Start authorize request
2019-07-20 22:52:34.236 +03:00 [DBG] No user present in authorize request
2019-07-20 22:52:34.236 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:52:34.237 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:52:34.241 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:52:34.249 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2d4638a72b9144718a7f7199bb3e241c","UiLocales":null,"Nonce":"78fb36fccfc34c9492cf27117583e7f4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2d4638a72b9144718a7f7199bb3e241c","nonce":"78fb36fccfc34c9492cf27117583e7f4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:52:34.250 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 22:52:34.953 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:52:34.956 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:52:34.957 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:52:34.958 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:52:37.471 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:52:37.642 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:52:37.643 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:52:37.644 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:52:37.877 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:52:37.878 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 22:52:37.878 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 22:52:37.878 +03:00 [DBG] Adding auth_time claim with value: 1563652357
2019-07-20 22:52:37.882 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:52:37.882 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD98N1E2JG:00000004","TimeStamp":"2019-07-20T19:52:37.0000000Z","ProcessId":10936,"LocalIpAddress":"127.0.0.1:44423","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 22:52:37.883 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:52:37.907 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 22:52:37.909 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 22:52:37.909 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 22:52:37.909 +03:00 [DBG] Start authorize callback request
2019-07-20 22:52:37.912 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:52:37.912 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:52:37.912 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:52:37.913 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:52:37.913 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2d4638a72b9144718a7f7199bb3e241c","UiLocales":null,"Nonce":"78fb36fccfc34c9492cf27117583e7f4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"588a32911edd954589f305f540c8c4fc","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2d4638a72b9144718a7f7199bb3e241c","nonce":"78fb36fccfc34c9492cf27117583e7f4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:52:38.011 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 22:52:38.012 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 22:52:38.012 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 22:52:38.013 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:52:38.039 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 22:52:38.039 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 22:52:38.052 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Nh-Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8lpQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD98N1E2JG:00000005","TimeStamp":"2019-07-20T19:52:38.0000000Z","ProcessId":10936,"LocalIpAddress":"127.0.0.1:44423","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 22:52:38.054 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"2d4638a72b9144718a7f7199bb3e241c","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 22:52:38.054 +03:00 [DBG] Augmenting SignInContext
2019-07-20 22:52:38.055 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 22:52:40.357 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:52:40.358 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:52:40.358 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:52:40.359 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:52:40.359 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:52:40.359 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:52:40.360 +03:00 [DBG] Start discovery request
2019-07-20 22:52:40.548 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 22:52:40.548 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:52:40.548 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:52:40.552 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 22:52:40.553 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 22:52:40.553 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 22:52:40.553 +03:00 [DBG] Start key discovery request
2019-07-20 22:52:40.710 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:52:40.710 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:52:40.710 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:52:40.732 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 22:52:40.732 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:52:40.733 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:52:40.733 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 22:52:40.736 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 22:52:40.736 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 22:52:40.737 +03:00 [DBG] Start userinfo request
2019-07-20 22:52:40.737 +03:00 [DBG] Bearer token found in header
2019-07-20 22:52:40.748 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:52:40.748 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:52:40.755 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:52:40.755 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563652358,"exp":1563655958,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563652357,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:52:40.756 +03:00 [DBG] Creating userinfo response
2019-07-20 22:52:40.756 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:52:40.756 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:52:40.756 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 22:52:40.756 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 22:52:40.770 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 22:52:40.771 +03:00 [DBG] End userinfo request
2019-07-20 22:52:40.862 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 22:52:40.862 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 22:52:40.863 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 22:52:40.863 +03:00 [DBG] Rendering check session result
2019-07-20 22:52:53.219 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 22:52:53.222 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 22:52:53.222 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 22:52:53.223 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 22:52:53.224 +03:00 [DBG] Start end session request validation
2019-07-20 22:52:53.224 +03:00 [DBG] Start identity token validation
2019-07-20 22:52:53.224 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:52:53.224 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 22:52:53.271 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 22:52:53.271 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563652358,"exp":1563652658,"iss":"http://localhost:5000","aud":"spa","nonce":"78fb36fccfc34c9492cf27117583e7f4","iat":1563652358,"at_hash":"2TStb6A0ewCUJ94Jdivfcg","sid":"588a32911edd954589f305f540c8c4fc","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563652357,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 22:52:53.272 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTIzNTgsImV4cCI6MTU2MzY1MjY1OCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI3OGZiMzZmY2NmYzM0Yzk0OTJjZjI3MTE3NTgzZTdmNCIsImlhdCI6MTU2MzY1MjM1OCwiYXRfaGFzaCI6IjJUU3RiNkEwZXdDVUo5NEpkaXZmY2ciLCJzaWQiOiI1ODhhMzI5MTFlZGQ5NTQ1ODlmMzA1ZjU0MGM4YzRmYyIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1MjM1NywiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.w3-kYIctKvSLhjmNQprgELqofnrKq0sf-QB9Zt-mqAHwiV8BbtsPtyGJNPYt4Q2Jc-d5Rei-l1Lbhy1-9LrTAXI1z_TYY-_oZSRm7-yrN8mimOKAOdqaLb8qn4sfxpoYRFjnDKv0nMcYlKbu6VC40H7q8dd8XBLn9CexpqnFDXYKHQWF_t-9O04qtCFDZmLn0rqFvjlgXltlPrSWYNO--AhsrrBshPYIbZhuwIJXAzeTFYiJ7nZ2hWy97F4saIJD788VTX4w8YaERyjykdMd3HEJkrK1TRMTRNCHQ3xq3lw-QM6cExAvP0Y9-lwBh8m4itMw8WvhPhlceRoKSQNh-Q","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 22:52:53.272 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 22:58:17.190 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 22:58:30.284 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-20 22:58:30.284 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-20 22:58:30.284 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-20 22:58:30.286 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOD98N1E2JI:00000002","TimeStamp":"2019-07-20T19:58:30.0000000Z","ProcessId":10936,"LocalIpAddress":"127.0.0.1:44423","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-20 22:58:30.416 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-20 22:58:30.474 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-20 22:58:30.475 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-20 22:58:30.475 +03:00 [DBG] Processing signout callback request
2019-07-20 22:58:30.478 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:58:30.478 +03:00 [DBG] No client front-channel logout URLs
2019-07-20 22:58:30.478 +03:00 [DBG] No client back-channel logout URLs
2019-07-20 22:58:30.478 +03:00 [INF] Successful signout callback.
2019-07-20 22:58:30.478 +03:00 [DBG] No client front-channel iframe urls
2019-07-20 22:58:30.478 +03:00 [DBG] No client back-channel iframe urls
2019-07-20 22:58:46.172 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 22:58:46.175 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 22:58:46.175 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 22:58:46.176 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 22:58:46.176 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 22:58:46.177 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 22:58:46.178 +03:00 [DBG] Start discovery request
2019-07-20 22:58:46.275 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 22:58:46.278 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 22:58:46.279 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 22:58:46.279 +03:00 [DBG] Start authorize request
2019-07-20 22:58:46.279 +03:00 [DBG] No user present in authorize request
2019-07-20 22:58:46.279 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:58:46.279 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:58:46.281 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:58:46.283 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d56b61ab3d7546799d7a252f78c44a74","UiLocales":null,"Nonce":"3d6ee862e9a04c9f96aa5398cb8d659a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d56b61ab3d7546799d7a252f78c44a74","nonce":"3d6ee862e9a04c9f96aa5398cb8d659a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 22:58:46.283 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 22:58:46.470 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 22:58:46.470 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 22:58:46.471 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 22:58:46.472 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:00:14.854 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:00:14.854 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:00:14.855 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:00:14.855 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:00:52.913 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 23:00:53.064 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:00:53.064 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:00:53.065 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:00:53.365 +03:00 [DBG] Augmenting SignInContext
2019-07-20 23:00:53.365 +03:00 [DBG] Adding idp claim with value: local
2019-07-20 23:00:53.365 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-20 23:00:53.365 +03:00 [DBG] Adding auth_time claim with value: 1563652853
2019-07-20 23:00:53.366 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 23:00:53.367 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD98N1E2JM:00000003","TimeStamp":"2019-07-20T20:00:53.0000000Z","ProcessId":10936,"LocalIpAddress":"127.0.0.1:44423","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 23:00:53.367 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:00:53.481 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 23:00:53.482 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 23:00:53.482 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 23:00:53.482 +03:00 [DBG] Start authorize callback request
2019-07-20 23:00:53.483 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 23:00:53.483 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:00:53.483 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:00:53.483 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:00:53.484 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d56b61ab3d7546799d7a252f78c44a74","UiLocales":null,"Nonce":"3d6ee862e9a04c9f96aa5398cb8d659a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"855e4c2a8bce65c0c17a8aec62235cf3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d56b61ab3d7546799d7a252f78c44a74","nonce":"3d6ee862e9a04c9f96aa5398cb8d659a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 23:00:53.512 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-20 23:00:53.512 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 23:00:53.512 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 23:00:53.512 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 23:00:53.546 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 23:00:53.546 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 23:00:53.561 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Jk4Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Mtyw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD98N1E2JH:00000008","TimeStamp":"2019-07-20T20:00:53.0000000Z","ProcessId":10936,"LocalIpAddress":"127.0.0.1:44423","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 23:00:53.562 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"d56b61ab3d7546799d7a252f78c44a74","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 23:00:53.562 +03:00 [DBG] Augmenting SignInContext
2019-07-20 23:00:53.563 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 23:00:56.740 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 23:00:56.741 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:00:56.742 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:00:56.744 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 23:00:56.792 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 23:00:56.793 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 23:00:56.794 +03:00 [DBG] Start discovery request
2019-07-20 23:00:56.916 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 23:00:56.917 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:00:56.917 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:00:56.918 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 23:00:56.921 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 23:00:56.921 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 23:00:56.922 +03:00 [DBG] Start key discovery request
2019-07-20 23:00:57.072 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 23:00:57.073 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:00:57.073 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:00:57.096 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 23:00:57.096 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:00:57.097 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:00:57.097 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 23:00:57.098 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 23:00:57.098 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 23:00:57.098 +03:00 [DBG] Start userinfo request
2019-07-20 23:00:57.099 +03:00 [DBG] Bearer token found in header
2019-07-20 23:00:57.105 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:00:57.105 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:00:57.112 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 23:00:57.112 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563652853,"exp":1563656453,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563652853,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 23:00:57.113 +03:00 [DBG] Creating userinfo response
2019-07-20 23:00:57.113 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 23:00:57.113 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 23:00:57.113 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 23:00:57.113 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 23:00:57.126 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 23:00:57.126 +03:00 [DBG] End userinfo request
2019-07-20 23:00:57.270 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 23:00:57.271 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 23:00:57.271 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 23:00:57.271 +03:00 [DBG] Rendering check session result
2019-07-20 23:01:04.234 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 23:01:04.236 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 23:01:04.236 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 23:01:04.236 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 23:01:04.236 +03:00 [DBG] Start end session request validation
2019-07-20 23:01:04.236 +03:00 [DBG] Start identity token validation
2019-07-20 23:01:04.237 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:01:04.237 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 23:01:04.253 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 23:01:04.255 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563652853,"exp":1563653153,"iss":"http://localhost:5000","aud":"spa","nonce":"3d6ee862e9a04c9f96aa5398cb8d659a","iat":1563652853,"at_hash":"qQfqUcFFr1BE_RmnDS4XXw","sid":"855e4c2a8bce65c0c17a8aec62235cf3","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563652853,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 23:01:04.256 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTI4NTMsImV4cCI6MTU2MzY1MzE1MywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIzZDZlZTg2MmU5YTA0YzlmOTZhYTUzOThjYjhkNjU5YSIsImlhdCI6MTU2MzY1Mjg1MywiYXRfaGFzaCI6InFRZnFVY0ZGcjFCRV9SbW5EUzRYWHciLCJzaWQiOiI4NTVlNGMyYThiY2U2NWMwYzE3YThhZWM2MjIzNWNmMyIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1Mjg1MywiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.z6RlwZP_XQksna7gjAJdCz28Cc6s54GtvVL5vFFAyHcH80cLF6KC6TywuC5pd4lNXNtUyvHuqPqNkgMhzYRHWb0EQm3F8jzkwSoEyPgbG8EZSlzjVfUOPgn1NGIuUFcMFYKhgBvkkZLM5kn5z6FnTvc_WJ6xOty6MIyjgBPx89yRIG_U89tpX19uGLFeGL7B8ucvVdArJP3hsMtI2Y95EqaABm7zZpigpKLbnwMvWSp2Y_e9TrrCFFCZY3StyNf02TA72UmSAUcyHQKVSzCMdMImFSQoRz6Wd7esci1s0_7eyH0nJ_jz3MXITl6tX5j21LMRVmxko4CvROMI9iJk4Q","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 23:01:04.256 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 23:02:52.987 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-20 23:02:53.085 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-20 23:02:53.094 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-20 23:02:53.095 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-20 23:02:53.095 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-20 23:02:53.095 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-20 23:02:53.096 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-20 23:02:54.598 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 23:02:54.614 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:02:54.615 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:02:54.757 +03:00 [DBG] Login Url: /Account/Login
2019-07-20 23:02:54.757 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-20 23:02:54.757 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-20 23:02:54.757 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-20 23:02:54.757 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-20 23:02:54.757 +03:00 [DBG] Error Url: /home/error
2019-07-20 23:02:54.757 +03:00 [DBG] Error Id Parameter: errorId
2019-07-20 23:02:54.845 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 23:02:57.029 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 23:02:57.030 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:02:57.031 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:02:57.032 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 23:02:57.391 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 23:02:57.391 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 23:02:57.392 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 23:02:57.392 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 23:02:57.403 +03:00 [DBG] Start discovery request
2019-07-20 23:02:57.408 +03:00 [DBG] Start discovery request
2019-07-20 23:02:57.880 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 23:02:57.979 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 23:02:57.979 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 23:02:57.992 +03:00 [DBG] Start authorize request
2019-07-20 23:02:58.033 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 23:02:58.064 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:02:58.137 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:02:58.331 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:02:58.384 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d2ce40b554b94e52856c391946907d6e","UiLocales":null,"Nonce":"d31c6438c1274e629af8a1aee13963a9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"855e4c2a8bce65c0c17a8aec62235cf3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d2ce40b554b94e52856c391946907d6e","nonce":"d31c6438c1274e629af8a1aee13963a9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 23:03:00.784 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 23:03:00.785 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 23:03:00.786 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 23:03:00.786 +03:00 [DBG] Start authorize request
2019-07-20 23:03:00.786 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 23:03:00.786 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:03:00.787 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:03:00.787 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:03:00.788 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"bfce6ddd65fa45d780a9990e41b804d7","UiLocales":null,"Nonce":"887a9a0d865f4b1f8c49047bc53c57e2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"855e4c2a8bce65c0c17a8aec62235cf3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"bfce6ddd65fa45d780a9990e41b804d7","nonce":"887a9a0d865f4b1f8c49047bc53c57e2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 23:03:04.101 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-20 23:03:04.101 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-20 23:03:04.102 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 23:03:04.102 +03:00 [INF] Showing consent: User has not yet consented
2019-07-20 23:03:04.103 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 23:03:04.104 +03:00 [INF] Showing consent: User has not yet consented
2019-07-20 23:03:04.609 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:03:04.610 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:03:04.611 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:03:04.614 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:03:07.266 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 23:03:07.551 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:03:07.551 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:03:07.552 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:03:07.600 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOD9L04E1RR:00000004","TimeStamp":"2019-07-20T20:03:07.0000000Z","ProcessId":2544,"LocalIpAddress":"127.0.0.1:4150","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-20 23:03:07.670 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:03:07.736 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 23:03:07.738 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 23:03:07.738 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 23:03:07.770 +03:00 [DBG] Start authorize callback request
2019-07-20 23:03:07.794 +03:00 [DBG] User in authorize request: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 23:03:07.794 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:03:07.795 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:03:07.795 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:03:07.796 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"bfce6ddd65fa45d780a9990e41b804d7","UiLocales":null,"Nonce":"887a9a0d865f4b1f8c49047bc53c57e2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"855e4c2a8bce65c0c17a8aec62235cf3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"bfce6ddd65fa45d780a9990e41b804d7","nonce":"887a9a0d865f4b1f8c49047bc53c57e2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 23:03:07.808 +03:00 [DBG] user_consent grant with value: spa|a385f5f0-a5f8-44eb-8ac8-82d8811066d3 not found in store.
2019-07-20 23:03:07.808 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 23:03:07.824 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-20 23:03:07.828 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-20 23:03:07.839 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 23:03:07.917 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 23:03:07.969 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 23:03:07.971 +03:00 [DBG] Getting claims for access token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 23:03:10.031 +03:00 [DBG] Getting claims for identity token for subject: a385f5f0-a5f8-44eb-8ac8-82d8811066d3 and client: spa
2019-07-20 23:03:10.032 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 23:03:10.053 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****PASw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****dcJw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD9L04E1RP:00000005","TimeStamp":"2019-07-20T20:03:10.0000000Z","ProcessId":2544,"LocalIpAddress":"127.0.0.1:4150","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 23:03:10.057 +03:00 [INF] Authorize endpoint response
{"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"bfce6ddd65fa45d780a9990e41b804d7","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 23:03:14.101 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 23:03:14.102 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:03:14.102 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:03:14.103 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 23:03:14.103 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 23:03:14.104 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 23:03:14.104 +03:00 [DBG] Start discovery request
2019-07-20 23:03:14.206 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 23:03:14.206 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:03:14.206 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:03:14.207 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 23:03:14.210 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 23:03:14.210 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 23:03:14.225 +03:00 [DBG] Start key discovery request
2019-07-20 23:03:14.424 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 23:03:14.425 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:03:14.425 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:03:14.438 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 23:03:14.438 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:03:14.439 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:03:14.439 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 23:03:14.445 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 23:03:14.445 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 23:03:14.463 +03:00 [DBG] Start userinfo request
2019-07-20 23:03:14.488 +03:00 [DBG] Bearer token found in header
2019-07-20 23:03:14.599 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:03:14.616 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:03:14.626 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 23:03:14.634 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563652989,"exp":1563656589,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563652853,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 23:03:14.662 +03:00 [DBG] Creating userinfo response
2019-07-20 23:03:14.689 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 23:03:14.700 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 23:03:14.708 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 23:03:14.709 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 23:03:14.727 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 23:03:14.730 +03:00 [DBG] End userinfo request
2019-07-20 23:03:14.833 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 23:03:14.835 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 23:03:14.835 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 23:03:14.840 +03:00 [DBG] Rendering check session result
2019-07-20 23:03:23.717 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 23:03:23.719 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 23:03:23.719 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 23:03:23.732 +03:00 [DBG] Processing signout request for a385f5f0-a5f8-44eb-8ac8-82d8811066d3
2019-07-20 23:03:23.755 +03:00 [DBG] Start end session request validation
2019-07-20 23:03:23.795 +03:00 [DBG] Start identity token validation
2019-07-20 23:03:23.800 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:03:23.800 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 23:03:23.814 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 23:03:23.816 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563652990,"exp":1563653290,"iss":"http://localhost:5000","aud":"spa","nonce":"887a9a0d865f4b1f8c49047bc53c57e2","iat":1563652990,"at_hash":"nihfXprgPfBxrw7hRqpN8g","sid":"855e4c2a8bce65c0c17a8aec62235cf3","sub":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","auth_time":1563652853,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-20 23:03:23.823 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTI5OTAsImV4cCI6MTU2MzY1MzI5MCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI4ODdhOWEwZDg2NWY0YjFmOGM0OTA0N2JjNTNjNTdlMiIsImlhdCI6MTU2MzY1Mjk5MCwiYXRfaGFzaCI6Im5paGZYcHJnUGZCeHJ3N2hScXBOOGciLCJzaWQiOiI4NTVlNGMyYThiY2U2NWMwYzE3YThhZWM2MjIzNWNmMyIsInN1YiI6ImEzODVmNWYwLWE1ZjgtNDRlYi04YWM4LTgyZDg4MTEwNjZkMyIsImF1dGhfdGltZSI6MTU2MzY1Mjg1MywiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.f5i3fgXUQtz-WJ0WBPGIS5BhG9-uTT9ZQAadfVdtV6-ba1Uw0U5DAvU3yQKfnP1qMt5R_U4_SlkFc3XzMBupG--rjWBpe_Jj-NgzBBdYDsrWTQlE_L3nAkJIljnpP88ld-JBGHuHtf8ySPFst0OI6BRj2CrEk2qjt4CPwP3WaE3tSPZfJeetWY922YBZFpD9-J47nV7ItFFfKD1eTh_0wpkUQTwwbg_eS9nPnz_ts2Q02a8g246c5fVw7YFCYlL4HwkUQDlZK2BBNts5oFlWJOXmcPiJ62cpa3zL0nUWctBiM6wumsq_YgC8g_Ibiu0S_NjDgLhgenl5IMU-yvPASw","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 23:03:23.824 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 23:03:54.859 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 23:03:55.015 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-20 23:03:55.018 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-20 23:03:55.019 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-20 23:03:55.021 +03:00 [INF] {"SubjectId":"a385f5f0-a5f8-44eb-8ac8-82d8811066d3","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOD9L04E1RR:00000007","TimeStamp":"2019-07-20T20:03:55.0000000Z","ProcessId":2544,"LocalIpAddress":"127.0.0.1:4150","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-20 23:03:55.223 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-20 23:03:55.235 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-20 23:03:55.235 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-20 23:03:55.265 +03:00 [DBG] Processing signout callback request
2019-07-20 23:03:55.669 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:03:55.670 +03:00 [DBG] No client front-channel logout URLs
2019-07-20 23:03:55.670 +03:00 [DBG] No client back-channel logout URLs
2019-07-20 23:03:55.670 +03:00 [INF] Successful signout callback.
2019-07-20 23:03:55.670 +03:00 [DBG] No client front-channel iframe urls
2019-07-20 23:03:55.670 +03:00 [DBG] No client back-channel iframe urls
2019-07-20 23:05:12.576 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-20 23:05:12.699 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-20 23:05:12.706 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-20 23:05:12.707 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-20 23:05:12.707 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-20 23:05:12.707 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-20 23:05:12.707 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-20 23:05:13.604 +03:00 [DBG] Login Url: /Account/Login
2019-07-20 23:05:13.609 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-20 23:05:13.609 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-20 23:05:13.610 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-20 23:05:13.610 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-20 23:05:13.611 +03:00 [DBG] Error Url: /home/error
2019-07-20 23:05:13.611 +03:00 [DBG] Error Id Parameter: errorId
2019-07-20 23:08:26.057 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 23:08:26.085 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:08:26.085 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:08:26.114 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 23:08:26.703 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 23:08:26.704 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 23:08:26.715 +03:00 [DBG] Start discovery request
2019-07-20 23:08:27.097 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-20 23:08:27.124 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-20 23:08:27.124 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-20 23:08:27.134 +03:00 [DBG] Start authorize request
2019-07-20 23:08:27.180 +03:00 [DBG] No user present in authorize request
2019-07-20 23:08:27.196 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:08:27.255 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:08:27.389 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:08:27.439 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"319602ceb78c402a8f2ef8bdd7ae52df","UiLocales":null,"Nonce":"71ddac94780b4532832f6d740491adf3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"319602ceb78c402a8f2ef8bdd7ae52df","nonce":"71ddac94780b4532832f6d740491adf3"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 23:08:27.521 +03:00 [INF] Showing login: User is not authenticated
2019-07-20 23:08:27.716 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:08:27.717 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:08:27.718 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:08:27.728 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:08:30.468 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-20 23:08:33.546 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-20 23:08:37.595 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"aaa3f83c-7ca6-43ea-ac59-46e248e268d2","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOD9M9LTS73:00000006","TimeStamp":"2019-07-20T20:08:37.0000000Z","ProcessId":9072,"LocalIpAddress":"127.0.0.1:9101","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-20 23:08:37.615 +03:00 [DBG] Augmenting SignInContext
2019-07-20 23:08:37.619 +03:00 [DBG] Adding amr claim with value: external
2019-07-20 23:08:37.629 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 23:08:37.638 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-20 23:08:37.672 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 23:08:37.674 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 23:08:37.674 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 23:08:37.689 +03:00 [DBG] Start authorize callback request
2019-07-20 23:08:37.705 +03:00 [DBG] User in authorize request: aaa3f83c-7ca6-43ea-ac59-46e248e268d2
2019-07-20 23:08:37.705 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:08:37.706 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:08:37.706 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:08:37.707 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"aaa3f83c-7ca6-43ea-ac59-46e248e268d2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"319602ceb78c402a8f2ef8bdd7ae52df","UiLocales":null,"Nonce":"71ddac94780b4532832f6d740491adf3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d31917f6054eebeff72272e3d81cb3f5","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"319602ceb78c402a8f2ef8bdd7ae52df","nonce":"71ddac94780b4532832f6d740491adf3"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 23:08:37.828 +03:00 [DBG] user_consent grant with value: spa|aaa3f83c-7ca6-43ea-ac59-46e248e268d2 not found in store.
2019-07-20 23:08:37.828 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 23:08:37.828 +03:00 [INF] Showing consent: User has not yet consented
2019-07-20 23:08:37.886 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:08:37.887 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:08:37.887 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:08:37.887 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:08:43.371 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 23:08:43.470 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:08:43.470 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:08:43.470 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:08:43.472 +03:00 [INF] {"SubjectId":"aaa3f83c-7ca6-43ea-ac59-46e248e268d2","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOD9M9LTS73:00000009","TimeStamp":"2019-07-20T20:08:43.0000000Z","ProcessId":9072,"LocalIpAddress":"127.0.0.1:9101","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-20 23:08:43.503 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:08:43.512 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-20 23:08:43.514 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-20 23:08:43.516 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-20 23:08:43.516 +03:00 [DBG] Start authorize callback request
2019-07-20 23:08:43.525 +03:00 [DBG] User in authorize request: aaa3f83c-7ca6-43ea-ac59-46e248e268d2
2019-07-20 23:08:43.525 +03:00 [DBG] Start authorize request protocol validation
2019-07-20 23:08:43.525 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:08:43.526 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-20 23:08:43.526 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"aaa3f83c-7ca6-43ea-ac59-46e248e268d2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"319602ceb78c402a8f2ef8bdd7ae52df","UiLocales":null,"Nonce":"71ddac94780b4532832f6d740491adf3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d31917f6054eebeff72272e3d81cb3f5","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"319602ceb78c402a8f2ef8bdd7ae52df","nonce":"71ddac94780b4532832f6d740491adf3"},"$type":"AuthorizeRequestValidationLog"}
2019-07-20 23:08:43.532 +03:00 [DBG] user_consent grant with value: spa|aaa3f83c-7ca6-43ea-ac59-46e248e268d2 not found in store.
2019-07-20 23:08:43.532 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-20 23:08:43.550 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-20 23:08:43.556 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-20 23:08:43.567 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: aaa3f83c-7ca6-43ea-ac59-46e248e268d2
2019-07-20 23:08:43.609 +03:00 [DBG] Creating Implicit Flow response.
2019-07-20 23:08:43.652 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-20 23:08:43.654 +03:00 [DBG] Getting claims for access token for subject: aaa3f83c-7ca6-43ea-ac59-46e248e268d2
2019-07-20 23:08:43.819 +03:00 [DBG] Getting claims for identity token for subject: aaa3f83c-7ca6-43ea-ac59-46e248e268d2 and client: spa
2019-07-20 23:08:43.819 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-20 23:08:43.842 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"aaa3f83c-7ca6-43ea-ac59-46e248e268d2","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Y9NA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****JNDQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOD9M9LTS73:0000000A","TimeStamp":"2019-07-20T20:08:43.0000000Z","ProcessId":9072,"LocalIpAddress":"127.0.0.1:9101","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-20 23:08:43.849 +03:00 [INF] Authorize endpoint response
{"SubjectId":"aaa3f83c-7ca6-43ea-ac59-46e248e268d2","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"319602ceb78c402a8f2ef8bdd7ae52df","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-20 23:08:43.936 +03:00 [DBG] Augmenting SignInContext
2019-07-20 23:08:43.938 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-20 23:08:45.458 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-20 23:08:45.460 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:08:45.460 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:08:45.461 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 23:08:45.462 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 23:08:45.462 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 23:08:45.463 +03:00 [DBG] Start discovery request
2019-07-20 23:08:45.564 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-20 23:08:45.565 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:08:45.565 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:08:45.566 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 23:08:45.567 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 23:08:45.568 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 23:08:45.579 +03:00 [DBG] Start key discovery request
2019-07-20 23:08:45.699 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 23:08:45.699 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:08:45.700 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:08:45.712 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-20 23:08:45.712 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-20 23:08:45.712 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-20 23:08:45.712 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-20 23:08:45.718 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-20 23:08:45.718 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-20 23:08:45.735 +03:00 [DBG] Start userinfo request
2019-07-20 23:08:45.741 +03:00 [DBG] Bearer token found in header
2019-07-20 23:08:45.789 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:08:45.794 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:08:45.806 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 23:08:45.808 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563653323,"exp":1563656923,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"aaa3f83c-7ca6-43ea-ac59-46e248e268d2","auth_time":1563653317,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-20 23:08:45.826 +03:00 [DBG] Creating userinfo response
2019-07-20 23:08:45.839 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 23:08:45.844 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 23:08:45.849 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-20 23:08:45.849 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-20 23:08:45.859 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-20 23:08:45.859 +03:00 [DBG] End userinfo request
2019-07-20 23:08:45.889 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-20 23:08:45.890 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-20 23:08:45.890 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-20 23:08:45.895 +03:00 [DBG] Rendering check session result
2019-07-20 23:08:46.277 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 23:08:46.281 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 23:08:46.281 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 23:08:46.281 +03:00 [DBG] Start discovery request
2019-07-20 23:08:46.426 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 23:08:46.427 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 23:08:46.427 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 23:08:46.427 +03:00 [DBG] Start key discovery request
2019-07-20 23:09:10.409 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-20 23:09:10.415 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-20 23:09:10.416 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-20 23:09:10.429 +03:00 [DBG] Processing signout request for aaa3f83c-7ca6-43ea-ac59-46e248e268d2
2019-07-20 23:09:10.442 +03:00 [DBG] Start end session request validation
2019-07-20 23:09:10.455 +03:00 [DBG] Start identity token validation
2019-07-20 23:09:10.456 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:09:10.456 +03:00 [DBG] Client found: spa / SPA Client
2019-07-20 23:09:10.464 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-20 23:09:10.466 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563653323,"exp":1563653623,"iss":"http://localhost:5000","aud":"spa","nonce":"71ddac94780b4532832f6d740491adf3","iat":1563653323,"at_hash":"CkhvNaoIjj5S7hDwRBEOzA","sid":"d31917f6054eebeff72272e3d81cb3f5","sub":"aaa3f83c-7ca6-43ea-ac59-46e248e268d2","auth_time":1563653317,"idp":"Facebook","amr":"external"},"$type":"TokenValidationLog"}
2019-07-20 23:09:10.474 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"aaa3f83c-7ca6-43ea-ac59-46e248e268d2","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM2NTMzMjMsImV4cCI6MTU2MzY1MzYyMywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI3MWRkYWM5NDc4MGI0NTMyODMyZjZkNzQwNDkxYWRmMyIsImlhdCI6MTU2MzY1MzMyMywiYXRfaGFzaCI6IkNraHZOYW9Jamo1UzdoRHdSQkVPekEiLCJzaWQiOiJkMzE5MTdmNjA1NGVlYmVmZjcyMjcyZTNkODFjYjNmNSIsInN1YiI6ImFhYTNmODNjLTdjYTYtNDNlYS1hYzU5LTQ2ZTI0OGUyNjhkMiIsImF1dGhfdGltZSI6MTU2MzY1MzMxNywiaWRwIjoiRmFjZWJvb2siLCJhbXIiOlsiZXh0ZXJuYWwiXX0.14p4v5kG2aMHWQ43ExrSG1FIl1K7dTfDy4jyIIjer2biIcE81rImupo4iYUmIRL7VGS-5sf_Dbslt8owLtnXh_QHPEh4E56lkSijeycGpz1Ay6HuSBdprMNGvujHGhMh37Kmqm893JZmzmiqBdnNyj3uvVoKvo50XDN804Z2cMr4OqYGDhzE-jF0OIOlB9ZwN9rPs5XyykXT_YtO2m5oBruALU-d_7nG7-6V0r91coxJuoUSVWYZT3w7ZQ3qLg44oGO8TsAtA48zpuib5A5uv6Ju0ZnnT3tZx3FTGLULMF7j0fFOYvK5xSNhZFl_1AXkdQKXbh6O-_E2jB-EWyY9NA","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-20 23:09:10.475 +03:00 [ERR] Error processing end session request Invalid request
2019-07-20 23:09:12.642 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-20 23:09:12.690 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-20 23:09:12.691 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-20 23:09:12.692 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-20 23:09:12.694 +03:00 [INF] {"SubjectId":"aaa3f83c-7ca6-43ea-ac59-46e248e268d2","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOD9M9LTS73:00000014","TimeStamp":"2019-07-20T20:09:12.0000000Z","ProcessId":9072,"LocalIpAddress":"127.0.0.1:9101","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-20 23:09:12.763 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-20 23:09:12.769 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-20 23:09:12.769 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-20 23:09:12.801 +03:00 [DBG] Processing signout callback request
2019-07-20 23:09:12.834 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-20 23:09:12.834 +03:00 [DBG] No client front-channel logout URLs
2019-07-20 23:09:12.835 +03:00 [DBG] No client back-channel logout URLs
2019-07-20 23:09:12.835 +03:00 [INF] Successful signout callback.
2019-07-20 23:09:12.835 +03:00 [DBG] No client front-channel iframe urls
2019-07-20 23:09:12.835 +03:00 [DBG] No client back-channel iframe urls
2019-07-22 08:43:26.013 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 08:43:26.183 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 08:43:26.205 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 08:43:26.205 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 08:43:26.205 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 08:43:26.205 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 08:43:26.205 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 08:43:27.700 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 08:43:27.705 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 08:43:27.705 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 08:43:27.706 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 08:43:27.706 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 08:43:27.706 +03:00 [DBG] Error Url: /home/error
2019-07-22 08:43:27.706 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 09:19:15.531 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 09:19:15.595 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 09:19:15.596 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 09:19:15.638 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 09:19:16.120 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 09:19:16.121 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 09:19:16.130 +03:00 [DBG] Start discovery request
2019-07-22 09:19:16.299 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 09:19:16.319 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 09:19:16.319 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 09:19:16.331 +03:00 [DBG] Start authorize request
2019-07-22 09:19:16.358 +03:00 [DBG] No user present in authorize request
2019-07-22 09:19:16.372 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:19:16.423 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:19:16.513 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:19:16.547 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"10c3a0927e644ee0ad4a9c2cf0fb7210","UiLocales":null,"Nonce":"83a0ec0c4bbb41269781b630d5513ffb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"10c3a0927e644ee0ad4a9c2cf0fb7210","nonce":"83a0ec0c4bbb41269781b630d5513ffb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 09:19:16.596 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 09:19:16.790 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:19:16.792 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:19:16.793 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:19:16.799 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:19:19.793 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-22 09:19:21.895 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:19:21.896 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:19:21.897 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:19:21.897 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:19:23.394 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 09:19:23.600 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:19:23.600 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:19:23.602 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:19:25.885 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOECU2F4KS6:00000006","TimeStamp":"2019-07-22T06:19:25.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-22 09:19:25.890 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:19:25.891 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:19:25.892 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:19:25.892 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:19:36.887 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 09:19:36.892 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:19:36.892 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:19:36.894 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:19:36.921 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOECU2F4KS6:00000007","TimeStamp":"2019-07-22T06:19:36.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-22 09:19:36.921 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:19:36.921 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:19:36.922 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:19:36.922 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:17.947 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 09:20:17.959 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:20:17.960 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:17.965 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:20:17.984 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOECU2F4KS7:00000001","TimeStamp":"2019-07-22T06:20:17.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-22 09:20:17.985 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:20:17.985 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:17.986 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:20:17.986 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:20.814 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-22 09:20:28.021 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-22 09:20:30.699 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOECU2F4KS7:00000004","TimeStamp":"2019-07-22T06:20:30.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 09:20:30.748 +03:00 [DBG] Augmenting SignInContext
2019-07-22 09:20:30.760 +03:00 [DBG] Adding amr claim with value: external
2019-07-22 09:20:30.777 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 09:20:30.798 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 09:20:30.847 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 09:20:30.849 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 09:20:30.849 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 09:20:30.864 +03:00 [DBG] Start authorize callback request
2019-07-22 09:20:30.880 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 09:20:30.881 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:20:30.881 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:30.882 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:20:30.883 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"10c3a0927e644ee0ad4a9c2cf0fb7210","UiLocales":null,"Nonce":"83a0ec0c4bbb41269781b630d5513ffb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0ce6fc45958be09500c10ff315df324d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"10c3a0927e644ee0ad4a9c2cf0fb7210","nonce":"83a0ec0c4bbb41269781b630d5513ffb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 09:20:31.061 +03:00 [DBG] user_consent grant with value: spa|9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 not found in store.
2019-07-22 09:20:31.061 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 09:20:31.062 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 09:20:31.160 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:20:31.161 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:31.161 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:20:31.161 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:38.626 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 09:20:38.710 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:20:38.710 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:38.711 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:20:38.716 +03:00 [INF] {"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOECU2F4KS7:00000008","TimeStamp":"2019-07-22T06:20:38.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 09:20:38.771 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:38.787 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 09:20:38.787 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 09:20:38.788 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 09:20:38.788 +03:00 [DBG] Start authorize callback request
2019-07-22 09:20:38.805 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 09:20:38.806 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 09:20:38.806 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:38.806 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 09:20:38.807 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"10c3a0927e644ee0ad4a9c2cf0fb7210","UiLocales":null,"Nonce":"83a0ec0c4bbb41269781b630d5513ffb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0ce6fc45958be09500c10ff315df324d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"10c3a0927e644ee0ad4a9c2cf0fb7210","nonce":"83a0ec0c4bbb41269781b630d5513ffb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 09:20:38.832 +03:00 [DBG] user_consent grant with value: spa|9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 not found in store.
2019-07-22 09:20:38.832 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 09:20:38.851 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 09:20:38.854 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 09:20:38.868 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 09:20:38.921 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 09:20:38.969 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 09:20:38.970 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 09:20:39.186 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 09:20:39.187 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 09:20:39.214 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Ju1w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****RcGg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KS7:00000009","TimeStamp":"2019-07-22T06:20:39.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 09:20:39.219 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"10c3a0927e644ee0ad4a9c2cf0fb7210","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 09:20:39.277 +03:00 [DBG] Augmenting SignInContext
2019-07-22 09:20:39.278 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 09:20:41.630 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 09:20:41.636 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 09:20:41.637 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 09:20:41.638 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 09:20:41.639 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 09:20:41.640 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 09:20:41.640 +03:00 [DBG] Start discovery request
2019-07-22 09:20:41.783 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 09:20:41.783 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 09:20:41.783 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 09:20:41.784 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 09:20:41.786 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 09:20:41.787 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 09:20:41.797 +03:00 [DBG] Start key discovery request
2019-07-22 09:20:41.908 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 09:20:41.909 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 09:20:41.909 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 09:20:41.920 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 09:20:41.921 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 09:20:41.921 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 09:20:41.922 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 09:20:41.929 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 09:20:41.929 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 09:20:41.947 +03:00 [DBG] Start userinfo request
2019-07-22 09:20:41.957 +03:00 [DBG] Bearer token found in header
2019-07-22 09:20:42.037 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:42.045 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:42.057 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 09:20:42.061 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563776439,"exp":1563780039,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563776430,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 09:20:42.084 +03:00 [DBG] Creating userinfo response
2019-07-22 09:20:42.095 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 09:20:42.102 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 09:20:42.110 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 09:20:42.110 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 09:20:42.120 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 09:20:42.121 +03:00 [DBG] End userinfo request
2019-07-22 09:20:42.157 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 09:20:42.158 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 09:20:42.158 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 09:20:42.162 +03:00 [DBG] Rendering check session result
2019-07-22 09:20:49.083 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 09:20:49.084 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 09:20:49.084 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 09:20:49.084 +03:00 [DBG] Start discovery request
2019-07-22 09:20:49.312 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 09:20:49.314 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 09:20:49.314 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 09:20:49.314 +03:00 [DBG] Start key discovery request
2019-07-22 09:20:58.584 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 09:20:58.587 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 09:20:58.587 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 09:20:58.609 +03:00 [DBG] Processing signout request for 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 09:20:58.638 +03:00 [DBG] Start end session request validation
2019-07-22 09:20:58.668 +03:00 [DBG] Start identity token validation
2019-07-22 09:20:58.672 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:20:58.672 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 09:20:58.691 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 09:20:58.693 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563776439,"exp":1563776739,"iss":"http://localhost:5000","aud":"spa","nonce":"83a0ec0c4bbb41269781b630d5513ffb","iat":1563776439,"at_hash":"zrF6tb-C1QylRXOI-gPtpw","sid":"0ce6fc45958be09500c10ff315df324d","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563776430,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 09:20:58.706 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3NzY0MzksImV4cCI6MTU2Mzc3NjczOSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI4M2EwZWMwYzRiYmI0MTI2OTc4MWI2MzBkNTUxM2ZmYiIsImlhdCI6MTU2Mzc3NjQzOSwiYXRfaGFzaCI6InpyRjZ0Yi1DMVF5bFJYT0ktZ1B0cHciLCJzaWQiOiIwY2U2ZmM0NTk1OGJlMDk1MDBjMTBmZjMxNWRmMzI0ZCIsInN1YiI6IjljYTNiZmJmLWIxY2UtNGNiNy05YzlmLTMyNjFkMzYwZWQwMiIsImF1dGhfdGltZSI6MTU2Mzc3NjQzMCwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.c0CxMd_UiiQ9Bm0aQZ1upX1duYDCULU9hEUlz5IyDXaI75U1rB6HbG3P7hAEPSQzEeA6Sk7TsCl5XHhCGAM19p8T4Pnz8d8Si5TX9C-JRElEaf5_x1VnyyMR86hkYhDfmQJa6A-fwyjbrDzbqpzkvYMbpt5YJzyrg8p3UwhO2wOY-xXucAtWhZSat7YQG8KUIJEKG7o52XS8BCR-tiTrKBJ5P9Y4PxsNnPfT_hrN9ULBgb97EeyfjmL_menQf57dBEWbYDT0gJJUNk2vH3932eTp25r4xZoVDuBgS_lyTUPnJ7s-otQ5HDxes1B1YArGxLPLfzib7QJrN2TRgyJu1w","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 09:20:58.706 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 09:21:00.890 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 09:21:00.967 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 09:21:00.967 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 09:21:00.969 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 09:21:00.970 +03:00 [INF] {"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOECU2F4KS7:00000013","TimeStamp":"2019-07-22T06:21:00.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 09:21:01.111 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-22 09:21:01.120 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-22 09:21:01.120 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-22 09:21:01.139 +03:00 [DBG] Processing signout callback request
2019-07-22 09:21:01.202 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 09:21:01.202 +03:00 [DBG] No client front-channel logout URLs
2019-07-22 09:21:01.203 +03:00 [DBG] No client back-channel logout URLs
2019-07-22 09:21:01.203 +03:00 [INF] Successful signout callback.
2019-07-22 09:21:01.203 +03:00 [DBG] No client front-channel iframe urls
2019-07-22 09:21:01.203 +03:00 [DBG] No client back-channel iframe urls
2019-07-22 10:11:37.421 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:11:37.427 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:11:37.427 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:11:37.428 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:11:37.448 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:11:37.448 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:11:37.449 +03:00 [DBG] Start discovery request
2019-07-22 10:11:37.484 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:11:37.492 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:11:37.493 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:11:37.495 +03:00 [DBG] Start authorize request
2019-07-22 10:11:37.496 +03:00 [DBG] No user present in authorize request
2019-07-22 10:11:37.497 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:11:37.499 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:11:37.501 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:11:37.506 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8fa63ec6eb4d46ffa1790c6d55359b2a","UiLocales":null,"Nonce":"5bc6985688b3445999420a141b66ea73","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8fa63ec6eb4d46ffa1790c6d55359b2a","nonce":"5bc6985688b3445999420a141b66ea73"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:11:37.507 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 10:11:37.530 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:11:37.531 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:11:37.531 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:11:37.536 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:11:39.812 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 10:11:39.856 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:11:39.857 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:11:39.865 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:11:40.226 +03:00 [WRN] Invalid password for user 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02.
2019-07-22 10:11:40.227 +03:00 [WRN] User 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 failed to provide the correct password.
2019-07-22 10:11:40.322 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOECU2F4KS8:00000005","TimeStamp":"2019-07-22T07:11:40.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-22 10:11:40.323 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:11:40.323 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:11:40.325 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:11:40.325 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:11:41.992 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-22 10:11:47.693 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-22 10:11:47.887 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOECU2F4KS8:00000008","TimeStamp":"2019-07-22T07:11:47.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 10:11:47.892 +03:00 [DBG] Augmenting SignInContext
2019-07-22 10:11:47.893 +03:00 [DBG] Adding amr claim with value: external
2019-07-22 10:11:47.895 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 10:11:47.896 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 10:11:47.954 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 10:11:47.969 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 10:11:47.974 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 10:11:47.975 +03:00 [DBG] Start authorize callback request
2019-07-22 10:11:47.993 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:11:48.000 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:11:48.001 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:11:48.008 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:11:48.009 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8fa63ec6eb4d46ffa1790c6d55359b2a","UiLocales":null,"Nonce":"5bc6985688b3445999420a141b66ea73","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"7cf95bafec728b32ee23379c86606c11","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8fa63ec6eb4d46ffa1790c6d55359b2a","nonce":"5bc6985688b3445999420a141b66ea73"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:11:48.072 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:11:48.073 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:11:48.073 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:11:48.074 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:11:48.096 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:11:48.096 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:11:48.107 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****q-5Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****1oAg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KS8:00000009","TimeStamp":"2019-07-22T07:11:48.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:11:48.108 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"8fa63ec6eb4d46ffa1790c6d55359b2a","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:11:48.110 +03:00 [DBG] Augmenting SignInContext
2019-07-22 10:11:48.111 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 10:11:51.195 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:11:51.199 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:11:51.199 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:11:51.200 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:11:51.201 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:11:51.206 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:11:51.206 +03:00 [DBG] Start discovery request
2019-07-22 10:11:51.402 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:11:51.406 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:11:51.406 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:11:51.408 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:11:51.410 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:11:51.410 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:11:51.410 +03:00 [DBG] Start key discovery request
2019-07-22 10:11:51.501 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:11:51.501 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:11:51.502 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:11:51.532 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:11:51.533 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:11:51.533 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:11:51.534 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:11:51.536 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:11:51.537 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:11:51.538 +03:00 [DBG] Start userinfo request
2019-07-22 10:11:51.538 +03:00 [DBG] Bearer token found in header
2019-07-22 10:11:51.548 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:11:51.548 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:11:51.565 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:11:51.566 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563779508,"exp":1563783108,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563779507,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:11:51.575 +03:00 [DBG] Creating userinfo response
2019-07-22 10:11:51.575 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:11:51.575 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:11:51.576 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:11:51.576 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:11:51.591 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:11:51.591 +03:00 [DBG] End userinfo request
2019-07-22 10:11:51.727 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:11:51.728 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:11:51.728 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:11:51.729 +03:00 [DBG] Rendering check session result
2019-07-22 10:12:30.473 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 10:12:30.475 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 10:12:30.475 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 10:12:30.478 +03:00 [DBG] Processing signout request for 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:12:30.479 +03:00 [DBG] Start end session request validation
2019-07-22 10:12:30.479 +03:00 [DBG] Start identity token validation
2019-07-22 10:12:30.479 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:12:30.479 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 10:12:30.491 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:12:30.492 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563779508,"exp":1563779808,"iss":"http://localhost:5000","aud":"spa","nonce":"5bc6985688b3445999420a141b66ea73","iat":1563779508,"at_hash":"cx89j18B5hFcbk0ajqlRNg","sid":"7cf95bafec728b32ee23379c86606c11","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563779507,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:12:30.493 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3Nzk1MDgsImV4cCI6MTU2Mzc3OTgwOCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1YmM2OTg1Njg4YjM0NDU5OTk0MjBhMTQxYjY2ZWE3MyIsImlhdCI6MTU2Mzc3OTUwOCwiYXRfaGFzaCI6ImN4ODlqMThCNWhGY2JrMGFqcWxSTmciLCJzaWQiOiI3Y2Y5NWJhZmVjNzI4YjMyZWUyMzM3OWM4NjYwNmMxMSIsInN1YiI6IjljYTNiZmJmLWIxY2UtNGNiNy05YzlmLTMyNjFkMzYwZWQwMiIsImF1dGhfdGltZSI6MTU2Mzc3OTUwNywiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.phWc8iM2UEN9Jx6R_LqI_aBCn0whStCHjPuOK00YKT4_6bCWRmw7ct4Nip0MGioYKREARQIwilt-h9V8L-2tqeFgydvo6HBVW1bpiseR_6wwljjB0JAg-Fm7vQfnW7bbbDyGrWQnsbc_RkEymVLouvLaqslfWTCQ4ogE6CSGNFW1WLNoAxEiM2JXjmNG_bD9_y03jTvEYGkTdqEFjFV1Kx59LQW7M3x98zxDxl52oM_VpsWzrcneWl68bzUPedra71yEK6g1YiUXrothfui72azRC0ExyvWge36IK1ugyEZWQ_HDiy8eqlYyVQAd53H8VEYGQ94uFCaSNT2-O1q-5Q","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 10:12:30.493 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 10:12:40.713 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 10:12:40.716 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 10:12:40.716 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 10:12:40.716 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 10:12:40.718 +03:00 [INF] {"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOECU2F4KS8:00000011","TimeStamp":"2019-07-22T07:12:40.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 10:12:40.785 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-22 10:12:40.788 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-22 10:12:40.788 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-22 10:12:40.789 +03:00 [DBG] Processing signout callback request
2019-07-22 10:12:40.789 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:12:40.789 +03:00 [DBG] No client front-channel logout URLs
2019-07-22 10:12:40.790 +03:00 [DBG] No client back-channel logout URLs
2019-07-22 10:12:40.790 +03:00 [INF] Successful signout callback.
2019-07-22 10:12:40.790 +03:00 [DBG] No client front-channel iframe urls
2019-07-22 10:12:40.790 +03:00 [DBG] No client back-channel iframe urls
2019-07-22 10:13:03.321 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:13:03.321 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:13:03.321 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:13:03.321 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:13:03.322 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:13:03.322 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:13:03.322 +03:00 [DBG] Start discovery request
2019-07-22 10:13:03.349 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:13:03.351 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:13:03.351 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:13:03.351 +03:00 [DBG] Start authorize request
2019-07-22 10:13:03.351 +03:00 [DBG] No user present in authorize request
2019-07-22 10:13:03.351 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:13:03.351 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:13:03.353 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:13:03.354 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"bcd90c61433a4cdbbb53e7231058a141","UiLocales":null,"Nonce":"4f627faa48b445449300de7fa82320a1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"bcd90c61433a4cdbbb53e7231058a141","nonce":"4f627faa48b445449300de7fa82320a1"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:13:03.356 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 10:13:03.371 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:13:03.371 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:13:03.372 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:13:03.372 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:13:06.180 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-22 10:13:11.068 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-22 10:13:11.095 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOECU2F4KS8:00000018","TimeStamp":"2019-07-22T07:13:11.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 10:13:11.098 +03:00 [DBG] Augmenting SignInContext
2019-07-22 10:13:11.098 +03:00 [DBG] Adding amr claim with value: external
2019-07-22 10:13:11.099 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 10:13:11.100 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 10:13:11.120 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 10:13:11.120 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 10:13:11.121 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 10:13:11.121 +03:00 [DBG] Start authorize callback request
2019-07-22 10:13:11.122 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:13:11.122 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:13:11.122 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:13:11.123 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:13:11.123 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"bcd90c61433a4cdbbb53e7231058a141","UiLocales":null,"Nonce":"4f627faa48b445449300de7fa82320a1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ce83fc7bd684dc16acee0dbbdc555484","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"bcd90c61433a4cdbbb53e7231058a141","nonce":"4f627faa48b445449300de7fa82320a1"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:13:11.140 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:13:11.140 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:13:11.141 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:13:11.141 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:13:11.158 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:13:11.158 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:13:11.167 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****oMdg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vWKA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KS8:00000019","TimeStamp":"2019-07-22T07:13:11.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:13:11.168 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"bcd90c61433a4cdbbb53e7231058a141","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:13:11.168 +03:00 [DBG] Augmenting SignInContext
2019-07-22 10:13:11.169 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 10:13:12.993 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:13:12.996 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:13:12.996 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:13:12.997 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:13:12.998 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:13:12.998 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:13:12.998 +03:00 [DBG] Start discovery request
2019-07-22 10:13:13.126 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:13:13.126 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:13:13.126 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:13:13.127 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:13:13.128 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:13:13.128 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:13:13.128 +03:00 [DBG] Start key discovery request
2019-07-22 10:13:13.225 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:13:13.226 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:13:13.226 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:13:13.244 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:13:13.245 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:13:13.245 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:13:13.245 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:13:13.246 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:13:13.246 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:13:13.246 +03:00 [DBG] Start userinfo request
2019-07-22 10:13:13.246 +03:00 [DBG] Bearer token found in header
2019-07-22 10:13:13.253 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:13:13.253 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:13:13.273 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:13:13.274 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563779591,"exp":1563783191,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563779591,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:13:13.274 +03:00 [DBG] Creating userinfo response
2019-07-22 10:13:13.274 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:13:13.274 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:13:13.275 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:13:13.275 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:13:13.282 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:13:13.282 +03:00 [DBG] End userinfo request
2019-07-22 10:13:13.368 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:13:13.369 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:13:13.369 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:13:13.370 +03:00 [DBG] Rendering check session result
2019-07-22 10:19:35.230 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 10:19:35.231 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 10:19:35.231 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 10:19:35.231 +03:00 [DBG] Processing signout request for 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:19:35.231 +03:00 [DBG] Start end session request validation
2019-07-22 10:19:35.231 +03:00 [DBG] Start identity token validation
2019-07-22 10:19:35.232 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:19:35.233 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 10:19:35.244 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:19:35.245 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563779591,"exp":1563779891,"iss":"http://localhost:5000","aud":"spa","nonce":"4f627faa48b445449300de7fa82320a1","iat":1563779591,"at_hash":"ROlLzDo6cgfxoUQaOehDXA","sid":"ce83fc7bd684dc16acee0dbbdc555484","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563779591,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:19:35.246 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3Nzk1OTEsImV4cCI6MTU2Mzc3OTg5MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI0ZjYyN2ZhYTQ4YjQ0NTQ0OTMwMGRlN2ZhODIzMjBhMSIsImlhdCI6MTU2Mzc3OTU5MSwiYXRfaGFzaCI6IlJPbEx6RG82Y2dmeG9VUWFPZWhEWEEiLCJzaWQiOiJjZTgzZmM3YmQ2ODRkYzE2YWNlZTBkYmJkYzU1NTQ4NCIsInN1YiI6IjljYTNiZmJmLWIxY2UtNGNiNy05YzlmLTMyNjFkMzYwZWQwMiIsImF1dGhfdGltZSI6MTU2Mzc3OTU5MSwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.Da7HkR_MYCx-Od_xIVd2fIEAeZ9IkhtuoO2KH3T16Bd-Ev-trd6hkJ6sD2VEb6zPIVGYkKO6lV3K47Qux_ENFbGw_3r72BFLDF0G4OG4fs5EVQLU8QYywHB6ynB3TDloGPqaXfziKEY53URmdS_54vNt6wsyWjP1noVMLaAfCAQ1opaE0RqZnuxe03XrQQlcd1hBpE0uNd2MvLYDh_C0snJSi_hJ987cyf4m6DQZ4go83xJGldN4Ef9i0RkNpiT4LbCLecNMWSg3Vku2mNmI6BMPDbyEuu2C7AGfmksIz9Tj286JpGwNZAEC97xaFmipkrYRpAbKSX1tPiZ_M7oMdg","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 10:19:35.246 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 10:19:39.360 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 10:19:39.360 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 10:19:39.360 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 10:19:39.361 +03:00 [DBG] Processing signout request for 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:19:39.362 +03:00 [DBG] Start end session request validation
2019-07-22 10:19:39.373 +03:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","PostLogOutUri":null,"State":null,"Raw":{"post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 10:19:39.373 +03:00 [DBG] Success validating end session request from null
2019-07-22 10:19:49.410 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:19:49.411 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:19:49.411 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:19:49.411 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:19:49.411 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:19:49.412 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:19:49.412 +03:00 [DBG] Start discovery request
2019-07-22 10:19:49.441 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:19:49.441 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:19:49.442 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:19:49.442 +03:00 [DBG] Start authorize request
2019-07-22 10:19:49.442 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:19:49.442 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:19:49.442 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:19:49.443 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:19:49.443 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9d7e36c0e02d42c997626d73d0456069","UiLocales":null,"Nonce":"a691273f2ff246449477f4f2fa1451c0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ce83fc7bd684dc16acee0dbbdc555484","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9d7e36c0e02d42c997626d73d0456069","nonce":"a691273f2ff246449477f4f2fa1451c0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:19:49.465 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:19:49.466 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:19:49.466 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:19:49.466 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:19:49.479 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:19:49.479 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:19:49.486 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****2flw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****0E_g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KS9:00000007","TimeStamp":"2019-07-22T07:19:49.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:19:49.486 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"9d7e36c0e02d42c997626d73d0456069","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:19:50.126 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:19:50.127 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:19:50.127 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:19:50.128 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:19:50.128 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:19:50.129 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:19:50.129 +03:00 [DBG] Start discovery request
2019-07-22 10:19:50.175 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:19:50.175 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:19:50.175 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:19:50.179 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:19:50.188 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:19:50.188 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:19:50.189 +03:00 [DBG] Start key discovery request
2019-07-22 10:19:50.247 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:19:50.247 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:19:50.247 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:19:50.258 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:19:50.258 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:19:50.259 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:19:50.259 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:19:50.260 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:19:50.260 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:19:50.260 +03:00 [DBG] Start userinfo request
2019-07-22 10:19:50.262 +03:00 [DBG] Bearer token found in header
2019-07-22 10:19:50.267 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:19:50.268 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:19:50.272 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:19:50.273 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563779989,"exp":1563783589,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563779591,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:19:50.273 +03:00 [DBG] Creating userinfo response
2019-07-22 10:19:50.273 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:19:50.273 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:19:50.275 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:19:50.275 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:19:50.282 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:19:50.282 +03:00 [DBG] End userinfo request
2019-07-22 10:19:50.316 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:19:50.321 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:19:50.321 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:19:50.322 +03:00 [DBG] Rendering check session result
2019-07-22 10:20:17.908 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 10:20:17.908 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 10:20:17.908 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 10:20:17.909 +03:00 [DBG] Processing signout request for 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:20:17.909 +03:00 [DBG] Start end session request validation
2019-07-22 10:20:17.909 +03:00 [DBG] Start identity token validation
2019-07-22 10:20:17.910 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:20:17.910 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 10:20:17.923 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:20:17.924 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563779989,"exp":1563780289,"iss":"http://localhost:5000","aud":"spa","nonce":"a691273f2ff246449477f4f2fa1451c0","iat":1563779989,"at_hash":"js5mCnW5bHYP06laC7M_jQ","sid":"ce83fc7bd684dc16acee0dbbdc555484","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563779591,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:20:17.925 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3Nzk5ODksImV4cCI6MTU2Mzc4MDI4OSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJhNjkxMjczZjJmZjI0NjQ0OTQ3N2Y0ZjJmYTE0NTFjMCIsImlhdCI6MTU2Mzc3OTk4OSwiYXRfaGFzaCI6ImpzNW1Dblc1YkhZUDA2bGFDN01falEiLCJzaWQiOiJjZTgzZmM3YmQ2ODRkYzE2YWNlZTBkYmJkYzU1NTQ4NCIsInN1YiI6IjljYTNiZmJmLWIxY2UtNGNiNy05YzlmLTMyNjFkMzYwZWQwMiIsImF1dGhfdGltZSI6MTU2Mzc3OTU5MSwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.3dQqbXaV9yAvxkhrWTBr8BYFYjNyjR_eDoZe1BAsFXtbmt7E81Y8KrTK13yIgZnN72-qnav9RTHew7pGBzTyWuOgy3oocf_1u-VUzScI491z-X09ZwQz6rMzJIdyVtOyVjroD6id-F3Akd8wa8Gv0zr49R4Dd2_dgCmy36aQH5yhgV8SO86pREholXl7GzhWDfvERd9wY8wEcdOhYB1RFKqeS6gIbn1ObeCIn__d2SJJHpHiotexZ5xEMDspgI08DetxkIIPEiREKw-Sw1Cej7cW5a_dGi_IvDRt9p1hVC2BTbNy9vXB7HWUY_whGZ4EyIlyQZbleR-tZ_uqKR2flw","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 10:20:17.925 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 10:20:19.446 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 10:20:19.450 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 10:20:19.450 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 10:20:19.451 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 10:20:19.451 +03:00 [INF] {"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOECU2F4KS9:0000000F","TimeStamp":"2019-07-22T07:20:19.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 10:20:19.506 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-22 10:20:19.509 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-22 10:20:19.510 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-22 10:20:19.510 +03:00 [DBG] Processing signout callback request
2019-07-22 10:20:19.510 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:20:19.511 +03:00 [DBG] No client front-channel logout URLs
2019-07-22 10:20:19.511 +03:00 [DBG] No client back-channel logout URLs
2019-07-22 10:20:19.511 +03:00 [INF] Successful signout callback.
2019-07-22 10:20:19.511 +03:00 [DBG] No client front-channel iframe urls
2019-07-22 10:20:19.511 +03:00 [DBG] No client back-channel iframe urls
2019-07-22 10:20:24.306 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:20:24.307 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:20:24.307 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:20:24.309 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:20:24.310 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:20:24.310 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:20:24.310 +03:00 [DBG] Start discovery request
2019-07-22 10:20:24.343 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:20:24.344 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:20:24.344 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:20:24.344 +03:00 [DBG] Start authorize request
2019-07-22 10:20:24.344 +03:00 [DBG] No user present in authorize request
2019-07-22 10:20:24.345 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:20:24.345 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:20:24.345 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:20:24.346 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9338f7c9a4874e978f24494db938ac68","UiLocales":null,"Nonce":"2825e46335c742929b95f5c547023e9a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9338f7c9a4874e978f24494db938ac68","nonce":"2825e46335c742929b95f5c547023e9a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:20:24.346 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 10:20:24.358 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:20:24.358 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:20:24.358 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:20:24.359 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:20:26.089 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 10:20:26.105 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:20:26.106 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:20:26.107 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:20:26.114 +03:00 [WRN] Invalid password for user 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02.
2019-07-22 10:20:26.115 +03:00 [WRN] User 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 failed to provide the correct password.
2019-07-22 10:20:26.174 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOECU2F4KS9:00000014","TimeStamp":"2019-07-22T07:20:26.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-22 10:20:26.174 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:20:26.175 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:20:26.175 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:20:26.175 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:20:27.893 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-22 10:20:32.621 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-22 10:20:32.652 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOECU2F4KS9:00000017","TimeStamp":"2019-07-22T07:20:32.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 10:20:32.652 +03:00 [DBG] Augmenting SignInContext
2019-07-22 10:20:32.652 +03:00 [DBG] Adding amr claim with value: external
2019-07-22 10:20:32.653 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 10:20:32.653 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 10:20:32.667 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 10:20:32.667 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 10:20:32.668 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 10:20:32.668 +03:00 [DBG] Start authorize callback request
2019-07-22 10:20:32.668 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:20:32.668 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:20:32.668 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:20:32.669 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:20:32.669 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9338f7c9a4874e978f24494db938ac68","UiLocales":null,"Nonce":"2825e46335c742929b95f5c547023e9a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6186527067397ef218f5dea8836307f3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9338f7c9a4874e978f24494db938ac68","nonce":"2825e46335c742929b95f5c547023e9a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:20:32.693 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:20:32.693 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:20:32.694 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:20:32.694 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:20:32.711 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:20:32.711 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:20:32.721 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****WhEw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kBNg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KS9:00000018","TimeStamp":"2019-07-22T07:20:32.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:20:32.721 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"9338f7c9a4874e978f24494db938ac68","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:20:32.721 +03:00 [DBG] Augmenting SignInContext
2019-07-22 10:20:32.722 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 10:20:34.537 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:20:34.538 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:20:34.538 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:20:34.540 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:20:34.540 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:20:34.540 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:20:34.541 +03:00 [DBG] Start discovery request
2019-07-22 10:20:34.649 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:20:34.671 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:20:34.672 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:20:34.673 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:20:34.673 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:20:34.673 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:20:34.673 +03:00 [DBG] Start key discovery request
2019-07-22 10:20:34.761 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:20:34.764 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:20:34.764 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:20:34.774 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:20:34.774 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:20:34.774 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:20:34.775 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:20:34.775 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:20:34.775 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:20:34.775 +03:00 [DBG] Start userinfo request
2019-07-22 10:20:34.776 +03:00 [DBG] Bearer token found in header
2019-07-22 10:20:34.781 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:20:34.782 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:20:34.790 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:20:34.791 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563780032,"exp":1563783632,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780032,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:20:34.791 +03:00 [DBG] Creating userinfo response
2019-07-22 10:20:34.791 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:20:34.791 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:20:34.792 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:20:34.792 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:20:34.801 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:20:34.801 +03:00 [DBG] End userinfo request
2019-07-22 10:20:34.865 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:20:34.865 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:20:34.865 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:20:34.865 +03:00 [DBG] Rendering check session result
2019-07-22 10:26:03.994 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:26:04.000 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:26:04.000 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:26:04.003 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:26:04.006 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:26:04.007 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:26:04.007 +03:00 [DBG] Start discovery request
2019-07-22 10:26:04.109 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:26:04.111 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:26:04.111 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:26:04.120 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:26:04.122 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:26:04.122 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:26:04.122 +03:00 [DBG] Start discovery request
2019-07-22 10:26:04.134 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:26:04.136 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:26:04.136 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:26:04.136 +03:00 [DBG] Start authorize request
2019-07-22 10:26:04.137 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:26:04.137 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:26:04.137 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:26:04.138 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:26:04.139 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"649f69f7fe80493e828fba4181a07a55","UiLocales":null,"Nonce":"5f23d158677d459a880305268bfb3544","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6186527067397ef218f5dea8836307f3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"649f69f7fe80493e828fba4181a07a55","nonce":"5f23d158677d459a880305268bfb3544"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:26:04.206 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:26:04.206 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:26:04.206 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:26:04.206 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:26:04.232 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:26:04.232 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:26:04.242 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****xbpA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****l_qg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSB:00000001","TimeStamp":"2019-07-22T07:26:04.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:26:04.243 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"649f69f7fe80493e828fba4181a07a55","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:26:04.252 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:26:04.252 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:26:04.252 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:26:04.252 +03:00 [DBG] Rendering check session result
2019-07-22 10:26:05.589 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:26:05.591 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:26:05.592 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:26:05.592 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:26:05.593 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:26:05.593 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:26:05.594 +03:00 [DBG] Start discovery request
2019-07-22 10:26:05.704 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:26:05.705 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:26:05.705 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:26:05.710 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:26:05.711 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:26:05.711 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:26:05.711 +03:00 [DBG] Start discovery request
2019-07-22 10:26:05.725 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:26:05.725 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:26:05.726 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:26:05.726 +03:00 [DBG] Rendering check session result
2019-07-22 10:26:05.803 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:26:05.804 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:26:05.804 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:26:05.806 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:26:05.806 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:26:05.806 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:26:05.806 +03:00 [DBG] Start key discovery request
2019-07-22 10:26:05.944 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:26:05.946 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:26:05.946 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:26:06.015 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:26:06.016 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:26:06.016 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:26:06.017 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:26:06.017 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:26:06.018 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:26:06.018 +03:00 [DBG] Start userinfo request
2019-07-22 10:26:06.018 +03:00 [DBG] Bearer token found in header
2019-07-22 10:26:06.025 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:26:06.025 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:26:06.032 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:26:06.032 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563780364,"exp":1563783964,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780032,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:26:06.033 +03:00 [DBG] Creating userinfo response
2019-07-22 10:26:06.033 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:26:06.033 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:26:06.033 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:26:06.033 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:26:06.041 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:26:06.041 +03:00 [DBG] End userinfo request
2019-07-22 10:26:11.437 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 10:26:11.438 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 10:26:11.439 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 10:26:11.439 +03:00 [DBG] Processing signout request for 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:26:11.439 +03:00 [DBG] Start end session request validation
2019-07-22 10:26:11.439 +03:00 [DBG] Start identity token validation
2019-07-22 10:26:11.439 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:26:11.440 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 10:26:11.456 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:26:11.456 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563780364,"exp":1563780664,"iss":"http://localhost:5000","aud":"spa","nonce":"5f23d158677d459a880305268bfb3544","iat":1563780364,"at_hash":"SbYDEnDhu2jG_YBPl62zXw","sid":"6186527067397ef218f5dea8836307f3","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780032,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:26:11.457 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3ODAzNjQsImV4cCI6MTU2Mzc4MDY2NCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1ZjIzZDE1ODY3N2Q0NTlhODgwMzA1MjY4YmZiMzU0NCIsImlhdCI6MTU2Mzc4MDM2NCwiYXRfaGFzaCI6IlNiWURFbkRodTJqR19ZQlBsNjJ6WHciLCJzaWQiOiI2MTg2NTI3MDY3Mzk3ZWYyMThmNWRlYTg4MzYzMDdmMyIsInN1YiI6IjljYTNiZmJmLWIxY2UtNGNiNy05YzlmLTMyNjFkMzYwZWQwMiIsImF1dGhfdGltZSI6MTU2Mzc4MDAzMiwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.GG2e9qBhZRjmsm9Acg5PC-o2Rt4iAiI290MAgNKCrGtwfUfb7VOtInmiMdi9zkMMEMQWek-RwoOnlG7DfgJkMdBbojhHoBGxGg6dadSta9jTS7GoSHkseMQRYFvzYwCo6Op-N_CAwsU1KObMCiEIVhDFvHq0ZKYYiC7-fhf_sUxzzef09n4g1JeUahzS62GGXsWpx7ZZvjHRtjBGqFyAIKNG9QT9ooXJZCD7MFTtViWWWrB0YkS0QJNjJelYU0O0WOAolitz3uN4LSmO48NNXbkI4f_sQU6cePDSCKl2iqCLkoiCBS4XASZAdPmQ_qVyFKQLHuyot4RyWspMS1xbpA","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 10:26:11.457 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 10:26:13.443 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 10:26:13.448 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 10:26:13.450 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 10:26:13.451 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 10:26:13.452 +03:00 [INF] {"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOECU2F4KSC:00000004","TimeStamp":"2019-07-22T07:26:13.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 10:26:13.573 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-22 10:26:13.574 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-22 10:26:13.575 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-22 10:26:13.575 +03:00 [DBG] Processing signout callback request
2019-07-22 10:26:13.575 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:26:13.576 +03:00 [DBG] No client front-channel logout URLs
2019-07-22 10:26:13.576 +03:00 [DBG] No client back-channel logout URLs
2019-07-22 10:26:13.576 +03:00 [INF] Successful signout callback.
2019-07-22 10:26:13.576 +03:00 [DBG] No client front-channel iframe urls
2019-07-22 10:26:13.576 +03:00 [DBG] No client back-channel iframe urls
2019-07-22 10:26:21.829 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:26:21.829 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:26:21.829 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:26:21.830 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:26:21.839 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:26:21.839 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:26:21.839 +03:00 [DBG] Start discovery request
2019-07-22 10:26:21.867 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:26:21.868 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:26:21.868 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:26:21.868 +03:00 [DBG] Start authorize request
2019-07-22 10:26:21.868 +03:00 [DBG] No user present in authorize request
2019-07-22 10:26:21.868 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:26:21.868 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:26:21.869 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:26:21.869 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"efcc153b99bf4be8b4894903d794da54","UiLocales":null,"Nonce":"5cb7e87b469241e9b4e8fcd84f3c806b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"efcc153b99bf4be8b4894903d794da54","nonce":"5cb7e87b469241e9b4e8fcd84f3c806b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:26:21.869 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 10:26:21.885 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:26:21.885 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:26:21.887 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:26:21.887 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:26:26.062 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-22 10:26:31.010 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-22 10:26:31.033 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOECU2F4KSB:0000000A","TimeStamp":"2019-07-22T07:26:31.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 10:26:31.034 +03:00 [DBG] Augmenting SignInContext
2019-07-22 10:26:31.034 +03:00 [DBG] Adding amr claim with value: external
2019-07-22 10:26:31.035 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 10:26:31.035 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 10:26:31.049 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 10:26:31.049 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 10:26:31.049 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 10:26:31.049 +03:00 [DBG] Start authorize callback request
2019-07-22 10:26:31.050 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:26:31.051 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:26:31.051 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:26:31.052 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:26:31.053 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"efcc153b99bf4be8b4894903d794da54","UiLocales":null,"Nonce":"5cb7e87b469241e9b4e8fcd84f3c806b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"efcc153b99bf4be8b4894903d794da54","nonce":"5cb7e87b469241e9b4e8fcd84f3c806b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:26:31.074 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:26:31.074 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:26:31.074 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:26:31.074 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:26:31.089 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:26:31.090 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:26:31.098 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****m3lw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qIJg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSC:00000008","TimeStamp":"2019-07-22T07:26:31.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:26:31.099 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"efcc153b99bf4be8b4894903d794da54","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:26:31.100 +03:00 [DBG] Augmenting SignInContext
2019-07-22 10:26:31.101 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 10:26:33.078 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:26:33.078 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:26:33.078 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:26:33.080 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:26:33.082 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:26:33.083 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:26:33.083 +03:00 [DBG] Start discovery request
2019-07-22 10:26:33.196 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:26:33.196 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:26:33.199 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:26:33.199 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:26:33.203 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:26:33.203 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:26:33.203 +03:00 [DBG] Start key discovery request
2019-07-22 10:26:33.278 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:26:33.278 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:26:33.278 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:26:33.290 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:26:33.290 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:26:33.291 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:26:33.291 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:26:33.292 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:26:33.292 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:26:33.292 +03:00 [DBG] Start userinfo request
2019-07-22 10:26:33.292 +03:00 [DBG] Bearer token found in header
2019-07-22 10:26:33.298 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:26:33.298 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:26:33.303 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:26:33.304 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563780391,"exp":1563783991,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:26:33.304 +03:00 [DBG] Creating userinfo response
2019-07-22 10:26:33.305 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:26:33.305 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:26:33.305 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:26:33.305 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:26:33.313 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:26:33.314 +03:00 [DBG] End userinfo request
2019-07-22 10:26:33.370 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:26:33.370 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:26:33.370 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:26:33.370 +03:00 [DBG] Rendering check session result
2019-07-22 10:28:08.659 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:28:08.663 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:28:08.663 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:28:08.665 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:28:08.666 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:28:08.666 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:28:08.666 +03:00 [DBG] Start discovery request
2019-07-22 10:28:08.759 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:28:08.760 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:28:08.760 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:28:08.821 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:28:08.822 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:28:08.822 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:28:08.822 +03:00 [DBG] Start discovery request
2019-07-22 10:28:08.938 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:28:08.941 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:28:08.941 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:28:08.941 +03:00 [DBG] Start authorize request
2019-07-22 10:28:08.942 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:28:08.942 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:28:08.942 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:28:08.942 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:28:08.943 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d9343cdd65f345b195740dc86abcd7b5","UiLocales":null,"Nonce":"c36c47158cac489ab3569e4470bb1947","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d9343cdd65f345b195740dc86abcd7b5","nonce":"c36c47158cac489ab3569e4470bb1947"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:28:09.002 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:28:09.005 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:28:09.006 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:28:09.006 +03:00 [DBG] Rendering check session result
2019-07-22 10:28:09.042 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:28:09.043 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:28:09.043 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:28:09.043 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:28:09.058 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:28:09.058 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:28:09.068 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****09vA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****SKdw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSD:00000003","TimeStamp":"2019-07-22T07:28:09.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:28:09.069 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"d9343cdd65f345b195740dc86abcd7b5","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:28:10.845 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:28:10.847 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:28:10.847 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:28:10.848 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:28:10.849 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:28:10.849 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:28:10.849 +03:00 [DBG] Start discovery request
2019-07-22 10:28:10.927 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:28:10.931 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:28:10.931 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:28:10.931 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:28:10.933 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:28:10.934 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:28:10.935 +03:00 [DBG] Start discovery request
2019-07-22 10:28:11.000 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:28:11.001 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:28:11.001 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:28:11.001 +03:00 [DBG] Rendering check session result
2019-07-22 10:28:11.022 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:28:11.023 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:28:11.023 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:28:11.027 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:28:11.029 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:28:11.030 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:28:11.030 +03:00 [DBG] Start key discovery request
2019-07-22 10:28:11.222 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:28:11.223 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:28:11.223 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:28:11.304 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:28:11.305 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:28:11.305 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:28:11.305 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:28:11.307 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:28:11.307 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:28:11.307 +03:00 [DBG] Start userinfo request
2019-07-22 10:28:11.307 +03:00 [DBG] Bearer token found in header
2019-07-22 10:28:11.313 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:28:11.314 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:28:11.325 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:28:11.326 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563780489,"exp":1563784089,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:28:11.328 +03:00 [DBG] Creating userinfo response
2019-07-22 10:28:11.329 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:28:11.329 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:28:11.330 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:28:11.330 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:28:11.338 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:28:11.339 +03:00 [DBG] End userinfo request
2019-07-22 10:30:47.138 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:30:47.139 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:30:47.140 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:30:47.140 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:30:47.141 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:30:47.141 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:30:47.141 +03:00 [DBG] Start discovery request
2019-07-22 10:30:47.255 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:30:47.256 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:30:47.256 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:30:47.256 +03:00 [DBG] Rendering check session result
2019-07-22 10:31:02.103 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:31:02.104 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:31:02.104 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:31:02.112 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:31:02.113 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:31:02.113 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:31:02.113 +03:00 [DBG] Start discovery request
2019-07-22 10:31:02.212 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:31:02.212 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:31:02.213 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:31:02.213 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:31:02.214 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:31:02.214 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:31:02.214 +03:00 [DBG] Start discovery request
2019-07-22 10:31:02.228 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:31:02.228 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:31:02.228 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:31:02.228 +03:00 [DBG] Start authorize request
2019-07-22 10:31:02.229 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:31:02.229 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:31:02.229 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:31:02.229 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:31:02.231 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9db11dddc1884697b65c4cd0d1dfee65","UiLocales":null,"Nonce":"15e7db9a8a9246469ffcc59129cebd9b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9db11dddc1884697b65c4cd0d1dfee65","nonce":"15e7db9a8a9246469ffcc59129cebd9b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:31:02.269 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:31:02.269 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:31:02.269 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:31:02.269 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:31:02.286 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:31:02.286 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:31:02.286 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:31:02.286 +03:00 [DBG] Rendering check session result
2019-07-22 10:31:02.292 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:31:02.292 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:31:02.303 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****CyXQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****E90A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSF:00000005","TimeStamp":"2019-07-22T07:31:02.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:31:02.303 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"9db11dddc1884697b65c4cd0d1dfee65","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:31:03.111 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:31:03.112 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:31:03.112 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:31:03.113 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:31:03.114 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:31:03.114 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:31:03.114 +03:00 [DBG] Start discovery request
2019-07-22 10:31:03.177 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:31:03.178 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:31:03.178 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:31:03.179 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:31:03.179 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:31:03.180 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:31:03.180 +03:00 [DBG] Start discovery request
2019-07-22 10:31:03.185 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:31:03.185 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:31:03.185 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:31:03.185 +03:00 [DBG] Rendering check session result
2019-07-22 10:31:03.255 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:31:03.256 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:31:03.256 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:31:03.257 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:31:03.257 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:31:03.257 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:31:03.258 +03:00 [DBG] Start key discovery request
2019-07-22 10:31:03.356 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:31:03.356 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:31:03.356 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:31:03.375 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:31:03.375 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:31:03.375 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:31:03.376 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:31:03.377 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:31:03.377 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:31:03.378 +03:00 [DBG] Start userinfo request
2019-07-22 10:31:03.378 +03:00 [DBG] Bearer token found in header
2019-07-22 10:31:03.384 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:31:03.385 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:31:03.391 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:31:03.391 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563780662,"exp":1563784262,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:31:03.392 +03:00 [DBG] Creating userinfo response
2019-07-22 10:31:03.392 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:31:03.392 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:31:03.392 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:31:03.392 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:31:03.399 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:31:03.400 +03:00 [DBG] End userinfo request
2019-07-22 10:36:03.427 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:36:03.428 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:36:03.428 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:36:03.428 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:36:03.429 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:36:03.429 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:36:03.430 +03:00 [DBG] Start discovery request
2019-07-22 10:36:03.524 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:36:03.525 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:36:03.525 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:36:03.526 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:36:03.526 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:36:03.526 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:36:03.526 +03:00 [DBG] Start discovery request
2019-07-22 10:36:03.541 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:36:03.542 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:36:03.542 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:36:03.542 +03:00 [DBG] Start authorize request
2019-07-22 10:36:03.542 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:36:03.542 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:36:03.542 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:36:03.546 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:36:03.546 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"19412fb4be4d40c3813b51377a6412e5","UiLocales":null,"Nonce":"817b020252364195b4c2d6a3c0e9bf7c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"19412fb4be4d40c3813b51377a6412e5","nonce":"817b020252364195b4c2d6a3c0e9bf7c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:36:03.587 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:36:03.587 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:36:03.587 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:36:03.587 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:36:03.619 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:36:03.619 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:36:03.630 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****qjLg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2Mzw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSI:00000001","TimeStamp":"2019-07-22T07:36:03.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:36:03.631 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"19412fb4be4d40c3813b51377a6412e5","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:36:03.654 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:36:03.654 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:36:03.654 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:36:03.654 +03:00 [DBG] Rendering check session result
2019-07-22 10:36:04.942 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:36:04.943 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:36:04.944 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:36:04.946 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:36:04.947 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:36:04.947 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:36:04.947 +03:00 [DBG] Start discovery request
2019-07-22 10:36:05.634 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:36:05.634 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:36:05.634 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:36:05.635 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:36:05.635 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:36:05.635 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:36:05.635 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:36:05.635 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:36:05.636 +03:00 [DBG] Rendering check session result
2019-07-22 10:36:05.638 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:36:05.638 +03:00 [DBG] Start discovery request
2019-07-22 10:36:05.699 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:36:05.705 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:36:05.705 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:36:05.706 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:36:05.706 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:36:05.706 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:36:05.707 +03:00 [DBG] Start key discovery request
2019-07-22 10:36:05.783 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:36:05.784 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:36:05.784 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:36:05.795 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:36:05.796 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:36:05.796 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:36:05.800 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:36:05.801 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:36:05.801 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:36:05.801 +03:00 [DBG] Start userinfo request
2019-07-22 10:36:05.801 +03:00 [DBG] Bearer token found in header
2019-07-22 10:36:05.807 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:36:05.808 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:36:05.813 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:36:05.815 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563780963,"exp":1563784563,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:36:05.815 +03:00 [DBG] Creating userinfo response
2019-07-22 10:36:05.815 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:36:05.815 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:36:05.815 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:36:05.815 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:36:05.827 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:36:05.827 +03:00 [DBG] End userinfo request
2019-07-22 10:40:08.135 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:40:08.136 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:40:08.136 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:40:08.136 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:40:08.138 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:40:08.138 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:40:08.138 +03:00 [DBG] Start discovery request
2019-07-22 10:40:08.178 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:40:08.178 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:40:08.178 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:40:08.179 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:40:08.179 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:40:08.179 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:40:08.180 +03:00 [DBG] Start discovery request
2019-07-22 10:40:08.241 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:40:08.241 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:40:08.242 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:40:08.242 +03:00 [DBG] Rendering check session result
2019-07-22 10:40:08.285 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:40:08.286 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:40:08.286 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:40:08.286 +03:00 [DBG] Start authorize request
2019-07-22 10:40:08.286 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:40:08.286 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:40:08.286 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:40:08.287 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:40:08.288 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2b75a7949c0e4c8ab51330b7bbdff9bf","UiLocales":null,"Nonce":"a065078ae94a46fd897db2408b403500","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2b75a7949c0e4c8ab51330b7bbdff9bf","nonce":"a065078ae94a46fd897db2408b403500"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:40:08.305 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:40:08.306 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:40:08.306 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:40:08.306 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:40:08.330 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:40:08.330 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:40:08.340 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****57dA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ZonQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSJ:00000004","TimeStamp":"2019-07-22T07:40:08.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:40:08.341 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"2b75a7949c0e4c8ab51330b7bbdff9bf","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:40:09.248 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:40:09.248 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:40:09.249 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:40:09.250 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:40:09.251 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:40:09.251 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:40:09.251 +03:00 [DBG] Start discovery request
2019-07-22 10:40:09.305 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:40:09.305 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:40:09.305 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:40:09.306 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:40:09.306 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:40:09.306 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:40:09.306 +03:00 [DBG] Start discovery request
2019-07-22 10:40:09.316 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:40:09.317 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:40:09.317 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:40:09.317 +03:00 [DBG] Rendering check session result
2019-07-22 10:40:09.376 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:40:09.376 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:40:09.376 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:40:09.377 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:40:09.378 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:40:09.378 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:40:09.378 +03:00 [DBG] Start key discovery request
2019-07-22 10:40:09.480 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:40:09.482 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:40:09.482 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:40:09.493 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:40:09.494 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:40:09.494 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:40:09.495 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:40:09.496 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:40:09.496 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:40:09.496 +03:00 [DBG] Start userinfo request
2019-07-22 10:40:09.497 +03:00 [DBG] Bearer token found in header
2019-07-22 10:40:09.503 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:40:09.503 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:40:09.509 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:40:09.510 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781208,"exp":1563784808,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:40:09.510 +03:00 [DBG] Creating userinfo response
2019-07-22 10:40:09.510 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:40:09.511 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:40:09.511 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:40:09.511 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:40:09.522 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:40:09.522 +03:00 [DBG] End userinfo request
2019-07-22 10:41:09.400 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:41:09.400 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:41:09.400 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:41:09.402 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:41:09.402 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:41:09.402 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:41:09.402 +03:00 [DBG] Start discovery request
2019-07-22 10:41:09.514 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:41:09.515 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:41:09.515 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:41:09.515 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:41:09.516 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:41:09.518 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:41:09.518 +03:00 [DBG] Start discovery request
2019-07-22 10:41:09.540 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:41:09.541 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:41:09.541 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:41:09.541 +03:00 [DBG] Start authorize request
2019-07-22 10:41:09.541 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:41:09.541 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:41:09.541 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:41:09.542 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:41:09.543 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"3759d8e9257548a1bd86080bfd87a1fb","UiLocales":null,"Nonce":"8046fd7cccb84a18a45721c6106e55df","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"3759d8e9257548a1bd86080bfd87a1fb","nonce":"8046fd7cccb84a18a45721c6106e55df"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:41:09.569 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:41:09.569 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:41:09.569 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:41:09.570 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:41:09.614 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:41:09.614 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:41:09.624 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****yMrA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9AGQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSJ:0000000A","TimeStamp":"2019-07-22T07:41:09.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:41:09.624 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"3759d8e9257548a1bd86080bfd87a1fb","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:41:09.656 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:41:09.657 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:41:09.657 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:41:09.657 +03:00 [DBG] Rendering check session result
2019-07-22 10:41:10.751 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:41:10.752 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:41:10.752 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:41:10.753 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:41:10.753 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:41:10.753 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:41:10.753 +03:00 [DBG] Start discovery request
2019-07-22 10:41:10.816 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:41:10.817 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:41:10.817 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:41:10.818 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:41:10.819 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:41:10.822 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:41:10.823 +03:00 [DBG] Start discovery request
2019-07-22 10:41:10.846 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:41:10.846 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:41:10.846 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:41:10.846 +03:00 [DBG] Rendering check session result
2019-07-22 10:41:10.880 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:41:10.881 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:41:10.881 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:41:10.881 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:41:10.882 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:41:10.882 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:41:10.882 +03:00 [DBG] Start key discovery request
2019-07-22 10:41:11.018 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:41:11.018 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:41:11.018 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:41:11.050 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:41:11.051 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:41:11.051 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:41:11.052 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:41:11.052 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:41:11.052 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:41:11.052 +03:00 [DBG] Start userinfo request
2019-07-22 10:41:11.052 +03:00 [DBG] Bearer token found in header
2019-07-22 10:41:11.058 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:41:11.061 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:41:11.068 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:41:11.069 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781269,"exp":1563784869,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:41:11.069 +03:00 [DBG] Creating userinfo response
2019-07-22 10:41:11.069 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:41:11.069 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:41:11.070 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:41:11.070 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:41:11.081 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:41:11.081 +03:00 [DBG] End userinfo request
2019-07-22 10:43:05.496 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:43:05.496 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:05.497 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:05.497 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:43:05.499 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:43:05.499 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:43:05.499 +03:00 [DBG] Start discovery request
2019-07-22 10:43:05.546 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:43:05.546 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:05.546 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:05.547 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:43:05.547 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:43:05.548 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:43:05.548 +03:00 [DBG] Start discovery request
2019-07-22 10:43:05.599 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:43:05.600 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:43:05.601 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:43:05.601 +03:00 [DBG] Start authorize request
2019-07-22 10:43:05.601 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:43:05.601 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:43:05.601 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:43:05.602 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:43:05.602 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:43:05.602 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:43:05.602 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:43:05.602 +03:00 [DBG] Rendering check session result
2019-07-22 10:43:05.602 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b1806f2fdf7b46928e31364ce3988959","UiLocales":null,"Nonce":"b57208a9093443aab5a3bf0c73d5a94a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b1806f2fdf7b46928e31364ce3988959","nonce":"b57208a9093443aab5a3bf0c73d5a94a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:43:05.633 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:43:05.633 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:43:05.633 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:43:05.634 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:43:05.650 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:43:05.650 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:43:05.659 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****EAMQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Yo_g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSL:00000003","TimeStamp":"2019-07-22T07:43:05.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:43:05.659 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"b1806f2fdf7b46928e31364ce3988959","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:43:06.556 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:43:06.556 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:06.558 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:06.560 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:43:06.560 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:43:06.560 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:43:06.561 +03:00 [DBG] Start discovery request
2019-07-22 10:43:06.617 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:43:06.617 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:06.617 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:06.619 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:43:06.620 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:43:06.620 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:43:06.620 +03:00 [DBG] Start discovery request
2019-07-22 10:43:06.622 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:43:06.622 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:43:06.629 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:43:06.630 +03:00 [DBG] Rendering check session result
2019-07-22 10:43:06.750 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:43:06.751 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:06.751 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:06.752 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:43:06.752 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:43:06.752 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:43:06.752 +03:00 [DBG] Start key discovery request
2019-07-22 10:43:06.857 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:43:06.860 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:06.861 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:06.876 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:43:06.877 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:06.877 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:06.877 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:43:06.878 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:43:06.878 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:43:06.878 +03:00 [DBG] Start userinfo request
2019-07-22 10:43:06.879 +03:00 [DBG] Bearer token found in header
2019-07-22 10:43:06.884 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:43:06.884 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:43:06.890 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:43:06.890 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781385,"exp":1563784985,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:43:06.891 +03:00 [DBG] Creating userinfo response
2019-07-22 10:43:06.891 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:43:06.891 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:43:06.891 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:43:06.891 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:43:06.900 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:43:06.901 +03:00 [DBG] End userinfo request
2019-07-22 10:43:20.863 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:43:20.866 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:20.866 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:20.867 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:43:20.868 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:43:20.868 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:43:20.868 +03:00 [DBG] Start discovery request
2019-07-22 10:43:21.015 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:43:21.015 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:21.015 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:21.016 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:43:21.016 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:43:21.016 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:43:21.017 +03:00 [DBG] Start discovery request
2019-07-22 10:43:21.073 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:43:21.073 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:43:21.074 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:43:21.074 +03:00 [DBG] Start authorize request
2019-07-22 10:43:21.074 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:43:21.074 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:43:21.074 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:43:21.075 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:43:21.075 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ecfe8853b145401a884f541823366716","UiLocales":null,"Nonce":"492a6d536d2a4f16838cb6be5b658f36","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ecfe8853b145401a884f541823366716","nonce":"492a6d536d2a4f16838cb6be5b658f36"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:43:21.096 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:43:21.096 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:43:21.096 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:43:21.097 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:43:21.119 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:43:21.119 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:43:21.128 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****IZkw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****44Vw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSM:00000006","TimeStamp":"2019-07-22T07:43:21.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:43:21.129 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"ecfe8853b145401a884f541823366716","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:43:21.264 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:43:21.264 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:43:21.264 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:43:21.264 +03:00 [DBG] Rendering check session result
2019-07-22 10:43:21.993 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:43:21.996 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:21.996 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:21.996 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:43:21.997 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:43:21.997 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:43:21.997 +03:00 [DBG] Start discovery request
2019-07-22 10:43:22.077 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:43:22.079 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:22.079 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:22.080 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:43:22.081 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:43:22.081 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:43:22.082 +03:00 [DBG] Start discovery request
2019-07-22 10:43:22.090 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:43:22.091 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:43:22.091 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:43:22.091 +03:00 [DBG] Rendering check session result
2019-07-22 10:43:22.126 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:43:22.127 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:22.127 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:22.129 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:43:22.130 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:43:22.130 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:43:22.130 +03:00 [DBG] Start key discovery request
2019-07-22 10:43:22.265 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:43:22.267 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:22.267 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:22.296 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:43:22.297 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:22.297 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:22.298 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:43:22.299 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:43:22.299 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:43:22.299 +03:00 [DBG] Start userinfo request
2019-07-22 10:43:22.299 +03:00 [DBG] Bearer token found in header
2019-07-22 10:43:22.306 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:43:22.307 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:43:22.315 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:43:22.315 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781401,"exp":1563785001,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:43:22.316 +03:00 [DBG] Creating userinfo response
2019-07-22 10:43:22.316 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:43:22.316 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:43:22.317 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:43:22.317 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:43:22.326 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:43:22.326 +03:00 [DBG] End userinfo request
2019-07-22 10:43:55.777 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:43:55.779 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:55.779 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:55.779 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:43:55.780 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:43:55.780 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:43:55.780 +03:00 [DBG] Start discovery request
2019-07-22 10:43:55.832 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:43:55.833 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:55.833 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:55.835 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:43:55.835 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:43:55.835 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:43:55.836 +03:00 [DBG] Start discovery request
2019-07-22 10:43:55.865 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:43:55.866 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:43:55.866 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:43:55.866 +03:00 [DBG] Start authorize request
2019-07-22 10:43:55.866 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:43:55.866 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:43:55.866 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:43:55.867 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:43:55.867 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ef983bc0aefd4ae9ba57c8904780fa47","UiLocales":null,"Nonce":"4881e111689b4fa88b325fddab9f6062","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ef983bc0aefd4ae9ba57c8904780fa47","nonce":"4881e111689b4fa88b325fddab9f6062"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:43:55.871 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:43:55.871 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:43:55.871 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:43:55.871 +03:00 [DBG] Rendering check session result
2019-07-22 10:43:55.889 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:43:55.889 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:43:55.889 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:43:55.889 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:43:55.912 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:43:55.912 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:43:55.922 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****MDsw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****44yA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSN:00000004","TimeStamp":"2019-07-22T07:43:55.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:43:55.922 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"ef983bc0aefd4ae9ba57c8904780fa47","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:43:56.821 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:43:56.821 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:56.821 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:56.824 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:43:56.825 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:43:56.825 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:43:56.825 +03:00 [DBG] Start discovery request
2019-07-22 10:43:56.906 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:43:56.906 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:56.906 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:56.907 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:43:56.907 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:43:56.907 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:43:56.907 +03:00 [DBG] Start discovery request
2019-07-22 10:43:56.936 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:43:56.936 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:43:56.937 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:43:56.937 +03:00 [DBG] Rendering check session result
2019-07-22 10:43:57.420 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:43:57.421 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:57.421 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:57.422 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:43:57.422 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:43:57.423 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:43:57.423 +03:00 [DBG] Start key discovery request
2019-07-22 10:43:57.508 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:43:57.510 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:57.510 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:57.549 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:43:57.550 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:43:57.550 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:43:57.551 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:43:57.551 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:43:57.552 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:43:57.552 +03:00 [DBG] Start userinfo request
2019-07-22 10:43:57.552 +03:00 [DBG] Bearer token found in header
2019-07-22 10:43:57.559 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:43:57.559 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:43:57.572 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:43:57.572 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781435,"exp":1563785035,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:43:57.573 +03:00 [DBG] Creating userinfo response
2019-07-22 10:43:57.573 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:43:57.573 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:43:57.573 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:43:57.573 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:43:57.583 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:43:57.583 +03:00 [DBG] End userinfo request
2019-07-22 10:44:23.567 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:44:23.568 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:23.569 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:23.572 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:44:23.573 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:44:23.573 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:44:23.573 +03:00 [DBG] Start discovery request
2019-07-22 10:44:23.645 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:44:23.646 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:23.647 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:23.647 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:44:23.649 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:44:23.649 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:44:23.649 +03:00 [DBG] Start discovery request
2019-07-22 10:44:23.656 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:44:23.656 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:44:23.657 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:44:23.657 +03:00 [DBG] Start authorize request
2019-07-22 10:44:23.657 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:44:23.657 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:44:23.657 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:44:23.657 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:44:23.658 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b2ab5f5cf25e488cb7e33030aa0e42cf","UiLocales":null,"Nonce":"39d60595479a415d9cab15bd4e502347","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b2ab5f5cf25e488cb7e33030aa0e42cf","nonce":"39d60595479a415d9cab15bd4e502347"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:44:23.711 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:44:23.711 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:44:23.711 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:44:23.711 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:44:23.727 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:44:23.727 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:44:23.736 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ck_Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****cNyg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSM:00000011","TimeStamp":"2019-07-22T07:44:23.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:44:23.737 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"b2ab5f5cf25e488cb7e33030aa0e42cf","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:44:23.765 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:44:23.765 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:44:23.766 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:44:23.766 +03:00 [DBG] Rendering check session result
2019-07-22 10:44:24.670 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:44:24.670 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:24.670 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:24.671 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:44:24.671 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:44:24.672 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:44:24.672 +03:00 [DBG] Start discovery request
2019-07-22 10:44:24.715 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:44:24.716 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:24.716 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:24.716 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:44:24.737 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:44:24.737 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:44:24.738 +03:00 [DBG] Start discovery request
2019-07-22 10:44:24.806 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:44:24.807 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:44:24.807 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:44:24.807 +03:00 [DBG] Rendering check session result
2019-07-22 10:44:24.824 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:44:24.825 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:24.825 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:24.825 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:44:24.826 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:44:24.826 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:44:24.826 +03:00 [DBG] Start key discovery request
2019-07-22 10:44:25.015 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:44:25.016 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:25.016 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:25.057 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:44:25.057 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:25.057 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:25.058 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:44:25.059 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:44:25.059 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:44:25.059 +03:00 [DBG] Start userinfo request
2019-07-22 10:44:25.059 +03:00 [DBG] Bearer token found in header
2019-07-22 10:44:25.066 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:44:25.066 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:44:25.078 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:44:25.079 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781463,"exp":1563785063,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:44:25.079 +03:00 [DBG] Creating userinfo response
2019-07-22 10:44:25.079 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:44:25.081 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:44:25.081 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:44:25.081 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:44:25.092 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:44:25.093 +03:00 [DBG] End userinfo request
2019-07-22 10:44:33.942 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:44:33.943 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:33.943 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:33.944 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:44:33.945 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:44:33.945 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:44:33.945 +03:00 [DBG] Start discovery request
2019-07-22 10:44:33.982 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:44:33.983 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:33.983 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:33.983 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:44:33.984 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:44:33.984 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:44:33.984 +03:00 [DBG] Start discovery request
2019-07-22 10:44:34.032 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:44:34.033 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:44:34.033 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:44:34.033 +03:00 [DBG] Start authorize request
2019-07-22 10:44:34.034 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:44:34.034 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:44:34.034 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:44:34.035 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:44:34.036 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"7a96ce7bfea749df920893e727d81ec1","UiLocales":null,"Nonce":"a27e6378d26445b9b92ad7260a269678","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"7a96ce7bfea749df920893e727d81ec1","nonce":"a27e6378d26445b9b92ad7260a269678"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:44:34.052 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:44:34.052 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:44:34.052 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:44:34.052 +03:00 [DBG] Rendering check session result
2019-07-22 10:44:34.053 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:44:34.054 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:44:34.054 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:44:34.054 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:44:34.070 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:44:34.070 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:44:34.083 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****MllQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****B74w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSM:00000017","TimeStamp":"2019-07-22T07:44:34.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:44:34.083 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"7a96ce7bfea749df920893e727d81ec1","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:44:34.832 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:44:34.833 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:34.833 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:34.834 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:44:34.836 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:44:34.836 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:44:34.836 +03:00 [DBG] Start discovery request
2019-07-22 10:44:34.876 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:44:34.876 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:34.876 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:34.877 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:44:34.878 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:44:34.878 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:44:34.878 +03:00 [DBG] Start discovery request
2019-07-22 10:44:34.920 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:44:34.920 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:44:34.920 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:44:34.920 +03:00 [DBG] Rendering check session result
2019-07-22 10:44:34.926 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:44:34.926 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:34.926 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:34.929 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:44:34.930 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:44:34.930 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:44:34.931 +03:00 [DBG] Start key discovery request
2019-07-22 10:44:35.001 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:44:35.003 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:35.003 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:35.038 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:44:35.038 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:35.038 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:35.039 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:44:35.039 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:44:35.039 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:44:35.039 +03:00 [DBG] Start userinfo request
2019-07-22 10:44:35.039 +03:00 [DBG] Bearer token found in header
2019-07-22 10:44:35.044 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:44:35.045 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:44:35.049 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:44:35.050 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781474,"exp":1563785074,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:44:35.050 +03:00 [DBG] Creating userinfo response
2019-07-22 10:44:35.050 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:44:35.050 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:44:35.051 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:44:35.051 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:44:35.060 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:44:35.061 +03:00 [DBG] End userinfo request
2019-07-22 10:44:51.841 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:44:51.841 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:51.841 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:51.842 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:44:51.842 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:44:51.842 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:44:51.843 +03:00 [DBG] Start discovery request
2019-07-22 10:44:51.909 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:44:51.909 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:51.910 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:51.910 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:44:51.913 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:44:51.914 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:44:51.914 +03:00 [DBG] Start discovery request
2019-07-22 10:44:52.029 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:44:52.031 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:44:52.031 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:44:52.031 +03:00 [DBG] Rendering check session result
2019-07-22 10:44:52.056 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:44:52.056 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:44:52.056 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:44:52.056 +03:00 [DBG] Start authorize request
2019-07-22 10:44:52.057 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:44:52.057 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:44:52.059 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:44:52.062 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:44:52.063 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"07caa65a605a4884834d60e9e7da6857","UiLocales":null,"Nonce":"0072e9fadd4d467f893aed5ac9988bcb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"07caa65a605a4884834d60e9e7da6857","nonce":"0072e9fadd4d467f893aed5ac9988bcb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:44:52.094 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:44:52.095 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:44:52.095 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:44:52.095 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:44:52.114 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:44:52.116 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:44:52.131 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****qCVA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****7klA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSM:0000001C","TimeStamp":"2019-07-22T07:44:52.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:44:52.131 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"07caa65a605a4884834d60e9e7da6857","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:44:52.890 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:44:52.890 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:52.890 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:52.891 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:44:52.892 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:44:52.892 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:44:52.892 +03:00 [DBG] Start discovery request
2019-07-22 10:44:52.953 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:44:52.959 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:52.962 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:52.966 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:44:52.966 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:44:52.966 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:44:52.966 +03:00 [DBG] Start discovery request
2019-07-22 10:44:53.019 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:44:53.020 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:44:53.020 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:44:53.021 +03:00 [DBG] Rendering check session result
2019-07-22 10:44:53.033 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:44:53.035 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:53.036 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:53.036 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:44:53.037 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:44:53.038 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:44:53.038 +03:00 [DBG] Start key discovery request
2019-07-22 10:44:53.168 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:44:53.169 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:53.169 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:53.185 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:44:53.185 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:44:53.185 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:44:53.186 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:44:53.186 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:44:53.186 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:44:53.186 +03:00 [DBG] Start userinfo request
2019-07-22 10:44:53.188 +03:00 [DBG] Bearer token found in header
2019-07-22 10:44:53.195 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:44:53.195 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:44:53.201 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:44:53.202 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781492,"exp":1563785092,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:44:53.203 +03:00 [DBG] Creating userinfo response
2019-07-22 10:44:53.203 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:44:53.203 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:44:53.203 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:44:53.203 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:44:53.210 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:44:53.210 +03:00 [DBG] End userinfo request
2019-07-22 10:46:01.030 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:46:01.030 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:01.031 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:01.031 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:46:01.032 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:46:01.032 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:46:01.033 +03:00 [DBG] Start discovery request
2019-07-22 10:46:01.130 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:46:01.131 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:01.131 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:01.132 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:46:01.132 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:46:01.132 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:46:01.133 +03:00 [DBG] Start discovery request
2019-07-22 10:46:02.675 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:46:02.675 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:46:02.675 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:46:02.675 +03:00 [DBG] Start authorize request
2019-07-22 10:46:02.675 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:46:02.676 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:46:02.676 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:46:02.676 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:46:02.676 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:46:02.676 +03:00 [DBG] Rendering check session result
2019-07-22 10:46:02.676 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:46:02.676 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:46:02.677 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"62666341861b4af1892e31270056bf2c","UiLocales":null,"Nonce":"d73ef6e77427443aba4e4df92c8ddc3c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"62666341861b4af1892e31270056bf2c","nonce":"d73ef6e77427443aba4e4df92c8ddc3c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:46:02.716 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:46:02.716 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:46:02.716 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:46:02.716 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:46:02.741 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:46:02.742 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:46:02.753 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Az6w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****TM6Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSP:00000003","TimeStamp":"2019-07-22T07:46:02.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:46:02.753 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"62666341861b4af1892e31270056bf2c","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:46:03.683 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:46:03.690 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:03.691 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:03.692 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:46:03.695 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:46:03.695 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:46:03.695 +03:00 [DBG] Start discovery request
2019-07-22 10:46:03.782 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:46:03.783 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:03.783 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:03.783 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:46:03.784 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:46:03.784 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:46:03.784 +03:00 [DBG] Start discovery request
2019-07-22 10:46:03.796 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:46:03.796 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:46:03.796 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:46:03.796 +03:00 [DBG] Rendering check session result
2019-07-22 10:46:03.836 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:46:03.838 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:03.839 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:03.844 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:46:03.844 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:46:03.845 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:46:03.845 +03:00 [DBG] Start key discovery request
2019-07-22 10:46:03.987 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:46:03.989 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:03.989 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:04.018 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:46:04.018 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:04.019 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:04.019 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:46:04.020 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:46:04.020 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:46:04.020 +03:00 [DBG] Start userinfo request
2019-07-22 10:46:04.020 +03:00 [DBG] Bearer token found in header
2019-07-22 10:46:04.026 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:46:04.026 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:46:04.052 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:46:04.052 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781562,"exp":1563785162,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:46:04.053 +03:00 [DBG] Creating userinfo response
2019-07-22 10:46:04.053 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:46:04.053 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:46:04.055 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:46:04.055 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:46:04.066 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:46:04.067 +03:00 [DBG] End userinfo request
2019-07-22 10:46:45.702 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:46:45.704 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:45.704 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:45.705 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:46:45.705 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:46:45.705 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:46:45.705 +03:00 [DBG] Start discovery request
2019-07-22 10:46:45.707 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:46:45.708 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:45.709 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:45.709 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:46:45.710 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:46:45.710 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:46:45.710 +03:00 [DBG] Start discovery request
2019-07-22 10:46:45.825 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:46:45.827 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:46:45.828 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:46:45.828 +03:00 [DBG] Rendering check session result
2019-07-22 10:46:45.870 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:46:45.870 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:46:45.870 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:46:45.870 +03:00 [DBG] Start authorize request
2019-07-22 10:46:45.871 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:46:45.871 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:46:45.871 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:46:45.872 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:46:45.872 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"de72b61d3f20431e847fd6650a0d38b3","UiLocales":null,"Nonce":"30d65daac2c74c1688aa040c2dd101c1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"de72b61d3f20431e847fd6650a0d38b3","nonce":"30d65daac2c74c1688aa040c2dd101c1"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:46:45.893 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:46:45.893 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:46:45.893 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:46:45.893 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:46:45.919 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:46:45.919 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:46:45.930 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****hDSg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****BgLw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSP:00000008","TimeStamp":"2019-07-22T07:46:45.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:46:45.930 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"de72b61d3f20431e847fd6650a0d38b3","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:46:48.753 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:46:48.753 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:48.753 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:48.754 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:46:48.755 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:46:48.755 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:46:48.755 +03:00 [DBG] Start discovery request
2019-07-22 10:46:48.808 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:46:48.809 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:48.809 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:48.810 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:46:48.810 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:46:48.810 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:46:48.811 +03:00 [DBG] Start discovery request
2019-07-22 10:46:48.898 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:46:48.899 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:46:48.899 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:46:48.900 +03:00 [DBG] Rendering check session result
2019-07-22 10:46:48.973 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:46:48.974 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:48.974 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:48.975 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:46:48.976 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:46:48.976 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:46:48.976 +03:00 [DBG] Start key discovery request
2019-07-22 10:46:49.054 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:46:49.055 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:49.055 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:49.068 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:46:49.068 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:46:49.069 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:46:49.069 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:46:49.070 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:46:49.070 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:46:49.070 +03:00 [DBG] Start userinfo request
2019-07-22 10:46:49.070 +03:00 [DBG] Bearer token found in header
2019-07-22 10:46:49.076 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:46:49.076 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:46:49.083 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:46:49.084 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781605,"exp":1563785205,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:46:49.084 +03:00 [DBG] Creating userinfo response
2019-07-22 10:46:49.084 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:46:49.084 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:46:49.084 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:46:49.084 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:46:49.092 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:46:49.092 +03:00 [DBG] End userinfo request
2019-07-22 10:47:55.692 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:47:55.692 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:47:55.692 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:47:55.693 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:47:55.695 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:47:55.695 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:47:55.695 +03:00 [DBG] Start discovery request
2019-07-22 10:47:55.697 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:47:55.697 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:47:55.697 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:47:55.698 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:47:55.698 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:47:55.698 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:47:55.698 +03:00 [DBG] Start discovery request
2019-07-22 10:47:55.872 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:47:55.872 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:47:55.872 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:47:55.872 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:47:55.872 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:47:55.872 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:47:55.872 +03:00 [DBG] Start authorize request
2019-07-22 10:47:55.873 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:47:55.873 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:47:55.873 +03:00 [DBG] Rendering check session result
2019-07-22 10:47:55.873 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:47:55.873 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:47:55.874 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"494b39b578774af1a621a12bb143ab89","UiLocales":null,"Nonce":"6e31448e0fea4331a7aad455c9bbcfae","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"494b39b578774af1a621a12bb143ab89","nonce":"6e31448e0fea4331a7aad455c9bbcfae"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:47:55.892 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:47:55.893 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:47:55.893 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:47:55.893 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:47:55.912 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:47:55.912 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:47:55.922 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3RrQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****KkSw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSR:00000002","TimeStamp":"2019-07-22T07:47:55.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:47:55.922 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"494b39b578774af1a621a12bb143ab89","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:47:58.057 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:47:58.057 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:47:58.058 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:47:58.058 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:47:58.059 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:47:58.059 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:47:58.059 +03:00 [DBG] Start discovery request
2019-07-22 10:47:58.081 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:47:58.082 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:47:58.082 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:47:58.083 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:47:58.084 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:47:58.084 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:47:58.084 +03:00 [DBG] Start discovery request
2019-07-22 10:47:58.171 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:47:58.171 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:47:58.172 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:47:58.172 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:47:58.173 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:47:58.173 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:47:58.173 +03:00 [DBG] Start key discovery request
2019-07-22 10:47:58.203 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:47:58.203 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:47:58.204 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:47:58.204 +03:00 [DBG] Rendering check session result
2019-07-22 10:47:58.424 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:47:58.425 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:47:58.425 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:47:58.494 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:47:58.495 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:47:58.495 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:47:58.496 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:47:58.497 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:47:58.498 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:47:58.498 +03:00 [DBG] Start userinfo request
2019-07-22 10:47:58.498 +03:00 [DBG] Bearer token found in header
2019-07-22 10:47:58.504 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:47:58.505 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:47:58.514 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:47:58.515 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781675,"exp":1563785275,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:47:58.515 +03:00 [DBG] Creating userinfo response
2019-07-22 10:47:58.516 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:47:58.516 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:47:58.516 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:47:58.516 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:47:58.529 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:47:58.529 +03:00 [DBG] End userinfo request
2019-07-22 10:48:56.548 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:48:56.548 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:48:56.548 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:48:56.549 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:48:56.550 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:48:56.550 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:48:56.551 +03:00 [DBG] Start discovery request
2019-07-22 10:48:56.612 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:48:56.612 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:48:56.612 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:48:56.613 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:48:56.614 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:48:56.614 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:48:56.614 +03:00 [DBG] Start discovery request
2019-07-22 10:48:56.638 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:48:56.638 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:48:56.638 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:48:56.638 +03:00 [DBG] Start authorize request
2019-07-22 10:48:56.639 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:48:56.639 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:48:56.639 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:48:56.639 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:48:56.645 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"bde76ab43ee0473cb21d69216220ee2b","UiLocales":null,"Nonce":"d707f0089ca84dbfabf8b66e7a6c7b5c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"bde76ab43ee0473cb21d69216220ee2b","nonce":"d707f0089ca84dbfabf8b66e7a6c7b5c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:48:56.668 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:48:56.668 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:48:56.669 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:48:56.669 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:48:56.690 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:48:56.690 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:48:56.690 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:48:56.690 +03:00 [DBG] Rendering check session result
2019-07-22 10:48:56.695 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:48:56.696 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:48:56.708 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****za0A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Wz7Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSS:00000007","TimeStamp":"2019-07-22T07:48:56.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:48:56.708 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"bde76ab43ee0473cb21d69216220ee2b","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:48:57.417 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:48:57.417 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:48:57.417 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:48:57.419 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:48:57.420 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:48:57.420 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:48:57.420 +03:00 [DBG] Start discovery request
2019-07-22 10:48:57.450 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:48:57.450 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:48:57.451 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:48:57.451 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:48:57.451 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:48:57.452 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:48:57.452 +03:00 [DBG] Start discovery request
2019-07-22 10:48:57.518 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:48:57.518 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:48:57.519 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:48:57.519 +03:00 [DBG] Rendering check session result
2019-07-22 10:48:57.522 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:48:57.522 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:48:57.522 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:48:57.522 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:48:57.523 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:48:57.523 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:48:57.523 +03:00 [DBG] Start key discovery request
2019-07-22 10:48:57.629 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:48:57.637 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:48:57.642 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:48:57.704 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:48:57.705 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:48:57.705 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:48:57.706 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:48:57.706 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:48:57.707 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:48:57.707 +03:00 [DBG] Start userinfo request
2019-07-22 10:48:57.707 +03:00 [DBG] Bearer token found in header
2019-07-22 10:48:57.712 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:48:57.713 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:48:57.724 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:48:57.725 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781736,"exp":1563785336,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:48:57.726 +03:00 [DBG] Creating userinfo response
2019-07-22 10:48:57.726 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:48:57.726 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:48:57.726 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:48:57.726 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:48:57.735 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:48:57.735 +03:00 [DBG] End userinfo request
2019-07-22 10:49:14.451 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:49:14.451 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:49:14.451 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:49:14.452 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:49:14.453 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:49:14.453 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:49:14.453 +03:00 [DBG] Start discovery request
2019-07-22 10:49:14.616 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:49:14.617 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:49:14.617 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:49:14.617 +03:00 [DBG] Rendering check session result
2019-07-22 10:49:43.190 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:49:43.190 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:49:43.190 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:49:43.191 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:49:43.191 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:49:43.191 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:49:43.192 +03:00 [DBG] Start discovery request
2019-07-22 10:49:43.247 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:49:43.247 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:49:43.248 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:49:43.248 +03:00 [DBG] Rendering check session result
2019-07-22 10:50:00.899 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:50:00.899 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:50:00.899 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:50:00.900 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:50:00.901 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:50:00.901 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:50:00.901 +03:00 [DBG] Start discovery request
2019-07-22 10:50:01.003 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:50:01.003 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:50:01.003 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:50:01.003 +03:00 [DBG] Rendering check session result
2019-07-22 10:50:10.657 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:50:10.657 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:50:10.657 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:50:10.658 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:50:10.658 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:50:10.659 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:50:10.659 +03:00 [DBG] Start discovery request
2019-07-22 10:50:10.693 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:50:10.694 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:50:10.695 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:50:10.695 +03:00 [DBG] Start authorize request
2019-07-22 10:50:10.695 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:50:10.695 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:50:10.696 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:50:10.696 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:50:10.697 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"89c0fe4bb4254cf8a0d48055542ecc26","UiLocales":null,"Nonce":"5b493893c963464d8a3a312ad26c9a1e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"89c0fe4bb4254cf8a0d48055542ecc26","nonce":"5b493893c963464d8a3a312ad26c9a1e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:50:10.721 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:50:10.722 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:50:10.722 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:50:10.722 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:50:10.734 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:50:10.735 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:50:10.742 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****FSjQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gJ8w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSR:0000000E","TimeStamp":"2019-07-22T07:50:10.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:50:10.743 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"89c0fe4bb4254cf8a0d48055542ecc26","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:50:11.470 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:50:11.483 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:50:11.483 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:50:11.484 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:50:11.485 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:50:11.485 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:50:11.485 +03:00 [DBG] Start discovery request
2019-07-22 10:50:11.543 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:50:11.544 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:50:11.545 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:50:11.547 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:50:11.547 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:50:11.548 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:50:11.548 +03:00 [DBG] Start key discovery request
2019-07-22 10:50:11.618 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:50:11.618 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:50:11.619 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:50:11.633 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:50:11.633 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:50:11.633 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:50:11.634 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:50:11.634 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:50:11.634 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:50:11.634 +03:00 [DBG] Start userinfo request
2019-07-22 10:50:11.635 +03:00 [DBG] Bearer token found in header
2019-07-22 10:50:11.641 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:50:11.641 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:50:11.649 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:50:11.650 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781810,"exp":1563785410,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:50:11.650 +03:00 [DBG] Creating userinfo response
2019-07-22 10:50:11.650 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:50:11.651 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:50:11.651 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:50:11.651 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:50:11.659 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:50:11.659 +03:00 [DBG] End userinfo request
2019-07-22 10:50:11.705 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:50:11.705 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:50:11.705 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:50:11.705 +03:00 [DBG] Rendering check session result
2019-07-22 10:51:58.847 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:51:58.847 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:51:58.847 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:51:58.848 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:51:58.850 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:51:58.850 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:51:58.850 +03:00 [DBG] Start discovery request
2019-07-22 10:51:58.922 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:51:58.923 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:51:58.923 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:51:58.923 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:51:58.925 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:51:58.925 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:51:58.926 +03:00 [DBG] Start discovery request
2019-07-22 10:51:59.045 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:51:59.046 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:51:59.046 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:51:59.046 +03:00 [DBG] Start authorize request
2019-07-22 10:51:59.047 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:51:59.047 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:51:59.047 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:51:59.047 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:51:59.047 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b65f22b72d574fa8b5079564a2c2c053","UiLocales":null,"Nonce":"86e34c2627354ec29c56fdf0760d5d73","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"be06f0b94ca18730a4655dc946ee5c89","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b65f22b72d574fa8b5079564a2c2c053","nonce":"86e34c2627354ec29c56fdf0760d5d73"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:51:59.067 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:51:59.067 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:51:59.067 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:51:59.068 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:51:59.078 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:51:59.078 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:51:59.079 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:51:59.079 +03:00 [DBG] Rendering check session result
2019-07-22 10:51:59.084 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:51:59.084 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:51:59.096 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****O5ew","$type":"Token"},{"TokenType":"access_token","TokenValue":"****pKvg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KST:00000003","TimeStamp":"2019-07-22T07:51:59.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:51:59.097 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"b65f22b72d574fa8b5079564a2c2c053","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:52:00.202 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:52:00.205 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:52:00.206 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:52:00.207 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:52:00.208 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:52:00.208 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:52:00.208 +03:00 [DBG] Start discovery request
2019-07-22 10:52:00.268 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:52:00.269 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:52:00.269 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:52:00.270 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:52:00.271 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:52:00.272 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:52:00.272 +03:00 [DBG] Start discovery request
2019-07-22 10:52:00.277 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:52:00.278 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:52:00.278 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:52:00.278 +03:00 [DBG] Rendering check session result
2019-07-22 10:52:00.341 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:52:00.343 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:52:00.343 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:52:00.344 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:52:00.345 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:52:00.345 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:52:00.347 +03:00 [DBG] Start key discovery request
2019-07-22 10:52:00.487 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:52:00.487 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:52:00.488 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:52:00.506 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:52:00.506 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:52:00.506 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:52:00.507 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:52:00.508 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:52:00.508 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:52:00.508 +03:00 [DBG] Start userinfo request
2019-07-22 10:52:00.508 +03:00 [DBG] Bearer token found in header
2019-07-22 10:52:00.514 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:52:00.514 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:52:00.527 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:52:00.527 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781919,"exp":1563785519,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563780391,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:52:00.528 +03:00 [DBG] Creating userinfo response
2019-07-22 10:52:00.528 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:52:00.528 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:52:00.528 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:52:00.528 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:52:00.535 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:52:00.535 +03:00 [DBG] End userinfo request
2019-07-22 10:52:34.844 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:52:34.844 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:52:34.844 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:52:34.845 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:52:34.845 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:52:34.846 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:52:34.846 +03:00 [DBG] Start discovery request
2019-07-22 10:52:34.873 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:52:34.874 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:52:34.874 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:52:34.874 +03:00 [DBG] Start authorize request
2019-07-22 10:52:34.874 +03:00 [DBG] No user present in authorize request
2019-07-22 10:52:34.874 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:52:34.875 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:52:34.875 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:52:34.876 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"3baf1ed42f9e484290824c77062d5183","UiLocales":null,"Nonce":"95755a0b21e540879b89220c62493958","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"3baf1ed42f9e484290824c77062d5183","nonce":"95755a0b21e540879b89220c62493958"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:52:34.876 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 10:52:34.925 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:52:34.925 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:52:34.925 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:52:34.926 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:52:37.096 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-22 10:52:42.599 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-22 10:52:42.633 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOECU2F4KST:00000009","TimeStamp":"2019-07-22T07:52:42.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 10:52:42.635 +03:00 [DBG] Augmenting SignInContext
2019-07-22 10:52:42.635 +03:00 [DBG] Adding amr claim with value: external
2019-07-22 10:52:42.635 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 10:52:42.635 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 10:52:42.654 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 10:52:42.655 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 10:52:42.656 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 10:52:42.656 +03:00 [DBG] Start authorize callback request
2019-07-22 10:52:42.658 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:52:42.658 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:52:42.658 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:52:42.659 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:52:42.659 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"3baf1ed42f9e484290824c77062d5183","UiLocales":null,"Nonce":"95755a0b21e540879b89220c62493958","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b2ce392c8420de9773f2a28d63ef8234","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"3baf1ed42f9e484290824c77062d5183","nonce":"95755a0b21e540879b89220c62493958"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:52:42.679 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:52:42.679 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:52:42.679 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:52:42.679 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:52:42.694 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:52:42.695 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:52:42.702 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****gxig","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qFeg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSU:00000008","TimeStamp":"2019-07-22T07:52:42.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:52:42.703 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"3baf1ed42f9e484290824c77062d5183","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:52:42.703 +03:00 [DBG] Augmenting SignInContext
2019-07-22 10:52:42.704 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 10:52:44.766 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:52:44.766 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:52:44.766 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:52:44.767 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:52:44.768 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:52:44.768 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:52:44.768 +03:00 [DBG] Start discovery request
2019-07-22 10:52:45.041 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:52:45.042 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:52:45.043 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:52:45.043 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:52:45.051 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:52:45.052 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:52:45.052 +03:00 [DBG] Start key discovery request
2019-07-22 10:52:45.136 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:52:45.136 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:52:45.136 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:52:45.149 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:52:45.149 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:52:45.149 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:52:45.150 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:52:45.151 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:52:45.151 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:52:45.151 +03:00 [DBG] Start userinfo request
2019-07-22 10:52:45.151 +03:00 [DBG] Bearer token found in header
2019-07-22 10:52:45.156 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:52:45.156 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:52:45.164 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:52:45.165 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781962,"exp":1563785562,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563781962,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:52:45.165 +03:00 [DBG] Creating userinfo response
2019-07-22 10:52:45.166 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:52:45.166 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:52:45.166 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:52:45.166 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:52:45.173 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:52:45.174 +03:00 [DBG] End userinfo request
2019-07-22 10:52:45.212 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:52:45.219 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:52:45.220 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:52:45.220 +03:00 [DBG] Rendering check session result
2019-07-22 10:53:07.571 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:53:07.571 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:53:07.571 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:53:07.572 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:53:07.573 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:53:07.573 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:53:07.573 +03:00 [DBG] Start discovery request
2019-07-22 10:53:07.638 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:53:07.639 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:53:07.639 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:53:07.639 +03:00 [DBG] Rendering check session result
2019-07-22 10:53:17.388 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:53:17.388 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:53:17.388 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:53:17.389 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:53:17.390 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:53:17.390 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:53:17.391 +03:00 [DBG] Start discovery request
2019-07-22 10:53:17.427 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:53:17.428 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:53:17.428 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:53:17.428 +03:00 [DBG] Start authorize request
2019-07-22 10:53:17.428 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:53:17.428 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:53:17.429 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:53:17.429 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:53:17.430 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"598c0997499e4b8980b213c1f2740941","UiLocales":null,"Nonce":"0d3170f6590847a49f78bbc95a3b69bd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b2ce392c8420de9773f2a28d63ef8234","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"598c0997499e4b8980b213c1f2740941","nonce":"0d3170f6590847a49f78bbc95a3b69bd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:53:17.452 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:53:17.452 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:53:17.452 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:53:17.452 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:53:17.468 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:53:17.469 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:53:17.479 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Q9OA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gmrA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KST:0000000E","TimeStamp":"2019-07-22T07:53:17.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:53:17.479 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"598c0997499e4b8980b213c1f2740941","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:53:18.278 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:53:18.279 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:53:18.279 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:53:18.280 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:53:18.281 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:53:18.281 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:53:18.281 +03:00 [DBG] Start discovery request
2019-07-22 10:53:18.345 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:53:18.347 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:53:18.348 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:53:18.351 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:53:18.352 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:53:18.352 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:53:18.352 +03:00 [DBG] Start key discovery request
2019-07-22 10:53:18.481 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:53:18.483 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:53:18.483 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:53:18.519 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:53:18.520 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:53:18.520 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:53:18.521 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:53:18.521 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:53:18.522 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:53:18.522 +03:00 [DBG] Start userinfo request
2019-07-22 10:53:18.522 +03:00 [DBG] Bearer token found in header
2019-07-22 10:53:18.527 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:53:18.527 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:53:18.538 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:53:18.539 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563781997,"exp":1563785597,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563781962,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:53:18.539 +03:00 [DBG] Creating userinfo response
2019-07-22 10:53:18.539 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:53:18.539 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:53:18.540 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:53:18.540 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:53:18.551 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:53:18.552 +03:00 [DBG] End userinfo request
2019-07-22 10:53:18.596 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:53:18.596 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:53:18.596 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:53:18.596 +03:00 [DBG] Rendering check session result
2019-07-22 10:54:55.015 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:54:55.016 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:54:55.016 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:54:55.018 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:54:55.019 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:54:55.019 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:54:55.019 +03:00 [DBG] Start discovery request
2019-07-22 10:54:55.088 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:54:55.088 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:54:55.088 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:54:55.088 +03:00 [DBG] Rendering check session result
2019-07-22 10:55:24.196 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:55:24.196 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:55:24.196 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:55:24.197 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:55:24.197 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:55:24.197 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:55:24.198 +03:00 [DBG] Start discovery request
2019-07-22 10:55:24.234 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:55:24.236 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:55:24.236 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:55:24.236 +03:00 [DBG] Start authorize request
2019-07-22 10:55:24.237 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:55:24.237 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:55:24.237 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:55:24.237 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:55:24.238 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e358f32946074cfda869fe846944bdf7","UiLocales":null,"Nonce":"69100b85e6d045c5b9ce78f35da0b11b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b2ce392c8420de9773f2a28d63ef8234","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e358f32946074cfda869fe846944bdf7","nonce":"69100b85e6d045c5b9ce78f35da0b11b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:55:24.264 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:55:24.264 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:55:24.264 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:55:24.264 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:55:24.280 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:55:24.281 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:55:24.291 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****WOuQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kVhg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSV:00000004","TimeStamp":"2019-07-22T07:55:24.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:55:24.291 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"e358f32946074cfda869fe846944bdf7","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:55:25.805 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:55:25.805 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:55:25.805 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:55:25.806 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:55:25.807 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:55:25.807 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:55:25.807 +03:00 [DBG] Start discovery request
2019-07-22 10:55:25.897 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:55:25.897 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:55:25.897 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:55:25.897 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:55:25.898 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:55:25.898 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:55:25.898 +03:00 [DBG] Start key discovery request
2019-07-22 10:55:25.989 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:55:25.991 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:55:25.991 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:55:26.002 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:55:26.002 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:55:26.003 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:55:26.003 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:55:26.004 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:55:26.004 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:55:26.004 +03:00 [DBG] Start userinfo request
2019-07-22 10:55:26.005 +03:00 [DBG] Bearer token found in header
2019-07-22 10:55:26.010 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:55:26.010 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:55:26.015 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:55:26.017 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563782124,"exp":1563785724,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563781962,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:55:26.017 +03:00 [DBG] Creating userinfo response
2019-07-22 10:55:26.017 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:55:26.018 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:55:26.018 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:55:26.018 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:55:26.025 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:55:26.025 +03:00 [DBG] End userinfo request
2019-07-22 10:55:26.083 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:55:26.085 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:55:26.085 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:55:26.086 +03:00 [DBG] Rendering check session result
2019-07-22 10:55:40.271 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:55:40.271 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:55:40.271 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:55:40.272 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:55:40.274 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:55:40.274 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:55:40.274 +03:00 [DBG] Start discovery request
2019-07-22 10:55:40.320 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:55:40.321 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:55:40.321 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:55:40.321 +03:00 [DBG] Rendering check session result
2019-07-22 10:55:55.437 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:55:55.437 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:55:55.437 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:55:55.441 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:55:55.442 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:55:55.442 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:55:55.442 +03:00 [DBG] Start discovery request
2019-07-22 10:55:55.652 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:55:55.653 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:55:55.653 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:55:55.653 +03:00 [DBG] Rendering check session result
2019-07-22 10:56:14.208 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:56:14.208 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:56:14.208 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:56:14.210 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:56:14.210 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:56:14.210 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:56:14.210 +03:00 [DBG] Start discovery request
2019-07-22 10:56:14.249 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:56:14.249 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:56:14.250 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:56:14.250 +03:00 [DBG] Start authorize request
2019-07-22 10:56:14.250 +03:00 [DBG] No user present in authorize request
2019-07-22 10:56:14.250 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:56:14.251 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:56:14.252 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:56:14.252 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9a36d8dff2f84e40a00a4b46b100bf13","UiLocales":null,"Nonce":"490fc9a9a4164d13a5c4fe6d3778becd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9a36d8dff2f84e40a00a4b46b100bf13","nonce":"490fc9a9a4164d13a5c4fe6d3778becd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:56:14.253 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 10:56:14.269 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:56:14.269 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:56:14.270 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:56:14.270 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:56:15.802 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-22 10:56:20.243 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-22 10:56:20.267 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOECU2F4KSV:00000013","TimeStamp":"2019-07-22T07:56:20.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 10:56:20.267 +03:00 [DBG] Augmenting SignInContext
2019-07-22 10:56:20.267 +03:00 [DBG] Adding amr claim with value: external
2019-07-22 10:56:20.268 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 10:56:20.268 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 10:56:20.284 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 10:56:20.285 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 10:56:20.285 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 10:56:20.285 +03:00 [DBG] Start authorize callback request
2019-07-22 10:56:20.285 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:56:20.285 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:56:20.286 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:56:20.286 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:56:20.286 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9a36d8dff2f84e40a00a4b46b100bf13","UiLocales":null,"Nonce":"490fc9a9a4164d13a5c4fe6d3778becd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8e05de35b3ee32cef6cbd66e68592380","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9a36d8dff2f84e40a00a4b46b100bf13","nonce":"490fc9a9a4164d13a5c4fe6d3778becd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:56:20.305 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:56:20.306 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:56:20.306 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:56:20.306 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:56:20.323 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:56:20.323 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:56:20.335 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****iIyw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****7zNg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSV:00000014","TimeStamp":"2019-07-22T07:56:20.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:56:20.336 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"9a36d8dff2f84e40a00a4b46b100bf13","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:56:20.336 +03:00 [DBG] Augmenting SignInContext
2019-07-22 10:56:20.337 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 10:56:22.114 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:56:22.114 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:56:22.115 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:56:22.115 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:56:22.116 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:56:22.116 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:56:22.116 +03:00 [DBG] Start discovery request
2019-07-22 10:56:22.239 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:56:22.239 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:56:22.240 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:56:22.240 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:56:22.241 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:56:22.241 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:56:22.241 +03:00 [DBG] Start key discovery request
2019-07-22 10:56:22.327 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:56:22.327 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:56:22.327 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:56:22.341 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:56:22.341 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:56:22.341 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:56:22.342 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:56:22.343 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:56:22.343 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:56:22.343 +03:00 [DBG] Start userinfo request
2019-07-22 10:56:22.343 +03:00 [DBG] Bearer token found in header
2019-07-22 10:56:22.348 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:56:22.348 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:56:22.358 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:56:22.359 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563782180,"exp":1563785780,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563782180,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:56:22.359 +03:00 [DBG] Creating userinfo response
2019-07-22 10:56:22.359 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:56:22.359 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:56:22.359 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:56:22.360 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:56:22.367 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:56:22.367 +03:00 [DBG] End userinfo request
2019-07-22 10:56:22.415 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:56:22.416 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:56:22.416 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:56:22.416 +03:00 [DBG] Rendering check session result
2019-07-22 10:56:45.619 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:56:45.620 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:56:45.620 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:56:45.620 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:56:45.621 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:56:45.621 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:56:45.621 +03:00 [DBG] Start discovery request
2019-07-22 10:56:45.652 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 10:56:45.653 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 10:56:45.653 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 10:56:45.653 +03:00 [DBG] Start authorize request
2019-07-22 10:56:45.654 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:56:45.654 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 10:56:45.654 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:56:45.654 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 10:56:45.655 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b57147732e034eaab5968a9a5673fd3a","UiLocales":null,"Nonce":"df131254405343058271353ec04f45c6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8e05de35b3ee32cef6cbd66e68592380","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b57147732e034eaab5968a9a5673fd3a","nonce":"df131254405343058271353ec04f45c6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 10:56:45.670 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 10:56:45.670 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 10:56:45.670 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 10:56:45.671 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 10:56:45.685 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 10:56:45.685 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 10:56:45.693 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****2Jhg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zaLg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KSV:0000001B","TimeStamp":"2019-07-22T07:56:45.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 10:56:45.693 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"b57147732e034eaab5968a9a5673fd3a","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 10:56:46.790 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 10:56:46.791 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:56:46.791 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:56:46.792 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 10:56:46.794 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 10:56:46.794 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 10:56:46.794 +03:00 [DBG] Start discovery request
2019-07-22 10:56:46.865 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 10:56:46.865 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:56:46.866 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:56:46.867 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 10:56:46.867 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 10:56:46.868 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 10:56:46.868 +03:00 [DBG] Start key discovery request
2019-07-22 10:56:46.948 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:56:46.948 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:56:46.951 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:56:46.984 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 10:56:46.984 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 10:56:46.984 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 10:56:46.985 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 10:56:46.986 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 10:56:46.986 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 10:56:46.986 +03:00 [DBG] Start userinfo request
2019-07-22 10:56:46.986 +03:00 [DBG] Bearer token found in header
2019-07-22 10:56:46.991 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:56:46.992 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 10:56:47.007 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 10:56:47.007 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563782205,"exp":1563785805,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563782180,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 10:56:47.008 +03:00 [DBG] Creating userinfo response
2019-07-22 10:56:47.008 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:56:47.008 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:56:47.008 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 10:56:47.008 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 10:56:47.020 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 10:56:47.020 +03:00 [DBG] End userinfo request
2019-07-22 10:56:47.057 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 10:56:47.057 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 10:56:47.058 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 10:56:47.058 +03:00 [DBG] Rendering check session result
2019-07-22 11:00:30.537 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:00:30.538 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:00:30.538 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:00:30.539 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:00:30.540 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:00:30.540 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:00:30.540 +03:00 [DBG] Start discovery request
2019-07-22 11:00:30.571 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:00:30.572 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:00:30.573 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:00:30.573 +03:00 [DBG] Start authorize request
2019-07-22 11:00:30.573 +03:00 [DBG] User in authorize request: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 11:00:30.573 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:00:30.573 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:00:30.574 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:00:30.575 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"89ed4bf5ff4744b9827818be703d633a","UiLocales":null,"Nonce":"c4b3339eb2af4ddc9c0cf2fa20467052","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8e05de35b3ee32cef6cbd66e68592380","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"89ed4bf5ff4744b9827818be703d633a","nonce":"c4b3339eb2af4ddc9c0cf2fa20467052"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:00:30.596 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:00:30.596 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:00:30.596 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:00:30.597 +03:00 [DBG] Getting claims for access token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02
2019-07-22 11:00:30.612 +03:00 [DBG] Getting claims for identity token for subject: 9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02 and client: spa
2019-07-22 11:00:30.613 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:00:30.622 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****1Fjg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gR3A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT0:00000002","TimeStamp":"2019-07-22T08:00:30.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:00:30.622 +03:00 [INF] Authorize endpoint response
{"SubjectId":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"89ed4bf5ff4744b9827818be703d633a","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:00:32.240 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:00:32.241 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:00:32.241 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:00:32.241 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:00:32.244 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:00:32.245 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:00:32.245 +03:00 [DBG] Start discovery request
2019-07-22 11:00:32.326 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 11:00:32.326 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:00:32.326 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:00:32.327 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 11:00:32.327 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 11:00:32.328 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 11:00:32.328 +03:00 [DBG] Start key discovery request
2019-07-22 11:00:32.415 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:00:32.416 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:00:32.416 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:00:32.427 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:00:32.427 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:00:32.428 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:00:32.429 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 11:00:32.429 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 11:00:32.430 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 11:00:32.430 +03:00 [DBG] Start userinfo request
2019-07-22 11:00:32.430 +03:00 [DBG] Bearer token found in header
2019-07-22 11:00:32.435 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:00:32.436 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:00:32.444 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:00:32.444 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563782430,"exp":1563786030,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"9ca3bfbf-b1ce-4cb7-9c9f-3261d360ed02","auth_time":1563782180,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 11:00:32.445 +03:00 [DBG] Creating userinfo response
2019-07-22 11:00:32.445 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:00:32.445 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:00:32.445 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 11:00:32.445 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:00:32.451 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 11:00:32.451 +03:00 [DBG] End userinfo request
2019-07-22 11:00:32.489 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:00:32.490 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:00:32.490 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:00:32.490 +03:00 [DBG] Rendering check session result
2019-07-22 11:02:23.156 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:02:23.156 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:02:23.156 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:02:23.157 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:02:23.158 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:02:23.158 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:02:23.158 +03:00 [DBG] Start discovery request
2019-07-22 11:02:23.186 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:02:23.187 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:02:23.187 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:02:23.187 +03:00 [DBG] Start authorize request
2019-07-22 11:02:23.187 +03:00 [DBG] No user present in authorize request
2019-07-22 11:02:23.187 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:02:23.187 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:02:23.189 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:02:23.190 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6f25b7ff04ef48d4898a9b92f42fc5e0","UiLocales":null,"Nonce":"b80e115821db4407b64fba68442d8fac","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6f25b7ff04ef48d4898a9b92f42fc5e0","nonce":"b80e115821db4407b64fba68442d8fac"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:02:23.190 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 11:02:23.203 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:02:23.203 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:02:23.205 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:02:23.205 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:02:28.570 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 11:02:28.712 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:02:28.713 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:02:28.713 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:02:28.730 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOECU2F4KT1:00000004","TimeStamp":"2019-07-22T08:02:28.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-22 11:02:28.735 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:02:28.736 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:02:28.736 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:02:28.737 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:02:30.833 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 11:02:30.841 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:02:30.841 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:02:30.842 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:02:40.407 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 11:02:44.276 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 11:02:44.278 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 11:02:44.278 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 11:02:44.278 +03:00 [DBG] Start authorize callback request
2019-07-22 11:02:44.278 +03:00 [DBG] No user present in authorize request
2019-07-22 11:02:44.279 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:02:44.279 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:02:44.279 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:02:44.280 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6f25b7ff04ef48d4898a9b92f42fc5e0","UiLocales":null,"Nonce":"b80e115821db4407b64fba68442d8fac","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6f25b7ff04ef48d4898a9b92f42fc5e0","nonce":"b80e115821db4407b64fba68442d8fac"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:02:44.280 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 11:02:44.293 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:02:44.293 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:02:44.294 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:02:44.294 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:04:29.917 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 11:04:29.922 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:04:29.922 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:04:29.923 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:04:29.981 +03:00 [DBG] Augmenting SignInContext
2019-07-22 11:04:29.981 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 11:04:29.981 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 11:04:29.981 +03:00 [DBG] Adding auth_time claim with value: 1563782669
2019-07-22 11:04:29.986 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 11:04:29.987 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOECU2F4KT2:00000001","TimeStamp":"2019-07-22T08:04:29.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 11:04:29.988 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:04:30.002 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 11:04:30.002 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 11:04:30.002 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 11:04:30.002 +03:00 [DBG] Start authorize callback request
2019-07-22 11:04:30.003 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:04:30.003 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:04:30.003 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:04:30.003 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:04:30.004 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6f25b7ff04ef48d4898a9b92f42fc5e0","UiLocales":null,"Nonce":"b80e115821db4407b64fba68442d8fac","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6f25b7ff04ef48d4898a9b92f42fc5e0","nonce":"b80e115821db4407b64fba68442d8fac"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:04:30.009 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 11:04:30.009 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 11:04:30.010 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 11:04:30.029 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:04:30.029 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:04:30.030 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:04:30.030 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:04:31.739 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 11:04:31.748 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:04:31.749 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:04:31.749 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:04:31.750 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOECU2F4KT2:00000004","TimeStamp":"2019-07-22T08:04:31.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 11:04:31.753 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:04:31.763 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 11:04:31.764 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 11:04:31.765 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 11:04:31.765 +03:00 [DBG] Start authorize callback request
2019-07-22 11:04:31.767 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:04:31.768 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:04:31.768 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:04:31.768 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:04:31.768 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6f25b7ff04ef48d4898a9b92f42fc5e0","UiLocales":null,"Nonce":"b80e115821db4407b64fba68442d8fac","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6f25b7ff04ef48d4898a9b92f42fc5e0","nonce":"b80e115821db4407b64fba68442d8fac"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:04:31.774 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 11:04:31.774 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 11:04:31.774 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 11:04:31.774 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 11:04:31.775 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:04:31.788 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:04:31.788 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:04:31.789 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:04:31.803 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:04:31.803 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:04:31.812 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****apnQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Pizg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT2:00000005","TimeStamp":"2019-07-22T08:04:31.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:04:31.812 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"6f25b7ff04ef48d4898a9b92f42fc5e0","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:04:31.813 +03:00 [DBG] Augmenting SignInContext
2019-07-22 11:04:31.814 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 11:04:33.518 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:04:33.520 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:04:33.520 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:04:33.521 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:04:33.522 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:04:33.522 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:04:33.522 +03:00 [DBG] Start discovery request
2019-07-22 11:04:33.607 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 11:04:33.609 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:04:33.609 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:04:33.613 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 11:04:33.614 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 11:04:33.614 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 11:04:33.614 +03:00 [DBG] Start key discovery request
2019-07-22 11:04:33.733 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:04:33.733 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:04:33.734 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:04:33.750 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:04:33.750 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:04:33.750 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:04:33.751 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 11:04:33.751 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 11:04:33.752 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 11:04:33.752 +03:00 [DBG] Start userinfo request
2019-07-22 11:04:33.752 +03:00 [DBG] Bearer token found in header
2019-07-22 11:04:33.757 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:04:33.759 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:04:33.764 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:04:33.768 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563782671,"exp":1563786271,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563782669,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:04:33.768 +03:00 [DBG] Creating userinfo response
2019-07-22 11:04:33.768 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:04:33.768 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:04:33.768 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 11:04:33.768 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:04:33.777 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 11:04:33.777 +03:00 [DBG] End userinfo request
2019-07-22 11:04:33.816 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:04:33.816 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:04:33.816 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:04:33.816 +03:00 [DBG] Rendering check session result
2019-07-22 11:10:15.696 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:10:15.705 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:10:15.706 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:10:15.708 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:10:15.708 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:10:15.708 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:10:15.708 +03:00 [DBG] Start discovery request
2019-07-22 11:10:16.116 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:10:16.116 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:10:16.118 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:10:16.119 +03:00 [DBG] Rendering check session result
2019-07-22 11:12:46.855 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:12:46.856 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:12:46.857 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:12:46.860 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:12:46.873 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:12:46.874 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:12:46.874 +03:00 [DBG] Start discovery request
2019-07-22 11:12:47.131 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:12:47.131 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:12:47.131 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:12:47.132 +03:00 [DBG] Rendering check session result
2019-07-22 11:16:10.953 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:16:10.954 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:16:10.954 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:16:10.954 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:16:10.955 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:16:10.955 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:16:10.956 +03:00 [DBG] Start discovery request
2019-07-22 11:16:10.972 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:16:10.973 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:16:10.973 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:16:10.973 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:16:10.974 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:16:10.974 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:16:10.974 +03:00 [DBG] Start discovery request
2019-07-22 11:16:11.043 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:16:11.043 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:16:11.043 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:16:11.043 +03:00 [DBG] Rendering check session result
2019-07-22 11:16:11.065 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:16:11.071 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:16:11.071 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:16:11.071 +03:00 [DBG] Start authorize request
2019-07-22 11:16:11.076 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:16:11.077 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:16:11.078 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:16:11.081 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:16:11.089 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0d878a0f83fa44839152da992b2c565f","UiLocales":null,"Nonce":"45b6d3dc49e54167af3b77b413501ad9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0d878a0f83fa44839152da992b2c565f","nonce":"45b6d3dc49e54167af3b77b413501ad9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:16:11.158 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:16:11.159 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:16:11.160 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:16:11.160 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:16:11.178 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:16:11.178 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:16:11.190 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****wxfA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_oIg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT5:00000004","TimeStamp":"2019-07-22T08:16:11.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:16:11.192 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"0d878a0f83fa44839152da992b2c565f","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:16:12.075 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:16:12.076 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:16:12.076 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:16:12.077 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:16:12.078 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:16:12.078 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:16:12.078 +03:00 [DBG] Start discovery request
2019-07-22 11:16:12.121 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:16:12.121 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:16:12.121 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:16:12.122 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:16:12.122 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:16:12.122 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:16:12.123 +03:00 [DBG] Start discovery request
2019-07-22 11:16:12.185 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:16:12.185 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:16:12.185 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:16:12.185 +03:00 [DBG] Rendering check session result
2019-07-22 11:16:12.195 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 11:16:12.195 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:16:12.195 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:16:12.196 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 11:16:12.196 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 11:16:12.197 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 11:16:12.197 +03:00 [DBG] Start key discovery request
2019-07-22 11:16:12.325 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:16:12.325 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:16:12.325 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:16:12.348 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:16:12.348 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:16:12.349 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:16:12.349 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 11:16:12.352 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 11:16:12.353 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 11:16:12.353 +03:00 [DBG] Start userinfo request
2019-07-22 11:16:12.353 +03:00 [DBG] Bearer token found in header
2019-07-22 11:16:12.365 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:16:12.366 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:16:12.373 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:16:12.374 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563783371,"exp":1563786971,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563782669,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:16:12.374 +03:00 [DBG] Creating userinfo response
2019-07-22 11:16:12.375 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:16:12.375 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:16:12.375 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 11:16:12.375 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:16:12.381 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 11:16:12.383 +03:00 [DBG] End userinfo request
2019-07-22 11:19:39.252 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:19:39.252 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:19:39.252 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:19:39.253 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:19:39.255 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:19:39.255 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:19:39.255 +03:00 [DBG] Start discovery request
2019-07-22 11:19:39.274 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:19:39.274 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:19:39.274 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:19:39.275 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:19:39.275 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:19:39.276 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:19:39.276 +03:00 [DBG] Start discovery request
2019-07-22 11:19:39.378 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:19:39.379 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:19:39.379 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:19:39.381 +03:00 [DBG] Rendering check session result
2019-07-22 11:19:39.450 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:19:39.451 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:19:39.451 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:19:39.451 +03:00 [DBG] Start authorize request
2019-07-22 11:19:39.451 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:19:39.451 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:19:39.451 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:19:39.452 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:19:39.453 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"fc0643cbcf4043a3a3d2d23a05e064c4","UiLocales":null,"Nonce":"5492bcce63634eae9bfaac82db9c1241","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"fc0643cbcf4043a3a3d2d23a05e064c4","nonce":"5492bcce63634eae9bfaac82db9c1241"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:19:39.475 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:19:39.476 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:19:39.476 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:19:39.476 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:19:39.491 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:19:39.491 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:19:39.502 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****QxYA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2TCQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT7:00000004","TimeStamp":"2019-07-22T08:19:39.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:19:39.503 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"fc0643cbcf4043a3a3d2d23a05e064c4","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:19:40.309 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:19:40.310 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:19:40.310 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:19:40.310 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:19:40.311 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:19:40.311 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:19:40.311 +03:00 [DBG] Start discovery request
2019-07-22 11:19:40.338 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:19:40.338 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:19:40.338 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:19:40.339 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:19:40.340 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:19:40.340 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:19:40.340 +03:00 [DBG] Start discovery request
2019-07-22 11:19:40.378 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:19:40.379 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:19:40.379 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:19:40.380 +03:00 [DBG] Rendering check session result
2019-07-22 11:19:40.384 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 11:19:40.384 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:19:40.384 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:19:40.385 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 11:19:40.385 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 11:19:40.385 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 11:19:40.386 +03:00 [DBG] Start key discovery request
2019-07-22 11:19:40.475 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:19:40.475 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:19:40.475 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:19:40.509 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:19:40.509 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:19:40.509 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:19:40.510 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 11:19:40.510 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 11:19:40.510 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 11:19:40.510 +03:00 [DBG] Start userinfo request
2019-07-22 11:19:40.511 +03:00 [DBG] Bearer token found in header
2019-07-22 11:19:40.517 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:19:40.517 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:19:40.523 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:19:40.524 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563783579,"exp":1563787179,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563782669,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:19:40.524 +03:00 [DBG] Creating userinfo response
2019-07-22 11:19:40.524 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:19:40.525 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:19:40.525 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 11:19:40.526 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:19:40.533 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 11:19:40.534 +03:00 [DBG] End userinfo request
2019-07-22 11:20:46.590 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:20:46.591 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:20:46.591 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:20:46.591 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:20:46.592 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:20:46.592 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:20:46.592 +03:00 [DBG] Start discovery request
2019-07-22 11:20:46.605 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:20:46.606 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:20:46.606 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:20:46.606 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:20:46.607 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:20:46.607 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:20:46.607 +03:00 [DBG] Start discovery request
2019-07-22 11:20:46.658 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:20:46.658 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:20:46.659 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:20:46.659 +03:00 [DBG] Rendering check session result
2019-07-22 11:20:46.685 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:20:46.685 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:20:46.685 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:20:46.686 +03:00 [DBG] Start authorize request
2019-07-22 11:20:46.686 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:20:46.686 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:20:46.686 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:20:46.688 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:20:46.688 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"3cb69ab7fd7444f49ba7ae91cd8508c7","UiLocales":null,"Nonce":"2299f6bfd13f405a8faa63a5d6e63b05","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"3cb69ab7fd7444f49ba7ae91cd8508c7","nonce":"2299f6bfd13f405a8faa63a5d6e63b05"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:20:46.705 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:20:46.705 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:20:46.705 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:20:46.705 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:20:46.723 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:20:46.723 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:20:46.731 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****R1mw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****YGqA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:00000004","TimeStamp":"2019-07-22T08:20:46.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:20:46.732 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"3cb69ab7fd7444f49ba7ae91cd8508c7","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:20:47.789 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:20:47.789 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:20:47.790 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:20:47.791 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:20:47.793 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:20:47.793 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:20:47.793 +03:00 [DBG] Start discovery request
2019-07-22 11:20:47.857 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:20:47.857 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:20:47.857 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:20:47.857 +03:00 [DBG] Rendering check session result
2019-07-22 11:20:49.856 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:20:49.857 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:20:49.857 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:20:49.857 +03:00 [DBG] Start authorize request
2019-07-22 11:20:49.858 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:20:49.858 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:20:49.858 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:20:49.860 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:20:49.861 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c9cd6a57bf844816b80bfd29dbdeb2bd","UiLocales":null,"Nonce":"2ffd5bb6145f48ee949c0d9ff1c4a98e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c9cd6a57bf844816b80bfd29dbdeb2bd","nonce":"2ffd5bb6145f48ee949c0d9ff1c4a98e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:20:49.884 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:20:49.884 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:20:49.884 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:20:49.885 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:20:49.903 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:20:49.903 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:20:49.912 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****c3tw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****WkVQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:00000007","TimeStamp":"2019-07-22T08:20:49.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:20:49.912 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"c9cd6a57bf844816b80bfd29dbdeb2bd","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:20:50.601 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:20:50.602 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:20:50.602 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:20:50.602 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:20:50.603 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:20:50.603 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:20:50.603 +03:00 [DBG] Start discovery request
2019-07-22 11:20:50.670 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:20:50.670 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:20:50.671 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:20:50.671 +03:00 [DBG] Rendering check session result
2019-07-22 11:20:52.642 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:20:52.643 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:20:52.643 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:20:52.643 +03:00 [DBG] Start authorize request
2019-07-22 11:20:52.643 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:20:52.643 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:20:52.644 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:20:52.644 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:20:52.644 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"668841ef912647d3a6c201fd76c7bb50","UiLocales":null,"Nonce":"81e648835b774e3fb0872a16f75aeb99","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"668841ef912647d3a6c201fd76c7bb50","nonce":"81e648835b774e3fb0872a16f75aeb99"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:20:52.665 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:20:52.665 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:20:52.665 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:20:52.665 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:20:52.683 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:20:52.683 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:20:52.693 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****85fA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qXRw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:0000000A","TimeStamp":"2019-07-22T08:20:52.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:20:52.693 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"668841ef912647d3a6c201fd76c7bb50","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:20:53.595 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:20:53.596 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:20:53.596 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:20:53.597 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:20:53.598 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:20:53.598 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:20:53.598 +03:00 [DBG] Start discovery request
2019-07-22 11:20:53.686 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:20:53.686 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:20:53.687 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:20:53.687 +03:00 [DBG] Rendering check session result
2019-07-22 11:20:55.643 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:20:55.644 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:20:55.645 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:20:55.650 +03:00 [DBG] Start authorize request
2019-07-22 11:20:55.652 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:20:55.652 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:20:55.657 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:20:55.657 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:20:55.658 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"be2a8fa1bd4a46ae9f55024edd50dff1","UiLocales":null,"Nonce":"10b81bac2c9c461fa49a73a71972807e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"be2a8fa1bd4a46ae9f55024edd50dff1","nonce":"10b81bac2c9c461fa49a73a71972807e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:20:55.683 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:20:55.683 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:20:55.683 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:20:55.684 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:20:55.700 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:20:55.700 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:20:55.710 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_7jQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****YL5Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:0000000D","TimeStamp":"2019-07-22T08:20:55.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:20:55.711 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"be2a8fa1bd4a46ae9f55024edd50dff1","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:20:56.638 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:20:56.639 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:20:56.639 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:20:56.640 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:20:56.641 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:20:56.641 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:20:56.641 +03:00 [DBG] Start discovery request
2019-07-22 11:20:56.735 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:20:56.736 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:20:56.737 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:20:56.737 +03:00 [DBG] Rendering check session result
2019-07-22 11:21:05.088 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:21:05.089 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:21:05.089 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:21:05.093 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:21:05.094 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:21:05.094 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:21:05.095 +03:00 [DBG] Start discovery request
2019-07-22 11:21:05.141 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:21:05.142 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:21:05.142 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:21:05.142 +03:00 [DBG] Start authorize request
2019-07-22 11:21:05.142 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:05.142 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:21:05.143 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:21:05.143 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:21:05.144 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d583e30782f949c192607518e3eb3689","UiLocales":null,"Nonce":"0e1ed61673444ab6b87d58b3eea9c6aa","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d583e30782f949c192607518e3eb3689","nonce":"0e1ed61673444ab6b87d58b3eea9c6aa"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:21:05.182 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:21:05.182 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:21:05.182 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:21:05.182 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:05.198 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:21:05.199 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:21:05.210 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****UjTA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****u1YA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:00000011","TimeStamp":"2019-07-22T08:21:05.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:21:05.211 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"d583e30782f949c192607518e3eb3689","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:21:08.874 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:21:08.875 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:21:08.875 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:21:08.876 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:21:08.876 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:21:08.876 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:21:08.877 +03:00 [DBG] Start discovery request
2019-07-22 11:21:08.905 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:21:08.906 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:21:08.906 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:21:08.907 +03:00 [DBG] Start authorize request
2019-07-22 11:21:08.907 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:08.907 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:21:08.907 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:21:08.907 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:21:08.909 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9fd931ffe0cb4ab59510f4ae25d25f76","UiLocales":null,"Nonce":"6d7d69fde57c4f16b7d8f9ca41a2d968","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9fd931ffe0cb4ab59510f4ae25d25f76","nonce":"6d7d69fde57c4f16b7d8f9ca41a2d968"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:21:08.928 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:21:08.928 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:21:08.928 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:21:08.928 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:08.944 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:21:08.944 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:21:08.953 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****cFyA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_gYg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:00000013","TimeStamp":"2019-07-22T08:21:08.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:21:08.954 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"9fd931ffe0cb4ab59510f4ae25d25f76","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:21:11.594 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:21:11.595 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:21:11.595 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:21:11.596 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:21:11.597 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:21:11.597 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:21:11.597 +03:00 [DBG] Start discovery request
2019-07-22 11:21:11.645 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:21:11.647 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:21:11.647 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:21:11.647 +03:00 [DBG] Start authorize request
2019-07-22 11:21:11.647 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:11.647 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:21:11.648 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:21:11.649 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:21:11.650 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"34cb8465ecc44e378099985a1ea61e17","UiLocales":null,"Nonce":"3e5ece561a9e44a9a3260f13dd49ca16","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"34cb8465ecc44e378099985a1ea61e17","nonce":"3e5ece561a9e44a9a3260f13dd49ca16"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:21:11.670 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:21:11.670 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:21:11.670 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:21:11.670 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:11.689 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:21:11.690 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:21:11.699 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_qhQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ZT-w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:00000015","TimeStamp":"2019-07-22T08:21:11.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:21:11.700 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"34cb8465ecc44e378099985a1ea61e17","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:21:14.371 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:21:14.371 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:21:14.371 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:21:14.372 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:21:14.373 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:21:14.373 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:21:14.373 +03:00 [DBG] Start discovery request
2019-07-22 11:21:14.409 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:21:14.409 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:21:14.409 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:21:14.410 +03:00 [DBG] Start authorize request
2019-07-22 11:21:14.417 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:14.417 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:21:14.417 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:21:14.418 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:21:14.418 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"01d819fe13984ab6a681adc816927923","UiLocales":null,"Nonce":"0c29f63dab6b43a8b8adfde2cb9e41e0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"01d819fe13984ab6a681adc816927923","nonce":"0c29f63dab6b43a8b8adfde2cb9e41e0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:21:14.440 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:21:14.440 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:21:14.440 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:21:14.440 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:14.456 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:21:14.456 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:21:14.464 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****izKw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****xZ8A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:00000017","TimeStamp":"2019-07-22T08:21:14.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:21:14.464 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"01d819fe13984ab6a681adc816927923","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:21:17.237 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:21:17.237 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:21:17.237 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:21:17.238 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:21:17.248 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:21:17.248 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:21:17.248 +03:00 [DBG] Start discovery request
2019-07-22 11:21:17.276 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:21:17.278 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:21:17.278 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:21:17.278 +03:00 [DBG] Start authorize request
2019-07-22 11:21:17.278 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:17.279 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:21:17.280 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:21:17.281 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:21:17.282 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"5552728081bf4be9a2d4685d501a0ae6","UiLocales":null,"Nonce":"6944b8eee63849f79a5690eddd4c7f61","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"5552728081bf4be9a2d4685d501a0ae6","nonce":"6944b8eee63849f79a5690eddd4c7f61"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:21:17.298 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:21:17.299 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:21:17.299 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:21:17.299 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:17.313 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:21:17.313 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:21:17.322 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ZeDA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****xNqw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:00000019","TimeStamp":"2019-07-22T08:21:17.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:21:17.323 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"5552728081bf4be9a2d4685d501a0ae6","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:21:19.867 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:21:19.867 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:21:19.867 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:21:19.869 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:21:19.870 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:21:19.870 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:21:19.870 +03:00 [DBG] Start discovery request
2019-07-22 11:21:19.899 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:21:19.900 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:21:19.901 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:21:19.901 +03:00 [DBG] Start authorize request
2019-07-22 11:21:19.901 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:19.901 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:21:19.901 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:21:19.902 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:21:19.902 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"700eb64fd4614c37ae3e2b142b9b955c","UiLocales":null,"Nonce":"00402cdd595d4e52ad2546477b3fd70a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"700eb64fd4614c37ae3e2b142b9b955c","nonce":"00402cdd595d4e52ad2546477b3fd70a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:21:19.921 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:21:19.921 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:21:19.921 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:21:19.921 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:19.939 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:21:19.939 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:21:19.947 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****6h0A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_6tQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:0000001B","TimeStamp":"2019-07-22T08:21:19.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:21:19.947 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"700eb64fd4614c37ae3e2b142b9b955c","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:21:22.524 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:21:22.524 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:21:22.525 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:21:22.527 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:21:22.527 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:21:22.528 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:21:22.528 +03:00 [DBG] Start discovery request
2019-07-22 11:21:22.558 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:21:22.559 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:21:22.559 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:21:22.559 +03:00 [DBG] Start authorize request
2019-07-22 11:21:22.560 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:22.560 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:21:22.560 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:21:22.560 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:21:22.561 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"bba8b01310ad4d11a8ce6a6d4e3235e8","UiLocales":null,"Nonce":"f1683f909d42430bbc72e7ee5fb8878b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"bba8b01310ad4d11a8ce6a6d4e3235e8","nonce":"f1683f909d42430bbc72e7ee5fb8878b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:21:22.579 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:21:22.580 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:21:22.580 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:21:22.580 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:22.594 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:21:22.595 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:21:22.604 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****bDSg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ydxw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:0000001D","TimeStamp":"2019-07-22T08:21:22.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:21:22.605 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"bba8b01310ad4d11a8ce6a6d4e3235e8","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:21:25.185 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:21:25.185 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:21:25.185 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:21:25.187 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:21:25.187 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:21:25.187 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:21:25.188 +03:00 [DBG] Start discovery request
2019-07-22 11:21:25.217 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:21:25.218 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:21:25.218 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:21:25.218 +03:00 [DBG] Start authorize request
2019-07-22 11:21:25.218 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:25.218 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:21:25.218 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:21:25.219 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:21:25.221 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"59af8bf7268d4299a67685150a4cd27a","UiLocales":null,"Nonce":"441d34d4781f4593b2e96e28330a497b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"59af8bf7268d4299a67685150a4cd27a","nonce":"441d34d4781f4593b2e96e28330a497b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:21:25.248 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:21:25.248 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:21:25.248 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:21:25.248 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:25.262 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:21:25.262 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:21:25.269 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_fsg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****4HHA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:0000001F","TimeStamp":"2019-07-22T08:21:25.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:21:25.270 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"59af8bf7268d4299a67685150a4cd27a","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:21:28.459 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:21:28.459 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:21:28.466 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:21:28.467 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:21:28.467 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:21:28.468 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:21:28.468 +03:00 [DBG] Start discovery request
2019-07-22 11:21:28.516 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:21:28.516 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:21:28.517 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:21:28.517 +03:00 [DBG] Start authorize request
2019-07-22 11:21:28.518 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:28.518 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:21:28.519 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:21:28.519 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:21:28.520 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"5101a32ef22d4daca25876c6c60104d4","UiLocales":null,"Nonce":"6fee1095616349e28700ce4e586598ed","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"5101a32ef22d4daca25876c6c60104d4","nonce":"6fee1095616349e28700ce4e586598ed"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:21:28.537 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:21:28.537 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:21:28.537 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:21:28.537 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:28.557 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:21:28.557 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:21:28.566 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****xerA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aOSA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:00000021","TimeStamp":"2019-07-22T08:21:28.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:21:28.566 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"5101a32ef22d4daca25876c6c60104d4","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:21:51.036 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:21:51.037 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:21:51.037 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:21:51.037 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:21:51.040 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:21:51.041 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:21:51.041 +03:00 [DBG] Start discovery request
2019-07-22 11:21:51.096 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:21:51.097 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:21:51.097 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:21:51.097 +03:00 [DBG] Start authorize request
2019-07-22 11:21:51.098 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:51.098 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:21:51.098 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:21:51.099 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:21:51.100 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"4d6bc3efc04b4d7fabad65be49464664","UiLocales":null,"Nonce":"21fcd0b0e2424b8e9981dc95dc34b9a3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"4d6bc3efc04b4d7fabad65be49464664","nonce":"21fcd0b0e2424b8e9981dc95dc34b9a3"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:21:51.116 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:21:51.116 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:21:51.116 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:21:51.116 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:21:51.129 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:21:51.129 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:21:51.137 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****HFtA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****1HMw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT8:00000023","TimeStamp":"2019-07-22T08:21:51.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:21:51.137 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"4d6bc3efc04b4d7fabad65be49464664","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:23:41.559 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:23:41.562 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:23:41.562 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:23:41.563 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:23:41.565 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:23:41.565 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:23:41.565 +03:00 [DBG] Start discovery request
2019-07-22 11:23:41.600 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:23:41.601 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:23:41.602 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:23:41.602 +03:00 [DBG] Start authorize request
2019-07-22 11:23:41.602 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:23:41.602 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:23:41.602 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:23:41.602 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:23:41.603 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ee2c85d2763d4bd4937e4732a1b9bc68","UiLocales":null,"Nonce":"1abe3ed5a2604a3a8d4dd13eca195851","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ee2c85d2763d4bd4937e4732a1b9bc68","nonce":"1abe3ed5a2604a3a8d4dd13eca195851"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:23:41.629 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:23:41.629 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:23:41.629 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:23:41.629 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:23:41.646 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:23:41.646 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:23:41.656 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****7StA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Zw4Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000002","TimeStamp":"2019-07-22T08:23:41.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:23:41.656 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"ee2c85d2763d4bd4937e4732a1b9bc68","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:23:44.445 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:23:44.445 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:23:44.445 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:23:44.446 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:23:44.447 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:23:44.448 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:23:44.448 +03:00 [DBG] Start discovery request
2019-07-22 11:23:44.487 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:23:44.487 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:23:44.487 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:23:44.487 +03:00 [DBG] Start authorize request
2019-07-22 11:23:44.488 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:23:44.488 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:23:44.488 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:23:44.490 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:23:44.491 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c59cec1c5f534932b8a5146c49dfd89f","UiLocales":null,"Nonce":"5d982027a0374367838f31afb78d4fde","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c59cec1c5f534932b8a5146c49dfd89f","nonce":"5d982027a0374367838f31afb78d4fde"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:23:44.511 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:23:44.511 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:23:44.511 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:23:44.511 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:23:44.529 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:23:44.529 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:23:44.537 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****pImg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****flIA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000004","TimeStamp":"2019-07-22T08:23:44.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:23:44.538 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"c59cec1c5f534932b8a5146c49dfd89f","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:23:49.172 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:23:49.172 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:23:49.173 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:23:49.174 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:23:49.175 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:23:49.175 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:23:49.175 +03:00 [DBG] Start discovery request
2019-07-22 11:23:49.213 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:23:49.214 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:23:49.214 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:23:49.215 +03:00 [DBG] Start authorize request
2019-07-22 11:23:49.215 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:23:49.215 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:23:49.215 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:23:49.216 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:23:49.216 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"5851db8dc48f4025951c0c355028e005","UiLocales":null,"Nonce":"917c1406af6043248d2f01c6d4e0d212","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"5851db8dc48f4025951c0c355028e005","nonce":"917c1406af6043248d2f01c6d4e0d212"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:23:49.235 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:23:49.235 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:23:49.235 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:23:49.235 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:23:49.257 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:23:49.259 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:23:49.269 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****rbQg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****v65A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000006","TimeStamp":"2019-07-22T08:23:49.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:23:49.270 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"5851db8dc48f4025951c0c355028e005","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:23:52.247 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:23:52.248 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:23:52.249 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:23:52.249 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:23:52.250 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:23:52.250 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:23:52.250 +03:00 [DBG] Start discovery request
2019-07-22 11:23:52.333 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:23:52.334 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:23:52.334 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:23:52.335 +03:00 [DBG] Start authorize request
2019-07-22 11:23:52.336 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:23:52.336 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:23:52.336 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:23:52.337 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:23:52.337 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2bcfd96fb6244ceb9be91da9b746ef7b","UiLocales":null,"Nonce":"0d5638cea57740179cf2e1f3564ece9a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2bcfd96fb6244ceb9be91da9b746ef7b","nonce":"0d5638cea57740179cf2e1f3564ece9a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:23:52.361 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:23:52.361 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:23:52.361 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:23:52.362 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:23:52.387 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:23:52.387 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:23:52.400 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Jo0g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****MLaw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000008","TimeStamp":"2019-07-22T08:23:52.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:23:52.401 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"2bcfd96fb6244ceb9be91da9b746ef7b","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:23:55.440 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:23:55.441 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:23:55.441 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:23:55.442 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:23:55.442 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:23:55.442 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:23:55.443 +03:00 [DBG] Start discovery request
2019-07-22 11:23:55.478 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:23:55.478 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:23:55.478 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:23:55.478 +03:00 [DBG] Start authorize request
2019-07-22 11:23:55.478 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:23:55.478 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:23:55.479 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:23:55.480 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:23:55.480 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"af5de6b77a32484fb1073aafcdf1a783","UiLocales":null,"Nonce":"8bfd54911f7949a2ab89b64396973bf2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"af5de6b77a32484fb1073aafcdf1a783","nonce":"8bfd54911f7949a2ab89b64396973bf2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:23:55.499 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:23:55.499 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:23:55.499 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:23:55.499 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:23:55.515 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:23:55.515 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:23:55.524 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****5PlA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****f6Qg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:0000000A","TimeStamp":"2019-07-22T08:23:55.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:23:55.525 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"af5de6b77a32484fb1073aafcdf1a783","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:00.214 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:00.214 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:00.214 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:00.218 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:00.218 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:00.218 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:00.218 +03:00 [DBG] Start discovery request
2019-07-22 11:24:00.260 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:00.261 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:00.261 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:00.261 +03:00 [DBG] Start authorize request
2019-07-22 11:24:00.261 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:00.261 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:00.262 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:00.262 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:00.263 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ea4eae6b994f4653b1ef3a009e9c7a04","UiLocales":null,"Nonce":"6c3e1a7161854f08ba3329234731e805","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ea4eae6b994f4653b1ef3a009e9c7a04","nonce":"6c3e1a7161854f08ba3329234731e805"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:00.282 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:00.283 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:00.284 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:00.284 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:00.299 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:00.299 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:00.307 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****vQqQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****R5iQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:0000000C","TimeStamp":"2019-07-22T08:24:00.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:00.308 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"ea4eae6b994f4653b1ef3a009e9c7a04","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:05.189 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:05.190 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:05.190 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:05.191 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:05.192 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:05.192 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:05.192 +03:00 [DBG] Start discovery request
2019-07-22 11:24:05.256 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:05.258 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:05.258 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:05.258 +03:00 [DBG] Start authorize request
2019-07-22 11:24:05.259 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:05.259 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:05.259 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:05.262 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:05.262 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"16ff8c27780846d5bb3d0642953f9ff7","UiLocales":null,"Nonce":"36566b6488584acfa4704ba0cf908dc4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"16ff8c27780846d5bb3d0642953f9ff7","nonce":"36566b6488584acfa4704ba0cf908dc4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:05.293 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:05.294 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:05.294 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:05.294 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:05.313 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:05.313 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:05.324 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ywdw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****7qmg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:0000000E","TimeStamp":"2019-07-22T08:24:05.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:05.324 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"16ff8c27780846d5bb3d0642953f9ff7","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:10.502 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:10.502 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:10.502 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:10.503 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:10.504 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:10.504 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:10.504 +03:00 [DBG] Start discovery request
2019-07-22 11:24:10.548 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:10.548 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:10.548 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:10.548 +03:00 [DBG] Start authorize request
2019-07-22 11:24:10.548 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:10.549 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:10.549 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:10.549 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:10.550 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"63958ffc13a44ccc9f55eef38b75c57e","UiLocales":null,"Nonce":"72a4b264d89f47da956545efa99f7a6b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"63958ffc13a44ccc9f55eef38b75c57e","nonce":"72a4b264d89f47da956545efa99f7a6b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:10.572 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:10.572 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:10.572 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:10.572 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:10.587 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:10.587 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:10.597 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****1jNw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8PTw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000010","TimeStamp":"2019-07-22T08:24:10.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:10.598 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"63958ffc13a44ccc9f55eef38b75c57e","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:16.404 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:16.404 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:16.404 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:16.405 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:16.406 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:16.407 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:16.407 +03:00 [DBG] Start discovery request
2019-07-22 11:24:16.513 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:16.514 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:16.514 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:16.514 +03:00 [DBG] Start authorize request
2019-07-22 11:24:16.514 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:16.514 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:16.514 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:16.515 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:16.515 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c015701c35424da4aff94e0e5ad16aeb","UiLocales":null,"Nonce":"0ee2ecb9308541daab2567da2ed2080f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c015701c35424da4aff94e0e5ad16aeb","nonce":"0ee2ecb9308541daab2567da2ed2080f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:16.541 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:16.541 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:16.541 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:16.542 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:16.561 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:16.561 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:16.572 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****yC5w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****cJxA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000012","TimeStamp":"2019-07-22T08:24:16.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:16.572 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"c015701c35424da4aff94e0e5ad16aeb","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:22.480 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:22.481 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:22.481 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:22.482 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:22.483 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:22.483 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:22.483 +03:00 [DBG] Start discovery request
2019-07-22 11:24:22.522 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:22.522 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:22.522 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:22.523 +03:00 [DBG] Start authorize request
2019-07-22 11:24:22.523 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:22.523 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:22.524 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:22.525 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:22.525 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d861b89be1e94eb290b2ce202d00dd2b","UiLocales":null,"Nonce":"58d7638584f948d88abcc6de034c0c32","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d861b89be1e94eb290b2ce202d00dd2b","nonce":"58d7638584f948d88abcc6de034c0c32"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:22.559 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:22.559 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:22.560 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:22.560 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:22.578 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:22.578 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:22.588 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****qEzg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Mjog","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000014","TimeStamp":"2019-07-22T08:24:22.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:22.588 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"d861b89be1e94eb290b2ce202d00dd2b","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:27.222 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:27.222 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:27.223 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:27.226 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:27.229 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:27.230 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:27.230 +03:00 [DBG] Start discovery request
2019-07-22 11:24:27.272 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:27.272 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:27.273 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:27.273 +03:00 [DBG] Start authorize request
2019-07-22 11:24:27.275 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:27.275 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:27.275 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:27.275 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:27.276 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6875cd919b804fc0808ab800f7a0c50b","UiLocales":null,"Nonce":"3d07d3b2274d454e9af70eb4851395cc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6875cd919b804fc0808ab800f7a0c50b","nonce":"3d07d3b2274d454e9af70eb4851395cc"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:27.293 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:27.294 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:27.294 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:27.294 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:27.309 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:27.309 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:27.319 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****fPag","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3OLw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000016","TimeStamp":"2019-07-22T08:24:27.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:27.320 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"6875cd919b804fc0808ab800f7a0c50b","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:31.653 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:31.653 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:31.653 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:31.654 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:31.654 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:31.655 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:31.655 +03:00 [DBG] Start discovery request
2019-07-22 11:24:31.692 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:31.693 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:31.694 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:31.694 +03:00 [DBG] Start authorize request
2019-07-22 11:24:31.694 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:31.694 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:31.695 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:31.695 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:31.696 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f2d98002844543eca1934ed3d0cf8ef6","UiLocales":null,"Nonce":"836c723968914f0bb27162376b4b02a7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f2d98002844543eca1934ed3d0cf8ef6","nonce":"836c723968914f0bb27162376b4b02a7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:31.715 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:31.715 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:31.716 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:31.716 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:31.732 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:31.732 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:31.741 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****4XgA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aVOA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000018","TimeStamp":"2019-07-22T08:24:31.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:31.741 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"f2d98002844543eca1934ed3d0cf8ef6","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:35.957 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:35.957 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:35.957 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:35.958 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:35.959 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:35.959 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:35.959 +03:00 [DBG] Start discovery request
2019-07-22 11:24:36.011 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:36.011 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:36.012 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:36.012 +03:00 [DBG] Start authorize request
2019-07-22 11:24:36.012 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:36.012 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:36.012 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:36.013 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:36.013 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cbaa5a68f5844598aca7fa14510fc386","UiLocales":null,"Nonce":"3bae04b8cc1241fc86f9dbd67ff2ad83","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cbaa5a68f5844598aca7fa14510fc386","nonce":"3bae04b8cc1241fc86f9dbd67ff2ad83"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:36.032 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:36.033 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:36.033 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:36.033 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:36.050 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:36.050 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:36.057 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_lKg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****EYmA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:0000001A","TimeStamp":"2019-07-22T08:24:36.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:36.057 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"cbaa5a68f5844598aca7fa14510fc386","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:40.969 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:40.969 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:40.969 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:40.970 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:40.971 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:40.971 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:40.971 +03:00 [DBG] Start discovery request
2019-07-22 11:24:41.014 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:41.016 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:41.016 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:41.016 +03:00 [DBG] Start authorize request
2019-07-22 11:24:41.016 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:41.016 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:41.017 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:41.017 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:41.018 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b73714d7704f4de3b73f1c48006b8fc1","UiLocales":null,"Nonce":"98887514484244ba96bd00348eac615a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b73714d7704f4de3b73f1c48006b8fc1","nonce":"98887514484244ba96bd00348eac615a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:41.041 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:41.042 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:41.042 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:41.042 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:41.060 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:41.061 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:41.069 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****UoLg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****yEqg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:0000001C","TimeStamp":"2019-07-22T08:24:41.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:41.070 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"b73714d7704f4de3b73f1c48006b8fc1","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:45.247 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:45.248 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:45.248 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:45.249 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:45.250 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:45.250 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:45.250 +03:00 [DBG] Start discovery request
2019-07-22 11:24:45.297 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:45.297 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:45.297 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:45.298 +03:00 [DBG] Start authorize request
2019-07-22 11:24:45.298 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:45.298 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:45.300 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:45.304 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:45.305 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"84baa642afbb4615b6ee12dab22e44a6","UiLocales":null,"Nonce":"f95cf519dae24801b79ab5c78457480d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"84baa642afbb4615b6ee12dab22e44a6","nonce":"f95cf519dae24801b79ab5c78457480d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:45.322 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:45.322 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:45.322 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:45.322 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:45.335 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:45.336 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:45.343 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****WJ0w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****JKcw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:0000001E","TimeStamp":"2019-07-22T08:24:45.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:45.344 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"84baa642afbb4615b6ee12dab22e44a6","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:49.935 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:49.935 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:49.935 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:49.936 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:49.937 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:49.937 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:49.937 +03:00 [DBG] Start discovery request
2019-07-22 11:24:49.979 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:49.979 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:49.979 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:49.979 +03:00 [DBG] Start authorize request
2019-07-22 11:24:49.980 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:49.980 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:49.980 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:49.982 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:49.983 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0c85d2922195492993975eee5872929b","UiLocales":null,"Nonce":"b7ebb98f29b8408e9f24153041dad16c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0c85d2922195492993975eee5872929b","nonce":"b7ebb98f29b8408e9f24153041dad16c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:50.000 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:50.000 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:50.000 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:50.001 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:50.014 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:50.015 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:50.023 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****qmCQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****P45Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000020","TimeStamp":"2019-07-22T08:24:50.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:50.023 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"0c85d2922195492993975eee5872929b","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:54.296 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:54.296 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:54.296 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:54.298 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:54.298 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:54.299 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:54.299 +03:00 [DBG] Start discovery request
2019-07-22 11:24:54.340 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:54.344 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:54.345 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:54.345 +03:00 [DBG] Start authorize request
2019-07-22 11:24:54.345 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:54.345 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:54.345 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:54.346 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:54.347 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a49575f731a146b38fb6838be0df276b","UiLocales":null,"Nonce":"1bb2a56af23a41119c6edaa6b260960b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a49575f731a146b38fb6838be0df276b","nonce":"1bb2a56af23a41119c6edaa6b260960b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:54.366 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:54.366 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:54.366 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:54.366 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:54.379 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:54.379 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:54.386 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****WWGA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****77uw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000022","TimeStamp":"2019-07-22T08:24:54.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:54.386 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"a49575f731a146b38fb6838be0df276b","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:24:58.926 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:24:58.927 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:24:58.927 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:24:58.927 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:24:58.928 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:24:58.928 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:24:58.928 +03:00 [DBG] Start discovery request
2019-07-22 11:24:58.973 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:24:58.973 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:24:58.974 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:24:58.974 +03:00 [DBG] Start authorize request
2019-07-22 11:24:58.974 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:58.974 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:24:58.975 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:24:58.975 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:24:58.976 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"41a48262fe0d43f0824bbd325b6aa4bb","UiLocales":null,"Nonce":"cc4c3e792edc49e4aa604b3c30971d6e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"41a48262fe0d43f0824bbd325b6aa4bb","nonce":"cc4c3e792edc49e4aa604b3c30971d6e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:24:58.995 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:24:58.995 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:24:58.995 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:24:58.995 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:24:59.010 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:24:59.010 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:24:59.019 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****4C2A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****R1Hg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000024","TimeStamp":"2019-07-22T08:24:59.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:24:59.019 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"41a48262fe0d43f0824bbd325b6aa4bb","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:25:03.791 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:25:03.791 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:25:03.791 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:25:03.792 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:25:03.792 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:25:03.793 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:25:03.793 +03:00 [DBG] Start discovery request
2019-07-22 11:25:03.831 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:25:03.831 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:25:03.832 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:25:03.832 +03:00 [DBG] Start authorize request
2019-07-22 11:25:03.832 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:03.832 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:25:03.832 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:25:03.833 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:25:03.833 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"7afaef18e3b3407f9376bd5805f85da3","UiLocales":null,"Nonce":"0084a416078d4e0a885a53639f8a2296","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"7afaef18e3b3407f9376bd5805f85da3","nonce":"0084a416078d4e0a885a53639f8a2296"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:25:03.850 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:25:03.850 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:25:03.851 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:25:03.851 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:03.866 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:25:03.866 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:25:03.875 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****1w4Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****laPg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000026","TimeStamp":"2019-07-22T08:25:03.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:25:03.875 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"7afaef18e3b3407f9376bd5805f85da3","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:25:08.186 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:25:08.186 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:25:08.186 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:25:08.187 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:25:08.188 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:25:08.188 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:25:08.188 +03:00 [DBG] Start discovery request
2019-07-22 11:25:08.236 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:25:08.236 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:25:08.237 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:25:08.237 +03:00 [DBG] Start authorize request
2019-07-22 11:25:08.237 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:08.237 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:25:08.238 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:25:08.238 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:25:08.239 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e5d6fb54910c41b6a55b0c5bc38b6bc9","UiLocales":null,"Nonce":"33c65c96598747948b7f231ce67465ab","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e5d6fb54910c41b6a55b0c5bc38b6bc9","nonce":"33c65c96598747948b7f231ce67465ab"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:25:08.260 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:25:08.260 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:25:08.260 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:25:08.260 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:08.275 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:25:08.276 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:25:08.284 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****V7WA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gRyw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000028","TimeStamp":"2019-07-22T08:25:08.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:25:08.284 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"e5d6fb54910c41b6a55b0c5bc38b6bc9","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:25:12.513 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:25:12.513 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:25:12.513 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:25:12.513 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:25:12.514 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:25:12.514 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:25:12.514 +03:00 [DBG] Start discovery request
2019-07-22 11:25:12.550 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:25:12.551 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:25:12.552 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:25:12.552 +03:00 [DBG] Start authorize request
2019-07-22 11:25:12.552 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:12.552 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:25:12.552 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:25:12.553 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:25:12.553 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b0021dda6c6b48138f02a78cad984f40","UiLocales":null,"Nonce":"3feb36da2fda4f0cbde4001d6b894dc5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b0021dda6c6b48138f02a78cad984f40","nonce":"3feb36da2fda4f0cbde4001d6b894dc5"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:25:12.571 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:25:12.572 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:25:12.572 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:25:12.572 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:12.589 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:25:12.589 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:25:12.598 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****cqnw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****XjUg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:0000002A","TimeStamp":"2019-07-22T08:25:12.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:25:12.598 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"b0021dda6c6b48138f02a78cad984f40","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:25:16.774 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:25:16.775 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:25:16.775 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:25:16.775 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:25:16.777 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:25:16.777 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:25:16.778 +03:00 [DBG] Start discovery request
2019-07-22 11:25:16.827 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:25:16.827 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:25:16.827 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:25:16.827 +03:00 [DBG] Start authorize request
2019-07-22 11:25:16.828 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:16.828 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:25:16.828 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:25:16.829 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:25:16.829 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"019f9bcd8a644606893b249bcb03b49c","UiLocales":null,"Nonce":"862d2bc8fa1a41a1adb5662bb8cb2ffb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"019f9bcd8a644606893b249bcb03b49c","nonce":"862d2bc8fa1a41a1adb5662bb8cb2ffb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:25:16.854 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:25:16.854 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:25:16.855 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:25:16.855 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:16.870 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:25:16.871 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:25:16.879 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****cXqg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****A0BQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:0000002C","TimeStamp":"2019-07-22T08:25:16.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:25:16.880 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"019f9bcd8a644606893b249bcb03b49c","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:25:24.233 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:25:24.234 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:25:24.234 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:25:24.234 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:25:24.236 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:25:24.237 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:25:24.237 +03:00 [DBG] Start discovery request
2019-07-22 11:25:24.607 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:25:24.608 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:25:24.608 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:25:24.608 +03:00 [DBG] Start authorize request
2019-07-22 11:25:24.609 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:24.609 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:25:24.611 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:25:24.612 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:25:24.612 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"836f669ddc7544bb99e43b1a42258dfe","UiLocales":null,"Nonce":"b323dedb753543bbb29b40dbcd0140dd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"836f669ddc7544bb99e43b1a42258dfe","nonce":"b323dedb753543bbb29b40dbcd0140dd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:25:24.630 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:25:24.630 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:25:24.630 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:25:24.630 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:24.682 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:25:24.683 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:25:24.696 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****lIBg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****d33Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:0000002E","TimeStamp":"2019-07-22T08:25:24.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:25:24.696 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"836f669ddc7544bb99e43b1a42258dfe","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:25:39.136 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:25:39.137 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:25:39.137 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:25:39.137 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:25:39.138 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:25:39.138 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:25:39.138 +03:00 [DBG] Start discovery request
2019-07-22 11:25:39.175 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:25:39.176 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:25:39.176 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:25:39.176 +03:00 [DBG] Start authorize request
2019-07-22 11:25:39.176 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:39.177 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:25:39.177 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:25:39.178 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:25:39.179 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0a553208a30f4193bd9a199d410d9407","UiLocales":null,"Nonce":"96e892e529ed4ceaaf032f1bb37f3fdd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0a553208a30f4193bd9a199d410d9407","nonce":"96e892e529ed4ceaaf032f1bb37f3fdd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:25:39.200 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:25:39.200 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:25:39.200 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:25:39.200 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:39.217 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:25:39.217 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:25:39.229 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****1yYw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****f1gw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000030","TimeStamp":"2019-07-22T08:25:39.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:25:39.230 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"0a553208a30f4193bd9a199d410d9407","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:25:48.397 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:25:48.400 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:25:48.400 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:25:48.401 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:25:48.401 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:25:48.401 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:25:48.401 +03:00 [DBG] Start discovery request
2019-07-22 11:25:48.435 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:25:48.436 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:25:48.436 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:25:48.436 +03:00 [DBG] Start authorize request
2019-07-22 11:25:48.437 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:48.437 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:25:48.437 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:25:48.438 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:25:48.438 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f5ecc0901f4a424fbd130165d392f918","UiLocales":null,"Nonce":"82acc94e9c6d4af8b630687a5449fef4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2d7e298b7f25f45e907608aed320909","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f5ecc0901f4a424fbd130165d392f918","nonce":"82acc94e9c6d4af8b630687a5449fef4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:25:48.457 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:25:48.457 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:25:48.457 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:25:48.457 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:25:48.471 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:25:48.471 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:25:48.478 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****y3dQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****cayQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000032","TimeStamp":"2019-07-22T08:25:48.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:25:48.478 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"f5ecc0901f4a424fbd130165d392f918","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:26:14.758 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:26:14.758 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:26:14.758 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:26:14.758 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:26:14.759 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:26:14.759 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:26:14.759 +03:00 [DBG] Start discovery request
2019-07-22 11:26:14.787 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:26:14.789 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:26:14.789 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:26:14.790 +03:00 [DBG] Start authorize request
2019-07-22 11:26:14.790 +03:00 [DBG] No user present in authorize request
2019-07-22 11:26:14.790 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:26:14.790 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:26:14.790 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:26:14.791 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cf161cf66ae74267b335594f6cef5a64","UiLocales":null,"Nonce":"eb3521968c124eff905d496c145700fc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cf161cf66ae74267b335594f6cef5a64","nonce":"eb3521968c124eff905d496c145700fc"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:26:14.791 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 11:26:14.855 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:26:14.855 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:26:14.856 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:26:14.857 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:26:17.230 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 11:26:17.243 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:26:17.244 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:26:17.244 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:26:17.329 +03:00 [DBG] Augmenting SignInContext
2019-07-22 11:26:17.329 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 11:26:17.329 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 11:26:17.329 +03:00 [DBG] Adding auth_time claim with value: 1563783977
2019-07-22 11:26:17.339 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 11:26:17.339 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000036","TimeStamp":"2019-07-22T08:26:17.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 11:26:17.340 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:26:17.416 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 11:26:17.418 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 11:26:17.418 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 11:26:17.419 +03:00 [DBG] Start authorize callback request
2019-07-22 11:26:17.421 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:26:17.421 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:26:17.421 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:26:17.422 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:26:17.422 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cf161cf66ae74267b335594f6cef5a64","UiLocales":null,"Nonce":"eb3521968c124eff905d496c145700fc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"529659e944c66cccb7ebcc9af3175746","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cf161cf66ae74267b335594f6cef5a64","nonce":"eb3521968c124eff905d496c145700fc"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:26:17.437 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:26:17.438 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:26:17.438 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:26:17.438 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:26:17.453 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:26:17.454 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:26:17.463 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****R4FQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Y1pg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000037","TimeStamp":"2019-07-22T08:26:17.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:26:17.463 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"cf161cf66ae74267b335594f6cef5a64","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:26:17.463 +03:00 [DBG] Augmenting SignInContext
2019-07-22 11:26:17.464 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 11:26:27.760 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:26:27.760 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:26:27.760 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:26:27.761 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:26:27.762 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:26:27.762 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:26:27.762 +03:00 [DBG] Start discovery request
2019-07-22 11:26:27.787 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:26:27.787 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:26:27.787 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:26:27.787 +03:00 [DBG] Start authorize request
2019-07-22 11:26:27.787 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:26:27.788 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:26:27.788 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:26:27.788 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:26:27.789 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"643780bb64d94d32819d73b72fb39ed1","UiLocales":null,"Nonce":"1d9653ff7f53496a83a0971d467814d2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"529659e944c66cccb7ebcc9af3175746","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"643780bb64d94d32819d73b72fb39ed1","nonce":"1d9653ff7f53496a83a0971d467814d2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:26:27.808 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:26:27.808 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:26:27.808 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:26:27.808 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:26:27.823 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:26:27.823 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:26:27.833 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****2cvA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****yn8w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:00000039","TimeStamp":"2019-07-22T08:26:27.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:26:27.833 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"643780bb64d94d32819d73b72fb39ed1","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:26:56.930 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:26:56.930 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:26:56.931 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:26:56.931 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:26:56.933 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:26:56.933 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:26:56.933 +03:00 [DBG] Start discovery request
2019-07-22 11:26:56.967 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:26:56.968 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:26:56.968 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:26:56.968 +03:00 [DBG] Start authorize request
2019-07-22 11:26:56.968 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:26:56.969 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:26:56.969 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:26:56.971 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:26:56.971 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"06093c6af86a4371b0dc1249b465fec3","UiLocales":null,"Nonce":"a3b23d9d864340898bff845788c92a3d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"529659e944c66cccb7ebcc9af3175746","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"06093c6af86a4371b0dc1249b465fec3","nonce":"a3b23d9d864340898bff845788c92a3d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:26:56.990 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:26:56.990 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:26:56.990 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:26:56.990 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:26:57.006 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:26:57.006 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:26:57.014 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****enRA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****TXig","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KT9:0000003B","TimeStamp":"2019-07-22T08:26:57.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:26:57.014 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"06093c6af86a4371b0dc1249b465fec3","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:26:57.807 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:26:57.807 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:26:57.808 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:26:57.810 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:26:57.811 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:26:57.811 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:26:57.811 +03:00 [DBG] Start discovery request
2019-07-22 11:26:57.895 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 11:26:57.895 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:26:57.896 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:26:57.896 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 11:26:57.898 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 11:26:57.898 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 11:26:57.899 +03:00 [DBG] Start key discovery request
2019-07-22 11:26:58.002 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:26:58.003 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:26:58.004 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:26:58.025 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:26:58.025 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:26:58.025 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:26:58.026 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 11:26:58.028 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 11:26:58.028 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 11:26:58.028 +03:00 [DBG] Start userinfo request
2019-07-22 11:26:58.028 +03:00 [DBG] Bearer token found in header
2019-07-22 11:26:58.036 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:26:58.036 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:26:58.041 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:26:58.042 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563784016,"exp":1563787616,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563783977,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:26:58.043 +03:00 [DBG] Creating userinfo response
2019-07-22 11:26:58.043 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:26:58.043 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:26:58.043 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 11:26:58.043 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:26:58.053 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 11:26:58.053 +03:00 [DBG] End userinfo request
2019-07-22 11:26:58.109 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:26:58.109 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:26:58.110 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:26:58.110 +03:00 [DBG] Rendering check session result
2019-07-22 11:28:16.038 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:28:16.039 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:28:16.039 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:28:16.041 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:28:16.042 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:28:16.042 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:28:16.042 +03:00 [DBG] Start discovery request
2019-07-22 11:28:34.570 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:28:34.574 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:28:34.574 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:28:34.574 +03:00 [DBG] Rendering check session result
2019-07-22 11:28:37.534 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 11:28:37.537 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 11:28:37.537 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 11:28:37.538 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:28:37.538 +03:00 [DBG] Start end session request validation
2019-07-22 11:28:37.538 +03:00 [DBG] Start identity token validation
2019-07-22 11:28:37.539 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:28:37.539 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 11:28:37.551 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:28:37.552 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563784017,"exp":1563784317,"iss":"http://localhost:5000","aud":"spa","nonce":"a3b23d9d864340898bff845788c92a3d","iat":1563784017,"at_hash":"J7e97gNFgay55sM3sEqYzw","sid":"529659e944c66cccb7ebcc9af3175746","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563783977,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:28:37.553 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3ODQwMTcsImV4cCI6MTU2Mzc4NDMxNywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJhM2IyM2Q5ZDg2NDM0MDg5OGJmZjg0NTc4OGM5MmEzZCIsImlhdCI6MTU2Mzc4NDAxNywiYXRfaGFzaCI6Iko3ZTk3Z05GZ2F5NTVzTTNzRXFZenciLCJzaWQiOiI1Mjk2NTllOTQ0YzY2Y2NjYjdlYmNjOWFmMzE3NTc0NiIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc4Mzk3NywiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.UuCzGH3GMl1k76oOR5aqLmkPlLATt7OkwLX7LDgfTI5J5s9cqLoU8wFxXMSQRfG2ocH6mYOdv1P0g6xkYJbNYIWekYgIfnJBIqK-X0fm5OFW7adgoyr3t2qGqypjPfPtEyvwASO1QzynyMb98ePQDtE0LSgt4XdNYg6cK19Y4rdEtCEQcNeKgkPzULcR-wlUdQXqP-awg37IkOcLMQuxjcNykRU2U1yXfjfE4QZmrCudWt6ocpXxdAoyrHFx0KUF0oJSwthi4_8YxEm5pkIq6pFkjxwIO7MkTZgK1x_qysgZrNE1DxEoTqsCBLC91QxgGYjZuR-O0B-Vi4T9lCenRA","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 11:28:37.553 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 11:28:59.624 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:28:59.624 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:28:59.624 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:28:59.625 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:28:59.625 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:28:59.625 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:28:59.625 +03:00 [DBG] Start discovery request
2019-07-22 11:28:59.656 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:28:59.657 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:28:59.658 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:28:59.658 +03:00 [DBG] Start authorize request
2019-07-22 11:28:59.658 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:28:59.658 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:28:59.658 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:28:59.659 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:28:59.661 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"dad39a43ffc3457698801fa3fd613c2e","UiLocales":null,"Nonce":"9795cf7491b0440e9604b19ea884c760","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"529659e944c66cccb7ebcc9af3175746","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"dad39a43ffc3457698801fa3fd613c2e","nonce":"9795cf7491b0440e9604b19ea884c760"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:28:59.678 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:28:59.678 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:28:59.678 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:28:59.678 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:28:59.692 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:28:59.692 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:28:59.699 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****BEeQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****w7pA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOECU2F4KTA:00000006","TimeStamp":"2019-07-22T08:28:59.0000000Z","ProcessId":12372,"LocalIpAddress":"127.0.0.1:37539","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:28:59.701 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"dad39a43ffc3457698801fa3fd613c2e","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:29:01.378 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:29:01.383 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:29:01.384 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:29:01.385 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:29:01.385 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:29:01.386 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:29:01.386 +03:00 [DBG] Start discovery request
2019-07-22 11:29:01.459 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 11:29:01.467 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:29:01.468 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:29:01.469 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 11:29:01.469 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 11:29:01.469 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 11:29:01.469 +03:00 [DBG] Start key discovery request
2019-07-22 11:29:01.532 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:29:01.532 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:29:01.532 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:29:01.544 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:29:01.545 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:29:01.545 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:29:01.546 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 11:29:01.546 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 11:29:01.546 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 11:29:01.546 +03:00 [DBG] Start userinfo request
2019-07-22 11:29:01.546 +03:00 [DBG] Bearer token found in header
2019-07-22 11:29:01.552 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:29:01.552 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:29:01.558 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:29:01.558 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563784139,"exp":1563787739,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563783977,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:29:01.559 +03:00 [DBG] Creating userinfo response
2019-07-22 11:29:01.559 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:29:01.559 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:29:01.559 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 11:29:01.559 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:29:01.566 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 11:29:01.566 +03:00 [DBG] End userinfo request
2019-07-22 11:29:01.601 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:29:01.601 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:29:01.601 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:29:01.602 +03:00 [DBG] Rendering check session result
2019-07-22 11:29:14.686 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 11:29:14.687 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 11:29:14.687 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 11:29:14.687 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:29:14.689 +03:00 [DBG] Start end session request validation
2019-07-22 11:29:14.689 +03:00 [DBG] Start identity token validation
2019-07-22 11:29:14.690 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:29:14.690 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 11:29:14.702 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:29:14.703 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563784139,"exp":1563784439,"iss":"http://localhost:5000","aud":"spa","nonce":"9795cf7491b0440e9604b19ea884c760","iat":1563784139,"at_hash":"csas0QU8BMwpZUGl2D8UGg","sid":"529659e944c66cccb7ebcc9af3175746","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563783977,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:29:14.703 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3ODQxMzksImV4cCI6MTU2Mzc4NDQzOSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI5Nzk1Y2Y3NDkxYjA0NDBlOTYwNGIxOWVhODg0Yzc2MCIsImlhdCI6MTU2Mzc4NDEzOSwiYXRfaGFzaCI6ImNzYXMwUVU4Qk13cFpVR2wyRDhVR2ciLCJzaWQiOiI1Mjk2NTllOTQ0YzY2Y2NjYjdlYmNjOWFmMzE3NTc0NiIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc4Mzk3NywiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.WqdCglKFZpwiE77tkSAykwjJFdqsnEOupfs1I5JJinarRKNETh-PNAqAFaiNLbhGMqtBzwRGuHBhOs_W4fPGHsnvhIMAurLMgenRub77W5gCru_4fLFGUIK8xUOj5PRWvwDFz96f4ZNTUniVxuL5cJmjB94oXWKCBwTIG6nzChL63vNjWnl3peo3eGnhJ-pNmwKNE_O952-zbu3Cx8gv0SeCUvwreVwNJXdeh7YrfHlSQUaOd53unMWEhx216Otn9gV7zar6KGfb3KD0IE7SpXqHB_rUK6pmwMEv7TRUTLiDVUFGEsR2R6fEO8UN9oSiBKWCfaz1eu-M0rylG7BEeQ","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 11:29:14.703 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 11:35:31.221 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 11:35:31.362 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 11:35:31.369 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 11:35:31.369 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 11:35:31.369 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 11:35:31.369 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 11:35:31.369 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 11:35:33.703 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 11:35:33.763 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 11:35:33.764 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 11:35:33.764 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 11:35:33.764 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 11:35:33.764 +03:00 [DBG] Error Url: /home/error
2019-07-22 11:35:33.764 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 11:35:51.240 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:35:51.250 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:35:51.250 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:35:51.258 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:35:51.270 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:35:51.270 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:35:51.279 +03:00 [DBG] Start discovery request
2019-07-22 11:35:51.449 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:35:51.459 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:35:51.459 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:35:51.475 +03:00 [DBG] Start authorize request
2019-07-22 11:35:51.504 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:35:51.520 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:35:51.559 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:35:51.683 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:35:51.709 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ce848099b2734a5aa4de7c4ff8231cb1","UiLocales":null,"Nonce":"9252816e33284285aa50a8ce08fb9531","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"529659e944c66cccb7ebcc9af3175746","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ce848099b2734a5aa4de7c4ff8231cb1","nonce":"9252816e33284285aa50a8ce08fb9531"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:35:55.614 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 11:35:55.614 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 11:35:55.614 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 11:35:55.880 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:35:55.881 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:35:55.881 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:35:55.886 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:35:57.858 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 11:35:58.042 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:35:58.043 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:35:58.043 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:35:58.102 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEFU7LUFRM:00000003","TimeStamp":"2019-07-22T08:35:58.0000000Z","ProcessId":1408,"LocalIpAddress":"127.0.0.1:18947","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 11:35:58.158 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:35:58.176 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 11:35:58.177 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 11:35:58.178 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 11:35:58.192 +03:00 [DBG] Start authorize callback request
2019-07-22 11:35:58.206 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:35:58.207 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:35:58.207 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:35:58.207 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:35:58.207 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ce848099b2734a5aa4de7c4ff8231cb1","UiLocales":null,"Nonce":"9252816e33284285aa50a8ce08fb9531","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"529659e944c66cccb7ebcc9af3175746","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ce848099b2734a5aa4de7c4ff8231cb1","nonce":"9252816e33284285aa50a8ce08fb9531"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:35:58.244 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 11:35:58.244 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 11:35:58.297 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 11:35:58.304 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 11:35:58.320 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:35:58.389 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:35:58.441 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:35:58.444 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:36:00.365 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:36:00.365 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:36:00.400 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****XFdA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****sgdQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEFU7LUFRN:00000004","TimeStamp":"2019-07-22T08:36:00.0000000Z","ProcessId":1408,"LocalIpAddress":"127.0.0.1:18947","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:36:00.405 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"ce848099b2734a5aa4de7c4ff8231cb1","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:36:02.430 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:36:02.432 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:36:02.432 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:36:02.435 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:36:02.436 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:36:02.436 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:36:02.436 +03:00 [DBG] Start discovery request
2019-07-22 11:36:02.621 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 11:36:02.622 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:36:02.622 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:36:02.622 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 11:36:02.624 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 11:36:02.624 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 11:36:02.638 +03:00 [DBG] Start key discovery request
2019-07-22 11:36:02.743 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:36:02.747 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:36:02.748 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:36:02.770 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:36:02.770 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:36:02.770 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:36:02.771 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 11:36:02.779 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 11:36:02.779 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 11:36:02.800 +03:00 [DBG] Start userinfo request
2019-07-22 11:36:02.814 +03:00 [DBG] Bearer token found in header
2019-07-22 11:36:02.895 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:36:02.907 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:36:02.915 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:36:02.919 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563784559,"exp":1563788159,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563783977,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:36:02.953 +03:00 [DBG] Creating userinfo response
2019-07-22 11:36:02.963 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:36:02.971 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:36:02.981 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 11:36:02.981 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:36:03.013 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 11:36:03.020 +03:00 [DBG] End userinfo request
2019-07-22 11:36:03.241 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:36:03.243 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:36:03.243 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:36:03.246 +03:00 [DBG] Rendering check session result
2019-07-22 11:36:08.808 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 11:36:08.816 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 11:36:08.816 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 11:36:08.833 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:36:08.853 +03:00 [DBG] Start end session request validation
2019-07-22 11:36:08.871 +03:00 [DBG] Start identity token validation
2019-07-22 11:36:08.873 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:36:08.874 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 11:36:08.887 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:36:08.889 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563784560,"exp":1563784860,"iss":"http://localhost:5000","aud":"spa","nonce":"9252816e33284285aa50a8ce08fb9531","iat":1563784560,"at_hash":"y2Rsp2d2BLL-8bD7-r2cZA","sid":"529659e944c66cccb7ebcc9af3175746","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563783977,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:36:08.898 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3ODQ1NjAsImV4cCI6MTU2Mzc4NDg2MCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI5MjUyODE2ZTMzMjg0Mjg1YWE1MGE4Y2UwOGZiOTUzMSIsImlhdCI6MTU2Mzc4NDU2MCwiYXRfaGFzaCI6InkyUnNwMmQyQkxMLThiRDctcjJjWkEiLCJzaWQiOiI1Mjk2NTllOTQ0YzY2Y2NjYjdlYmNjOWFmMzE3NTc0NiIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc4Mzk3NywiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.EZ6llgVzk2T8e4AtdVfaPx__36vfY3KSZn2n0G9stpd_6MDlFW4ky6IIeWSgwH12vN9kReEmUDKL5VcVsAoC7eMNGbDv9n7BPnWy0fJDLF4dJqhlHf0QA-xR0FnQLDOOcbwERH4sXxSbC_OtgtFHmqSX6RyUeViSqo2M1XL7kcISMYSF8m-4prYZ4z3yssbj5M0AfTYoNhZt7iK1uGjShUvB7JU3wDNDExA8A_spxXla9qiDCxAraHFvaAwjVQLoLxJzjs2VGrVXwKSUCWcKSW5kG7d5LcUW69OhLGSjegJPDfrgfUpJktnZu6_iDrSfP41z-z_ZyVmTE7BzjKXFdA","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 11:36:08.899 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 11:44:48.763 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 11:44:48.835 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 11:44:48.841 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 11:44:48.842 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 11:44:48.842 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 11:44:48.842 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 11:44:48.842 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 11:44:50.174 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:44:50.204 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:44:50.204 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:44:50.334 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 11:44:50.334 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 11:44:50.335 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 11:44:50.335 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 11:44:50.335 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 11:44:50.335 +03:00 [DBG] Error Url: /home/error
2019-07-22 11:44:50.335 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 11:44:50.416 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:44:51.853 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:44:51.854 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:44:51.868 +03:00 [DBG] Start discovery request
2019-07-22 11:44:52.181 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:44:52.201 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:44:52.201 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:44:52.213 +03:00 [DBG] Start authorize request
2019-07-22 11:44:52.262 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:44:52.282 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:44:52.329 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:44:52.759 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:44:52.820 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ab7158c4643c4a8bb253a57a2feb98d7","UiLocales":null,"Nonce":"105bfc32bf8648edafba9e8625695606","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"529659e944c66cccb7ebcc9af3175746","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ab7158c4643c4a8bb253a57a2feb98d7","nonce":"105bfc32bf8648edafba9e8625695606"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:44:57.283 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 11:44:57.284 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 11:44:57.284 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 11:44:57.532 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:44:57.532 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:44:57.533 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:44:57.537 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:45:00.554 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 11:45:00.729 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:45:00.729 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:45:00.730 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:45:00.818 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEG3DLC17U:00000002","TimeStamp":"2019-07-22T08:45:00.0000000Z","ProcessId":12328,"LocalIpAddress":"127.0.0.1:37050","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 11:45:00.883 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:45:00.899 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 11:45:00.901 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 11:45:00.901 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 11:45:00.928 +03:00 [DBG] Start authorize callback request
2019-07-22 11:45:00.953 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:45:00.953 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:45:00.954 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:45:00.955 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:45:00.969 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ab7158c4643c4a8bb253a57a2feb98d7","UiLocales":null,"Nonce":"105bfc32bf8648edafba9e8625695606","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"529659e944c66cccb7ebcc9af3175746","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ab7158c4643c4a8bb253a57a2feb98d7","nonce":"105bfc32bf8648edafba9e8625695606"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:45:01.019 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 11:45:01.020 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 11:45:01.041 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 11:45:01.045 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 11:45:01.063 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:45:01.119 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:45:01.146 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:45:01.147 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:45:01.916 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:45:01.916 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:45:01.936 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****JesA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kKIA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEG3DLC180:00000003","TimeStamp":"2019-07-22T08:45:01.0000000Z","ProcessId":12328,"LocalIpAddress":"127.0.0.1:37050","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:45:01.939 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"ab7158c4643c4a8bb253a57a2feb98d7","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:45:03.292 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:45:03.294 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:45:03.295 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:45:03.298 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:45:03.302 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:45:03.306 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:45:03.307 +03:00 [DBG] Start discovery request
2019-07-22 11:45:03.538 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 11:45:03.538 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:45:03.538 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:45:03.539 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 11:45:03.541 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 11:45:03.541 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 11:45:03.556 +03:00 [DBG] Start key discovery request
2019-07-22 11:45:03.799 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:45:03.802 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:45:03.802 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:45:03.852 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:45:03.853 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:45:03.853 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:45:03.853 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 11:45:03.861 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 11:45:03.861 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 11:45:03.882 +03:00 [DBG] Start userinfo request
2019-07-22 11:45:03.893 +03:00 [DBG] Bearer token found in header
2019-07-22 11:45:03.984 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:45:03.993 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:45:04.003 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:45:04.011 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563785101,"exp":1563788701,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563783977,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:45:04.028 +03:00 [DBG] Creating userinfo response
2019-07-22 11:45:04.039 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:45:04.047 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:45:04.056 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 11:45:04.057 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:45:04.075 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 11:45:04.078 +03:00 [DBG] End userinfo request
2019-07-22 11:45:04.139 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:45:04.141 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:45:04.141 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:45:04.145 +03:00 [DBG] Rendering check session result
2019-07-22 11:45:09.751 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 11:45:09.754 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 11:45:09.755 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 11:45:09.771 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:45:09.791 +03:00 [DBG] Start end session request validation
2019-07-22 11:45:09.808 +03:00 [DBG] Start identity token validation
2019-07-22 11:45:09.811 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:45:09.811 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 11:45:09.822 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:45:09.823 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563785101,"exp":1563785401,"iss":"http://localhost:5000","aud":"spa","nonce":"105bfc32bf8648edafba9e8625695606","iat":1563785101,"at_hash":"mQ0WtVREVTzI8euvFbMtsA","sid":"529659e944c66cccb7ebcc9af3175746","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563783977,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:45:09.831 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3ODUxMDEsImV4cCI6MTU2Mzc4NTQwMSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIxMDViZmMzMmJmODY0OGVkYWZiYTllODYyNTY5NTYwNiIsImlhdCI6MTU2Mzc4NTEwMSwiYXRfaGFzaCI6Im1RMFd0VlJFVlR6SThldXZGYk10c0EiLCJzaWQiOiI1Mjk2NTllOTQ0YzY2Y2NjYjdlYmNjOWFmMzE3NTc0NiIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc4Mzk3NywiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.VQSD5Obtn0cEVqh24f7ew9jcgVQHu6Vl8ACocpxB5eF6gcWv4tB8twPKUsrwlZS6p4VgvXOZCdCQ2WzN-aGnrWANDQCNbvcvUCGKy-AVrDrb-fghrDNjmi11vYSRbWWeRhwL0TrcMMj904jgprwYvJFbAYfHEEH_wbz7jAJp0J4fZyotKa-wdAla9QgRD-59uoL9lADfYXKOocn_UHHGG6NbXYkmTtpqDPnhmGN7lhAG6rje9ILm2mn6e_DrTjb_YsZPl_DRBjRJjmXMssJCVX-hH3LenbxXz5PQfRIYgcNC0FRDB1tZzes5U-IXkleI7ES1tLnC0kwu1uZuRGJesA","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 11:45:09.831 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 11:46:07.413 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 11:46:07.418 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 11:46:07.420 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 11:46:10.076 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEG3DLC17V:00000005","TimeStamp":"2019-07-22T08:46:10.0000000Z","ProcessId":12328,"LocalIpAddress":"127.0.0.1:37050","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 11:52:31.352 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-22 11:52:31.430 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-22 11:52:31.431 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-22 11:52:31.515 +03:00 [DBG] Processing signout callback request
2019-07-22 11:52:31.606 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:52:31.606 +03:00 [DBG] No client front-channel logout URLs
2019-07-22 11:52:31.609 +03:00 [DBG] No client back-channel logout URLs
2019-07-22 11:52:31.609 +03:00 [INF] Successful signout callback.
2019-07-22 11:52:31.609 +03:00 [DBG] No client front-channel iframe urls
2019-07-22 11:52:31.609 +03:00 [DBG] No client back-channel iframe urls
2019-07-22 11:53:07.250 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:53:07.253 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:53:07.253 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:53:07.255 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:53:07.258 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:53:07.258 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:53:07.258 +03:00 [DBG] Start discovery request
2019-07-22 11:53:07.358 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 11:53:07.363 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 11:53:07.363 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 11:53:07.363 +03:00 [DBG] Start authorize request
2019-07-22 11:53:07.366 +03:00 [DBG] No user present in authorize request
2019-07-22 11:53:07.366 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:53:07.375 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:53:07.379 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:53:07.381 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0b06cbd08226499c871d261aebd77301","UiLocales":null,"Nonce":"d0e12f0a5c634c85b9f6f191c60e16a5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0b06cbd08226499c871d261aebd77301","nonce":"d0e12f0a5c634c85b9f6f191c60e16a5"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:53:07.382 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 11:53:07.691 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:53:07.691 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:53:07.692 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:53:07.702 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:53:09.448 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 11:53:09.854 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:53:09.854 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:53:09.856 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:53:10.385 +03:00 [DBG] Augmenting SignInContext
2019-07-22 11:53:10.394 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 11:53:10.394 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 11:53:10.396 +03:00 [DBG] Adding auth_time claim with value: 1563785590
2019-07-22 11:53:10.427 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 11:53:10.431 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEG3DLC17V:0000000A","TimeStamp":"2019-07-22T08:53:10.0000000Z","ProcessId":12328,"LocalIpAddress":"127.0.0.1:37050","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 11:53:10.431 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:53:10.453 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 11:53:10.454 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 11:53:10.454 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 11:53:10.455 +03:00 [DBG] Start authorize callback request
2019-07-22 11:53:10.456 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:53:10.456 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 11:53:10.456 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:53:10.457 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 11:53:10.458 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0b06cbd08226499c871d261aebd77301","UiLocales":null,"Nonce":"d0e12f0a5c634c85b9f6f191c60e16a5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"31f248db56950156ba57ed53ac3d2575","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0b06cbd08226499c871d261aebd77301","nonce":"d0e12f0a5c634c85b9f6f191c60e16a5"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 11:53:10.500 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 11:53:10.501 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 11:53:10.501 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 11:53:10.502 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:53:10.525 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 11:53:10.525 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 11:53:10.536 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****qSeQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****buYA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEG3DLC17V:0000000B","TimeStamp":"2019-07-22T08:53:10.0000000Z","ProcessId":12328,"LocalIpAddress":"127.0.0.1:37050","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 11:53:10.537 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"0b06cbd08226499c871d261aebd77301","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 11:53:10.563 +03:00 [DBG] Augmenting SignInContext
2019-07-22 11:53:10.565 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 11:53:12.468 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 11:53:12.470 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:53:12.470 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:53:12.472 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 11:53:12.474 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 11:53:12.474 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 11:53:12.474 +03:00 [DBG] Start discovery request
2019-07-22 11:53:12.571 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 11:53:12.571 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:53:12.571 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:53:12.572 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 11:53:12.573 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 11:53:12.574 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 11:53:12.574 +03:00 [DBG] Start key discovery request
2019-07-22 11:53:12.712 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:53:12.713 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:53:12.714 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:53:12.741 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 11:53:12.742 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 11:53:12.742 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 11:53:12.743 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 11:53:12.748 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 11:53:12.749 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 11:53:12.749 +03:00 [DBG] Start userinfo request
2019-07-22 11:53:12.749 +03:00 [DBG] Bearer token found in header
2019-07-22 11:53:12.758 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:53:12.758 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:53:12.767 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:53:12.768 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563785590,"exp":1563789190,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563785590,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:53:12.768 +03:00 [DBG] Creating userinfo response
2019-07-22 11:53:12.769 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:53:12.769 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:53:12.769 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 11:53:12.769 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 11:53:12.787 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 11:53:12.787 +03:00 [DBG] End userinfo request
2019-07-22 11:53:12.921 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 11:53:12.921 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 11:53:12.921 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 11:53:12.921 +03:00 [DBG] Rendering check session result
2019-07-22 11:53:19.757 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 11:53:19.758 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 11:53:19.760 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 11:53:19.761 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 11:53:19.761 +03:00 [DBG] Start end session request validation
2019-07-22 11:53:19.761 +03:00 [DBG] Start identity token validation
2019-07-22 11:53:19.762 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 11:53:19.762 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 11:53:19.774 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 11:53:19.775 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563785590,"exp":1563785890,"iss":"http://localhost:5000","aud":"spa","nonce":"d0e12f0a5c634c85b9f6f191c60e16a5","iat":1563785590,"at_hash":"iMsswqJfB9d5t7cNe33MUg","sid":"31f248db56950156ba57ed53ac3d2575","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563785590,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 11:53:19.776 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3ODU1OTAsImV4cCI6MTU2Mzc4NTg5MCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJkMGUxMmYwYTVjNjM0Yzg1YjlmNmYxOTFjNjBlMTZhNSIsImlhdCI6MTU2Mzc4NTU5MCwiYXRfaGFzaCI6ImlNc3N3cUpmQjlkNXQ3Y05lMzNNVWciLCJzaWQiOiIzMWYyNDhkYjU2OTUwMTU2YmE1N2VkNTNhYzNkMjU3NSIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc4NTU5MCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.jxuAsafWaiylstaUgXipaSyaxr0mTaYdWMOrTnGeAFbX0SztIfWEqWEbdr7YeqcF2WmGl8UCkodUpY9ntiHS45flv4fQyBdM5rnoSqRII3NoSYi3-_1ICke8jVn3x42oeduKDjpm9XmE5BcU7YGk_XKwBlzrYRV3_CNhY5nsAucvINUex4HdX05qjDId4vSTf0aSyS3gfPj7DHVzCx8YV5uO90sMqcM4BwKGuBoV2zsXNQmJp2wT1w_AtQAzemRYHszHK8Twst48x74ARpdDO4-fvoykl6gRDFgqbJ_dIKElYE7gYLndcVDVYsQuGRnH4grw_UdMfz-OrqZkDDqSeQ","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 11:53:19.776 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 12:02:19.917 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 12:02:20.081 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 12:02:20.094 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 12:02:20.094 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 12:02:20.095 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 12:02:20.095 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 12:02:20.095 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 12:02:22.145 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 12:02:22.153 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 12:02:22.153 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 12:02:22.154 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 12:02:22.155 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 12:02:22.155 +03:00 [DBG] Error Url: /home/error
2019-07-22 12:02:22.155 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 12:02:46.169 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 12:02:46.209 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 12:02:46.210 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 12:02:46.224 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 12:02:46.392 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 12:02:46.393 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 12:02:46.404 +03:00 [DBG] Start discovery request
2019-07-22 12:02:47.225 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 12:02:47.233 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 12:02:47.233 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 12:02:47.243 +03:00 [DBG] Start authorize request
2019-07-22 12:02:47.525 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 12:02:47.647 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 12:02:47.685 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:02:47.814 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 12:02:47.875 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0ab984aa3a624b62b89006f5ce174aef","UiLocales":null,"Nonce":"c811302b716c4557a9fc1426c1225272","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"31f248db56950156ba57ed53ac3d2575","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0ab984aa3a624b62b89006f5ce174aef","nonce":"c811302b716c4557a9fc1426c1225272"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 12:02:52.466 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 12:02:52.466 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 12:02:52.466 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 12:02:52.723 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 12:02:52.724 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:02:52.724 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 12:02:52.728 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:03:16.093 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 12:03:16.298 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 12:03:16.299 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:03:16.299 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 12:03:16.336 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEGD71U5R7:00000003","TimeStamp":"2019-07-22T09:03:16.0000000Z","ProcessId":7508,"LocalIpAddress":"127.0.0.1:26192","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 12:03:16.385 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:03:16.422 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 12:03:16.424 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 12:03:16.424 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 12:03:16.446 +03:00 [DBG] Start authorize callback request
2019-07-22 12:03:16.476 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 12:03:16.476 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 12:03:16.476 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:03:16.477 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 12:03:16.478 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0ab984aa3a624b62b89006f5ce174aef","UiLocales":null,"Nonce":"c811302b716c4557a9fc1426c1225272","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"31f248db56950156ba57ed53ac3d2575","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0ab984aa3a624b62b89006f5ce174aef","nonce":"c811302b716c4557a9fc1426c1225272"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 12:03:16.528 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 12:03:16.528 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 12:03:16.551 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 12:03:16.559 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 12:03:16.572 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 12:03:16.672 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 12:03:16.734 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 12:03:16.737 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 12:03:17.453 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 12:03:17.453 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 12:03:17.477 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****-Uig","$type":"Token"},{"TokenType":"access_token","TokenValue":"****RodQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEGD71U5R6:00000004","TimeStamp":"2019-07-22T09:03:17.0000000Z","ProcessId":7508,"LocalIpAddress":"127.0.0.1:26192","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 12:03:17.482 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"0ab984aa3a624b62b89006f5ce174aef","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 12:03:19.802 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 12:03:19.803 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 12:03:19.803 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 12:03:19.804 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 12:03:19.804 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 12:03:19.804 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 12:03:19.804 +03:00 [DBG] Start discovery request
2019-07-22 12:03:19.914 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 12:03:19.915 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 12:03:19.916 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 12:03:19.916 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 12:03:19.918 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 12:03:19.918 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 12:03:19.935 +03:00 [DBG] Start key discovery request
2019-07-22 12:03:20.090 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 12:03:20.094 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 12:03:20.094 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 12:03:20.106 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 12:03:20.106 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 12:03:20.107 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 12:03:20.108 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 12:03:20.114 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 12:03:20.114 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 12:03:20.135 +03:00 [DBG] Start userinfo request
2019-07-22 12:03:20.152 +03:00 [DBG] Bearer token found in header
2019-07-22 12:03:20.230 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:03:20.238 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:03:20.247 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 12:03:20.251 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563786197,"exp":1563789797,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563785590,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 12:03:20.277 +03:00 [DBG] Creating userinfo response
2019-07-22 12:03:20.289 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 12:03:20.299 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 12:03:20.307 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 12:03:20.309 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 12:03:20.322 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 12:03:20.326 +03:00 [DBG] End userinfo request
2019-07-22 12:03:20.399 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 12:03:20.400 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 12:03:20.400 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 12:03:20.403 +03:00 [DBG] Rendering check session result
2019-07-22 12:03:24.128 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 12:03:24.132 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 12:03:24.132 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 12:03:24.149 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 12:03:24.171 +03:00 [DBG] Start end session request validation
2019-07-22 12:03:24.197 +03:00 [DBG] Start identity token validation
2019-07-22 12:03:24.202 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:03:24.202 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 12:03:24.223 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 12:03:24.224 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563786197,"exp":1563786497,"iss":"http://localhost:5000","aud":"spa","nonce":"c811302b716c4557a9fc1426c1225272","iat":1563786197,"at_hash":"w3QqjtExdzBB5xtwK3WCmQ","sid":"31f248db56950156ba57ed53ac3d2575","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563785590,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 12:03:24.234 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3ODYxOTcsImV4cCI6MTU2Mzc4NjQ5NywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJjODExMzAyYjcxNmM0NTU3YTlmYzE0MjZjMTIyNTI3MiIsImlhdCI6MTU2Mzc4NjE5NywiYXRfaGFzaCI6InczUXFqdEV4ZHpCQjV4dHdLM1dDbVEiLCJzaWQiOiIzMWYyNDhkYjU2OTUwMTU2YmE1N2VkNTNhYzNkMjU3NSIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc4NTU5MCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.jJi9ocd3u0WtC3OrKSLuJhV4jr0mrJ4V1fmfPTfu4_9xX5pBhOfaY9FYp3MRgleHWTFRr4rXtbk4RURueFOSVyJVc1UQ1XaevVY4lpU9wuRXDO821sKNFZ2fbrX9_sJseKwnellsTiJPiGyx2QdP81-pqevvDGCTjzsnkJNS6zaJ0PEBjbYy-5viYn2iT7czMoEYTUUzd0yphtiSFXleVBvyaTYDNHIkezfgzL8L1XI3EX_qPfaLgEPyBQtHHWjrC8DdQnTMcZFvNG06JG2FZWMfSOdH3279LDPJELWLsUb6fwsJqQMGqw-zbauUIcmrbJ7U3buUqhT0FK9gni-Uig","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 12:03:24.235 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 12:03:36.405 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 12:03:36.408 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 12:03:36.409 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 12:03:37.028 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEGD71U5R7:00000007","TimeStamp":"2019-07-22T09:03:37.0000000Z","ProcessId":7508,"LocalIpAddress":"127.0.0.1:26192","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 12:04:10.898 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 12:04:17.566 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 12:07:25.726 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 12:07:25.824 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 12:07:25.837 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 12:07:25.837 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 12:07:25.837 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 12:07:25.838 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 12:07:25.838 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 12:07:27.811 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 12:07:27.815 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 12:07:27.815 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 12:07:27.815 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 12:07:27.815 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 12:07:27.815 +03:00 [DBG] Error Url: /home/error
2019-07-22 12:07:27.815 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 12:08:10.601 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 12:08:10.614 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 12:08:10.614 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 12:08:10.675 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 12:08:11.904 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 12:08:11.904 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 12:08:11.913 +03:00 [DBG] Start discovery request
2019-07-22 12:08:12.037 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 12:08:12.059 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 12:08:12.059 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 12:08:12.067 +03:00 [DBG] Start authorize request
2019-07-22 12:08:12.086 +03:00 [DBG] No user present in authorize request
2019-07-22 12:08:12.101 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 12:08:12.156 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:12.278 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 12:08:12.320 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"607decec672d4ac9a8a290be069c7387","UiLocales":null,"Nonce":"51173b0b29fe45e2aedff08afaf81497","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"607decec672d4ac9a8a290be069c7387","nonce":"51173b0b29fe45e2aedff08afaf81497"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 12:08:12.423 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 12:08:12.708 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 12:08:12.709 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:12.710 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 12:08:12.719 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:14.914 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 12:08:15.213 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 12:08:15.214 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:15.218 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 12:08:19.898 +03:00 [DBG] Augmenting SignInContext
2019-07-22 12:08:19.906 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 12:08:19.906 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 12:08:19.907 +03:00 [DBG] Adding auth_time claim with value: 1563786499
2019-07-22 12:08:19.933 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 12:08:19.991 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEGG25I05D:00000003","TimeStamp":"2019-07-22T09:08:19.0000000Z","ProcessId":11076,"LocalIpAddress":"127.0.0.1:18911","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 12:08:19.998 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:20.077 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 12:08:20.080 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 12:08:20.080 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 12:08:20.100 +03:00 [DBG] Start authorize callback request
2019-07-22 12:08:20.114 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 12:08:20.114 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 12:08:20.114 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:20.115 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 12:08:20.115 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"607decec672d4ac9a8a290be069c7387","UiLocales":null,"Nonce":"51173b0b29fe45e2aedff08afaf81497","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5d66ac3133587bacac7dc4b8aaf40a06","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"607decec672d4ac9a8a290be069c7387","nonce":"51173b0b29fe45e2aedff08afaf81497"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 12:08:20.321 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 12:08:20.323 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 12:08:20.323 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 12:08:20.541 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 12:08:20.543 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:20.543 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 12:08:20.544 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:25.892 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 12:08:26.039 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 12:08:26.040 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:26.040 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 12:08:26.050 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEGG25I05C:00000005","TimeStamp":"2019-07-22T09:08:26.0000000Z","ProcessId":11076,"LocalIpAddress":"127.0.0.1:18911","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 12:08:26.081 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:26.091 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 12:08:26.092 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 12:08:26.092 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 12:08:26.093 +03:00 [DBG] Start authorize callback request
2019-07-22 12:08:26.105 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 12:08:26.105 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 12:08:26.105 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:26.105 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 12:08:26.106 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"607decec672d4ac9a8a290be069c7387","UiLocales":null,"Nonce":"51173b0b29fe45e2aedff08afaf81497","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5d66ac3133587bacac7dc4b8aaf40a06","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"607decec672d4ac9a8a290be069c7387","nonce":"51173b0b29fe45e2aedff08afaf81497"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 12:08:26.124 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 12:08:26.124 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 12:08:26.143 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 12:08:26.148 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 12:08:26.159 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 12:08:26.229 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 12:08:26.260 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 12:08:26.267 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 12:08:26.589 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 12:08:26.589 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 12:08:26.615 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****VMFQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****dF3w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEGG25I05D:00000005","TimeStamp":"2019-07-22T09:08:26.0000000Z","ProcessId":11076,"LocalIpAddress":"127.0.0.1:18911","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 12:08:26.621 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"607decec672d4ac9a8a290be069c7387","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 12:08:26.690 +03:00 [DBG] Augmenting SignInContext
2019-07-22 12:08:26.691 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 12:08:28.013 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 12:08:28.014 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 12:08:28.015 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 12:08:28.019 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 12:08:28.020 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 12:08:28.020 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 12:08:28.020 +03:00 [DBG] Start discovery request
2019-07-22 12:08:28.176 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 12:08:28.177 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 12:08:28.177 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 12:08:28.177 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 12:08:28.180 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 12:08:28.180 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 12:08:28.201 +03:00 [DBG] Start key discovery request
2019-07-22 12:08:28.391 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 12:08:28.391 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 12:08:28.392 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 12:08:28.448 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 12:08:28.448 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 12:08:28.448 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 12:08:28.449 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 12:08:28.459 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 12:08:28.459 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 12:08:28.486 +03:00 [DBG] Start userinfo request
2019-07-22 12:08:28.504 +03:00 [DBG] Bearer token found in header
2019-07-22 12:08:28.604 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:28.616 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:28.626 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 12:08:28.630 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563786506,"exp":1563790106,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563786499,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 12:08:28.664 +03:00 [DBG] Creating userinfo response
2019-07-22 12:08:28.683 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 12:08:28.692 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 12:08:28.701 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 12:08:28.703 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 12:08:28.716 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 12:08:28.719 +03:00 [DBG] End userinfo request
2019-07-22 12:08:28.781 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 12:08:28.787 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 12:08:28.788 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 12:08:28.791 +03:00 [DBG] Rendering check session result
2019-07-22 12:08:35.158 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 12:08:35.170 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 12:08:35.170 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 12:08:35.187 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 12:08:35.204 +03:00 [DBG] Start end session request validation
2019-07-22 12:08:35.219 +03:00 [DBG] Start identity token validation
2019-07-22 12:08:35.221 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 12:08:35.222 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 12:08:35.231 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 12:08:35.233 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563786506,"exp":1563786806,"iss":"http://localhost:5000","aud":"spa","nonce":"51173b0b29fe45e2aedff08afaf81497","iat":1563786506,"at_hash":"N_VkHPrPu6ll26DPNGICQg","sid":"5d66ac3133587bacac7dc4b8aaf40a06","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563786499,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 12:08:35.242 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3ODY1MDYsImV4cCI6MTU2Mzc4NjgwNiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1MTE3M2IwYjI5ZmU0NWUyYWVkZmYwOGFmYWY4MTQ5NyIsImlhdCI6MTU2Mzc4NjUwNiwiYXRfaGFzaCI6Ik5fVmtIUHJQdTZsbDI2RFBOR0lDUWciLCJzaWQiOiI1ZDY2YWMzMTMzNTg3YmFjYWM3ZGM0YjhhYWY0MGEwNiIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc4NjQ5OSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.oV9gHSsXfv0cOL6iPzmmfGI_mcTv3ZHSgWxBh1LCX0putQUtGKN9p7QNqN00WvUMI2tj8yX2F9aZMu6uKUnZuPr7n3NrZ7L_8y_SW01Kc1dUv0kK1nJli9jol-pshNdN2oDKKKefJ54Dt57Faox1uFGPhs6O3XDvr2DE2N_KX_QOaZuKsgswdtIZ9RS6Ior4O0hrx2BPnHZtVyRXCfavNDFczws_VtgDlwpglLgzy9D_Ita8Q7DWqvOdWy6jQUQWfcev9_5yoFq78evC2vxLrrxDWlJlb-vE6fB8dJBIIEfEe2-vM3iL5iLT4bMYabA4KLApr47WfIu6x4f5gQVMFQ","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 12:08:35.243 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 12:08:39.688 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 12:08:39.690 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 12:08:39.691 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 12:08:39.693 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEGG25I05C:00000009","TimeStamp":"2019-07-22T09:08:39.0000000Z","ProcessId":11076,"LocalIpAddress":"127.0.0.1:18911","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 13:09:02.355 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 13:09:02.431 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 13:09:02.442 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 13:09:02.442 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 13:09:02.442 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 13:09:02.442 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 13:09:02.443 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 13:09:03.766 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:09:03.781 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:09:03.781 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:09:03.876 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 13:09:03.876 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 13:09:03.876 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 13:09:03.876 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 13:09:03.876 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 13:09:03.876 +03:00 [DBG] Error Url: /home/error
2019-07-22 13:09:03.876 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 13:09:03.924 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:09:05.033 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:09:05.034 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:09:05.047 +03:00 [DBG] Start discovery request
2019-07-22 13:09:19.730 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:09:19.731 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:09:19.731 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:09:19.734 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:09:19.736 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:09:19.736 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:09:19.736 +03:00 [DBG] Start discovery request
2019-07-22 13:09:19.852 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 13:09:19.865 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 13:09:19.865 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 13:09:19.884 +03:00 [DBG] Start authorize request
2019-07-22 13:09:19.917 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:09:19.949 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:09:20.122 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:09:20.306 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:09:20.355 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"35361150a64f4a58920a061ecce1501d","UiLocales":null,"Nonce":"c3a5ae8bc04a4b12a3eb9b9f3f660ff1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5d66ac3133587bacac7dc4b8aaf40a06","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"35361150a64f4a58920a061ecce1501d","nonce":"c3a5ae8bc04a4b12a3eb9b9f3f660ff1"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:09:20.515 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 13:09:20.515 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 13:09:20.516 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 13:09:20.808 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:09:20.809 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:09:20.809 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:09:20.813 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:09:23.208 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 13:09:23.443 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:09:23.443 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:09:23.444 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:09:23.522 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEHIFOPLH9:00000003","TimeStamp":"2019-07-22T10:09:23.0000000Z","ProcessId":11032,"LocalIpAddress":"127.0.0.1:7421","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 13:09:23.592 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:09:23.614 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 13:09:23.617 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 13:09:23.618 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 13:09:23.653 +03:00 [DBG] Start authorize callback request
2019-07-22 13:09:23.687 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:09:23.689 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:09:23.689 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:09:23.690 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:09:23.693 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"35361150a64f4a58920a061ecce1501d","UiLocales":null,"Nonce":"c3a5ae8bc04a4b12a3eb9b9f3f660ff1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5d66ac3133587bacac7dc4b8aaf40a06","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"35361150a64f4a58920a061ecce1501d","nonce":"c3a5ae8bc04a4b12a3eb9b9f3f660ff1"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:09:23.705 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 13:09:23.705 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 13:09:23.751 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 13:09:23.779 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 13:09:23.789 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:09:23.854 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 13:09:23.890 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 13:09:23.892 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:09:24.206 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 13:09:24.206 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 13:09:24.248 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****L9jw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****VfBQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEHIFOPLHB:00000003","TimeStamp":"2019-07-22T10:09:24.0000000Z","ProcessId":11032,"LocalIpAddress":"127.0.0.1:7421","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 13:09:24.253 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"35361150a64f4a58920a061ecce1501d","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 13:09:25.897 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:09:25.899 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:09:25.900 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:09:25.901 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:09:25.901 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:09:25.902 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:09:25.902 +03:00 [DBG] Start discovery request
2019-07-22 13:09:26.120 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 13:09:26.120 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:09:26.120 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:09:26.121 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 13:09:26.125 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 13:09:26.125 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 13:09:26.140 +03:00 [DBG] Start key discovery request
2019-07-22 13:09:26.390 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:09:26.391 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:09:26.391 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:09:26.434 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:09:26.435 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:09:26.435 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:09:26.436 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 13:09:26.442 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 13:09:26.442 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 13:09:26.480 +03:00 [DBG] Start userinfo request
2019-07-22 13:09:26.496 +03:00 [DBG] Bearer token found in header
2019-07-22 13:09:26.596 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:09:26.607 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:09:26.618 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:09:26.624 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563790164,"exp":1563793764,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563786499,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:09:26.649 +03:00 [DBG] Creating userinfo response
2019-07-22 13:09:26.663 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:09:26.678 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:09:26.693 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 13:09:26.693 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:09:26.710 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 13:09:26.712 +03:00 [DBG] End userinfo request
2019-07-22 13:09:26.792 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 13:09:26.793 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 13:09:26.793 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 13:09:26.797 +03:00 [DBG] Rendering check session result
2019-07-22 13:09:30.186 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 13:09:30.192 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 13:09:30.193 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 13:09:30.209 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:09:30.224 +03:00 [DBG] Start end session request validation
2019-07-22 13:09:30.243 +03:00 [DBG] Start identity token validation
2019-07-22 13:09:30.247 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:09:30.247 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 13:09:30.258 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:09:30.260 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563790164,"exp":1563790464,"iss":"http://localhost:5000","aud":"spa","nonce":"c3a5ae8bc04a4b12a3eb9b9f3f660ff1","iat":1563790164,"at_hash":"YjAcnZVhk_Ux1HWoGRmnFw","sid":"5d66ac3133587bacac7dc4b8aaf40a06","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563786499,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:09:30.269 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTAxNjQsImV4cCI6MTU2Mzc5MDQ2NCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJjM2E1YWU4YmMwNGE0YjEyYTNlYjliOWYzZjY2MGZmMSIsImlhdCI6MTU2Mzc5MDE2NCwiYXRfaGFzaCI6IllqQWNuWlZoa19VeDFIV29HUm1uRnciLCJzaWQiOiI1ZDY2YWMzMTMzNTg3YmFjYWM3ZGM0YjhhYWY0MGEwNiIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc4NjQ5OSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.ydD1rSsBrDSETfTYKowFQaoS1roqQSF5VTGGrALwvu9L2UXurhEN20MDcsX5ZzBBw0ZVRuXcYGJTOfI8CTEvkKJ2z1taYGppLovVvrET_u0YtFkADvqGWXOHdB_gF_W25a4hlB6SkISSE1e7moe_TJ_OInJ1DpbnF-4dtn0nuguJ5zcEevuc5xVVE9hyKKL_OEUfVkJPy5CcKCOi70oDkrCR9oxu-B18DMetxmrcGZHY_smOHHIp61WzJ-KTj3mHpg7A4Btzxw2TP9Wawxan6Z4WQP_2XKeccgzTW07bBrpjNsK36hCNfYd2OepjiEhSPHVfwyTlisLI2vJe8jL9jw","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 13:09:30.269 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 13:09:44.502 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 13:09:44.678 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 13:09:44.680 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 13:09:44.682 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 13:09:44.684 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEHIFOPLH9:00000006","TimeStamp":"2019-07-22T10:09:44.0000000Z","ProcessId":11032,"LocalIpAddress":"127.0.0.1:7421","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 13:09:54.299 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 292
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-22 13:11:52.620 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 13:11:52.718 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 13:11:52.726 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 13:11:52.727 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 13:11:52.727 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 13:11:52.727 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 13:11:52.727 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 13:11:54.240 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 13:11:54.246 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 13:11:54.246 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 13:11:54.246 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 13:11:54.246 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 13:11:54.247 +03:00 [DBG] Error Url: /home/error
2019-07-22 13:11:54.247 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 13:12:17.490 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:12:17.505 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:12:17.505 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:12:17.511 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:12:17.523 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:12:17.523 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:12:17.539 +03:00 [DBG] Start discovery request
2019-07-22 13:12:17.909 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 13:12:17.929 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 13:12:17.929 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 13:12:17.977 +03:00 [DBG] Start authorize request
2019-07-22 13:12:18.045 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:12:18.113 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:12:18.159 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:12:18.292 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:12:18.344 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"780c56aea1864e77a00083a623a940bb","UiLocales":null,"Nonce":"0a3f0109c03c49ff92c7517810c3db36","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5d66ac3133587bacac7dc4b8aaf40a06","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"780c56aea1864e77a00083a623a940bb","nonce":"0a3f0109c03c49ff92c7517810c3db36"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:12:22.973 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 13:12:22.973 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 13:12:22.974 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 13:12:23.212 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:12:23.213 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:12:23.213 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:12:23.218 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:12:25.333 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 13:12:25.543 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:12:25.543 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:12:25.544 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:12:25.596 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEHK2H1QBB:00000004","TimeStamp":"2019-07-22T10:12:25.0000000Z","ProcessId":14308,"LocalIpAddress":"127.0.0.1:41989","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 13:12:25.684 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:12:25.728 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 13:12:25.730 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 13:12:25.730 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 13:12:25.753 +03:00 [DBG] Start authorize callback request
2019-07-22 13:12:25.778 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:12:25.778 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:12:25.779 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:12:25.781 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:12:25.782 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"780c56aea1864e77a00083a623a940bb","UiLocales":null,"Nonce":"0a3f0109c03c49ff92c7517810c3db36","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5d66ac3133587bacac7dc4b8aaf40a06","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"780c56aea1864e77a00083a623a940bb","nonce":"0a3f0109c03c49ff92c7517810c3db36"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:12:25.834 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 13:12:25.837 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 13:12:25.861 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 13:12:25.868 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 13:12:25.884 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:12:25.950 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 13:12:25.999 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 13:12:26.005 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:12:26.801 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 13:12:26.801 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 13:12:26.834 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****vAag","$type":"Token"},{"TokenType":"access_token","TokenValue":"****37MA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEHK2H1QBC:00000004","TimeStamp":"2019-07-22T10:12:26.0000000Z","ProcessId":14308,"LocalIpAddress":"127.0.0.1:41989","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 13:12:26.844 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"780c56aea1864e77a00083a623a940bb","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 13:12:28.571 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:12:28.572 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:12:28.572 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:12:28.574 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:12:28.576 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:12:28.576 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:12:28.577 +03:00 [DBG] Start discovery request
2019-07-22 13:12:28.690 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 13:12:28.690 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:12:28.690 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:12:28.691 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 13:12:28.693 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 13:12:28.693 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 13:12:28.716 +03:00 [DBG] Start key discovery request
2019-07-22 13:12:28.948 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:12:28.949 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:12:28.949 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:12:29.056 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:12:29.056 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:12:29.056 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:12:29.056 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 13:12:29.065 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 13:12:29.065 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 13:12:29.114 +03:00 [DBG] Start userinfo request
2019-07-22 13:12:29.136 +03:00 [DBG] Bearer token found in header
2019-07-22 13:12:29.236 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:12:29.248 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:12:29.259 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:12:29.266 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563790346,"exp":1563793946,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563786499,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:12:29.290 +03:00 [DBG] Creating userinfo response
2019-07-22 13:12:29.305 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:12:29.319 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:12:29.347 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 13:12:29.347 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:12:29.377 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 13:12:29.382 +03:00 [DBG] End userinfo request
2019-07-22 13:12:29.465 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 13:12:29.466 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 13:12:29.466 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 13:12:29.469 +03:00 [DBG] Rendering check session result
2019-07-22 13:12:35.233 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 13:12:35.237 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 13:12:35.238 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 13:12:35.249 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:12:35.263 +03:00 [DBG] Start end session request validation
2019-07-22 13:12:35.275 +03:00 [DBG] Start identity token validation
2019-07-22 13:12:35.279 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:12:35.279 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 13:12:35.292 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:12:35.295 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563790346,"exp":1563790646,"iss":"http://localhost:5000","aud":"spa","nonce":"0a3f0109c03c49ff92c7517810c3db36","iat":1563790346,"at_hash":"q-VXA-YGjADaGbyFFa-ddQ","sid":"5d66ac3133587bacac7dc4b8aaf40a06","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563786499,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:12:35.306 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTAzNDYsImV4cCI6MTU2Mzc5MDY0NiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIwYTNmMDEwOWMwM2M0OWZmOTJjNzUxNzgxMGMzZGIzNiIsImlhdCI6MTU2Mzc5MDM0NiwiYXRfaGFzaCI6InEtVlhBLVlHakFEYUdieUZGYS1kZFEiLCJzaWQiOiI1ZDY2YWMzMTMzNTg3YmFjYWM3ZGM0YjhhYWY0MGEwNiIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc4NjQ5OSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.NLQJ1uZoU0LWuHNnALy-cOKHCYi2Mas_0xitnX9aEGmGga8vHGufrL44pqH4B6zw2wlgeFOEGIKXQeJYw-yQembHquV4F8l5Jf_owF5jxcCGs00ZpDpMip5TMPUcnlGToji7QmC5uAKHVNXoI1w4Csm0hBJfTJeRuIY3I_K5T3fobAdCDF5PPbmnLbeLMPh1SuqJn5zPSOcyn_hLkGx5iYGY021DepBCAFjvT8fTp2QrUvd7ar4Cldxa3hlG1sNbyY8JyKMvVh7YPfIyoU2gw2JahfdclKYEetxMYdnTy9TkXZXpx_k5VR-iHIHbZkPR-KmgM-WBj2KAFDpxoivAag","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 13:12:35.306 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 13:12:42.374 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 13:12:42.377 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 13:12:42.381 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 13:12:42.384 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEHK2H1QBB:00000008","TimeStamp":"2019-07-22T10:12:42.0000000Z","ProcessId":14308,"LocalIpAddress":"127.0.0.1:41989","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 13:13:26.041 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 285
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 252
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-22 13:14:57.446 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 13:14:57.655 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 13:14:57.670 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 13:14:57.670 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 13:14:57.670 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 13:14:57.670 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 13:14:57.671 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 13:14:59.625 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 13:14:59.631 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 13:14:59.631 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 13:14:59.631 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 13:14:59.632 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 13:14:59.632 +03:00 [DBG] Error Url: /home/error
2019-07-22 13:14:59.632 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 13:15:11.725 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:15:11.734 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:15:11.734 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:15:11.742 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:15:11.752 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:15:11.752 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:15:11.761 +03:00 [DBG] Start discovery request
2019-07-22 13:15:11.919 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 13:15:11.928 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 13:15:11.928 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 13:15:11.958 +03:00 [DBG] Start authorize request
2019-07-22 13:15:12.013 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:15:12.048 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:15:12.203 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:15:12.376 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:15:12.442 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8df46695fc4d4d3f924301c492447a26","UiLocales":null,"Nonce":"047b0469a37b47fdb3d57381b3d20681","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5d66ac3133587bacac7dc4b8aaf40a06","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8df46695fc4d4d3f924301c492447a26","nonce":"047b0469a37b47fdb3d57381b3d20681"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:15:16.377 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 13:15:16.377 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 13:15:16.377 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 13:15:16.614 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:15:16.615 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:15:16.616 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:15:16.620 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:15:24.573 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 13:15:24.762 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:15:24.763 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:15:24.764 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:15:24.813 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEHLPNB3GM:00000003","TimeStamp":"2019-07-22T10:15:24.0000000Z","ProcessId":3172,"LocalIpAddress":"127.0.0.1:18589","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 13:15:24.876 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:15:24.889 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 13:15:24.895 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 13:15:24.895 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 13:15:24.917 +03:00 [DBG] Start authorize callback request
2019-07-22 13:15:24.935 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:15:24.935 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:15:24.935 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:15:24.935 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:15:24.936 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8df46695fc4d4d3f924301c492447a26","UiLocales":null,"Nonce":"047b0469a37b47fdb3d57381b3d20681","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5d66ac3133587bacac7dc4b8aaf40a06","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8df46695fc4d4d3f924301c492447a26","nonce":"047b0469a37b47fdb3d57381b3d20681"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:15:24.973 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 13:15:24.973 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 13:15:25.017 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 13:15:25.036 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 13:15:25.054 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:15:25.124 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 13:15:25.170 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 13:15:25.171 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:15:25.953 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 13:15:25.953 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 13:15:25.981 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****BnQQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ZSxw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEHLPNB3GL:00000004","TimeStamp":"2019-07-22T10:15:25.0000000Z","ProcessId":3172,"LocalIpAddress":"127.0.0.1:18589","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 13:15:25.984 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"8df46695fc4d4d3f924301c492447a26","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 13:15:27.557 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:15:27.560 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:15:27.560 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:15:27.561 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:15:27.564 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:15:27.565 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:15:27.565 +03:00 [DBG] Start discovery request
2019-07-22 13:15:27.745 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 13:15:27.746 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:15:27.746 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:15:27.747 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 13:15:27.751 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 13:15:27.751 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 13:15:27.767 +03:00 [DBG] Start key discovery request
2019-07-22 13:15:27.909 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:15:27.909 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:15:27.909 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:15:27.957 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:15:27.957 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:15:27.958 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:15:27.959 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 13:15:27.971 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 13:15:27.971 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 13:15:28.011 +03:00 [DBG] Start userinfo request
2019-07-22 13:15:28.027 +03:00 [DBG] Bearer token found in header
2019-07-22 13:15:28.217 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:15:28.227 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:15:28.238 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:15:28.248 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563790525,"exp":1563794125,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563786499,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:15:28.275 +03:00 [DBG] Creating userinfo response
2019-07-22 13:15:28.287 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:15:28.297 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:15:28.312 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 13:15:28.312 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:15:28.332 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 13:15:28.335 +03:00 [DBG] End userinfo request
2019-07-22 13:15:28.374 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 13:15:28.375 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 13:15:28.376 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 13:15:28.379 +03:00 [DBG] Rendering check session result
2019-07-22 13:15:38.083 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 13:15:38.086 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 13:15:38.086 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 13:15:38.101 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:15:38.128 +03:00 [DBG] Start end session request validation
2019-07-22 13:15:38.154 +03:00 [DBG] Start identity token validation
2019-07-22 13:15:38.156 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:15:38.156 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 13:15:38.170 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:15:38.172 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563790525,"exp":1563790825,"iss":"http://localhost:5000","aud":"spa","nonce":"047b0469a37b47fdb3d57381b3d20681","iat":1563790525,"at_hash":"0grsqtAjUc_sp_dqeMIZjQ","sid":"5d66ac3133587bacac7dc4b8aaf40a06","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563786499,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:15:38.179 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTA1MjUsImV4cCI6MTU2Mzc5MDgyNSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIwNDdiMDQ2OWEzN2I0N2ZkYjNkNTczODFiM2QyMDY4MSIsImlhdCI6MTU2Mzc5MDUyNSwiYXRfaGFzaCI6IjBncnNxdEFqVWNfc3BfZHFlTUlaalEiLCJzaWQiOiI1ZDY2YWMzMTMzNTg3YmFjYWM3ZGM0YjhhYWY0MGEwNiIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc4NjQ5OSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.oeeLuTrqgxqeVPhJHWSaDpyBEXR8G7qZer1zcbeY5EtoOlBs1wblaZTsuESxdyq_KBtPAqCldETKzQgXP35-dbTFUTuh18Um-Ajlcy8K-RwwH9oxLvniAK4GAQIW0SwDli2WxmnTpeTyblmr3Q9mXNgO3aaYdME-6hXKMbmvfJJ20Wzi0WXc9bMZzjJMoQkEGxlGVvzbyOjyO-nffb4G0FqlJNhXrgyMaI-k0iSgXda1Pqk41JlKe1Dwt1FLBfFc_SdOSaaa--eJwWjq-Ww5n8qlvJazPwj2mdB8LNSWL4uzYGnJqEaqeaUaGbIMK4Fzf3gXQYyNhe5ml5MsTbBnQQ","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 13:15:38.179 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 13:16:04.242 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 13:16:04.245 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 13:16:04.246 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 13:16:04.249 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEHLPNB3GM:00000007","TimeStamp":"2019-07-22T10:16:04.0000000Z","ProcessId":3172,"LocalIpAddress":"127.0.0.1:18589","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 13:16:11.055 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 285
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 252
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-22 13:16:22.975 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 13:16:22.975 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 13:16:22.977 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 13:16:22.978 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEHLPNB3GM:00000008","TimeStamp":"2019-07-22T10:16:22.0000000Z","ProcessId":3172,"LocalIpAddress":"127.0.0.1:18589","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 13:16:25.429 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 285
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 252
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-22 13:17:28.749 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:17:28.749 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:17:28.750 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:17:28.750 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:17:28.751 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:17:28.751 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:17:28.751 +03:00 [DBG] Start discovery request
2019-07-22 13:17:28.809 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 13:17:28.809 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 13:17:28.810 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 13:17:28.810 +03:00 [DBG] Start authorize request
2019-07-22 13:17:28.810 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:17:28.810 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:17:28.811 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:17:28.811 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:17:28.812 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"fbde38d510bb42caaf234dabfc682afe","UiLocales":null,"Nonce":"036a40b7018f4fd79d5df533848d5f24","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5d66ac3133587bacac7dc4b8aaf40a06","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"fbde38d510bb42caaf234dabfc682afe","nonce":"036a40b7018f4fd79d5df533848d5f24"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:17:28.864 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 13:17:28.866 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 13:17:28.866 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 13:17:28.866 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:17:28.889 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 13:17:28.890 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 13:17:28.901 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****33eQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****-15w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEHLPNB3GN:00000002","TimeStamp":"2019-07-22T10:17:28.0000000Z","ProcessId":3172,"LocalIpAddress":"127.0.0.1:18589","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 13:17:28.902 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"fbde38d510bb42caaf234dabfc682afe","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 13:17:30.426 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:17:30.428 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:17:30.428 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:17:30.429 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:17:30.430 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:17:30.430 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:17:30.430 +03:00 [DBG] Start discovery request
2019-07-22 13:17:30.501 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 13:17:30.502 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:17:30.503 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:17:30.505 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 13:17:30.506 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 13:17:30.506 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 13:17:30.506 +03:00 [DBG] Start key discovery request
2019-07-22 13:17:30.775 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:17:30.775 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:17:30.775 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:17:30.831 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:17:30.832 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:17:30.832 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:17:30.832 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 13:17:30.834 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 13:17:30.834 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 13:17:30.834 +03:00 [DBG] Start userinfo request
2019-07-22 13:17:30.835 +03:00 [DBG] Bearer token found in header
2019-07-22 13:17:30.841 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:17:30.842 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:17:30.861 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:17:30.862 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563790648,"exp":1563794248,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563786499,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:17:30.863 +03:00 [DBG] Creating userinfo response
2019-07-22 13:17:30.863 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:17:30.863 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:17:30.864 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 13:17:30.864 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:17:30.872 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 13:17:30.873 +03:00 [DBG] End userinfo request
2019-07-22 13:17:30.968 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 13:17:30.969 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 13:17:30.969 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 13:17:30.970 +03:00 [DBG] Rendering check session result
2019-07-22 13:17:33.824 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 13:17:33.825 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 13:17:33.825 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 13:17:33.825 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:17:33.825 +03:00 [DBG] Start end session request validation
2019-07-22 13:17:33.826 +03:00 [DBG] Start identity token validation
2019-07-22 13:17:33.826 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:17:33.826 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 13:17:33.837 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:17:33.837 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563790648,"exp":1563790948,"iss":"http://localhost:5000","aud":"spa","nonce":"036a40b7018f4fd79d5df533848d5f24","iat":1563790648,"at_hash":"8mJJeqUXoDVDDxoBmK58cQ","sid":"5d66ac3133587bacac7dc4b8aaf40a06","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563786499,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:17:33.839 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTA2NDgsImV4cCI6MTU2Mzc5MDk0OCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIwMzZhNDBiNzAxOGY0ZmQ3OWQ1ZGY1MzM4NDhkNWYyNCIsImlhdCI6MTU2Mzc5MDY0OCwiYXRfaGFzaCI6IjhtSkplcVVYb0RWRER4b0JtSzU4Y1EiLCJzaWQiOiI1ZDY2YWMzMTMzNTg3YmFjYWM3ZGM0YjhhYWY0MGEwNiIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc4NjQ5OSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.fXbont9z-vhFVQDeABt_Kz5hvg-cox0mHZNt0uLp-yHUt4PhRcVJ3I66RI3nt35-mJjHO5zywFcU5DjL1N3PzwDbEtctHhdi6Q-WYysQ4WIrzpWEvNtQjTxSKySHgQZgHqPT4pJM83q2AgwnUeJFEQ5hza3oxV_M_UnLe3JQYJk7r-wz4yYk_UX_qEhsa_vUZfIPpkohaz4-dho6QTJaZA2895lrDy_mGb-VOKUxkr9DWV4WOlgG1DHlGrcxbPIHrrtOM0vBF-FFNATTgyT5kiPGCebb1-1vTdBYygh33829RiNn9Ooh1Hsli-4s8oWu96KZb3ZstWFANycr0g33eQ","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 13:17:33.839 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 13:24:54.588 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 13:24:54.605 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 13:24:54.606 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 13:24:54.609 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEHLPNB3GN:00000009","TimeStamp":"2019-07-22T10:24:54.0000000Z","ProcessId":3172,"LocalIpAddress":"127.0.0.1:18589","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 13:24:58.583 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 285
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 252
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-22 13:25:16.983 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 13:25:16.987 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 13:25:16.987 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 13:25:16.988 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEHLPNB3GN:0000000B","TimeStamp":"2019-07-22T10:25:16.0000000Z","ProcessId":3172,"LocalIpAddress":"127.0.0.1:18589","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 13:25:18.457 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 285
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 252
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-22 13:26:20.527 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 13:26:20.734 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 13:26:20.744 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 13:26:20.744 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 13:26:20.744 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 13:26:20.745 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 13:26:20.745 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 13:26:22.684 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 13:26:22.690 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 13:26:22.691 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 13:26:22.691 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 13:26:22.691 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 13:26:22.691 +03:00 [DBG] Error Url: /home/error
2019-07-22 13:26:22.692 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 13:26:39.568 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:26:39.576 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:26:39.577 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:26:39.589 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:26:39.609 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:26:39.610 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:26:39.622 +03:00 [DBG] Start discovery request
2019-07-22 13:26:39.776 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 13:26:39.800 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 13:26:39.801 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 13:26:39.828 +03:00 [DBG] Start authorize request
2019-07-22 13:26:39.875 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:26:39.904 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:26:39.952 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:26:40.049 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:26:40.120 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1808b769f66c4abba4d3f848b0b5e1d2","UiLocales":null,"Nonce":"917f4c979bff47e38291a7b364c721af","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5d66ac3133587bacac7dc4b8aaf40a06","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1808b769f66c4abba4d3f848b0b5e1d2","nonce":"917f4c979bff47e38291a7b364c721af"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:26:44.648 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 13:26:44.648 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 13:26:44.649 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 13:26:45.059 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:26:45.060 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:26:45.061 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:26:45.066 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:26:46.922 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 13:26:47.194 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:26:47.195 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:26:47.202 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:26:47.286 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEHS591623:00000003","TimeStamp":"2019-07-22T10:26:47.0000000Z","ProcessId":12680,"LocalIpAddress":"127.0.0.1:11799","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 13:26:47.385 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:26:47.407 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 13:26:47.411 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 13:26:47.411 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 13:26:47.444 +03:00 [DBG] Start authorize callback request
2019-07-22 13:26:47.474 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:26:47.474 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:26:47.474 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:26:47.475 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:26:47.476 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1808b769f66c4abba4d3f848b0b5e1d2","UiLocales":null,"Nonce":"917f4c979bff47e38291a7b364c721af","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5d66ac3133587bacac7dc4b8aaf40a06","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1808b769f66c4abba4d3f848b0b5e1d2","nonce":"917f4c979bff47e38291a7b364c721af"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:26:47.524 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 13:26:47.524 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 13:26:47.550 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 13:26:47.557 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 13:26:47.573 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:26:47.643 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 13:26:47.688 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 13:26:47.691 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:26:48.527 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 13:26:48.527 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 13:26:48.553 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****soBw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****AC1A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEHS591622:00000004","TimeStamp":"2019-07-22T10:26:48.0000000Z","ProcessId":12680,"LocalIpAddress":"127.0.0.1:11799","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 13:26:48.561 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"1808b769f66c4abba4d3f848b0b5e1d2","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 13:26:50.339 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:26:50.348 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:26:50.349 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:26:50.349 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:26:50.350 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:26:50.350 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:26:50.350 +03:00 [DBG] Start discovery request
2019-07-22 13:26:50.563 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 13:26:50.564 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:26:50.565 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:26:50.566 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 13:26:50.569 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 13:26:50.569 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 13:26:50.599 +03:00 [DBG] Start key discovery request
2019-07-22 13:26:50.902 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:26:50.903 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:26:50.903 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:26:50.954 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:26:50.962 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:26:50.962 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:26:50.962 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 13:26:50.969 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 13:26:50.969 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 13:26:50.992 +03:00 [DBG] Start userinfo request
2019-07-22 13:26:51.004 +03:00 [DBG] Bearer token found in header
2019-07-22 13:26:51.085 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:26:51.094 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:26:51.106 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:26:51.123 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563791208,"exp":1563794808,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563786499,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:26:51.146 +03:00 [DBG] Creating userinfo response
2019-07-22 13:26:51.166 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:26:51.178 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:26:51.187 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 13:26:51.187 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:26:51.217 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 13:26:51.221 +03:00 [DBG] End userinfo request
2019-07-22 13:26:51.291 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 13:26:51.292 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 13:26:51.293 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 13:26:51.297 +03:00 [DBG] Rendering check session result
2019-07-22 13:26:58.407 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 13:26:58.412 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 13:26:58.412 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 13:26:58.430 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:26:58.450 +03:00 [DBG] Start end session request validation
2019-07-22 13:26:58.465 +03:00 [DBG] Start identity token validation
2019-07-22 13:26:58.467 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:26:58.467 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 13:26:58.484 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:26:58.486 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563791208,"exp":1563791508,"iss":"http://localhost:5000","aud":"spa","nonce":"917f4c979bff47e38291a7b364c721af","iat":1563791208,"at_hash":"MSwVxef0Sz_GJ3yimaa-PQ","sid":"5d66ac3133587bacac7dc4b8aaf40a06","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563786499,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:26:58.494 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTEyMDgsImV4cCI6MTU2Mzc5MTUwOCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI5MTdmNGM5NzliZmY0N2UzODI5MWE3YjM2NGM3MjFhZiIsImlhdCI6MTU2Mzc5MTIwOCwiYXRfaGFzaCI6Ik1Td1Z4ZWYwU3pfR0ozeWltYWEtUFEiLCJzaWQiOiI1ZDY2YWMzMTMzNTg3YmFjYWM3ZGM0YjhhYWY0MGEwNiIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc4NjQ5OSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.vtcO99QEQ9BTl93StmszsmUTmScBDsy44KKtDLcmWzNLy2c0cpK9OuhM4WZEY9lLPw4yaPhRKMBcSfe2dBTkbajPZrOzkwWEiEbsDIcinaImot3yFl2w0B4Jgm1rZX1e6axr5A0GT6cmR-JDScwppWM64xUJJStXS_VHPwNxJW3cbXLqoV4tU_CKRk9qYz-HdGHdb_0dqbTuDLSN20YssmIAE7c_q8XIbgPamuE1Wt6NwC0lwljirNKvAFOluJoZGys2IkdEOxe4SKn__yaAfk3YL6VLnMWvNWSLU3lDO-zTtEN4zgM57bLcF2OKlNfNkBoofSMsWmwNNt4bbZsoBw","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 13:26:58.495 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 13:27:03.190 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 13:27:03.196 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 13:27:03.199 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 13:27:03.201 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEHS591623:00000007","TimeStamp":"2019-07-22T10:27:03.0000000Z","ProcessId":12680,"LocalIpAddress":"127.0.0.1:11799","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 13:27:03.449 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-22 13:27:03.459 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-22 13:27:03.460 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-22 13:27:03.478 +03:00 [DBG] Processing signout callback request
2019-07-22 13:27:03.558 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:27:03.558 +03:00 [DBG] No client front-channel logout URLs
2019-07-22 13:27:03.559 +03:00 [DBG] No client back-channel logout URLs
2019-07-22 13:27:03.559 +03:00 [INF] Successful signout callback.
2019-07-22 13:27:03.559 +03:00 [DBG] No client front-channel iframe urls
2019-07-22 13:27:03.559 +03:00 [DBG] No client back-channel iframe urls
2019-07-22 13:27:18.891 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:27:18.891 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:27:18.891 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:27:18.892 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:27:18.893 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:27:18.893 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:27:18.893 +03:00 [DBG] Start discovery request
2019-07-22 13:27:18.971 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 13:27:18.972 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 13:27:18.973 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 13:27:18.973 +03:00 [DBG] Start authorize request
2019-07-22 13:27:18.974 +03:00 [DBG] No user present in authorize request
2019-07-22 13:27:18.974 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:27:18.975 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:27:18.976 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:27:18.976 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e6a665effdf14e1cad864a6749ee1392","UiLocales":null,"Nonce":"047017a083224cd88d0925fada7240c4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e6a665effdf14e1cad864a6749ee1392","nonce":"047017a083224cd88d0925fada7240c4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:27:18.976 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 13:27:19.171 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:27:19.171 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:27:19.172 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:27:19.175 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:28:59.229 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 13:28:59.392 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 13:28:59.402 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 13:28:59.403 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 13:28:59.403 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 13:28:59.403 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 13:28:59.403 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 13:29:01.845 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 13:29:01.853 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 13:29:01.854 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 13:29:01.854 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 13:29:01.854 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 13:29:01.854 +03:00 [DBG] Error Url: /home/error
2019-07-22 13:29:01.854 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 13:29:28.322 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:29:28.333 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:29:28.333 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:29:28.366 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:29:29.430 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:29:29.431 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:29:29.441 +03:00 [DBG] Start discovery request
2019-07-22 13:29:29.602 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 13:29:29.616 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 13:29:29.616 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 13:29:29.632 +03:00 [DBG] Start authorize request
2019-07-22 13:29:29.663 +03:00 [DBG] No user present in authorize request
2019-07-22 13:29:29.681 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:29:29.734 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:29.930 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:29:30.003 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1a0562b6163844338d2069e7d59750e5","UiLocales":null,"Nonce":"566cf71370c14d0489aff063e311b3bd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1a0562b6163844338d2069e7d59750e5","nonce":"566cf71370c14d0489aff063e311b3bd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:29:30.103 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 13:29:30.336 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:29:30.336 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:30.337 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:29:30.344 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:33.944 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 13:29:34.401 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:29:34.402 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:34.402 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:29:39.214 +03:00 [DBG] Augmenting SignInContext
2019-07-22 13:29:39.221 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 13:29:39.222 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 13:29:39.223 +03:00 [DBG] Adding auth_time claim with value: 1563791379
2019-07-22 13:29:39.262 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 13:29:39.325 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEHTKJB5EC:00000003","TimeStamp":"2019-07-22T10:29:39.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 13:29:39.331 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:39.405 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 13:29:39.408 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 13:29:39.408 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 13:29:39.421 +03:00 [DBG] Start authorize callback request
2019-07-22 13:29:39.434 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:29:39.434 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:29:39.434 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:39.435 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:29:39.436 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1a0562b6163844338d2069e7d59750e5","UiLocales":null,"Nonce":"566cf71370c14d0489aff063e311b3bd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"60bccc007b990a69830f398df426aa93","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1a0562b6163844338d2069e7d59750e5","nonce":"566cf71370c14d0489aff063e311b3bd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:29:39.596 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 13:29:39.597 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 13:29:39.597 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 13:29:39.755 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:29:39.757 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:39.758 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:29:39.759 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:41.217 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 13:29:41.386 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:29:41.387 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:41.388 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:29:41.393 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEHTKJB5ED:00000005","TimeStamp":"2019-07-22T10:29:41.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 13:29:41.461 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:41.545 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 13:29:41.549 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 13:29:41.549 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 13:29:41.550 +03:00 [DBG] Start authorize callback request
2019-07-22 13:29:41.561 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:29:41.561 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:29:41.561 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:41.561 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:29:41.562 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1a0562b6163844338d2069e7d59750e5","UiLocales":null,"Nonce":"566cf71370c14d0489aff063e311b3bd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"60bccc007b990a69830f398df426aa93","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1a0562b6163844338d2069e7d59750e5","nonce":"566cf71370c14d0489aff063e311b3bd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:29:41.602 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 13:29:41.602 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 13:29:41.645 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 13:29:41.651 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 13:29:41.678 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:29:41.779 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 13:29:41.835 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 13:29:41.838 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:29:42.174 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 13:29:42.174 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 13:29:42.202 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****slbg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****OpCA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEHTKJB5EC:00000005","TimeStamp":"2019-07-22T10:29:42.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 13:29:42.208 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"1a0562b6163844338d2069e7d59750e5","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 13:29:42.262 +03:00 [DBG] Augmenting SignInContext
2019-07-22 13:29:42.263 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 13:29:43.688 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:29:43.689 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:29:43.689 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:29:43.691 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:29:43.695 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:29:43.695 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:29:43.695 +03:00 [DBG] Start discovery request
2019-07-22 13:29:43.908 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 13:29:43.912 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:29:43.912 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:29:43.913 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 13:29:43.917 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 13:29:43.917 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 13:29:43.941 +03:00 [DBG] Start key discovery request
2019-07-22 13:29:44.085 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:29:44.085 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:29:44.085 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:29:44.110 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:29:44.111 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:29:44.112 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:29:44.112 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 13:29:44.119 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 13:29:44.120 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 13:29:44.147 +03:00 [DBG] Start userinfo request
2019-07-22 13:29:44.159 +03:00 [DBG] Bearer token found in header
2019-07-22 13:29:44.260 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:44.270 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:44.278 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:29:44.283 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563791382,"exp":1563794982,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563791379,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:29:44.303 +03:00 [DBG] Creating userinfo response
2019-07-22 13:29:44.313 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:29:44.321 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:29:44.329 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 13:29:44.329 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:29:44.348 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 13:29:44.351 +03:00 [DBG] End userinfo request
2019-07-22 13:29:44.402 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 13:29:44.403 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 13:29:44.403 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 13:29:44.406 +03:00 [DBG] Rendering check session result
2019-07-22 13:29:52.416 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 13:29:52.420 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 13:29:52.420 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 13:29:52.440 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:29:52.460 +03:00 [DBG] Start end session request validation
2019-07-22 13:29:52.483 +03:00 [DBG] Start identity token validation
2019-07-22 13:29:52.487 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:29:52.488 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 13:29:52.504 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:29:52.507 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563791382,"exp":1563791682,"iss":"http://localhost:5000","aud":"spa","nonce":"566cf71370c14d0489aff063e311b3bd","iat":1563791382,"at_hash":"72auHCCeqIEvFA9WqUbTvg","sid":"60bccc007b990a69830f398df426aa93","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563791379,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:29:52.526 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTEzODIsImV4cCI6MTU2Mzc5MTY4MiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1NjZjZjcxMzcwYzE0ZDA0ODlhZmYwNjNlMzExYjNiZCIsImlhdCI6MTU2Mzc5MTM4MiwiYXRfaGFzaCI6IjcyYXVIQ0NlcUlFdkZBOVdxVWJUdmciLCJzaWQiOiI2MGJjY2MwMDdiOTkwYTY5ODMwZjM5OGRmNDI2YWE5MyIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5MTM3OSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.TuMP48EOpV3PY3ezm0tr93-lbqoa8tMPbgXC5IXWOTSLOeOChplxV-YL5sQUuHW8xzKuEWaKOVfAYXRnY1aO5DdbKvjMUOGd7sRqfuiYTwLspQOqkg0fB0JiGywTxwfPXCWCb1OJXRu0xSwFHZn-iDsT5lGLf-jSP_ymOoIHN0xAkuuBxfGZ-6FSassYnlvickFxxiRemY_h3Pldm1yR3wKR22129XTdhwFIa7jj5KALtqAHPSeLazo1uA5SRnQ7wmVzdHXs9iIJvEGUqtWM1dM_fpOCQMB_zeGn6j9Yg4_sAzXMsbLLn9xf6fLE2WEvipqZwmyj5eswOhc-H8slbg","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 13:29:52.526 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 13:29:59.595 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 13:29:59.597 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 13:29:59.598 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 13:29:59.599 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEHTKJB5ED:00000009","TimeStamp":"2019-07-22T10:29:59.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 13:30:04.662 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:30:04.662 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:30:04.662 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:30:04.664 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:30:04.666 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:30:04.666 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:30:04.666 +03:00 [DBG] Start discovery request
2019-07-22 13:30:04.721 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 13:30:04.722 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 13:30:04.722 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 13:30:04.723 +03:00 [DBG] Start authorize request
2019-07-22 13:30:04.723 +03:00 [DBG] No user present in authorize request
2019-07-22 13:30:04.723 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:30:04.723 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:30:04.723 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:30:04.724 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"4ae2ec0757dc42858964ac7c3355293a","UiLocales":null,"Nonce":"f064520720f44c71a9e4f98e36568239","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"4ae2ec0757dc42858964ac7c3355293a","nonce":"f064520720f44c71a9e4f98e36568239"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:30:04.724 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 13:30:04.814 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:30:04.816 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:30:04.817 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:30:04.817 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:30:34.418 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 13:30:34.556 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:30:34.556 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:30:34.557 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:30:34.598 +03:00 [DBG] Augmenting SignInContext
2019-07-22 13:30:34.599 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 13:30:34.599 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 13:30:34.599 +03:00 [DBG] Adding auth_time claim with value: 1563791434
2019-07-22 13:30:34.600 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 13:30:34.601 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEHTKJB5ED:0000000B","TimeStamp":"2019-07-22T10:30:34.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 13:30:34.601 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:30:34.632 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 13:30:34.633 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 13:30:34.633 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 13:30:34.633 +03:00 [DBG] Start authorize callback request
2019-07-22 13:30:34.634 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:30:34.634 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:30:34.634 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:30:34.634 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:30:34.635 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"4ae2ec0757dc42858964ac7c3355293a","UiLocales":null,"Nonce":"f064520720f44c71a9e4f98e36568239","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3566bdde55a964836054c4b0351a650c","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"4ae2ec0757dc42858964ac7c3355293a","nonce":"f064520720f44c71a9e4f98e36568239"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:30:34.665 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 13:30:34.665 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 13:30:34.665 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 13:30:34.666 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:30:34.684 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 13:30:34.684 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 13:30:34.695 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****kn0w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Wo-Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEHTKJB5EC:0000000B","TimeStamp":"2019-07-22T10:30:34.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 13:30:34.695 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"4ae2ec0757dc42858964ac7c3355293a","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 13:30:34.696 +03:00 [DBG] Augmenting SignInContext
2019-07-22 13:30:34.697 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 13:30:36.931 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:30:36.934 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:30:36.935 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:30:36.936 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:30:36.937 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:30:36.937 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:30:36.938 +03:00 [DBG] Start discovery request
2019-07-22 13:30:37.010 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 13:30:37.068 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:30:37.068 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:30:37.069 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 13:30:37.070 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 13:30:37.070 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 13:30:37.070 +03:00 [DBG] Start key discovery request
2019-07-22 13:30:37.217 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:30:37.218 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:30:37.219 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:30:37.272 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:30:37.275 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:30:37.275 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:30:37.277 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 13:30:37.278 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 13:30:37.278 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 13:30:37.279 +03:00 [DBG] Start userinfo request
2019-07-22 13:30:37.279 +03:00 [DBG] Bearer token found in header
2019-07-22 13:30:37.285 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:30:37.285 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:30:37.299 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:30:37.301 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563791434,"exp":1563795034,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563791434,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:30:37.302 +03:00 [DBG] Creating userinfo response
2019-07-22 13:30:37.302 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:30:37.302 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:30:37.303 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 13:30:37.303 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:30:37.312 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 13:30:37.312 +03:00 [DBG] End userinfo request
2019-07-22 13:30:37.398 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 13:30:37.399 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 13:30:37.399 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 13:30:37.400 +03:00 [DBG] Rendering check session result
2019-07-22 13:30:45.599 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 13:30:45.602 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 13:30:45.603 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 13:30:45.603 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:30:45.603 +03:00 [DBG] Start end session request validation
2019-07-22 13:30:45.604 +03:00 [DBG] Start identity token validation
2019-07-22 13:30:45.604 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:30:45.605 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 13:30:45.619 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:30:45.621 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563791434,"exp":1563791734,"iss":"http://localhost:5000","aud":"spa","nonce":"f064520720f44c71a9e4f98e36568239","iat":1563791434,"at_hash":"KsZOKBLDwI435HfK1IGuhw","sid":"3566bdde55a964836054c4b0351a650c","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563791434,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:30:45.622 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTE0MzQsImV4cCI6MTU2Mzc5MTczNCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJmMDY0NTIwNzIwZjQ0YzcxYTllNGY5OGUzNjU2ODIzOSIsImlhdCI6MTU2Mzc5MTQzNCwiYXRfaGFzaCI6IktzWk9LQkxEd0k0MzVIZksxSUd1aHciLCJzaWQiOiIzNTY2YmRkZTU1YTk2NDgzNjA1NGM0YjAzNTFhNjUwYyIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5MTQzNCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.PrXVJHuO3JF8Pj97HfNYYd5ZEpvRDDe76PF9UtghPNO-_KyKZv-pbem9cqcGYOy-KmwjhO8YlFPrNdkNUyR5v8AcH9xMkrrCQWG_-gaPotYd188qfkM31ZUjnUj2PzUx8oHAHC55noQHSaHRfe29S0hmacG3muHRGIxX04hekksN_xE8ZjaASIJnbC4bU8tv8syuFWuKzS_SU8BKImtVX-dpAuxwy7LtzbAMKfSvHXrfgAt7lmeI-x5EgxkGdrplz5p1HpITjFIYztlOTowLzIbYhw1cuhOGGCJx2kMmJlnHLUHVqKdmZb-gT8GIvoWwlzvmgYgLejWjFBlkDIkn0w","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 13:30:45.622 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 13:30:45.784 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 13:30:45.785 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 13:30:45.785 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 13:30:45.786 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEHTKJB5ED:0000000F","TimeStamp":"2019-07-22T10:30:45.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 13:39:34.801 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:39:34.808 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:39:34.808 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:39:34.816 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:39:34.835 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:39:34.835 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:39:34.836 +03:00 [DBG] Start discovery request
2019-07-22 13:39:34.938 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 13:39:34.949 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 13:39:34.950 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 13:39:34.950 +03:00 [DBG] Start authorize request
2019-07-22 13:39:34.952 +03:00 [DBG] No user present in authorize request
2019-07-22 13:39:34.953 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:39:34.956 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:39:34.959 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:39:34.965 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"86b9bd4d44664c2da894f5a646ac9d0d","UiLocales":null,"Nonce":"9d1efc8695174fb5a91c4f4f34b79f40","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"86b9bd4d44664c2da894f5a646ac9d0d","nonce":"9d1efc8695174fb5a91c4f4f34b79f40"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:39:34.965 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 13:39:35.287 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:39:35.287 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:39:35.288 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:39:35.289 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:39:37.293 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 13:39:37.437 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:39:37.438 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:39:37.439 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:39:37.556 +03:00 [DBG] Augmenting SignInContext
2019-07-22 13:39:37.557 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 13:39:37.558 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 13:39:37.558 +03:00 [DBG] Adding auth_time claim with value: 1563791977
2019-07-22 13:39:37.559 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 13:39:37.562 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEHTKJB5EE:00000004","TimeStamp":"2019-07-22T10:39:37.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 13:39:37.563 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:39:37.612 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 13:39:37.614 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 13:39:37.615 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 13:39:37.615 +03:00 [DBG] Start authorize callback request
2019-07-22 13:39:37.617 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:39:37.617 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:39:37.617 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:39:37.618 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:39:37.619 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"86b9bd4d44664c2da894f5a646ac9d0d","UiLocales":null,"Nonce":"9d1efc8695174fb5a91c4f4f34b79f40","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b2d93487620167c608028677d964ffd7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"86b9bd4d44664c2da894f5a646ac9d0d","nonce":"9d1efc8695174fb5a91c4f4f34b79f40"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:39:37.660 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 13:39:37.661 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 13:39:37.662 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 13:39:37.662 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:39:37.687 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 13:39:37.688 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 13:39:37.701 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****EedA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****worQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEHTKJB5EE:00000005","TimeStamp":"2019-07-22T10:39:37.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 13:39:37.702 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"86b9bd4d44664c2da894f5a646ac9d0d","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 13:39:37.702 +03:00 [DBG] Augmenting SignInContext
2019-07-22 13:39:37.703 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 13:39:39.774 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:39:39.777 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:39:39.777 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:39:39.778 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:39:39.779 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:39:39.779 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:39:39.780 +03:00 [DBG] Start discovery request
2019-07-22 13:39:39.912 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 13:39:39.912 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:39:39.912 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:39:39.917 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 13:39:39.996 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 13:39:39.997 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 13:39:39.997 +03:00 [DBG] Start key discovery request
2019-07-22 13:39:40.086 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:39:40.092 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:39:40.093 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:39:40.173 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:39:40.174 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:39:40.176 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:39:40.176 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 13:39:40.177 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 13:39:40.178 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 13:39:40.178 +03:00 [DBG] Start userinfo request
2019-07-22 13:39:40.179 +03:00 [DBG] Bearer token found in header
2019-07-22 13:39:40.186 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:39:40.186 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:39:40.197 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:39:40.199 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563791977,"exp":1563795577,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563791977,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:39:40.200 +03:00 [DBG] Creating userinfo response
2019-07-22 13:39:40.200 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:39:40.200 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:39:40.202 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 13:39:40.202 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:39:40.213 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 13:39:40.214 +03:00 [DBG] End userinfo request
2019-07-22 13:39:40.300 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 13:39:40.301 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 13:39:40.301 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 13:39:40.301 +03:00 [DBG] Rendering check session result
2019-07-22 13:39:44.666 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 13:39:44.667 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 13:39:44.667 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 13:39:44.668 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:39:44.668 +03:00 [DBG] Start end session request validation
2019-07-22 13:39:44.669 +03:00 [DBG] Start identity token validation
2019-07-22 13:39:44.670 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:39:44.671 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 13:39:44.687 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:39:44.688 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563791977,"exp":1563792277,"iss":"http://localhost:5000","aud":"spa","nonce":"9d1efc8695174fb5a91c4f4f34b79f40","iat":1563791977,"at_hash":"w8vy8dMg5zEvff8yEvzLfw","sid":"b2d93487620167c608028677d964ffd7","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563791977,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:39:44.689 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTE5NzcsImV4cCI6MTU2Mzc5MjI3NywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI5ZDFlZmM4Njk1MTc0ZmI1YTkxYzRmNGYzNGI3OWY0MCIsImlhdCI6MTU2Mzc5MTk3NywiYXRfaGFzaCI6Inc4dnk4ZE1nNXpFdmZmOHlFdnpMZnciLCJzaWQiOiJiMmQ5MzQ4NzYyMDE2N2M2MDgwMjg2NzdkOTY0ZmZkNyIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5MTk3NywiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.FeVcXekYap99mOV_892FC0ZY7EgsSBdTzCXrv0yzgjmFcoXJu5u4AgcgaOSxDT1_2fzgtfv5hxunqQfH23YSlF4akVMqXUk26pMktShmKsyUBO3ZMF4XIFdf6RjEc58iGk5HiyVkDDuSTMeJlVp_GedVKfZ5IAi7zmjLIhIgKln9ggPQ-2nOYUQf2XPRF1YEQoHKapJHQixAFQ0gb7JcP538xuzVWoCDxCjfs-AaBrOe0LHyF1xWEDyruzhAbguWlH36bl5ARDlvfHb2azAkqs4eW7qeSSFWZaZqZ9sOowi83U94zQhSucR_YnRGro3w94aW_FvOr7OKHy-9KUEedA","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 13:39:44.689 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 13:39:44.801 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 13:39:44.803 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 13:39:44.803 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 13:39:44.805 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEHTKJB5EE:0000000C","TimeStamp":"2019-07-22T10:39:44.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 13:39:50.397 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:39:50.397 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:39:50.398 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:39:50.399 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:39:50.399 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:39:50.400 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:39:50.400 +03:00 [DBG] Start discovery request
2019-07-22 13:39:50.445 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 13:39:50.446 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 13:39:50.447 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 13:39:50.447 +03:00 [DBG] Start authorize request
2019-07-22 13:39:50.447 +03:00 [DBG] No user present in authorize request
2019-07-22 13:39:50.447 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:39:50.448 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:39:50.448 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:39:50.450 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b3b3a0f7eac5495296d1e6591b13a263","UiLocales":null,"Nonce":"4617e1ffe93e4198a83352a867f4856b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b3b3a0f7eac5495296d1e6591b13a263","nonce":"4617e1ffe93e4198a83352a867f4856b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:39:50.450 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 13:39:50.568 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:39:50.569 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:39:50.569 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:39:50.570 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:43:16.218 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:43:16.241 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:43:16.242 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:43:16.257 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:43:16.273 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:43:16.273 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:43:16.273 +03:00 [DBG] Start discovery request
2019-07-22 13:43:16.389 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 13:43:16.395 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 13:43:16.395 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 13:43:16.395 +03:00 [DBG] Start authorize request
2019-07-22 13:43:16.399 +03:00 [DBG] No user present in authorize request
2019-07-22 13:43:16.400 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:43:16.400 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:43:16.402 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:43:16.415 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2621991a9ded42028adbf6e018b313d6","UiLocales":null,"Nonce":"3e59768403ed46448266b17c66d1e725","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2621991a9ded42028adbf6e018b313d6","nonce":"3e59768403ed46448266b17c66d1e725"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:43:16.416 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 13:43:16.645 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:43:16.646 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:43:16.647 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:43:16.648 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:43:19.726 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 13:43:20.181 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:43:20.182 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:43:20.182 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:43:20.389 +03:00 [DBG] Augmenting SignInContext
2019-07-22 13:43:20.390 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 13:43:20.390 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 13:43:20.390 +03:00 [DBG] Adding auth_time claim with value: 1563792200
2019-07-22 13:43:20.400 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 13:43:20.406 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEHTKJB5EI:00000002","TimeStamp":"2019-07-22T10:43:20.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 13:43:20.408 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:43:20.655 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 13:43:20.659 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 13:43:20.659 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 13:43:20.659 +03:00 [DBG] Start authorize callback request
2019-07-22 13:43:20.664 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:43:20.665 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:43:20.665 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:43:20.667 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:43:20.667 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2621991a9ded42028adbf6e018b313d6","UiLocales":null,"Nonce":"3e59768403ed46448266b17c66d1e725","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3a5ead1e80e0a0cb2831cdf595ee5db8","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2621991a9ded42028adbf6e018b313d6","nonce":"3e59768403ed46448266b17c66d1e725"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:43:20.773 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 13:43:20.774 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 13:43:20.774 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 13:43:20.774 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:43:20.803 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 13:43:20.803 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 13:43:20.816 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****lzSA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****m7PQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEHTKJB5EG:00000002","TimeStamp":"2019-07-22T10:43:20.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 13:43:20.818 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"2621991a9ded42028adbf6e018b313d6","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 13:43:20.818 +03:00 [DBG] Augmenting SignInContext
2019-07-22 13:43:20.819 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 13:43:25.665 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:43:25.667 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:43:25.668 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:43:25.670 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:43:25.671 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:43:25.671 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:43:25.671 +03:00 [DBG] Start discovery request
2019-07-22 13:43:25.927 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 13:43:25.927 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:43:25.927 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:43:25.934 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 13:43:25.936 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 13:43:25.936 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 13:43:25.936 +03:00 [DBG] Start key discovery request
2019-07-22 13:43:26.104 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:43:26.105 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:43:26.105 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:43:26.211 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:43:26.211 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:43:26.211 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:43:26.212 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 13:43:26.212 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 13:43:26.213 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 13:43:26.213 +03:00 [DBG] Start userinfo request
2019-07-22 13:43:26.213 +03:00 [DBG] Bearer token found in header
2019-07-22 13:43:26.305 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:43:26.306 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:43:26.375 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:43:26.383 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563792200,"exp":1563795800,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563792200,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:43:26.383 +03:00 [DBG] Creating userinfo response
2019-07-22 13:43:26.384 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:43:26.384 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:43:26.384 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 13:43:26.385 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:43:26.410 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 13:43:26.419 +03:00 [DBG] End userinfo request
2019-07-22 13:43:26.587 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 13:43:26.587 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 13:43:26.588 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 13:43:26.588 +03:00 [DBG] Rendering check session result
2019-07-22 13:43:36.401 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 13:43:36.402 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 13:43:36.402 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 13:43:36.403 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:43:36.403 +03:00 [DBG] Start end session request validation
2019-07-22 13:43:36.403 +03:00 [DBG] Start identity token validation
2019-07-22 13:43:36.404 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:43:36.404 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 13:43:36.422 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:43:36.424 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563792200,"exp":1563792500,"iss":"http://localhost:5000","aud":"spa","nonce":"3e59768403ed46448266b17c66d1e725","iat":1563792200,"at_hash":"Mta9v7nkE533OD0bj8YHMQ","sid":"3a5ead1e80e0a0cb2831cdf595ee5db8","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563792200,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:43:36.428 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTIyMDAsImV4cCI6MTU2Mzc5MjUwMCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIzZTU5NzY4NDAzZWQ0NjQ0ODI2NmIxN2M2NmQxZTcyNSIsImlhdCI6MTU2Mzc5MjIwMCwiYXRfaGFzaCI6Ik10YTl2N25rRTUzM09EMGJqOFlITVEiLCJzaWQiOiIzYTVlYWQxZTgwZTBhMGNiMjgzMWNkZjU5NWVlNWRiOCIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5MjIwMCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.nhFoX0uCetujVe6uziu95k5VYvmj8dVZ7I9bSLqIZsi-3D9UyIgN6_kRXNc6dUEWIMbByvfodnJh5OJzEH2xu-eA3aux8zMEpQQpGyp_oHFXwGbx69h_qZGMInaKXNUMe6JrQCPT8w9fydr_qyu0DiSmxh6SUhS7_7JGkVuT3pxGPWt35j6lGE0kGOsI7ZI3nAJqmuwBiB81L0rJVDiqc_oe0gcGhcwsLZh5aghjs0rO3bKO9LLGf3sesAd09SKAiYayYjiY6tt8HKsD4Yj4soRXhLSnUp9qrGv3H-ZYCoD31mfCGe13YWBMIlsBjKjHOis88pEPAb-J-5QTadlzSA","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 13:43:36.428 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 13:43:36.742 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 13:43:36.742 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 13:43:36.742 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 13:43:36.743 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEHTKJB5EJ:00000003","TimeStamp":"2019-07-22T10:43:36.0000000Z","ProcessId":1468,"LocalIpAddress":"127.0.0.1:35483","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 13:58:59.417 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 13:58:59.589 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 13:58:59.599 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 13:58:59.599 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 13:58:59.599 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 13:58:59.599 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 13:58:59.600 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 13:59:04.341 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 13:59:04.351 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 13:59:04.352 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 13:59:04.352 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 13:59:04.352 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 13:59:04.352 +03:00 [DBG] Error Url: /home/error
2019-07-22 13:59:04.352 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 13:59:35.633 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:59:35.650 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:59:35.650 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:59:35.663 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:59:38.140 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:59:38.140 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:59:38.153 +03:00 [DBG] Start discovery request
2019-07-22 13:59:38.331 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 13:59:38.371 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 13:59:38.372 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 13:59:38.381 +03:00 [DBG] Start authorize request
2019-07-22 13:59:38.420 +03:00 [DBG] No user present in authorize request
2019-07-22 13:59:38.435 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:59:38.510 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:38.640 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:59:38.677 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1389ce2edd544d5fbfd43fcab4bc9e24","UiLocales":null,"Nonce":"1695c2c9673c473c963da1260114de5b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1389ce2edd544d5fbfd43fcab4bc9e24","nonce":"1695c2c9673c473c963da1260114de5b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:59:38.751 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 13:59:39.159 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:59:39.160 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:39.161 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:59:39.169 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:43.924 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 13:59:44.429 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:59:44.430 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:44.430 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:59:49.785 +03:00 [DBG] Augmenting SignInContext
2019-07-22 13:59:49.790 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 13:59:49.790 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 13:59:49.791 +03:00 [DBG] Adding auth_time claim with value: 1563793189
2019-07-22 13:59:49.826 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 13:59:49.896 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEIEDBBSSN:00000003","TimeStamp":"2019-07-22T10:59:49.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 13:59:49.901 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:50.050 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 13:59:50.052 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 13:59:50.052 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 13:59:50.064 +03:00 [DBG] Start authorize callback request
2019-07-22 13:59:50.075 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:59:50.075 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:59:50.075 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:50.075 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:59:50.076 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1389ce2edd544d5fbfd43fcab4bc9e24","UiLocales":null,"Nonce":"1695c2c9673c473c963da1260114de5b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2da6cf4bfb3ba50669db1cbae9032213","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1389ce2edd544d5fbfd43fcab4bc9e24","nonce":"1695c2c9673c473c963da1260114de5b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:59:50.260 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 13:59:50.260 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 13:59:50.260 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 13:59:50.405 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:59:50.406 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:50.406 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:59:50.407 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:52.486 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 13:59:52.643 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:59:52.643 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:52.644 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:59:52.649 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEIEDBBSSO:00000005","TimeStamp":"2019-07-22T10:59:52.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 13:59:52.753 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:52.775 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 13:59:52.775 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 13:59:52.776 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 13:59:52.776 +03:00 [DBG] Start authorize callback request
2019-07-22 13:59:52.802 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:59:52.802 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 13:59:52.802 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:52.803 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 13:59:52.803 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1389ce2edd544d5fbfd43fcab4bc9e24","UiLocales":null,"Nonce":"1695c2c9673c473c963da1260114de5b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2da6cf4bfb3ba50669db1cbae9032213","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1389ce2edd544d5fbfd43fcab4bc9e24","nonce":"1695c2c9673c473c963da1260114de5b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 13:59:52.839 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 13:59:52.839 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 13:59:52.876 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 13:59:52.883 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 13:59:52.917 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:59:53.098 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 13:59:53.208 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 13:59:53.211 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 13:59:53.839 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 13:59:53.839 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 13:59:53.869 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****wniw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****QGSw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEIEDBBSSN:00000005","TimeStamp":"2019-07-22T10:59:53.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 13:59:53.873 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"1389ce2edd544d5fbfd43fcab4bc9e24","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 13:59:53.934 +03:00 [DBG] Augmenting SignInContext
2019-07-22 13:59:53.937 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 13:59:55.589 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 13:59:55.590 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:59:55.590 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:59:55.591 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 13:59:55.592 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 13:59:55.592 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 13:59:55.593 +03:00 [DBG] Start discovery request
2019-07-22 13:59:55.827 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 13:59:55.827 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:59:55.827 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:59:55.828 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 13:59:55.830 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 13:59:55.830 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 13:59:55.841 +03:00 [DBG] Start key discovery request
2019-07-22 13:59:56.135 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:59:56.136 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:59:56.136 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:59:56.167 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 13:59:56.169 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 13:59:56.169 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 13:59:56.169 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 13:59:56.179 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 13:59:56.179 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 13:59:56.200 +03:00 [DBG] Start userinfo request
2019-07-22 13:59:56.210 +03:00 [DBG] Bearer token found in header
2019-07-22 13:59:56.320 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:56.328 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 13:59:56.337 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 13:59:56.341 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563793193,"exp":1563796793,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563793189,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 13:59:56.362 +03:00 [DBG] Creating userinfo response
2019-07-22 13:59:56.378 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:59:56.394 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:59:56.404 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 13:59:56.404 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 13:59:56.415 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 13:59:56.418 +03:00 [DBG] End userinfo request
2019-07-22 13:59:56.486 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 13:59:56.487 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 13:59:56.487 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 13:59:56.491 +03:00 [DBG] Rendering check session result
2019-07-22 14:00:00.275 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 14:00:00.283 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 14:00:00.283 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 14:00:00.299 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:00:00.315 +03:00 [DBG] Start end session request validation
2019-07-22 14:00:00.326 +03:00 [DBG] Start identity token validation
2019-07-22 14:00:00.330 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:00:00.331 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 14:00:00.341 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:00:00.343 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563793193,"exp":1563793493,"iss":"http://localhost:5000","aud":"spa","nonce":"1695c2c9673c473c963da1260114de5b","iat":1563793193,"at_hash":"tbvFIJ-iAzUujZlEObYqHA","sid":"2da6cf4bfb3ba50669db1cbae9032213","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563793189,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:00:00.354 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTMxOTMsImV4cCI6MTU2Mzc5MzQ5MywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIxNjk1YzJjOTY3M2M0NzNjOTYzZGExMjYwMTE0ZGU1YiIsImlhdCI6MTU2Mzc5MzE5MywiYXRfaGFzaCI6InRidkZJSi1pQXpVdWpabEVPYllxSEEiLCJzaWQiOiIyZGE2Y2Y0YmZiM2JhNTA2NjlkYjFjYmFlOTAzMjIxMyIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5MzE4OSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.J9KsOWJ7Et5EMW9LoNPxnk5JYiuh1eRHOZPLYDE2kqM05WEBU97BAu5hiCiPSjoOwViMr8c2-Btr11x5Q1BTlGDkgPHi-1Gi3iHP7to0RCayHNWpDbNwNWVKUir2wOVIWtq9v5Svztl7lDpfiyeon-qbPeoRgqjtrannZtA26NbIBabtzetuOE0WRU5mRvBkaVop9gKAHd-UZ1nkQ_gnehb7yf8k0Td-84-hsSSSjcwxe5yMxTXe1i6sxcgEYCufplt6kqllVR3xx_zf5pz7RqcDbPUl_GxF1VQzezjdAIGZ3M05XXKwmtv6dz8n0KgF-wpDh3hmUGsWCkypn3wniw","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 14:00:00.355 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 14:06:04.634 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 14:06:04.818 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 14:06:04.822 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 14:06:04.838 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEIEDBBSSO:00000009","TimeStamp":"2019-07-22T11:06:04.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 14:06:16.620 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:06:16.627 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:06:16.627 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:06:16.633 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:06:16.667 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:06:16.667 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:06:16.668 +03:00 [DBG] Start discovery request
2019-07-22 14:06:16.768 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 14:06:16.783 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 14:06:16.783 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 14:06:16.783 +03:00 [DBG] Start authorize request
2019-07-22 14:06:16.790 +03:00 [DBG] No user present in authorize request
2019-07-22 14:06:16.791 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:06:16.793 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:06:16.799 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:06:16.807 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"083a7ba2f3f3410aa75047ab21c9a702","UiLocales":null,"Nonce":"2eafda82b3bd4035bda7dd3973e7102e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"083a7ba2f3f3410aa75047ab21c9a702","nonce":"2eafda82b3bd4035bda7dd3973e7102e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:06:16.808 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 14:06:17.297 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:06:17.297 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:06:17.298 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:06:17.299 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:06:20.989 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 14:06:21.269 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:06:21.269 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:06:21.283 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:06:21.687 +03:00 [DBG] Augmenting SignInContext
2019-07-22 14:06:21.688 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 14:06:21.688 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 14:06:21.688 +03:00 [DBG] Adding auth_time claim with value: 1563793581
2019-07-22 14:06:21.691 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 14:06:21.692 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEIEDBBSSO:0000000D","TimeStamp":"2019-07-22T11:06:21.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 14:06:21.692 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:06:21.823 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 14:06:21.824 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 14:06:21.824 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 14:06:21.824 +03:00 [DBG] Start authorize callback request
2019-07-22 14:06:21.834 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:06:21.834 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:06:21.834 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:06:21.835 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:06:21.835 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"083a7ba2f3f3410aa75047ab21c9a702","UiLocales":null,"Nonce":"2eafda82b3bd4035bda7dd3973e7102e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8893969b6f93fc64e5eb6b2b5764aea5","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"083a7ba2f3f3410aa75047ab21c9a702","nonce":"2eafda82b3bd4035bda7dd3973e7102e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:06:21.917 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 14:06:21.918 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 14:06:21.918 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 14:06:21.918 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:06:21.951 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 14:06:21.951 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 14:06:21.985 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****moIA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****0ecA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEIEDBBSSO:0000000E","TimeStamp":"2019-07-22T11:06:21.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 14:06:21.988 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"083a7ba2f3f3410aa75047ab21c9a702","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 14:06:21.991 +03:00 [DBG] Augmenting SignInContext
2019-07-22 14:06:21.999 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 14:06:24.672 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:06:24.673 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:06:24.674 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:06:24.674 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:06:24.675 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:06:24.675 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:06:24.675 +03:00 [DBG] Start discovery request
2019-07-22 14:06:24.813 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 14:06:24.814 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:06:24.814 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:06:24.814 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 14:06:24.815 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 14:06:24.815 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 14:06:24.815 +03:00 [DBG] Start key discovery request
2019-07-22 14:06:25.021 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:06:25.021 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:06:25.022 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:06:25.129 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:06:25.130 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:06:25.130 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:06:25.135 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 14:06:25.147 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 14:06:25.147 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 14:06:25.148 +03:00 [DBG] Start userinfo request
2019-07-22 14:06:25.148 +03:00 [DBG] Bearer token found in header
2019-07-22 14:06:25.168 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:06:25.168 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:06:25.180 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:06:25.181 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563793581,"exp":1563797181,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563793581,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:06:25.181 +03:00 [DBG] Creating userinfo response
2019-07-22 14:06:25.182 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:06:25.182 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:06:25.182 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 14:06:25.182 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:06:25.190 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 14:06:25.191 +03:00 [DBG] End userinfo request
2019-07-22 14:06:25.504 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 14:06:25.504 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 14:06:25.504 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 14:06:25.505 +03:00 [DBG] Rendering check session result
2019-07-22 14:06:28.358 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 14:06:28.359 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 14:06:28.359 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 14:06:28.360 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:06:28.360 +03:00 [DBG] Start end session request validation
2019-07-22 14:06:28.360 +03:00 [DBG] Start identity token validation
2019-07-22 14:06:28.361 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:06:28.362 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 14:06:28.387 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:06:28.388 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563793581,"exp":1563793881,"iss":"http://localhost:5000","aud":"spa","nonce":"2eafda82b3bd4035bda7dd3973e7102e","iat":1563793581,"at_hash":"Zcxm8PWm63DlOENDOS_7yw","sid":"8893969b6f93fc64e5eb6b2b5764aea5","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563793581,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:06:28.389 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTM1ODEsImV4cCI6MTU2Mzc5Mzg4MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIyZWFmZGE4MmIzYmQ0MDM1YmRhN2RkMzk3M2U3MTAyZSIsImlhdCI6MTU2Mzc5MzU4MSwiYXRfaGFzaCI6IlpjeG04UFdtNjNEbE9FTkRPU183eXciLCJzaWQiOiI4ODkzOTY5YjZmOTNmYzY0ZTVlYjZiMmI1NzY0YWVhNSIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5MzU4MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.L4tsoqoylupScxML7a16vwZusuBlCgfj1bUviBUJBE1rDDVVlQoWm1MxkeG29_oHD-M9wERo8mgrB65KaHqnecci5KEaIN7B_W3nKIaEwxQfsyFE6yPhfBrG9suiig2b1sz4HeXdL9p4RUsfcSsM-hvhnRlFddVvYNTAFQmljWafFMREetm3CN8j4x7_IIc2QFQirzwAXwtPiyae7Fmc583m2drPwQyPUF8cUS2l_PTUIN2dGi3IX8IoQcKObv-lw0-qy5nbDyZB_moyIkNy9cMRZBuXsC2YghNWFcaJOf5BcTxF6m17Gyf6ghUVI6kL6ipIEB_A4VX6p89aqZmoIA","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 14:06:28.389 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 14:07:02.117 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 14:07:02.126 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 14:07:02.126 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 14:07:02.127 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEIEDBBSSO:00000015","TimeStamp":"2019-07-22T11:07:02.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 14:07:35.235 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:07:35.259 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:07:35.259 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:07:35.280 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:07:35.348 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:07:35.348 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:07:35.354 +03:00 [DBG] Start discovery request
2019-07-22 14:07:36.633 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 14:07:36.652 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 14:07:36.652 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 14:07:36.652 +03:00 [DBG] Start authorize request
2019-07-22 14:07:36.653 +03:00 [DBG] No user present in authorize request
2019-07-22 14:07:36.655 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:07:36.656 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:07:36.663 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:07:36.671 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0e9df4b4494744d5a7c3e96b581e4b8d","UiLocales":null,"Nonce":"8d47d65325a744dd8da67a70178af2a4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0e9df4b4494744d5a7c3e96b581e4b8d","nonce":"8d47d65325a744dd8da67a70178af2a4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:07:36.671 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 14:07:37.172 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:07:37.173 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:07:37.174 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:07:37.174 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:07:41.116 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 14:07:41.252 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:07:41.252 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:07:41.253 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:07:41.373 +03:00 [DBG] Augmenting SignInContext
2019-07-22 14:07:41.374 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 14:07:41.374 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 14:07:41.377 +03:00 [DBG] Adding auth_time claim with value: 1563793661
2019-07-22 14:07:41.386 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 14:07:41.388 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEIEDBBSSO:00000019","TimeStamp":"2019-07-22T11:07:41.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 14:07:41.393 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:07:41.471 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 14:07:41.471 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 14:07:41.472 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 14:07:41.472 +03:00 [DBG] Start authorize callback request
2019-07-22 14:07:41.478 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:07:41.478 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:07:41.479 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:07:41.479 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:07:41.480 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0e9df4b4494744d5a7c3e96b581e4b8d","UiLocales":null,"Nonce":"8d47d65325a744dd8da67a70178af2a4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"74bbe5275e888049ab62375591451116","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0e9df4b4494744d5a7c3e96b581e4b8d","nonce":"8d47d65325a744dd8da67a70178af2a4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:07:41.570 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 14:07:41.570 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 14:07:41.570 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 14:07:41.570 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:07:41.600 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 14:07:41.601 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 14:07:41.616 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****o1FA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****O10Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEIEDBBSSO:0000001A","TimeStamp":"2019-07-22T11:07:41.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 14:07:41.617 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"0e9df4b4494744d5a7c3e96b581e4b8d","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 14:07:41.619 +03:00 [DBG] Augmenting SignInContext
2019-07-22 14:07:41.621 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 14:07:43.858 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:07:43.858 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:07:43.863 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:07:43.864 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:07:43.865 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:07:43.870 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:07:43.880 +03:00 [DBG] Start discovery request
2019-07-22 14:07:44.065 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 14:07:44.067 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:07:44.068 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:07:44.069 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 14:07:44.073 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 14:07:44.074 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 14:07:44.074 +03:00 [DBG] Start key discovery request
2019-07-22 14:07:44.544 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:07:44.546 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:07:44.546 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:07:44.690 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:07:44.691 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:07:44.691 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:07:44.693 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 14:07:44.694 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 14:07:44.694 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 14:07:44.695 +03:00 [DBG] Start userinfo request
2019-07-22 14:07:44.696 +03:00 [DBG] Bearer token found in header
2019-07-22 14:07:44.720 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:07:44.721 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:07:44.748 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:07:44.764 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563793661,"exp":1563797261,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563793661,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:07:44.765 +03:00 [DBG] Creating userinfo response
2019-07-22 14:07:44.788 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:07:44.788 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:07:44.789 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 14:07:44.789 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:07:44.825 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 14:07:44.826 +03:00 [DBG] End userinfo request
2019-07-22 14:07:44.962 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 14:07:44.962 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 14:07:44.962 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 14:07:44.964 +03:00 [DBG] Rendering check session result
2019-07-22 14:08:12.996 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 14:08:12.996 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 14:08:12.996 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 14:08:12.997 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:08:12.997 +03:00 [DBG] Start end session request validation
2019-07-22 14:08:12.997 +03:00 [DBG] Start identity token validation
2019-07-22 14:08:12.998 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:08:12.998 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 14:08:13.032 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:08:13.033 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563793661,"exp":1563793961,"iss":"http://localhost:5000","aud":"spa","nonce":"8d47d65325a744dd8da67a70178af2a4","iat":1563793661,"at_hash":"Mw2KfBI3EKQgX5huVL-_6A","sid":"74bbe5275e888049ab62375591451116","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563793661,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:08:13.033 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTM2NjEsImV4cCI6MTU2Mzc5Mzk2MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI4ZDQ3ZDY1MzI1YTc0NGRkOGRhNjdhNzAxNzhhZjJhNCIsImlhdCI6MTU2Mzc5MzY2MSwiYXRfaGFzaCI6Ik13MktmQkkzRUtRZ1g1aHVWTC1fNkEiLCJzaWQiOiI3NGJiZTUyNzVlODg4MDQ5YWI2MjM3NTU5MTQ1MTExNiIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5MzY2MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.ATUyfsbYdDpewD9Z_f_qwi-YjoVLIFSZO_isPRZ8zOUq-STdDmixhO1JfanU6jWS0p4ugjHh_q0zg5P0XelmywAw7BcHSDTlfCrT9Bje8sBqk1C_XUIhvWaNmUQHl2cqGFLB43B-_yWO_eeusYOoiqtegKDo9NbdRvF89GgPOpWJB8LSEnahYoAAP5lShxIHsIGaXcC_tvyhEuEa-7MvLssq8ZgrLDb9qHhF2KC7XnhXogPKNz0BwLflaL5UGLzMoikAgIio17lHRCIDH9s9YwhvIdkfXVcy-b5tZE9OaFiNEa1DPtDXBTuZqjQvRuZ3QstI9yEWbwNz9dXxf8o1FA","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 14:08:13.033 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 14:20:49.623 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 14:20:49.748 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 14:20:49.765 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 14:20:49.815 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEIEDBBSSO:00000021","TimeStamp":"2019-07-22T11:20:49.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 14:22:32.621 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:22:32.654 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:22:32.654 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:22:32.680 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:22:32.722 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:22:32.722 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:22:32.722 +03:00 [DBG] Start discovery request
2019-07-22 14:22:32.852 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 14:22:32.863 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 14:22:32.864 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 14:22:32.865 +03:00 [DBG] Start authorize request
2019-07-22 14:22:32.868 +03:00 [DBG] No user present in authorize request
2019-07-22 14:22:32.869 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:22:32.873 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:22:32.876 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:22:32.888 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"55349fb94f8741c7a1f54891e2fde4dd","UiLocales":null,"Nonce":"3ff3fa9c761541249aaa62817319bd12","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"55349fb94f8741c7a1f54891e2fde4dd","nonce":"3ff3fa9c761541249aaa62817319bd12"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:22:32.888 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 14:22:33.256 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:22:33.256 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:22:33.260 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:22:33.263 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:22:35.616 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 14:22:35.737 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:22:35.738 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:22:35.738 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:22:35.992 +03:00 [DBG] Augmenting SignInContext
2019-07-22 14:22:35.993 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 14:22:35.993 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 14:22:35.995 +03:00 [DBG] Adding auth_time claim with value: 1563794555
2019-07-22 14:22:36.000 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 14:22:36.003 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEIEDBBSSP:00000004","TimeStamp":"2019-07-22T11:22:36.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 14:22:36.003 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:22:36.114 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 14:22:36.118 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 14:22:36.118 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 14:22:36.118 +03:00 [DBG] Start authorize callback request
2019-07-22 14:22:36.125 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:22:36.125 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:22:36.125 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:22:36.126 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:22:36.127 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"55349fb94f8741c7a1f54891e2fde4dd","UiLocales":null,"Nonce":"3ff3fa9c761541249aaa62817319bd12","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"39fe1de33efbed10b8cc99b606fd5fa3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"55349fb94f8741c7a1f54891e2fde4dd","nonce":"3ff3fa9c761541249aaa62817319bd12"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:22:36.214 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 14:22:36.214 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 14:22:36.214 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 14:22:36.215 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:22:36.262 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 14:22:36.264 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 14:22:36.288 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****WuMQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****nW-g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEIEDBBSSP:00000005","TimeStamp":"2019-07-22T11:22:36.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 14:22:36.289 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"55349fb94f8741c7a1f54891e2fde4dd","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 14:22:36.289 +03:00 [DBG] Augmenting SignInContext
2019-07-22 14:22:36.289 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 14:22:40.636 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:22:40.637 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:22:40.637 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:22:40.638 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:22:40.639 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:22:40.639 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:22:40.639 +03:00 [DBG] Start discovery request
2019-07-22 14:22:40.804 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 14:22:40.805 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:22:40.805 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:22:40.807 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 14:22:40.817 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 14:22:40.819 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 14:22:40.821 +03:00 [DBG] Start key discovery request
2019-07-22 14:22:41.078 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:22:41.079 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:22:41.079 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:22:41.300 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:22:41.307 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:22:41.308 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:22:41.320 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 14:22:41.368 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 14:22:41.368 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 14:22:41.369 +03:00 [DBG] Start userinfo request
2019-07-22 14:22:41.369 +03:00 [DBG] Bearer token found in header
2019-07-22 14:22:41.388 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:22:41.389 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:22:41.399 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:22:41.401 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563794556,"exp":1563798156,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563794555,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:22:41.402 +03:00 [DBG] Creating userinfo response
2019-07-22 14:22:41.402 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:22:41.402 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:22:41.402 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 14:22:41.404 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:22:41.451 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 14:22:41.451 +03:00 [DBG] End userinfo request
2019-07-22 14:22:41.612 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 14:22:41.612 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 14:22:41.612 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 14:22:41.613 +03:00 [DBG] Rendering check session result
2019-07-22 14:22:44.596 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 14:22:44.598 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 14:22:44.598 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 14:22:44.599 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:22:44.600 +03:00 [DBG] Start end session request validation
2019-07-22 14:22:44.600 +03:00 [DBG] Start identity token validation
2019-07-22 14:22:44.600 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:22:44.600 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 14:22:44.612 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:22:44.613 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563794556,"exp":1563794856,"iss":"http://localhost:5000","aud":"spa","nonce":"3ff3fa9c761541249aaa62817319bd12","iat":1563794556,"at_hash":"cpToXj17Jlevoz-jeaieDQ","sid":"39fe1de33efbed10b8cc99b606fd5fa3","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563794555,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:22:44.626 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTQ1NTYsImV4cCI6MTU2Mzc5NDg1NiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIzZmYzZmE5Yzc2MTU0MTI0OWFhYTYyODE3MzE5YmQxMiIsImlhdCI6MTU2Mzc5NDU1NiwiYXRfaGFzaCI6ImNwVG9YajE3Smxldm96LWplYWllRFEiLCJzaWQiOiIzOWZlMWRlMzNlZmJlZDEwYjhjYzk5YjYwNmZkNWZhMyIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5NDU1NSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.TvQw1CRYO5yDNNWMacA8X-tVh9-Ebr4x_qL1AW-zYQH28U_C7UnPa2ttlXjgoWrYbLM3Jk5LFEcei3HfK3Rhi33iHZ2meVFwpyTFml96Dcz1h2q3FFYOVvlvfZOX4GoK95ZcJtC9JkJTMH79_ZpjUJ28pWkGzuOswuSfbD0_Ty9bBMMTRrMTCHAqFhXrN0Vsr_yQzNkELawJRoxdmB_P_N_AvcLR1-9QXdQ_b4RAhCkZkonM5LVdS47fmaIFFEt86Sob3-S9P2SSLxdu-_vvbMWBZBYst27qu_SXpyjP_7MJqEpgcOUT_oIz724J_VjnXS4E-GTcSMbr0HYcQoWuMQ"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 14:22:44.629 +03:00 [DBG] Success validating end session request from spa
2019-07-22 14:24:17.265 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 14:24:17.311 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 14:24:17.311 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 14:24:17.313 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEIEDBBSSP:0000000C","TimeStamp":"2019-07-22T11:24:17.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 14:24:22.606 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:24:22.606 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:24:22.607 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:24:22.609 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:24:22.611 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:24:22.612 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:24:22.612 +03:00 [DBG] Start discovery request
2019-07-22 14:24:22.689 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 14:24:22.690 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 14:24:22.690 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 14:24:22.690 +03:00 [DBG] Start authorize request
2019-07-22 14:24:22.690 +03:00 [DBG] No user present in authorize request
2019-07-22 14:24:22.691 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:24:22.691 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:24:22.692 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:24:22.692 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b366c1a6e18d47068311cf01b5967214","UiLocales":null,"Nonce":"f2bd42279a354e82a386bc82345e50eb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b366c1a6e18d47068311cf01b5967214","nonce":"f2bd42279a354e82a386bc82345e50eb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:24:22.693 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 14:24:22.785 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:24:22.785 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:24:22.787 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:24:22.787 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:24:25.443 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 14:24:25.544 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:24:25.545 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:24:25.546 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:24:25.588 +03:00 [DBG] Augmenting SignInContext
2019-07-22 14:24:25.588 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 14:24:25.588 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 14:24:25.588 +03:00 [DBG] Adding auth_time claim with value: 1563794665
2019-07-22 14:24:25.589 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 14:24:25.590 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEIEDBBSSP:00000010","TimeStamp":"2019-07-22T11:24:25.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 14:24:25.590 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:24:25.603 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 14:24:25.604 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 14:24:25.604 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 14:24:25.604 +03:00 [DBG] Start authorize callback request
2019-07-22 14:24:25.604 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:24:25.604 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:24:25.606 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:24:25.606 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:24:25.607 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b366c1a6e18d47068311cf01b5967214","UiLocales":null,"Nonce":"f2bd42279a354e82a386bc82345e50eb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"02aa9060c5cfec580ce2d625e234ef4a","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b366c1a6e18d47068311cf01b5967214","nonce":"f2bd42279a354e82a386bc82345e50eb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:24:25.629 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 14:24:25.629 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 14:24:25.630 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 14:24:25.630 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:24:25.650 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 14:24:25.650 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 14:24:25.661 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****E3Cg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****M97A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEIEDBBSSP:00000011","TimeStamp":"2019-07-22T11:24:25.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 14:24:25.664 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"b366c1a6e18d47068311cf01b5967214","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 14:24:25.664 +03:00 [DBG] Augmenting SignInContext
2019-07-22 14:24:25.665 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 14:24:26.732 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:24:26.732 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:24:26.733 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:24:26.733 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:24:26.735 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:24:26.735 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:24:26.735 +03:00 [DBG] Start discovery request
2019-07-22 14:24:26.848 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 14:24:26.848 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:24:26.848 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:24:26.850 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 14:24:26.852 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 14:24:26.852 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 14:24:26.853 +03:00 [DBG] Start key discovery request
2019-07-22 14:24:27.001 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:24:27.001 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:24:27.001 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:24:27.085 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:24:27.087 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:24:27.087 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:24:27.087 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 14:24:27.088 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 14:24:27.088 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 14:24:27.088 +03:00 [DBG] Start userinfo request
2019-07-22 14:24:27.089 +03:00 [DBG] Bearer token found in header
2019-07-22 14:24:27.096 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:24:27.097 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:24:27.103 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:24:27.104 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563794665,"exp":1563798265,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563794665,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:24:27.104 +03:00 [DBG] Creating userinfo response
2019-07-22 14:24:27.104 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:24:27.104 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:24:27.104 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 14:24:27.105 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:24:27.128 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 14:24:27.128 +03:00 [DBG] End userinfo request
2019-07-22 14:24:27.261 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 14:24:27.262 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 14:24:27.263 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 14:24:27.263 +03:00 [DBG] Rendering check session result
2019-07-22 14:27:41.238 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 14:27:41.240 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 14:27:41.241 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 14:27:41.241 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:27:41.241 +03:00 [DBG] Start end session request validation
2019-07-22 14:27:41.241 +03:00 [DBG] Start identity token validation
2019-07-22 14:27:41.241 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:27:41.242 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 14:27:41.256 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:27:41.256 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563794665,"exp":1563794965,"iss":"http://localhost:5000","aud":"spa","nonce":"f2bd42279a354e82a386bc82345e50eb","iat":1563794665,"at_hash":"5UWZywlLf5DKImlvheE2uA","sid":"02aa9060c5cfec580ce2d625e234ef4a","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563794665,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:27:41.257 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTQ2NjUsImV4cCI6MTU2Mzc5NDk2NSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJmMmJkNDIyNzlhMzU0ZTgyYTM4NmJjODIzNDVlNTBlYiIsImlhdCI6MTU2Mzc5NDY2NSwiYXRfaGFzaCI6IjVVV1p5d2xMZjVES0ltbHZoZUUydUEiLCJzaWQiOiIwMmFhOTA2MGM1Y2ZlYzU4MGNlMmQ2MjVlMjM0ZWY0YSIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5NDY2NSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.nb7WZWTe24ig48eKJB6pgnG6KH5nhR-Tl1F5XSSnXiSqZjOHwuisvmglE43kNGtV9CUWmyIcpO_TjvYCGbwUV3yYfYd0PS_9Ewk4ZFs3baeCGTbBDYztKfcrCM1lIUleNyZqzA_OBGd0uEuObK0Si_0AtcZ0KgsmJRwU9KxSubERMYkb8rrw4NUIaccoEXm6KhBowypB4NEWFOYobPpO399qY9Sr1QyOvq_U2rqQOiqvehbAu2AdiCgN3achidrPn2YaB52RkCxTvIIt6QZzBk7nKf8I-RqpRXjoorOp5S-RBbib8EaIpi_RUC7KHXC9z9LEFzGDPY6HbXRVNlE3Cg"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 14:27:41.258 +03:00 [DBG] Success validating end session request from spa
2019-07-22 14:31:18.853 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 14:31:18.853 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 14:31:18.853 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 14:31:18.855 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEIEDBBSSQ:00000002","TimeStamp":"2019-07-22T11:31:18.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 14:33:51.676 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:33:51.698 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:33:51.698 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:33:51.739 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:33:51.791 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:33:51.792 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:33:51.793 +03:00 [DBG] Start discovery request
2019-07-22 14:33:51.969 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 14:33:51.979 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 14:33:51.980 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 14:33:51.981 +03:00 [DBG] Start authorize request
2019-07-22 14:33:51.984 +03:00 [DBG] No user present in authorize request
2019-07-22 14:33:51.984 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:33:51.991 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:33:51.996 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:33:52.011 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6b78f7e00d104381b8218fc981c4e30f","UiLocales":null,"Nonce":"8315c5b4a3fb4eb88ec0df144cf007e8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6b78f7e00d104381b8218fc981c4e30f","nonce":"8315c5b4a3fb4eb88ec0df144cf007e8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:33:52.012 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 14:33:52.484 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:33:52.485 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:33:52.486 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:33:52.490 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:33:55.829 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 14:33:55.947 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:33:55.960 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:33:55.960 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:33:56.105 +03:00 [DBG] Augmenting SignInContext
2019-07-22 14:33:56.105 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 14:33:56.105 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 14:33:56.105 +03:00 [DBG] Adding auth_time claim with value: 1563795236
2019-07-22 14:33:56.107 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 14:33:56.108 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEIEDBBSSS:00000002","TimeStamp":"2019-07-22T11:33:56.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 14:33:56.109 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:33:56.136 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 14:33:56.139 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 14:33:56.139 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 14:33:56.139 +03:00 [DBG] Start authorize callback request
2019-07-22 14:33:56.141 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:33:56.141 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:33:56.141 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:33:56.142 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:33:56.142 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6b78f7e00d104381b8218fc981c4e30f","UiLocales":null,"Nonce":"8315c5b4a3fb4eb88ec0df144cf007e8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e78755b1b72c6e8d0814e8c41ca69a43","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6b78f7e00d104381b8218fc981c4e30f","nonce":"8315c5b4a3fb4eb88ec0df144cf007e8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:33:56.202 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 14:33:56.202 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 14:33:56.202 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 14:33:56.202 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:33:56.234 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 14:33:56.235 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 14:33:56.247 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****X4Ew","$type":"Token"},{"TokenType":"access_token","TokenValue":"****0qjw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEIEDBBSSU:00000002","TimeStamp":"2019-07-22T11:33:56.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 14:33:56.248 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"6b78f7e00d104381b8218fc981c4e30f","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 14:33:56.249 +03:00 [DBG] Augmenting SignInContext
2019-07-22 14:33:56.249 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 14:34:00.618 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:34:00.619 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:34:00.619 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:34:00.620 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:34:00.621 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:34:00.621 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:34:00.621 +03:00 [DBG] Start discovery request
2019-07-22 14:34:00.778 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 14:34:00.780 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:34:00.780 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:34:00.781 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 14:34:00.784 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 14:34:00.784 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 14:34:00.784 +03:00 [DBG] Start key discovery request
2019-07-22 14:34:01.071 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:34:01.072 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:34:01.072 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:34:01.176 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:34:01.180 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:34:01.181 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:34:01.182 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 14:34:01.184 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 14:34:01.185 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 14:34:01.185 +03:00 [DBG] Start userinfo request
2019-07-22 14:34:01.185 +03:00 [DBG] Bearer token found in header
2019-07-22 14:34:01.203 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:34:01.203 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:34:01.217 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:34:01.218 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563795236,"exp":1563798836,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563795236,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:34:01.218 +03:00 [DBG] Creating userinfo response
2019-07-22 14:34:01.219 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:34:01.220 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:34:01.223 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 14:34:01.223 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:34:01.253 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 14:34:01.253 +03:00 [DBG] End userinfo request
2019-07-22 14:34:01.434 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 14:34:01.435 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 14:34:01.435 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 14:34:01.436 +03:00 [DBG] Rendering check session result
2019-07-22 14:34:07.025 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 14:34:07.029 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 14:34:07.029 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 14:34:07.029 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:34:07.029 +03:00 [DBG] Start end session request validation
2019-07-22 14:34:07.029 +03:00 [DBG] Start identity token validation
2019-07-22 14:34:07.030 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:34:07.030 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 14:34:07.041 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:34:07.041 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563795236,"exp":1563795536,"iss":"http://localhost:5000","aud":"spa","nonce":"8315c5b4a3fb4eb88ec0df144cf007e8","iat":1563795236,"at_hash":"K8DtFKscml04A9xXgCWQKw","sid":"e78755b1b72c6e8d0814e8c41ca69a43","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563795236,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:34:07.042 +03:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTUyMzYsImV4cCI6MTU2Mzc5NTUzNiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI4MzE1YzViNGEzZmI0ZWI4OGVjMGRmMTQ0Y2YwMDdlOCIsImlhdCI6MTU2Mzc5NTIzNiwiYXRfaGFzaCI6Iks4RHRGS3NjbWwwNEE5eFhnQ1dRS3ciLCJzaWQiOiJlNzg3NTViMWI3MmM2ZThkMDgxNGU4YzQxY2E2OWE0MyIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5NTIzNiwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.ULifqeRQH2Wm1tc-6JD5T0m9qCh4ucStkebJjfosu58Pg91IpD4Olllt_K-nOkZASdI8Z7td3_Uog3z7TJ8awlQwO7iUuVmRv595jSuXw6owvGt6KMnPMYixsWCh0XiJbOkisQO3V4zgPfq5lQLouHiJ0r0D_fmDYJ9-47JO8zUDLaEU3iBob8Mf_nJoAxSPhWjFeF10PEkhaUu3_D8ycBRfdlypaMIKim-jIckqfvPjRaDfZtD8-xCYMupuziKIEPw_nFuRG-pNeUtJ6BGzW-EiBxQM7smFPZyzHUxtNFoA7fnVDsL5wYCq55ZFPjAau6ucLiBktaAs-M0bSIX4Ew","post_logout_redirect_uri":"http://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 14:34:07.043 +03:00 [ERR] Error processing end session request Invalid request
2019-07-22 14:36:41.988 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 14:36:41.991 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 14:36:41.991 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 14:36:41.993 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEIEDBBSSV:00000003","TimeStamp":"2019-07-22T11:36:41.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 14:37:10.281 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:37:10.285 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:37:10.286 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:37:10.291 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:37:10.316 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:37:10.316 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:37:10.318 +03:00 [DBG] Start discovery request
2019-07-22 14:37:10.511 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 14:37:10.519 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 14:37:10.520 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 14:37:10.520 +03:00 [DBG] Start authorize request
2019-07-22 14:37:10.521 +03:00 [DBG] No user present in authorize request
2019-07-22 14:37:10.522 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:37:10.523 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:37:10.528 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:37:10.537 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e50576f8acf04a5db1a7185e7f28ecac","UiLocales":null,"Nonce":"e9f6167fe9ef4c7cbadaa050a724651f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e50576f8acf04a5db1a7185e7f28ecac","nonce":"e9f6167fe9ef4c7cbadaa050a724651f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:37:10.538 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 14:37:10.989 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:37:10.990 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:37:10.991 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:37:10.993 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:37:14.347 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 14:37:14.464 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:37:14.465 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:37:14.465 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:37:14.660 +03:00 [DBG] Augmenting SignInContext
2019-07-22 14:37:14.660 +03:00 [DBG] Adding idp claim with value: local
2019-07-22 14:37:14.660 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-22 14:37:14.660 +03:00 [DBG] Adding auth_time claim with value: 1563795434
2019-07-22 14:37:14.661 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 14:37:14.661 +03:00 [INF] {"Username":"Ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEIEDBBST1:00000002","TimeStamp":"2019-07-22T11:37:14.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 14:37:14.662 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:37:14.787 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 14:37:14.789 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 14:37:14.789 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 14:37:14.789 +03:00 [DBG] Start authorize callback request
2019-07-22 14:37:14.791 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:37:14.791 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:37:14.792 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:37:14.792 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:37:14.793 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e50576f8acf04a5db1a7185e7f28ecac","UiLocales":null,"Nonce":"e9f6167fe9ef4c7cbadaa050a724651f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3846dae4c26eb35cbd29309a4dd741b7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e50576f8acf04a5db1a7185e7f28ecac","nonce":"e9f6167fe9ef4c7cbadaa050a724651f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:37:14.862 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-22 14:37:14.863 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 14:37:14.864 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 14:37:14.866 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:37:14.894 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 14:37:14.894 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 14:37:14.907 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****bLmA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9voA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEIEDBBST0:00000002","TimeStamp":"2019-07-22T11:37:14.0000000Z","ProcessId":2168,"LocalIpAddress":"127.0.0.1:39514","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 14:37:14.908 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"e50576f8acf04a5db1a7185e7f28ecac","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 14:37:14.908 +03:00 [DBG] Augmenting SignInContext
2019-07-22 14:37:14.909 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 14:37:18.739 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:37:18.739 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:37:18.739 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:37:18.740 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:37:18.741 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:37:18.741 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:37:18.741 +03:00 [DBG] Start discovery request
2019-07-22 14:37:18.834 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 14:37:18.835 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:37:18.835 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:37:18.835 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 14:37:18.838 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 14:37:18.838 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 14:37:18.838 +03:00 [DBG] Start key discovery request
2019-07-22 14:37:19.013 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:37:19.015 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:37:19.015 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:37:19.076 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:37:19.077 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:37:19.077 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:37:19.078 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 14:37:19.080 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 14:37:19.080 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 14:37:19.081 +03:00 [DBG] Start userinfo request
2019-07-22 14:37:19.081 +03:00 [DBG] Bearer token found in header
2019-07-22 14:37:19.095 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:37:19.096 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:37:19.134 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:37:19.134 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563795434,"exp":1563799034,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563795434,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:37:19.134 +03:00 [DBG] Creating userinfo response
2019-07-22 14:37:19.134 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:37:19.135 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:37:19.135 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 14:37:19.135 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:37:19.145 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 14:37:19.145 +03:00 [DBG] End userinfo request
2019-07-22 14:37:19.287 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 14:37:19.291 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 14:37:19.291 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 14:37:19.292 +03:00 [DBG] Rendering check session result
2019-07-22 14:37:22.500 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 14:37:22.507 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 14:37:22.507 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 14:37:22.507 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:37:22.508 +03:00 [DBG] Start end session request validation
2019-07-22 14:37:22.508 +03:00 [DBG] Start identity token validation
2019-07-22 14:37:22.508 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:37:22.508 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 14:37:22.521 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:37:22.522 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563795434,"exp":1563795734,"iss":"http://localhost:5000","aud":"spa","nonce":"e9f6167fe9ef4c7cbadaa050a724651f","iat":1563795434,"at_hash":"KCBSQC_zphgQ2lSKmhBD1Q","sid":"3846dae4c26eb35cbd29309a4dd741b7","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563795434,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:37:22.522 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTU0MzQsImV4cCI6MTU2Mzc5NTczNCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJlOWY2MTY3ZmU5ZWY0YzdjYmFkYWEwNTBhNzI0NjUxZiIsImlhdCI6MTU2Mzc5NTQzNCwiYXRfaGFzaCI6IktDQlNRQ196cGhnUTJsU0ttaEJEMVEiLCJzaWQiOiIzODQ2ZGFlNGMyNmViMzVjYmQyOTMwOWE0ZGQ3NDFiNyIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5NTQzNCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.MzfJP1HdWRRM8fBcbMXstArXiCjc_CWjZy6xdXuiRx0o3orCr4R4x8huty0kGPzp3aAM63RPe4qmC0iJZWOA_SewPOijGTusDJLoNDF-x6Vqd7cX1ooYOU4pr5OIIX5TPOUfe8upJ3ssobVXKk6C44cKJoB10lnQ34rp6YKKAEni4D6Jw0aWaikbhJuXoS4twW_IgCncGoP00nQmO-ipGe4aFfULsg6PRcec2cCv1jbI5oX5FX3C90YkZMZGKyYOnBabNxLaz8E-kCmuewn698iMzKjJh-pzP0YnVCowoEMbSZqFOQrTaDTqWVAWMrM8Ed7dFqjZ1EpXgraii5bLmA"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 14:37:22.522 +03:00 [DBG] Success validating end session request from spa
2019-07-22 14:53:05.329 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 14:53:05.529 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 14:53:05.539 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 14:53:05.539 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 14:53:05.539 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 14:53:05.540 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 14:53:05.540 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 14:53:08.005 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 14:53:08.013 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 14:53:08.013 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 14:53:08.013 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 14:53:08.014 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 14:53:08.014 +03:00 [DBG] Error Url: /home/error
2019-07-22 14:53:08.014 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 14:53:15.607 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:53:15.621 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:53:15.621 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:53:15.635 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:53:15.648 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:53:15.649 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:53:15.661 +03:00 [DBG] Start discovery request
2019-07-22 14:53:15.938 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 14:53:15.947 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 14:53:15.947 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 14:53:15.958 +03:00 [DBG] Start authorize request
2019-07-22 14:53:15.997 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:53:16.026 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:53:16.084 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:53:16.197 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:53:16.245 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ec3c202d0ac44db78b86f887b7227514","UiLocales":null,"Nonce":"0f8d48721b394bf1ab6b218e1d4d588f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3846dae4c26eb35cbd29309a4dd741b7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ec3c202d0ac44db78b86f887b7227514","nonce":"0f8d48721b394bf1ab6b218e1d4d588f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:53:22.192 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 14:53:22.193 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 14:53:22.193 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 14:53:22.587 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:53:22.588 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:53:22.589 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:53:22.595 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:53:24.534 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 14:53:25.080 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:53:25.081 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:53:25.081 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:53:25.136 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEJCKEEIGD:00000003","TimeStamp":"2019-07-22T11:53:25.0000000Z","ProcessId":6532,"LocalIpAddress":"127.0.0.1:26649","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 14:53:25.243 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:53:25.294 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 14:53:25.298 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 14:53:25.299 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 14:53:25.322 +03:00 [DBG] Start authorize callback request
2019-07-22 14:53:25.348 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:53:25.349 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:53:25.350 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:53:25.351 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:53:25.352 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ec3c202d0ac44db78b86f887b7227514","UiLocales":null,"Nonce":"0f8d48721b394bf1ab6b218e1d4d588f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3846dae4c26eb35cbd29309a4dd741b7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ec3c202d0ac44db78b86f887b7227514","nonce":"0f8d48721b394bf1ab6b218e1d4d588f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:53:25.415 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 14:53:25.416 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 14:53:25.493 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 14:53:25.516 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 14:53:25.527 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:53:25.592 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 14:53:25.667 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 14:53:25.668 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:53:26.585 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 14:53:26.586 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 14:53:26.613 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****rkpg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****sDkA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEJCKEEIGE:00000004","TimeStamp":"2019-07-22T11:53:26.0000000Z","ProcessId":6532,"LocalIpAddress":"127.0.0.1:26649","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 14:53:26.619 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"ec3c202d0ac44db78b86f887b7227514","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 14:53:28.110 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:53:28.135 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:53:28.136 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:53:28.149 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:53:28.149 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:53:28.149 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:53:28.150 +03:00 [DBG] Start discovery request
2019-07-22 14:53:28.326 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 14:53:28.329 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:53:28.329 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:53:28.330 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 14:53:28.333 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 14:53:28.333 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 14:53:28.344 +03:00 [DBG] Start key discovery request
2019-07-22 14:53:28.490 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:53:28.491 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:53:28.491 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:53:28.565 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:53:28.567 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:53:28.567 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:53:28.568 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 14:53:28.575 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 14:53:28.575 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 14:53:28.599 +03:00 [DBG] Start userinfo request
2019-07-22 14:53:28.617 +03:00 [DBG] Bearer token found in header
2019-07-22 14:53:28.753 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:53:28.763 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:53:28.776 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:53:28.780 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563796406,"exp":1563800006,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563795434,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:53:28.803 +03:00 [DBG] Creating userinfo response
2019-07-22 14:53:28.827 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:53:28.840 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:53:28.855 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 14:53:28.855 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:53:28.878 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 14:53:28.879 +03:00 [DBG] End userinfo request
2019-07-22 14:53:28.946 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 14:53:28.947 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 14:53:28.947 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 14:53:28.954 +03:00 [DBG] Rendering check session result
2019-07-22 14:53:33.781 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 14:53:33.787 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 14:53:33.787 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 14:53:33.804 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:53:33.841 +03:00 [DBG] Start end session request validation
2019-07-22 14:53:33.868 +03:00 [DBG] Start identity token validation
2019-07-22 14:53:33.870 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:53:33.870 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 14:53:33.886 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:53:33.887 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563796406,"exp":1563796706,"iss":"http://localhost:5000","aud":"spa","nonce":"0f8d48721b394bf1ab6b218e1d4d588f","iat":1563796406,"at_hash":"mlEyq98nIIZujtan85TbQg","sid":"3846dae4c26eb35cbd29309a4dd741b7","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563795434,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:53:33.894 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTY0MDYsImV4cCI6MTU2Mzc5NjcwNiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIwZjhkNDg3MjFiMzk0YmYxYWI2YjIxOGUxZDRkNTg4ZiIsImlhdCI6MTU2Mzc5NjQwNiwiYXRfaGFzaCI6Im1sRXlxOThuSUladWp0YW44NVRiUWciLCJzaWQiOiIzODQ2ZGFlNGMyNmViMzVjYmQyOTMwOWE0ZGQ3NDFiNyIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5NTQzNCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.gJ1nPm7cQmG4B5Irm3Nn2dkybuqMoebkyYSTjAMMNwsxP1nvfk2Y0lj94pYNRYnB4XdvyjDgcupxoOP6FwwPWZJWsUMdPwgsix-VLaTVWv7pYcCMgmK979gkXYPMudZtAuP12lF3YQbALzBpFLR4yhWD8YXUMHopgYuoJJvzBWMhKfPIAuUOo-onaYBFHp8seyjnDoC991RLOrgYJ8GlVdzir-1b0_INmOmD882miTFgb6qCBs3JZdGtUUEZJvc1_-qCKCO6VRyWUf6GvjxLf_wf8QlE43VsMoSvegzBmnb9i1h41c3KIf610xmvjVYDUnWZV216l3GuGkwuYErkpg"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 14:53:33.895 +03:00 [DBG] Success validating end session request from spa
2019-07-22 14:57:55.519 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 14:57:55.679 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 14:57:55.693 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 14:57:55.694 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 14:57:55.695 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 14:57:55.695 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 14:57:55.695 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 14:57:57.628 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 14:57:57.633 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 14:57:57.633 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 14:57:57.634 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 14:57:57.634 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 14:57:57.635 +03:00 [DBG] Error Url: /home/error
2019-07-22 14:57:57.635 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 14:58:12.086 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:58:12.109 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:58:12.109 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:58:12.118 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:58:12.135 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:58:12.136 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:58:12.153 +03:00 [DBG] Start discovery request
2019-07-22 14:58:12.467 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 14:58:12.484 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 14:58:12.485 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 14:58:12.502 +03:00 [DBG] Start authorize request
2019-07-22 14:58:12.548 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:58:12.584 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:58:12.687 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:58:12.815 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:58:12.871 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"fdefbce6492c4072abfed835ce7747ee","UiLocales":null,"Nonce":"509dc17004464a25880bf9a94cd5bf01","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3846dae4c26eb35cbd29309a4dd741b7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"fdefbce6492c4072abfed835ce7747ee","nonce":"509dc17004464a25880bf9a94cd5bf01"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:58:17.664 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 14:58:17.665 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 14:58:17.665 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 14:58:17.951 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:58:17.952 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:58:17.953 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:58:17.960 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:58:19.882 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 14:58:20.095 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:58:20.096 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:58:20.096 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:58:20.139 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEJFAT4BVQ:00000003","TimeStamp":"2019-07-22T11:58:20.0000000Z","ProcessId":14692,"LocalIpAddress":"127.0.0.1:26508","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 14:58:20.218 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:58:20.240 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 14:58:20.243 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 14:58:20.243 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 14:58:20.265 +03:00 [DBG] Start authorize callback request
2019-07-22 14:58:20.282 +03:00 [DBG] User in authorize request: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:58:20.282 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 14:58:20.282 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:58:20.283 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 14:58:20.284 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"fdefbce6492c4072abfed835ce7747ee","UiLocales":null,"Nonce":"509dc17004464a25880bf9a94cd5bf01","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3846dae4c26eb35cbd29309a4dd741b7","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"fdefbce6492c4072abfed835ce7747ee","nonce":"509dc17004464a25880bf9a94cd5bf01"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 14:58:20.308 +03:00 [DBG] user_consent grant with value: spa|1d0cb531-1e76-4ffa-8a77-7784a4398e95 not found in store.
2019-07-22 14:58:20.309 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 14:58:20.329 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 14:58:20.343 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 14:58:20.369 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:58:20.475 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 14:58:20.523 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 14:58:20.525 +03:00 [DBG] Getting claims for access token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:58:21.613 +03:00 [DBG] Getting claims for identity token for subject: 1d0cb531-1e76-4ffa-8a77-7784a4398e95 and client: spa
2019-07-22 14:58:21.614 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 14:58:21.637 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****imsA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****KCwg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEJFAT4BVP:00000004","TimeStamp":"2019-07-22T11:58:21.0000000Z","ProcessId":14692,"LocalIpAddress":"127.0.0.1:26508","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 14:58:21.644 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"fdefbce6492c4072abfed835ce7747ee","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 14:58:23.618 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 14:58:23.619 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:58:23.621 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:58:23.626 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:58:23.627 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:58:23.627 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:58:23.628 +03:00 [DBG] Start discovery request
2019-07-22 14:58:23.765 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 14:58:23.766 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:58:23.766 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:58:23.767 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 14:58:23.770 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 14:58:23.770 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 14:58:23.783 +03:00 [DBG] Start key discovery request
2019-07-22 14:58:23.963 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:58:23.964 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:58:23.964 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:58:24.002 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 14:58:24.002 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 14:58:24.002 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 14:58:24.003 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 14:58:24.015 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 14:58:24.015 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 14:58:24.044 +03:00 [DBG] Start userinfo request
2019-07-22 14:58:24.063 +03:00 [DBG] Bearer token found in header
2019-07-22 14:58:24.151 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:58:24.161 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:58:24.172 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:58:24.183 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563796701,"exp":1563800301,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563795434,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:58:24.215 +03:00 [DBG] Creating userinfo response
2019-07-22 14:58:24.236 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:58:24.253 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:58:24.276 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 14:58:24.277 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 14:58:24.306 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 14:58:24.309 +03:00 [DBG] End userinfo request
2019-07-22 14:58:24.354 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 14:58:24.355 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 14:58:24.355 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 14:58:24.359 +03:00 [DBG] Rendering check session result
2019-07-22 14:58:27.574 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-22 14:58:27.579 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-22 14:58:27.580 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-22 14:58:27.594 +03:00 [DBG] Processing signout request for 1d0cb531-1e76-4ffa-8a77-7784a4398e95
2019-07-22 14:58:27.613 +03:00 [DBG] Start end session request validation
2019-07-22 14:58:27.632 +03:00 [DBG] Start identity token validation
2019-07-22 14:58:27.638 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 14:58:27.639 +03:00 [DBG] Client found: spa / SPA Client
2019-07-22 14:58:27.657 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 14:58:27.660 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563796701,"exp":1563797001,"iss":"http://localhost:5000","aud":"spa","nonce":"509dc17004464a25880bf9a94cd5bf01","iat":1563796701,"at_hash":"obyY5K0IAPOWFl5H0u-5yw","sid":"3846dae4c26eb35cbd29309a4dd741b7","sub":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","auth_time":1563795434,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-22 14:58:27.668 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM3OTY3MDEsImV4cCI6MTU2Mzc5NzAwMSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1MDlkYzE3MDA0NDY0YTI1ODgwYmY5YTk0Y2Q1YmYwMSIsImlhdCI6MTU2Mzc5NjcwMSwiYXRfaGFzaCI6Im9ieVk1SzBJQVBPV0ZsNUgwdS01eXciLCJzaWQiOiIzODQ2ZGFlNGMyNmViMzVjYmQyOTMwOWE0ZGQ3NDFiNyIsInN1YiI6IjFkMGNiNTMxLTFlNzYtNGZmYS04YTc3LTc3ODRhNDM5OGU5NSIsImF1dGhfdGltZSI6MTU2Mzc5NTQzNCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.MV31IOB2hIw3aUklRjuOw2fK6YOQJri4mTrYuDBBd7RPRdfhxvhn6FYkwJ3d17r5lBoBESWpiK0lJkHNo_Jga1N7nA5-0-ibM0G3wZgfUAz8FjOgFx08EeU3VCzFtoyl4-nyrOTxoqGrKSuh3NvpzT5D5bRiWF-4FJWkWEpRxur1eSa7IWXfPkyMpQv8QNLPElAqOiMUusa9HJzg576yyIL4ktIBuw8L5zjWIq8kxoEX--P5Y6sR3qstSrN3ELlE99sopEEXrNrmnX1Ui_8KIGISi7VX8-zjsIyLNCOXIJFFAH1anbHuyt41ni1E5rutkX0lT4Lo46aLcAaTFjimsA"},"$type":"EndSessionRequestValidationLog"}
2019-07-22 14:58:27.670 +03:00 [DBG] Success validating end session request from spa
2019-07-22 14:58:40.113 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-22 14:58:40.116 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 14:58:40.117 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-22 14:58:40.118 +03:00 [INF] {"SubjectId":"1d0cb531-1e76-4ffa-8a77-7784a4398e95","DisplayName":"Ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOEJFAT4BVQ:00000007","TimeStamp":"2019-07-22T11:58:40.0000000Z","ProcessId":14692,"LocalIpAddress":"127.0.0.1:26508","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-22 16:14:56.364 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 16:14:56.616 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-22 16:14:56.624 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-22 16:14:56.624 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-22 16:14:56.625 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-22 16:14:56.625 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-22 16:14:56.625 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-22 16:14:58.389 +03:00 [DBG] Login Url: /Account/Login
2019-07-22 16:14:58.392 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 16:14:58.392 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-22 16:14:58.392 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-22 16:14:58.392 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 16:14:58.392 +03:00 [DBG] Error Url: /home/error
2019-07-22 16:14:58.393 +03:00 [DBG] Error Id Parameter: errorId
2019-07-22 16:43:30.533 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 16:43:30.714 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 16:43:30.714 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 16:43:30.830 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 16:43:34.518 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 16:43:34.518 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 16:43:34.534 +03:00 [DBG] Start discovery request
2019-07-22 16:43:34.939 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 16:43:34.948 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 16:43:34.948 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 16:43:34.961 +03:00 [DBG] Start authorize request
2019-07-22 16:43:35.024 +03:00 [DBG] No user present in authorize request
2019-07-22 16:43:35.041 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 16:43:35.109 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:43:35.276 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 16:43:35.304 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a06c760a0ddd40e3bba4bf0450e313a9","UiLocales":null,"Nonce":"5e31db786ba1438fbb077912fa2f5b27","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a06c760a0ddd40e3bba4bf0450e313a9","nonce":"5e31db786ba1438fbb077912fa2f5b27"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 16:43:35.407 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 16:43:35.804 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 16:43:35.805 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:43:35.805 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 16:43:35.808 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:44:12.244 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 16:44:12.928 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 16:44:12.929 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:44:12.929 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 16:44:41.430 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 16:45:02.045 +03:00 [ERR] An unhandled exception has occurred while executing the request.
MailKit.Security.AuthenticationException: 534: 5.7.14 <https://accounts.google.com/signin/continue?sarp=1&scc=1&plt=AKgnsbtn
5.7.14 e-nTw8UyQiDuiWkDPrQbae8cvH9PbV_4ldbXkdTFcLyQ4nv78Xh96AkQfdO3eimfXpyBfK
5.7.14 ZsJQx5Gg68E6UH-QSf84Tx_P7Z5PWfGh2qTeh_KCgWh7akOtG70CkzbmU9rgJS> Please
5.7.14 log in via your web browser and then try again.
5.7.14  Learn more at
5.7.14  https://support.google.com/mail/answer/78754 c1sm84093905wrh.1 - gsmtp ---> MailKit.Net.Smtp.SmtpCommandException: 5.7.14 <https://accounts.google.com/signin/continue?sarp=1&scc=1&plt=AKgnsbtn
5.7.14 e-nTw8UyQiDuiWkDPrQbae8cvH9PbV_4ldbXkdTFcLyQ4nv78Xh96AkQfdO3eimfXpyBfK
5.7.14 ZsJQx5Gg68E6UH-QSf84Tx_P7Z5PWfGh2qTeh_KCgWh7akOtG70CkzbmU9rgJS> Please
5.7.14 log in via your web browser and then try again.
5.7.14  Learn more at
5.7.14  https://support.google.com/mail/answer/78754 c1sm84093905wrh.1 - gsmtp
   --- End of inner exception stack trace ---
   at MailKit.Net.Smtp.SmtpClient.AuthenticateAsync(Encoding encoding, ICredentials credentials, Boolean doAsync, CancellationToken cancellationToken)
   at EP._15Puzzle.Security.Models.EmailService.SendEmailAsync(String email, String subject, String message) in D:\aspNet\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Models\EmailService.cs:line 27
   at IdentityServer4.Quickstart.UI.AccountController.Register(RegisterInputModel model, String button) in D:\aspNet\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-22 16:46:21.659 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 16:46:21.803 +03:00 [WRN] User 0cf5a5da-5484-426f-9c79-a87f3025144f validation failed: DuplicateUserName.
2019-07-22 16:46:35.935 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 16:46:37.988 +03:00 [ERR] An unhandled exception has occurred while executing the request.
MailKit.Security.AuthenticationException: 534: 5.7.14 <https://accounts.google.com/signin/continue?sarp=1&scc=1&plt=AKgnsbs-
5.7.14 z9VN5sPyMlDWGft0Os8u-n0IyZAFIOwK1FbX-NUx8AFx8Lvs9WRYnyny2wMEEFOcqEl5ng
5.7.14 Rl_TIOHuxZ0ZbEpZWCi1EylPXigfJB3SLxKz7pxkffmj6C0NuCrgUPnL1Igrd4> Please
5.7.14 log in via your web browser and then try again.
5.7.14  Learn more at
5.7.14  https://support.google.com/mail/answer/78754 v4sm36354464wmg.22 - gsmtp ---> MailKit.Net.Smtp.SmtpCommandException: 5.7.14 <https://accounts.google.com/signin/continue?sarp=1&scc=1&plt=AKgnsbs-
5.7.14 z9VN5sPyMlDWGft0Os8u-n0IyZAFIOwK1FbX-NUx8AFx8Lvs9WRYnyny2wMEEFOcqEl5ng
5.7.14 Rl_TIOHuxZ0ZbEpZWCi1EylPXigfJB3SLxKz7pxkffmj6C0NuCrgUPnL1Igrd4> Please
5.7.14 log in via your web browser and then try again.
5.7.14  Learn more at
5.7.14  https://support.google.com/mail/answer/78754 v4sm36354464wmg.22 - gsmtp
   --- End of inner exception stack trace ---
   at MailKit.Net.Smtp.SmtpClient.AuthenticateAsync(Encoding encoding, ICredentials credentials, Boolean doAsync, CancellationToken cancellationToken)
   at EP._15Puzzle.Security.Models.EmailService.SendEmailAsync(String email, String subject, String message) in D:\aspNet\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Models\EmailService.cs:line 27
   at IdentityServer4.Quickstart.UI.AccountController.Register(RegisterInputModel model, String button) in D:\aspNet\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-22 16:49:38.064 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 16:49:38.075 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 16:49:38.075 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 16:49:38.078 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 16:49:38.085 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 16:49:38.085 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 16:49:38.085 +03:00 [DBG] Start discovery request
2019-07-22 16:49:38.146 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-22 16:49:38.147 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-22 16:49:38.147 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-22 16:49:38.147 +03:00 [DBG] Start authorize request
2019-07-22 16:49:38.147 +03:00 [DBG] No user present in authorize request
2019-07-22 16:49:38.147 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 16:49:38.148 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:49:38.148 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 16:49:38.149 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8da376f91eec4b01bf35471206e7ae0d","UiLocales":null,"Nonce":"32df0f238a04449fb31debea699df21b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8da376f91eec4b01bf35471206e7ae0d","nonce":"32df0f238a04449fb31debea699df21b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 16:49:38.149 +03:00 [INF] Showing login: User is not authenticated
2019-07-22 16:49:38.231 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 16:49:38.231 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:49:38.232 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 16:49:38.232 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:49:42.850 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-22 16:49:45.131 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-22 16:49:46.082 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","DisplayName":"Voleg","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOEKQC43E9K:00000006","TimeStamp":"2019-07-22T13:49:46.0000000Z","ProcessId":2700,"LocalIpAddress":"127.0.0.1:8687","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-22 16:49:46.102 +03:00 [DBG] Augmenting SignInContext
2019-07-22 16:49:46.105 +03:00 [DBG] Adding amr claim with value: external
2019-07-22 16:49:46.113 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 16:49:46.123 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-22 16:49:46.250 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 16:49:46.251 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 16:49:46.252 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 16:49:46.262 +03:00 [DBG] Start authorize callback request
2019-07-22 16:49:46.292 +03:00 [DBG] User in authorize request: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-22 16:49:46.292 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 16:49:46.292 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:49:46.292 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 16:49:46.293 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8da376f91eec4b01bf35471206e7ae0d","UiLocales":null,"Nonce":"32df0f238a04449fb31debea699df21b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0929c57f8aa81c2a1eee73dd01a535ab","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8da376f91eec4b01bf35471206e7ae0d","nonce":"32df0f238a04449fb31debea699df21b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 16:49:46.418 +03:00 [DBG] user_consent grant with value: spa|6b6c8bb3-e686-435a-8b4b-54f2430ebf9a not found in store.
2019-07-22 16:49:46.419 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 16:49:46.419 +03:00 [INF] Showing consent: User has not yet consented
2019-07-22 16:49:46.486 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 16:49:46.486 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:49:46.487 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 16:49:46.487 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:50:36.541 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-22 16:50:36.609 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 16:50:36.609 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:50:36.610 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 16:50:36.612 +03:00 [INF] {"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOEKQC43E9K:0000000A","TimeStamp":"2019-07-22T13:50:36.0000000Z","ProcessId":2700,"LocalIpAddress":"127.0.0.1:8687","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-22 16:50:36.642 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:50:36.658 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-22 16:50:36.659 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-22 16:50:36.659 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-22 16:50:36.659 +03:00 [DBG] Start authorize callback request
2019-07-22 16:50:36.667 +03:00 [DBG] User in authorize request: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-22 16:50:36.667 +03:00 [DBG] Start authorize request protocol validation
2019-07-22 16:50:36.667 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:50:36.667 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-22 16:50:36.668 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8da376f91eec4b01bf35471206e7ae0d","UiLocales":null,"Nonce":"32df0f238a04449fb31debea699df21b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0929c57f8aa81c2a1eee73dd01a535ab","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8da376f91eec4b01bf35471206e7ae0d","nonce":"32df0f238a04449fb31debea699df21b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-22 16:50:36.670 +03:00 [DBG] user_consent grant with value: spa|6b6c8bb3-e686-435a-8b4b-54f2430ebf9a not found in store.
2019-07-22 16:50:36.670 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-22 16:50:36.678 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-22 16:50:36.681 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-22 16:50:36.686 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-22 16:50:36.718 +03:00 [DBG] Creating Implicit Flow response.
2019-07-22 16:50:36.749 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-22 16:50:36.749 +03:00 [DBG] Getting claims for access token for subject: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-22 16:50:37.048 +03:00 [DBG] Getting claims for identity token for subject: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a and client: spa
2019-07-22 16:50:37.048 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-22 16:50:37.081 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****U9qA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Tt-A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOEKQC43E9K:0000000B","TimeStamp":"2019-07-22T13:50:37.0000000Z","ProcessId":2700,"LocalIpAddress":"127.0.0.1:8687","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-22 16:50:37.083 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"8da376f91eec4b01bf35471206e7ae0d","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-22 16:50:37.130 +03:00 [DBG] Augmenting SignInContext
2019-07-22 16:50:37.131 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-22 16:50:39.243 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-22 16:50:39.243 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 16:50:39.243 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 16:50:39.244 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 16:50:39.244 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 16:50:39.244 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 16:50:39.244 +03:00 [DBG] Start discovery request
2019-07-22 16:50:39.332 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-22 16:50:39.332 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 16:50:39.332 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 16:50:39.332 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 16:50:39.334 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 16:50:39.334 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 16:50:39.341 +03:00 [DBG] Start key discovery request
2019-07-22 16:50:39.422 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 16:50:39.430 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 16:50:39.432 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 16:50:39.439 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-22 16:50:39.440 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-22 16:50:39.440 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-22 16:50:39.440 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-22 16:50:39.442 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-22 16:50:39.443 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-22 16:50:39.453 +03:00 [DBG] Start userinfo request
2019-07-22 16:50:39.458 +03:00 [DBG] Bearer token found in header
2019-07-22 16:50:39.592 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:50:39.602 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-22 16:50:39.606 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-22 16:50:39.607 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563803436,"exp":1563807036,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","auth_time":1563803386,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-22 16:50:39.630 +03:00 [DBG] Creating userinfo response
2019-07-22 16:50:39.636 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 16:50:39.650 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 16:50:39.656 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-22 16:50:39.656 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-22 16:50:39.668 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-22 16:50:39.668 +03:00 [DBG] End userinfo request
2019-07-22 16:50:39.738 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-22 16:50:39.739 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-22 16:50:39.739 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-22 16:50:39.781 +03:00 [DBG] Rendering check session result
2019-07-22 16:51:23.107 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 16:51:23.117 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 16:51:23.117 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 16:51:23.117 +03:00 [DBG] Start discovery request
2019-07-22 16:51:23.651 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 16:51:23.652 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 16:51:23.652 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 16:51:23.652 +03:00 [DBG] Start key discovery request
2019-07-23 13:50:36.195 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 13:50:36.278 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-23 13:50:36.282 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-23 13:50:36.282 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-23 13:50:36.282 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-23 13:50:36.282 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-23 13:50:36.282 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-23 13:50:37.457 +03:00 [DBG] Login Url: /Account/Login
2019-07-23 13:50:37.460 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 13:50:37.460 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-23 13:50:37.460 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-23 13:50:37.460 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 13:50:37.461 +03:00 [DBG] Error Url: /home/error
2019-07-23 13:50:37.461 +03:00 [DBG] Error Id Parameter: errorId
2019-07-23 13:50:47.310 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 13:50:47.315 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 13:50:47.315 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 13:50:47.317 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 13:50:47.762 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 13:50:47.763 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 13:50:47.795 +03:00 [DBG] Start discovery request
2019-07-23 13:50:47.946 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 13:50:47.950 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 13:50:47.950 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 13:50:47.959 +03:00 [DBG] Start authorize request
2019-07-23 13:50:47.997 +03:00 [DBG] No user present in authorize request
2019-07-23 13:50:48.004 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:50:48.035 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:50:48.100 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:50:48.125 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b8a3602ba3d946eca8352b50938e0c48","UiLocales":null,"Nonce":"8eb2263ef9ea474dad7ee1538492c604","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b8a3602ba3d946eca8352b50938e0c48","nonce":"8eb2263ef9ea474dad7ee1538492c604"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 13:50:48.160 +03:00 [INF] Showing login: User is not authenticated
2019-07-23 13:50:48.291 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:50:48.292 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:50:48.293 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:50:48.297 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:50:51.001 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 13:50:51.133 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:50:51.137 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:50:51.140 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:51:06.167 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 13:52:13.445 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 13:52:13.449 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 13:52:13.449 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 13:52:13.450 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 13:52:13.451 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 13:52:13.451 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 13:52:13.451 +03:00 [DBG] Start discovery request
2019-07-23 13:52:13.516 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 13:52:13.517 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 13:52:13.517 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 13:52:13.517 +03:00 [DBG] Start authorize request
2019-07-23 13:52:13.517 +03:00 [DBG] No user present in authorize request
2019-07-23 13:52:13.517 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:52:13.517 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:52:13.518 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:52:13.518 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9dce0879a4074e048fe363d98c04df50","UiLocales":null,"Nonce":"d6b4fac5b8df49f0b82bd3b01d02ab7c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9dce0879a4074e048fe363d98c04df50","nonce":"d6b4fac5b8df49f0b82bd3b01d02ab7c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 13:52:13.518 +03:00 [INF] Showing login: User is not authenticated
2019-07-23 13:52:13.581 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:52:13.582 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:52:13.582 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:52:13.582 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:52:20.077 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 13:52:20.120 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:52:20.121 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:52:20.121 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:52:20.186 +03:00 [INF] {"Username":"smolin4u@ya.ru","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOFBEC6TTKF:0000000C","TimeStamp":"2019-07-23T10:52:20.0000000Z","ProcessId":8480,"LocalIpAddress":"127.0.0.1:20324","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-23 13:52:20.189 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:52:20.189 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:52:20.190 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:52:20.190 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:52:52.117 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 13:52:52.119 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:52:52.119 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:52:52.126 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:53:02.772 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 13:53:06.552 +03:00 [ERR] An unhandled exception has occurred while executing the request.
MailKit.Security.AuthenticationException: 534: 5.7.14 <https://accounts.google.com/signin/continue?sarp=1&scc=1&plt=AKgnsbsf
5.7.14 nW-sgskj_w3SRolV3elfRxjSXiqOeYoO-hbqgpFxwSygQG_NYO95s1zbxy9dfO3TPeNM9T
5.7.14 vhNLpbxXqTrrLA-L4pbYIIgPTIbLTqXma4zgRH2uIJ2E-XYmWYykixNDyCbBTU> Please
5.7.14 log in via your web browser and then try again.
5.7.14  Learn more at
5.7.14  https://support.google.com/mail/answer/78754 h14sm41214946wrs.66 - gsmtp ---> MailKit.Net.Smtp.SmtpCommandException: 5.7.14 <https://accounts.google.com/signin/continue?sarp=1&scc=1&plt=AKgnsbsf
5.7.14 nW-sgskj_w3SRolV3elfRxjSXiqOeYoO-hbqgpFxwSygQG_NYO95s1zbxy9dfO3TPeNM9T
5.7.14 vhNLpbxXqTrrLA-L4pbYIIgPTIbLTqXma4zgRH2uIJ2E-XYmWYykixNDyCbBTU> Please
5.7.14 log in via your web browser and then try again.
5.7.14  Learn more at
5.7.14  https://support.google.com/mail/answer/78754 h14sm41214946wrs.66 - gsmtp
   --- End of inner exception stack trace ---
   at MailKit.Net.Smtp.SmtpClient.AuthenticateAsync(Encoding encoding, ICredentials credentials, Boolean doAsync, CancellationToken cancellationToken)
   at EP._15Puzzle.Security.Models.EmailService.SendEmailAsync(String email, String subject, String message) in D:\aspNet\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Models\EmailService.cs:line 27
   at IdentityServer4.Quickstart.UI.AccountController.Register(RegisterInputModel model, String button) in D:\aspNet\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-23 13:54:31.205 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 13:54:31.206 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 13:54:31.206 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 13:54:31.207 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 13:54:31.207 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 13:54:31.207 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 13:54:31.207 +03:00 [DBG] Start discovery request
2019-07-23 13:54:31.250 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 13:54:31.251 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 13:54:31.251 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 13:54:31.251 +03:00 [DBG] Start authorize request
2019-07-23 13:54:31.251 +03:00 [DBG] No user present in authorize request
2019-07-23 13:54:31.251 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:54:31.251 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:54:31.251 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:54:31.252 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2619de03e46d433eaee7771ca993353c","UiLocales":null,"Nonce":"98ab45ece4c548cda272dc947f6dec0a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2619de03e46d433eaee7771ca993353c","nonce":"98ab45ece4c548cda272dc947f6dec0a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 13:54:31.252 +03:00 [INF] Showing login: User is not authenticated
2019-07-23 13:54:31.273 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:54:31.273 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:54:31.274 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:54:31.274 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:54:32.661 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 13:54:32.670 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:54:32.671 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:54:32.672 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:54:44.210 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 13:55:21.509 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 13:55:24.238 +03:00 [ERR] An unhandled exception has occurred while executing the request.
MailKit.Security.AuthenticationException: 534: 5.7.14 <https://accounts.google.com/signin/continue?sarp=1&scc=1&plt=AKgnsbsc
5.7.14 IReDRbSJJ9QAZUFUofr0iDLKzfiy4myYpyn9A91FF5IuHORpQlp_NnRl7wAZL4vdRD0rf_
5.7.14 M5BwncIyuTmCemb2roU3RmLqTPpvDZs5CVVrRmTAbK45SGRO9jdmX2_K1SUrvM> Please
5.7.14 log in via your web browser and then try again.
5.7.14  Learn more at
5.7.14  https://support.google.com/mail/answer/78754 f3sm25892523wrt.56 - gsmtp ---> MailKit.Net.Smtp.SmtpCommandException: 5.7.14 <https://accounts.google.com/signin/continue?sarp=1&scc=1&plt=AKgnsbsc
5.7.14 IReDRbSJJ9QAZUFUofr0iDLKzfiy4myYpyn9A91FF5IuHORpQlp_NnRl7wAZL4vdRD0rf_
5.7.14 M5BwncIyuTmCemb2roU3RmLqTPpvDZs5CVVrRmTAbK45SGRO9jdmX2_K1SUrvM> Please
5.7.14 log in via your web browser and then try again.
5.7.14  Learn more at
5.7.14  https://support.google.com/mail/answer/78754 f3sm25892523wrt.56 - gsmtp
   --- End of inner exception stack trace ---
   at MailKit.Net.Smtp.SmtpClient.AuthenticateAsync(Encoding encoding, ICredentials credentials, Boolean doAsync, CancellationToken cancellationToken)
   at EP._15Puzzle.Security.Models.EmailService.SendEmailAsync(String email, String subject, String message) in D:\aspNet\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Models\EmailService.cs:line 27
   at IdentityServer4.Quickstart.UI.AccountController.Register(RegisterInputModel model, String button) in D:\aspNet\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-23 13:57:21.606 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 13:57:21.608 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 13:57:21.609 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 13:57:21.609 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 13:57:21.610 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 13:57:21.610 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 13:57:21.610 +03:00 [DBG] Start discovery request
2019-07-23 13:57:21.647 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 13:57:21.648 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 13:57:21.648 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 13:57:21.648 +03:00 [DBG] Start authorize request
2019-07-23 13:57:21.648 +03:00 [DBG] No user present in authorize request
2019-07-23 13:57:21.648 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:57:21.648 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:57:21.649 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:57:21.649 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"dc0c1cb966b947d581ff71f88577ea30","UiLocales":null,"Nonce":"fbe4191b93544367b7ad7caa6e92fcbd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"dc0c1cb966b947d581ff71f88577ea30","nonce":"fbe4191b93544367b7ad7caa6e92fcbd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 13:57:21.649 +03:00 [INF] Showing login: User is not authenticated
2019-07-23 13:57:21.685 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:57:21.686 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:57:21.686 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:57:21.686 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:57:23.635 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 13:57:23.639 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 13:57:23.660 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 13:57:23.660 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 13:57:33.153 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 13:57:35.136 +03:00 [ERR] An unhandled exception has occurred while executing the request.
MailKit.Security.AuthenticationException: 534: 5.7.14 <https://accounts.google.com/signin/continue?sarp=1&scc=1&plt=AKgnsbvR
5.7.14 i4mbztkYPoELsO6sYWMZuRZhu-vDCC--C4v9xW69jiM4WAK60GfQJfsxhX3EbQpGHFxXud
5.7.14 zt4slwvgfb4H36u6q4sxOBDttWGUQ8gR-46acz0JiChYSakqGB6h2y4U1kHOzs> Please
5.7.14 log in via your web browser and then try again.
5.7.14  Learn more at
5.7.14  https://support.google.com/mail/answer/78754 g8sm40545808wmf.17 - gsmtp ---> MailKit.Net.Smtp.SmtpCommandException: 5.7.14 <https://accounts.google.com/signin/continue?sarp=1&scc=1&plt=AKgnsbvR
5.7.14 i4mbztkYPoELsO6sYWMZuRZhu-vDCC--C4v9xW69jiM4WAK60GfQJfsxhX3EbQpGHFxXud
5.7.14 zt4slwvgfb4H36u6q4sxOBDttWGUQ8gR-46acz0JiChYSakqGB6h2y4U1kHOzs> Please
5.7.14 log in via your web browser and then try again.
5.7.14  Learn more at
5.7.14  https://support.google.com/mail/answer/78754 g8sm40545808wmf.17 - gsmtp
   --- End of inner exception stack trace ---
   at MailKit.Net.Smtp.SmtpClient.AuthenticateAsync(Encoding encoding, ICredentials credentials, Boolean doAsync, CancellationToken cancellationToken)
   at EP._15Puzzle.Security.Models.EmailService.SendEmailAsync(String email, String subject, String message) in D:\aspNet\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Models\EmailService.cs:line 27
   at IdentityServer4.Quickstart.UI.AccountController.Register(RegisterInputModel model, String button) in D:\aspNet\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 102
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-23 14:56:52.621 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 14:56:52.780 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 14:56:52.780 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 14:56:53.096 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 14:56:53.229 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 14:56:53.229 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 14:56:53.230 +03:00 [DBG] Start discovery request
2019-07-23 14:56:53.523 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 14:56:53.539 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 14:56:53.540 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 14:56:53.541 +03:00 [DBG] Start authorize request
2019-07-23 14:56:53.561 +03:00 [DBG] No user present in authorize request
2019-07-23 14:56:53.597 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 14:56:53.599 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 14:56:53.613 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 14:56:53.620 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d2e211648aab4c769d532464ae668c46","UiLocales":null,"Nonce":"0bbe814564c941fdbc760383e07b94c4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d2e211648aab4c769d532464ae668c46","nonce":"0bbe814564c941fdbc760383e07b94c4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 14:56:53.620 +03:00 [INF] Showing login: User is not authenticated
2019-07-23 14:56:53.727 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 14:56:53.729 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 14:56:53.741 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 14:56:53.754 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 14:56:57.882 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-23 14:57:01.445 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-23 14:57:02.571 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","DisplayName":"Voleg","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOFBEC6TTKI:00000007","TimeStamp":"2019-07-23T11:57:02.0000000Z","ProcessId":8480,"LocalIpAddress":"127.0.0.1:20324","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-23 14:57:02.587 +03:00 [DBG] Augmenting SignInContext
2019-07-23 14:57:02.591 +03:00 [DBG] Adding amr claim with value: external
2019-07-23 14:57:02.599 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-23 14:57:02.609 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-23 14:57:02.652 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-23 14:57:02.653 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-23 14:57:02.654 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-23 14:57:02.664 +03:00 [DBG] Start authorize callback request
2019-07-23 14:57:02.704 +03:00 [DBG] User in authorize request: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-23 14:57:02.704 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 14:57:02.704 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 14:57:02.705 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 14:57:02.705 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d2e211648aab4c769d532464ae668c46","UiLocales":null,"Nonce":"0bbe814564c941fdbc760383e07b94c4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"746c01235a5d95feabc052f765a092f1","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d2e211648aab4c769d532464ae668c46","nonce":"0bbe814564c941fdbc760383e07b94c4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 14:57:02.837 +03:00 [DBG] user_consent grant with value: spa|6b6c8bb3-e686-435a-8b4b-54f2430ebf9a not found in store.
2019-07-23 14:57:02.839 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-23 14:57:02.839 +03:00 [INF] Showing consent: User has not yet consented
2019-07-23 14:57:02.938 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 14:57:02.938 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 14:57:02.939 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 14:57:02.939 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 14:57:04.982 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 14:57:05.072 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 14:57:05.073 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 14:57:05.073 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 14:57:05.075 +03:00 [INF] {"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOFBEC6TTKI:0000000A","TimeStamp":"2019-07-23T11:57:05.0000000Z","ProcessId":8480,"LocalIpAddress":"127.0.0.1:20324","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-23 14:57:05.109 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 14:57:05.144 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-23 14:57:05.146 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-23 14:57:05.147 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-23 14:57:05.147 +03:00 [DBG] Start authorize callback request
2019-07-23 14:57:05.164 +03:00 [DBG] User in authorize request: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-23 14:57:05.164 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 14:57:05.164 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 14:57:05.165 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 14:57:05.165 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d2e211648aab4c769d532464ae668c46","UiLocales":null,"Nonce":"0bbe814564c941fdbc760383e07b94c4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"746c01235a5d95feabc052f765a092f1","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d2e211648aab4c769d532464ae668c46","nonce":"0bbe814564c941fdbc760383e07b94c4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 14:57:05.169 +03:00 [DBG] user_consent grant with value: spa|6b6c8bb3-e686-435a-8b4b-54f2430ebf9a not found in store.
2019-07-23 14:57:05.169 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-23 14:57:05.179 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-23 14:57:05.181 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-23 14:57:05.188 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-23 14:57:05.230 +03:00 [DBG] Creating Implicit Flow response.
2019-07-23 14:57:05.256 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-23 14:57:05.257 +03:00 [DBG] Getting claims for access token for subject: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-23 14:57:05.554 +03:00 [DBG] Getting claims for identity token for subject: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a and client: spa
2019-07-23 14:57:05.557 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-23 14:57:05.595 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****lfcA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****OG9Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOFBEC6TTKI:0000000B","TimeStamp":"2019-07-23T11:57:05.0000000Z","ProcessId":8480,"LocalIpAddress":"127.0.0.1:20324","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-23 14:57:05.599 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"d2e211648aab4c769d532464ae668c46","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-23 14:57:05.636 +03:00 [DBG] Augmenting SignInContext
2019-07-23 14:57:05.637 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-23 14:57:09.712 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 14:57:09.712 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 14:57:09.712 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 14:57:09.713 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 14:57:09.713 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 14:57:09.714 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 14:57:09.714 +03:00 [DBG] Start discovery request
2019-07-23 14:57:09.949 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-23 14:57:09.949 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 14:57:09.949 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 14:57:09.967 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 14:57:09.968 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 14:57:09.968 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 14:57:09.975 +03:00 [DBG] Start key discovery request
2019-07-23 14:57:10.192 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-23 14:57:10.193 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 14:57:10.193 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 14:57:10.248 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-23 14:57:10.248 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 14:57:10.248 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 14:57:10.248 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-23 14:57:10.251 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-23 14:57:10.251 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-23 14:57:10.263 +03:00 [DBG] Start userinfo request
2019-07-23 14:57:10.273 +03:00 [DBG] Bearer token found in header
2019-07-23 14:57:10.467 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 14:57:10.475 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 14:57:10.484 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-23 14:57:10.486 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563883025,"exp":1563886625,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","auth_time":1563883022,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-23 14:57:10.497 +03:00 [DBG] Creating userinfo response
2019-07-23 14:57:10.504 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-23 14:57:10.508 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-23 14:57:10.513 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-23 14:57:10.513 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-23 14:57:10.574 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-23 14:57:10.575 +03:00 [DBG] End userinfo request
2019-07-23 14:57:10.621 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 14:57:10.622 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 14:57:10.622 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 14:57:10.624 +03:00 [DBG] Rendering check session result
2019-07-23 14:57:14.837 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 14:57:14.837 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 14:57:14.838 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 14:57:14.838 +03:00 [DBG] Start discovery request
2019-07-23 14:57:15.331 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 14:57:15.332 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 14:57:15.333 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 14:57:15.333 +03:00 [DBG] Start key discovery request
2019-07-23 15:07:01.982 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 15:07:01.984 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 15:07:01.984 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 15:07:01.988 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:07:01.991 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:07:01.994 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:07:01.994 +03:00 [DBG] Start discovery request
2019-07-23 15:07:02.158 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 15:07:02.158 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 15:07:02.158 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 15:07:02.163 +03:00 [DBG] Rendering check session result
2019-07-23 15:18:43.485 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 15:18:43.485 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 15:18:43.485 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 15:18:43.486 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:18:43.486 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:18:43.486 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:18:43.486 +03:00 [DBG] Start discovery request
2019-07-23 15:18:43.594 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 15:18:43.594 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 15:18:43.594 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 15:18:43.594 +03:00 [DBG] Rendering check session result
2019-07-23 15:32:04.427 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 15:32:04.490 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-23 15:32:04.494 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-23 15:32:04.494 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-23 15:32:04.494 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-23 15:32:04.494 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-23 15:32:04.494 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-23 15:32:05.437 +03:00 [DBG] Login Url: /Account/Login
2019-07-23 15:32:05.440 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 15:32:05.440 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-23 15:32:05.440 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-23 15:32:05.440 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 15:32:05.440 +03:00 [DBG] Error Url: /home/error
2019-07-23 15:32:05.440 +03:00 [DBG] Error Id Parameter: errorId
2019-07-23 15:33:52.826 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 15:33:52.830 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 15:33:52.830 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 15:33:52.834 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:33:52.840 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:33:52.840 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:33:52.848 +03:00 [DBG] Start discovery request
2019-07-23 15:33:53.018 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-23 15:33:53.021 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-23 15:33:53.021 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-23 15:33:53.057 +03:00 [DBG] Processing signout request for 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-23 15:33:53.067 +03:00 [DBG] Start end session request validation
2019-07-23 15:33:53.104 +03:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","PostLogOutUri":null,"State":null,"Raw":{},"$type":"EndSessionRequestValidationLog"}
2019-07-23 15:33:53.142 +03:00 [DBG] Success validating end session request from null
2019-07-23 15:33:53.381 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-23 15:33:53.383 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-23 15:33:53.384 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-23 15:33:53.417 +03:00 [INF] {"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","DisplayName":"Voleg","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOFD72J4AP4:00000003","TimeStamp":"2019-07-23T12:33:53.0000000Z","ProcessId":4232,"LocalIpAddress":"127.0.0.1:16044","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-23 15:33:53.420 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in D:\aspNet\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 286
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in D:\aspNet\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 252
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-23 15:34:16.487 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 15:34:16.489 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 15:34:16.489 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 15:34:16.489 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:34:16.490 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:34:16.490 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:34:16.490 +03:00 [DBG] Start discovery request
2019-07-23 15:34:16.564 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 15:34:16.570 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 15:34:16.570 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 15:34:16.578 +03:00 [DBG] Start authorize request
2019-07-23 15:34:16.594 +03:00 [DBG] User in authorize request: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-23 15:34:16.617 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 15:34:16.668 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 15:34:16.748 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 15:34:16.759 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"96e41a31ef9048eba14c00b18a6066f3","UiLocales":null,"Nonce":"a59c7e7db2384900814f36a5fc27b978","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"746c01235a5d95feabc052f765a092f1","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"96e41a31ef9048eba14c00b18a6066f3","nonce":"a59c7e7db2384900814f36a5fc27b978"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 15:34:16.826 +03:00 [DBG] user_consent grant with value: spa|6b6c8bb3-e686-435a-8b4b-54f2430ebf9a not found in store.
2019-07-23 15:34:16.826 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-23 15:34:16.826 +03:00 [INF] Showing consent: User has not yet consented
2019-07-23 15:34:16.933 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 15:34:16.933 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 15:34:16.933 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 15:34:16.936 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 15:34:19.360 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 15:34:19.454 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 15:34:19.454 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 15:34:19.455 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 15:34:19.456 +03:00 [INF] {"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOFD72J4AP4:00000007","TimeStamp":"2019-07-23T12:34:19.0000000Z","ProcessId":4232,"LocalIpAddress":"127.0.0.1:16044","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-23 15:34:19.486 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 15:34:19.499 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-23 15:34:19.500 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-23 15:34:19.500 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-23 15:34:19.511 +03:00 [DBG] Start authorize callback request
2019-07-23 15:34:19.516 +03:00 [DBG] User in authorize request: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-23 15:34:19.516 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 15:34:19.516 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 15:34:19.516 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 15:34:19.516 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"96e41a31ef9048eba14c00b18a6066f3","UiLocales":null,"Nonce":"a59c7e7db2384900814f36a5fc27b978","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"746c01235a5d95feabc052f765a092f1","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"96e41a31ef9048eba14c00b18a6066f3","nonce":"a59c7e7db2384900814f36a5fc27b978"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 15:34:19.519 +03:00 [DBG] user_consent grant with value: spa|6b6c8bb3-e686-435a-8b4b-54f2430ebf9a not found in store.
2019-07-23 15:34:19.519 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-23 15:34:19.528 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-23 15:34:19.530 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-23 15:34:19.538 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-23 15:34:19.575 +03:00 [DBG] Creating Implicit Flow response.
2019-07-23 15:34:19.594 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-23 15:34:19.595 +03:00 [DBG] Getting claims for access token for subject: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-23 15:34:19.778 +03:00 [DBG] Getting claims for identity token for subject: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a and client: spa
2019-07-23 15:34:19.778 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-23 15:34:19.806 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****AIyQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****obKw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOFD72J4AP4:00000008","TimeStamp":"2019-07-23T12:34:19.0000000Z","ProcessId":4232,"LocalIpAddress":"127.0.0.1:16044","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-23 15:34:19.809 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"96e41a31ef9048eba14c00b18a6066f3","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-23 15:34:20.724 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 15:34:20.725 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 15:34:20.725 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 15:34:20.727 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:34:20.728 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:34:20.728 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:34:20.728 +03:00 [DBG] Start discovery request
2019-07-23 15:34:20.876 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-23 15:34:20.876 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 15:34:20.876 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 15:34:20.876 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 15:34:20.877 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 15:34:20.877 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 15:34:20.884 +03:00 [DBG] Start key discovery request
2019-07-23 15:34:21.003 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-23 15:34:21.004 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 15:34:21.004 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 15:34:21.048 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-23 15:34:21.049 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 15:34:21.049 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 15:34:21.050 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-23 15:34:21.051 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-23 15:34:21.051 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-23 15:34:21.061 +03:00 [DBG] Start userinfo request
2019-07-23 15:34:21.068 +03:00 [DBG] Bearer token found in header
2019-07-23 15:34:21.162 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 15:34:21.169 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 15:34:21.173 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-23 15:34:21.175 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563885259,"exp":1563888859,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","auth_time":1563883022,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-23 15:34:21.186 +03:00 [DBG] Creating userinfo response
2019-07-23 15:34:21.192 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-23 15:34:21.197 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-23 15:34:21.202 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-23 15:34:21.202 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-23 15:34:21.207 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-23 15:34:21.210 +03:00 [DBG] End userinfo request
2019-07-23 15:34:21.246 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 15:34:21.247 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 15:34:21.247 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 15:34:21.248 +03:00 [DBG] Rendering check session result
2019-07-23 15:34:34.132 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:34:34.133 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:34:34.133 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:34:34.133 +03:00 [DBG] Start discovery request
2019-07-23 15:34:34.691 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 15:34:34.692 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 15:34:34.692 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 15:34:34.693 +03:00 [DBG] Start key discovery request
2019-07-23 15:51:51.058 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:51:51.062 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:51:51.063 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:51:51.063 +03:00 [DBG] Start discovery request
2019-07-23 15:51:51.360 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 15:51:51.362 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 15:51:51.362 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 15:51:51.363 +03:00 [DBG] Start key discovery request
2019-07-23 16:04:59.276 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:04:59.281 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:04:59.281 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:04:59.281 +03:00 [DBG] Start discovery request
2019-07-23 16:04:59.634 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:04:59.635 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:04:59.636 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:04:59.636 +03:00 [DBG] Start key discovery request
2019-07-23 16:08:55.855 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:08:55.861 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:08:55.864 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:08:55.864 +03:00 [DBG] Start discovery request
2019-07-23 16:08:56.188 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:08:56.189 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:08:56.190 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:08:56.190 +03:00 [DBG] Start key discovery request
2019-07-23 16:21:55.632 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:21:55.637 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:21:55.638 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:21:55.638 +03:00 [DBG] Start discovery request
2019-07-23 16:21:56.051 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:21:56.053 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:21:56.054 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:21:56.054 +03:00 [DBG] Start key discovery request
2019-07-23 16:30:11.793 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 16:30:11.862 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 16:30:11.863 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 16:30:11.865 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:30:11.868 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:30:11.868 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:30:11.868 +03:00 [DBG] Start discovery request
2019-07-23 16:30:12.380 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 16:30:12.380 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 16:30:12.380 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 16:30:12.398 +03:00 [DBG] Rendering check session result
2019-07-23 16:36:56.036 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 16:36:56.066 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 16:36:56.066 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 16:36:56.074 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:36:56.095 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:36:56.096 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:36:56.096 +03:00 [DBG] Start discovery request
2019-07-23 16:36:56.292 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 16:36:56.311 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 16:36:56.311 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 16:36:56.311 +03:00 [DBG] Rendering check session result
2019-07-23 16:51:55.247 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 16:51:55.826 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 16:51:55.827 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 16:51:55.880 +03:00 [DBG] Start authorize request
2019-07-23 16:51:56.103 +03:00 [DBG] User in authorize request: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-23 16:51:56.114 +03:00 [DBG] Start authorize request protocol validation
2019-07-23 16:51:56.152 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 16:51:56.344 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 16:51:56.455 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a58fda6b30b94af1bd0f0095cecdb282","UiLocales":null,"Nonce":"8b59dea0781143b19378b357b7b8ab8e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"746c01235a5d95feabc052f765a092f1","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a58fda6b30b94af1bd0f0095cecdb282","nonce":"8b59dea0781143b19378b357b7b8ab8e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 16:51:57.894 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-23 16:51:57.910 +03:00 [DBG] Creating Implicit Flow response.
2019-07-23 16:51:57.911 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-23 16:51:57.911 +03:00 [DBG] Getting claims for access token for subject: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a
2019-07-23 16:51:58.325 +03:00 [DBG] Getting claims for identity token for subject: 6b6c8bb3-e686-435a-8b4b-54f2430ebf9a and client: spa
2019-07-23 16:51:58.325 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-23 16:51:58.417 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Uxzw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****HZDg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOFD72J4APB:00000001","TimeStamp":"2019-07-23T13:51:58.0000000Z","ProcessId":4232,"LocalIpAddress":"127.0.0.1:16044","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-23 16:51:58.417 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"a58fda6b30b94af1bd0f0095cecdb282","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-23 16:51:59.578 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 16:51:59.578 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 16:51:59.578 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 16:51:59.578 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:51:59.579 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:51:59.579 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:51:59.579 +03:00 [DBG] Start discovery request
2019-07-23 16:51:59.642 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 16:51:59.643 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 16:51:59.643 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 16:51:59.643 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:51:59.644 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:51:59.644 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:51:59.644 +03:00 [DBG] Start discovery request
2019-07-23 16:52:00.001 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-23 16:52:00.002 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 16:52:00.002 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 16:52:00.045 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:52:00.078 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:52:00.079 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:52:00.079 +03:00 [DBG] Start key discovery request
2019-07-23 16:52:00.204 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 16:52:00.204 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 16:52:00.204 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 16:52:00.204 +03:00 [DBG] Rendering check session result
2019-07-23 16:52:00.215 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-23 16:52:00.216 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 16:52:00.216 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 16:52:00.607 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-23 16:52:00.607 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 16:52:00.607 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 16:52:00.608 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-23 16:52:00.609 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-23 16:52:00.609 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-23 16:52:00.681 +03:00 [DBG] Start userinfo request
2019-07-23 16:52:00.681 +03:00 [DBG] Bearer token found in header
2019-07-23 16:52:00.999 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 16:52:00.999 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-23 16:52:01.177 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-23 16:52:01.177 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563889918,"exp":1563893518,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b6c8bb3-e686-435a-8b4b-54f2430ebf9a","auth_time":1563883022,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-23 16:52:01.177 +03:00 [DBG] Creating userinfo response
2019-07-23 16:52:01.255 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-23 16:52:01.255 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-23 16:52:01.255 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-23 16:52:01.255 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-23 16:52:01.348 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-23 16:52:01.405 +03:00 [DBG] End userinfo request
2019-07-23 17:09:21.523 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:09:21.554 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:09:21.555 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:09:21.559 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:09:21.565 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:09:21.565 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:09:21.565 +03:00 [DBG] Start discovery request
2019-07-23 17:09:21.835 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:09:21.835 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:09:21.835 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:09:21.836 +03:00 [DBG] Rendering check session result
2019-07-23 17:09:51.869 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:09:51.870 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:09:51.870 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:09:51.870 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:09:51.871 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:09:51.871 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:09:51.871 +03:00 [DBG] Start discovery request
2019-07-23 17:09:52.031 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:09:52.032 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:09:52.032 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:09:52.032 +03:00 [DBG] Rendering check session result
2019-07-23 17:10:19.776 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:10:19.777 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:10:19.777 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:10:19.777 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:10:19.777 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:10:19.777 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:10:19.777 +03:00 [DBG] Start discovery request
2019-07-23 17:10:19.882 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:10:19.883 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:10:19.883 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:10:19.884 +03:00 [DBG] Rendering check session result
2019-07-23 17:10:52.560 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:10:52.560 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:10:52.560 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:10:52.561 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:10:52.561 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:10:52.561 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:10:52.561 +03:00 [DBG] Start discovery request
2019-07-23 17:10:52.697 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:10:52.697 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:10:52.697 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:10:52.697 +03:00 [DBG] Rendering check session result
2019-07-23 17:11:31.250 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:11:31.250 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:11:31.250 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:11:31.251 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:11:31.251 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:11:31.251 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:11:31.251 +03:00 [DBG] Start discovery request
2019-07-23 17:11:31.346 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:11:31.346 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:11:31.346 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:11:31.346 +03:00 [DBG] Rendering check session result
2019-07-23 17:12:55.027 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:12:55.028 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:12:55.028 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:12:55.028 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:12:55.028 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:12:55.028 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:12:55.029 +03:00 [DBG] Start discovery request
2019-07-23 17:12:55.137 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:12:55.137 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:12:55.137 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:12:55.137 +03:00 [DBG] Rendering check session result
2019-07-23 17:23:10.681 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:23:10.683 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:23:10.683 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:23:10.687 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:23:10.693 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:23:10.693 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:23:10.693 +03:00 [DBG] Start discovery request
2019-07-23 17:23:10.951 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:23:10.952 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:23:10.952 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:23:10.952 +03:00 [DBG] Rendering check session result
2019-07-23 17:23:33.633 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:23:33.634 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:23:33.634 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:23:33.634 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:23:33.635 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:23:33.635 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:23:33.635 +03:00 [DBG] Start discovery request
2019-07-23 17:23:33.667 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:23:33.667 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:23:33.667 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:23:33.667 +03:00 [DBG] Rendering check session result
2019-07-23 17:23:44.547 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:23:44.548 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:23:44.548 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:23:44.548 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:23:44.548 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:23:44.548 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:23:44.549 +03:00 [DBG] Start discovery request
2019-07-23 17:23:44.944 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:23:44.944 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:23:44.944 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:23:44.945 +03:00 [DBG] Rendering check session result
2019-07-23 17:27:53.092 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:27:53.092 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:27:53.169 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:27:53.183 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:27:53.184 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:27:53.184 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:27:53.184 +03:00 [DBG] Start discovery request
2019-07-23 17:27:53.250 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:27:53.251 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:27:53.251 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:27:53.251 +03:00 [DBG] Rendering check session result
2019-07-23 17:28:15.542 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:28:15.542 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:28:15.542 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:28:15.543 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:28:15.543 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:28:15.543 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:28:15.543 +03:00 [DBG] Start discovery request
2019-07-23 17:28:15.631 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:28:15.632 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:28:15.632 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:28:15.633 +03:00 [DBG] Rendering check session result
2019-07-23 17:31:20.207 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:31:20.208 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:31:20.208 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:31:20.208 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:31:20.209 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:31:20.209 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:31:20.210 +03:00 [DBG] Start discovery request
2019-07-23 17:31:20.331 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:31:20.331 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:31:20.331 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:31:20.331 +03:00 [DBG] Rendering check session result
2019-07-24 13:46:27.925 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 13:46:28.056 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-24 13:46:28.067 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-24 13:46:28.068 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-24 13:46:28.069 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-24 13:46:28.069 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-24 13:46:28.069 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-24 13:46:29.127 +03:00 [DBG] Login Url: /Account/Login
2019-07-24 13:46:29.139 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 13:46:29.139 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-24 13:46:29.139 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-24 13:46:29.139 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 13:46:29.139 +03:00 [DBG] Error Url: /home/error
2019-07-24 13:46:29.139 +03:00 [DBG] Error Id Parameter: errorId
2019-07-24 14:07:01.017 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:07:01.051 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:07:01.051 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:07:01.083 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:07:01.479 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:07:01.479 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:07:01.487 +03:00 [DBG] Start discovery request
2019-07-24 14:07:01.654 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:07:01.663 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:07:01.664 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:07:01.675 +03:00 [DBG] Start authorize request
2019-07-24 14:07:01.713 +03:00 [DBG] No user present in authorize request
2019-07-24 14:07:01.729 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:07:01.777 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:07:01.850 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:07:01.873 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c6e7f0fcb7924ddd84bdbcc2d8a606dc","UiLocales":null,"Nonce":"95ea9b5955e747d6892b78d57dd3444c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c6e7f0fcb7924ddd84bdbcc2d8a606dc","nonce":"95ea9b5955e747d6892b78d57dd3444c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:07:01.910 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:07:02.080 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:07:02.080 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:07:02.081 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:07:02.089 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:07:07.445 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:07:07.737 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:07:07.737 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:07:07.738 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:07:10.588 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOG4GND0NJ3:00000004","TimeStamp":"2019-07-24T11:07:10.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-24 14:07:10.593 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:07:10.594 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:07:10.595 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:07:10.595 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:07:13.280 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:07:13.286 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:07:13.286 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:07:13.287 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:07:30.487 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:07:34.038 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:07:34.040 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:07:34.040 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:07:34.069 +03:00 [DBG] Start authorize callback request
2019-07-24 14:07:34.085 +03:00 [DBG] No user present in authorize request
2019-07-24 14:07:34.086 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:07:34.086 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:07:34.087 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:07:34.088 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c6e7f0fcb7924ddd84bdbcc2d8a606dc","UiLocales":null,"Nonce":"95ea9b5955e747d6892b78d57dd3444c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c6e7f0fcb7924ddd84bdbcc2d8a606dc","nonce":"95ea9b5955e747d6892b78d57dd3444c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:07:34.088 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:07:34.105 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:07:34.105 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:07:34.106 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:07:34.107 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:00.350 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:08:00.354 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:08:00.355 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:00.356 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:08:00.366 +03:00 [INF] {"Username":"Ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOG4GND0NJ3:0000000C","TimeStamp":"2019-07-24T11:08:00.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-24 14:08:00.367 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:08:00.367 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:00.367 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:08:00.368 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:04.209 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:08:04.214 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:08:04.216 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:04.223 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:08:04.545 +03:00 [DBG] Augmenting SignInContext
2019-07-24 14:08:04.552 +03:00 [DBG] Adding idp claim with value: local
2019-07-24 14:08:04.552 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-24 14:08:04.553 +03:00 [DBG] Adding auth_time claim with value: 1563966484
2019-07-24 14:08:04.574 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 14:08:04.575 +03:00 [INF] {"Username":"ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","DisplayName":"ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG4GND0NJ3:0000000D","TimeStamp":"2019-07-24T11:08:04.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 14:08:04.578 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:04.608 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:08:04.609 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:08:04.609 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:08:04.609 +03:00 [DBG] Start authorize callback request
2019-07-24 14:08:04.610 +03:00 [DBG] User in authorize request: 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:08:04.610 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:08:04.610 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:04.611 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:08:04.611 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c6e7f0fcb7924ddd84bdbcc2d8a606dc","UiLocales":null,"Nonce":"95ea9b5955e747d6892b78d57dd3444c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bfdb0e5cea15dfacacbddd20d6a32e6e","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c6e7f0fcb7924ddd84bdbcc2d8a606dc","nonce":"95ea9b5955e747d6892b78d57dd3444c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:08:04.680 +03:00 [DBG] user_consent grant with value: spa|1d449fe5-1ff7-4ce1-876c-9305773827f7 not found in store.
2019-07-24 14:08:04.683 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 14:08:04.684 +03:00 [INF] Showing consent: User has not yet consented
2019-07-24 14:08:04.772 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:08:04.772 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:04.772 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:08:04.773 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:06.826 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:08:06.864 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:08:06.864 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:06.865 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:08:06.867 +03:00 [INF] {"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOG4GND0NJ3:00000010","TimeStamp":"2019-07-24T11:08:06.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-24 14:08:06.904 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:06.931 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:08:06.931 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:08:06.932 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:08:06.932 +03:00 [DBG] Start authorize callback request
2019-07-24 14:08:06.946 +03:00 [DBG] User in authorize request: 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:08:06.946 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:08:06.946 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:06.946 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:08:06.947 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c6e7f0fcb7924ddd84bdbcc2d8a606dc","UiLocales":null,"Nonce":"95ea9b5955e747d6892b78d57dd3444c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bfdb0e5cea15dfacacbddd20d6a32e6e","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c6e7f0fcb7924ddd84bdbcc2d8a606dc","nonce":"95ea9b5955e747d6892b78d57dd3444c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:08:06.953 +03:00 [DBG] user_consent grant with value: spa|1d449fe5-1ff7-4ce1-876c-9305773827f7 not found in store.
2019-07-24 14:08:06.953 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 14:08:06.968 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-24 14:08:06.972 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-24 14:08:06.984 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:08:07.031 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 14:08:07.055 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 14:08:07.057 +03:00 [DBG] Getting claims for access token for subject: 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:08:07.248 +03:00 [DBG] Getting claims for identity token for subject: 1d449fe5-1ff7-4ce1-876c-9305773827f7 and client: spa
2019-07-24 14:08:07.249 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 14:08:07.268 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****1-Vg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****K_ew","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG4GND0NJ3:00000011","TimeStamp":"2019-07-24T11:08:07.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 14:08:07.274 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"c6e7f0fcb7924ddd84bdbcc2d8a606dc","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 14:08:07.313 +03:00 [DBG] Augmenting SignInContext
2019-07-24 14:08:07.315 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 14:08:08.916 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:08:08.917 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:08:08.917 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:08:08.918 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:08:08.924 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:08:08.931 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:08:08.931 +03:00 [DBG] Start discovery request
2019-07-24 14:08:09.072 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 14:08:09.072 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:08:09.072 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:08:09.073 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:08:09.075 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:08:09.075 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:08:09.098 +03:00 [DBG] Start key discovery request
2019-07-24 14:08:09.235 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:08:09.238 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:08:09.239 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:08:09.295 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:08:09.300 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:08:09.301 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:08:09.303 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 14:08:09.308 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 14:08:09.308 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 14:08:09.338 +03:00 [DBG] Start userinfo request
2019-07-24 14:08:09.364 +03:00 [DBG] Bearer token found in header
2019-07-24 14:08:09.449 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:09.459 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:08:09.467 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:08:09.471 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563966487,"exp":1563970087,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d449fe5-1ff7-4ce1-876c-9305773827f7","auth_time":1563966484,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:08:09.488 +03:00 [DBG] Creating userinfo response
2019-07-24 14:08:09.499 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:08:09.506 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:08:09.512 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 14:08:09.512 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:08:09.520 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 14:08:09.522 +03:00 [DBG] End userinfo request
2019-07-24 14:08:09.571 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 14:08:09.573 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 14:08:09.574 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 14:08:09.578 +03:00 [DBG] Rendering check session result
2019-07-24 14:08:16.101 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:08:16.104 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:08:16.105 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:08:16.105 +03:00 [DBG] Start discovery request
2019-07-24 14:08:16.411 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:08:16.411 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:08:16.411 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:08:16.412 +03:00 [DBG] Start key discovery request
2019-07-24 14:11:03.300 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:11:03.301 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:11:03.301 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:11:03.304 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:11:03.312 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:11:03.312 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:11:03.313 +03:00 [DBG] Start discovery request
2019-07-24 14:11:03.351 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:11:03.353 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:11:03.353 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:11:03.354 +03:00 [DBG] Start authorize request
2019-07-24 14:11:03.355 +03:00 [DBG] User in authorize request: 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:11:03.356 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:11:03.356 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:11:03.360 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:11:03.366 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"82f11a7b11074819bba1fcd1d9596eb1","UiLocales":null,"Nonce":"fd37c1eee89645a2a4059e1c9fa9ffe7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bfdb0e5cea15dfacacbddd20d6a32e6e","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"82f11a7b11074819bba1fcd1d9596eb1","nonce":"fd37c1eee89645a2a4059e1c9fa9ffe7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:11:03.407 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-24 14:11:03.407 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 14:11:03.408 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 14:11:03.408 +03:00 [DBG] Getting claims for access token for subject: 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:11:03.428 +03:00 [DBG] Getting claims for identity token for subject: 1d449fe5-1ff7-4ce1-876c-9305773827f7 and client: spa
2019-07-24 14:11:03.428 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 14:11:03.440 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****8DJw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****J7zw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG4GND0NJ4:00000002","TimeStamp":"2019-07-24T11:11:03.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 14:11:03.442 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"82f11a7b11074819bba1fcd1d9596eb1","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 14:11:04.199 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:11:04.199 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:11:04.199 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:11:04.203 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:11:04.220 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:11:04.223 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:11:04.223 +03:00 [DBG] Start discovery request
2019-07-24 14:11:04.292 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 14:11:04.292 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:11:04.292 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:11:04.297 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:11:04.298 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:11:04.298 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:11:04.298 +03:00 [DBG] Start key discovery request
2019-07-24 14:11:04.361 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:11:04.361 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:11:04.362 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:11:04.379 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:11:04.379 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:11:04.379 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:11:04.380 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 14:11:04.381 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 14:11:04.381 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 14:11:04.381 +03:00 [DBG] Start userinfo request
2019-07-24 14:11:04.382 +03:00 [DBG] Bearer token found in header
2019-07-24 14:11:04.388 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:11:04.388 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:11:04.397 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:11:04.398 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563966663,"exp":1563970263,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d449fe5-1ff7-4ce1-876c-9305773827f7","auth_time":1563966484,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:11:04.398 +03:00 [DBG] Creating userinfo response
2019-07-24 14:11:04.398 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:11:04.398 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:11:04.399 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 14:11:04.399 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:11:04.406 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 14:11:04.406 +03:00 [DBG] End userinfo request
2019-07-24 14:11:04.473 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 14:11:04.473 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 14:11:04.474 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 14:11:04.474 +03:00 [DBG] Rendering check session result
2019-07-24 14:19:40.698 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 14:19:40.711 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 14:19:40.711 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 14:19:40.761 +03:00 [DBG] Processing signout request for 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:19:40.784 +03:00 [DBG] Start end session request validation
2019-07-24 14:19:40.804 +03:00 [DBG] Start identity token validation
2019-07-24 14:19:40.808 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:19:40.808 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 14:19:40.850 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:19:40.852 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563966663,"exp":1563966963,"iss":"http://localhost:5000","aud":"spa","nonce":"fd37c1eee89645a2a4059e1c9fa9ffe7","iat":1563966663,"at_hash":"9S2ll4VHKI8jgolzjurJ9w","sid":"bfdb0e5cea15dfacacbddd20d6a32e6e","sub":"1d449fe5-1ff7-4ce1-876c-9305773827f7","auth_time":1563966484,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:19:40.856 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5NjY2NjMsImV4cCI6MTU2Mzk2Njk2MywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJmZDM3YzFlZWU4OTY0NWEyYTQwNTllMWM5ZmE5ZmZlNyIsImlhdCI6MTU2Mzk2NjY2MywiYXRfaGFzaCI6IjlTMmxsNFZIS0k4amdvbHpqdXJKOXciLCJzaWQiOiJiZmRiMGU1Y2VhMTVkZmFjYWNiZGRkMjBkNmEzMmU2ZSIsInN1YiI6IjFkNDQ5ZmU1LTFmZjctNGNlMS04NzZjLTkzMDU3NzM4MjdmNyIsImF1dGhfdGltZSI6MTU2Mzk2NjQ4NCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.uBecYsRnmBdQLq3j9fcDX1RqsCuxbE00heY1dGhbYhWTlX1gR7pLybC3f0Ynm5bY0A2TzBT0AfyFCXW7OsKFN8LEJ6zFhb_tiBWOa-zxEpK8g104_54A1X8ehF4FVIfm-YxMEWajrFbself9VuQ6S6Gz4zHa86XAyAE5hIUZyC22u_TwTQdIwRZrHm0vCbuNbv_XsUeMz0FEoePqYdygAXiTpKQ74-W3znyEgqHFG6LjZvqU4bn3eFXKlzsVtqHRzvtH_LdoKNz-HeaeA9uRZJ7HVFPZEIsi6tufuEzjGmquID9norOsmW15y9WDrLxHok2gE2ppt27Civ2kLf8DJw"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 14:19:40.856 +03:00 [DBG] Success validating end session request from spa
2019-07-24 14:19:41.018 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 14:19:41.021 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 14:19:41.022 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 14:19:41.023 +03:00 [INF] {"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","DisplayName":"ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG4GND0NJ5:00000002","TimeStamp":"2019-07-24T11:19:41.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 14:19:43.875 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:19:43.877 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:19:43.877 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:19:43.878 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:19:43.878 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:19:43.879 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:19:43.879 +03:00 [DBG] Start discovery request
2019-07-24 14:19:43.908 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:19:43.913 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:19:43.914 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:19:43.914 +03:00 [DBG] Start authorize request
2019-07-24 14:19:43.914 +03:00 [DBG] No user present in authorize request
2019-07-24 14:19:43.914 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:19:43.915 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:19:43.916 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:19:43.917 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b633efb7bb8f44c49aad948bf81b1fc2","UiLocales":null,"Nonce":"142f228f1bac4c029c7045f244e86c59","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b633efb7bb8f44c49aad948bf81b1fc2","nonce":"142f228f1bac4c029c7045f244e86c59"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:19:43.917 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:19:43.932 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:19:43.932 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:19:43.933 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:19:43.934 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:19:46.575 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:19:46.595 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:19:46.595 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:19:46.596 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:20:17.867 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:20:21.276 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:20:21.277 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:20:21.278 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:20:21.278 +03:00 [DBG] Start authorize callback request
2019-07-24 14:20:21.280 +03:00 [DBG] No user present in authorize request
2019-07-24 14:20:21.280 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:20:21.280 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:20:21.281 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:20:21.281 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b633efb7bb8f44c49aad948bf81b1fc2","UiLocales":null,"Nonce":"142f228f1bac4c029c7045f244e86c59","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b633efb7bb8f44c49aad948bf81b1fc2","nonce":"142f228f1bac4c029c7045f244e86c59"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:20:21.281 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:20:21.313 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:20:21.313 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:20:21.315 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:20:21.315 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:20:55.252 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:20:55.257 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:20:55.257 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:20:55.258 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:20:55.264 +03:00 [INF] {"Username":"Evgeniy","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOG4GND0NJ5:0000000B","TimeStamp":"2019-07-24T11:20:55.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-24 14:20:55.265 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:20:55.273 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:20:55.274 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:20:55.274 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:23:09.849 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:23:09.854 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:23:09.861 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:23:09.862 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:23:09.902 +03:00 [DBG] Augmenting SignInContext
2019-07-24 14:23:09.903 +03:00 [DBG] Adding idp claim with value: local
2019-07-24 14:23:09.904 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-24 14:23:09.904 +03:00 [DBG] Adding auth_time claim with value: 1563967389
2019-07-24 14:23:09.905 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 14:23:09.907 +03:00 [INF] {"Username":"Evgeniy","Provider":null,"ProviderUserId":null,"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","DisplayName":"Evgeniy","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG4GND0NJ9:00000002","TimeStamp":"2019-07-24T11:23:09.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 14:23:09.909 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:23:09.972 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:23:09.975 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:23:09.975 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:23:09.975 +03:00 [DBG] Start authorize callback request
2019-07-24 14:23:09.977 +03:00 [DBG] User in authorize request: aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:23:09.977 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:23:09.977 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:23:09.978 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:23:09.978 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b633efb7bb8f44c49aad948bf81b1fc2","UiLocales":null,"Nonce":"142f228f1bac4c029c7045f244e86c59","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"215c37a21ce8ac7805b299c41ae5e6f8","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b633efb7bb8f44c49aad948bf81b1fc2","nonce":"142f228f1bac4c029c7045f244e86c59"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:23:09.983 +03:00 [DBG] user_consent grant with value: spa|aaf6b7cc-ff7d-4c80-b77b-b4963693033e not found in store.
2019-07-24 14:23:09.983 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 14:23:09.984 +03:00 [INF] Showing consent: User has not yet consented
2019-07-24 14:23:10.029 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:23:10.032 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:23:10.032 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:23:10.032 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:23:11.909 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:23:11.914 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:23:11.915 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:23:11.916 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:23:11.918 +03:00 [INF] {"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOG4GND0NJ8:00000002","TimeStamp":"2019-07-24T11:23:11.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-24 14:23:11.919 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:23:11.934 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:23:11.935 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:23:11.935 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:23:11.935 +03:00 [DBG] Start authorize callback request
2019-07-24 14:23:11.936 +03:00 [DBG] User in authorize request: aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:23:11.936 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:23:11.936 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:23:11.938 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:23:11.938 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b633efb7bb8f44c49aad948bf81b1fc2","UiLocales":null,"Nonce":"142f228f1bac4c029c7045f244e86c59","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"215c37a21ce8ac7805b299c41ae5e6f8","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b633efb7bb8f44c49aad948bf81b1fc2","nonce":"142f228f1bac4c029c7045f244e86c59"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:23:11.944 +03:00 [DBG] user_consent grant with value: spa|aaf6b7cc-ff7d-4c80-b77b-b4963693033e not found in store.
2019-07-24 14:23:11.944 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 14:23:11.945 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-24 14:23:11.945 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-24 14:23:11.946 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:23:11.957 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 14:23:11.957 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 14:23:11.957 +03:00 [DBG] Getting claims for access token for subject: aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:23:11.973 +03:00 [DBG] Getting claims for identity token for subject: aaf6b7cc-ff7d-4c80-b77b-b4963693033e and client: spa
2019-07-24 14:23:11.973 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 14:23:11.982 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****EM5w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****6Qsg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG4GND0NJA:00000002","TimeStamp":"2019-07-24T11:23:11.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 14:23:11.982 +03:00 [INF] Authorize endpoint response
{"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"b633efb7bb8f44c49aad948bf81b1fc2","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 14:23:11.983 +03:00 [DBG] Augmenting SignInContext
2019-07-24 14:23:11.984 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 14:23:13.927 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:23:13.929 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:23:13.930 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:23:13.931 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:23:13.933 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:23:13.933 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:23:13.933 +03:00 [DBG] Start discovery request
2019-07-24 14:23:14.027 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 14:23:14.028 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:23:14.028 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:23:14.038 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:23:14.039 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:23:14.039 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:23:14.039 +03:00 [DBG] Start key discovery request
2019-07-24 14:23:14.106 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:23:14.106 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:23:14.107 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:23:14.119 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:23:14.119 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:23:14.120 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:23:14.121 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 14:23:14.122 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 14:23:14.123 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 14:23:14.123 +03:00 [DBG] Start userinfo request
2019-07-24 14:23:14.123 +03:00 [DBG] Bearer token found in header
2019-07-24 14:23:14.130 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:23:14.131 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:23:14.137 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:23:14.138 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563967391,"exp":1563970991,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","auth_time":1563967389,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:23:14.138 +03:00 [DBG] Creating userinfo response
2019-07-24 14:23:14.138 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:23:14.138 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:23:14.138 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 14:23:14.139 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:23:14.146 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 14:23:14.147 +03:00 [DBG] End userinfo request
2019-07-24 14:23:14.198 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 14:23:14.198 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 14:23:14.199 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 14:23:14.199 +03:00 [DBG] Rendering check session result
2019-07-24 14:30:52.204 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:30:52.217 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:30:52.218 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:30:52.247 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:30:52.288 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:30:52.290 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:30:52.291 +03:00 [DBG] Start discovery request
2019-07-24 14:30:52.953 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 14:30:52.955 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 14:30:52.955 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 14:30:52.959 +03:00 [DBG] Rendering check session result
2019-07-24 14:31:29.247 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 14:31:29.261 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 14:31:29.261 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 14:31:29.275 +03:00 [DBG] Processing signout request for aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:31:29.280 +03:00 [DBG] Start end session request validation
2019-07-24 14:31:29.296 +03:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","PostLogOutUri":null,"State":null,"Raw":{},"$type":"EndSessionRequestValidationLog"}
2019-07-24 14:31:29.296 +03:00 [DBG] Success validating end session request from null
2019-07-24 14:31:29.439 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 14:31:29.440 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 14:31:29.441 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 14:31:29.445 +03:00 [INF] {"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","DisplayName":"Evgeniy","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG4GND0NJB:00000004","TimeStamp":"2019-07-24T11:31:29.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 14:31:29.497 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 286
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 252
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-24 14:32:28.686 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:32:28.687 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:32:28.687 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:32:28.689 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:32:28.690 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:32:28.690 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:32:28.690 +03:00 [DBG] Start discovery request
2019-07-24 14:32:28.727 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:32:28.728 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:32:28.728 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:32:28.728 +03:00 [DBG] Start authorize request
2019-07-24 14:32:28.728 +03:00 [DBG] User in authorize request: aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:32:28.728 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:32:28.730 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:32:28.731 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:32:28.734 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"5c693840872940efb1ee1216a45bea47","UiLocales":null,"Nonce":"4c98325170104eeeba1e569671b36aa7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"215c37a21ce8ac7805b299c41ae5e6f8","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"5c693840872940efb1ee1216a45bea47","nonce":"4c98325170104eeeba1e569671b36aa7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:32:28.813 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-24 14:32:28.813 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 14:32:28.813 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 14:32:28.813 +03:00 [DBG] Getting claims for access token for subject: aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:32:28.837 +03:00 [DBG] Getting claims for identity token for subject: aaf6b7cc-ff7d-4c80-b77b-b4963693033e and client: spa
2019-07-24 14:32:28.837 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 14:32:28.848 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****6Hyg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Cucg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG4GND0NJB:00000006","TimeStamp":"2019-07-24T11:32:28.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 14:32:28.848 +03:00 [INF] Authorize endpoint response
{"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"5c693840872940efb1ee1216a45bea47","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 14:32:29.637 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:32:29.637 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:32:29.638 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:32:29.639 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:32:29.640 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:32:29.640 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:32:29.640 +03:00 [DBG] Start discovery request
2019-07-24 14:32:29.683 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 14:32:29.683 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:32:29.683 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:32:29.684 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:32:29.685 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:32:29.685 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:32:29.686 +03:00 [DBG] Start key discovery request
2019-07-24 14:32:29.760 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:32:29.760 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:32:29.760 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:32:29.773 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:32:29.773 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:32:29.773 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:32:29.774 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 14:32:29.775 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 14:32:29.775 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 14:32:29.775 +03:00 [DBG] Start userinfo request
2019-07-24 14:32:29.776 +03:00 [DBG] Bearer token found in header
2019-07-24 14:32:29.785 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:32:29.785 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:32:29.791 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:32:29.792 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563967948,"exp":1563971548,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","auth_time":1563967389,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:32:29.792 +03:00 [DBG] Creating userinfo response
2019-07-24 14:32:29.793 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:32:29.793 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:32:29.793 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 14:32:29.793 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:32:29.800 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 14:32:29.800 +03:00 [DBG] End userinfo request
2019-07-24 14:32:29.856 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 14:32:29.857 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 14:32:29.857 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 14:32:29.857 +03:00 [DBG] Rendering check session result
2019-07-24 14:32:35.771 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 14:32:35.772 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 14:32:35.777 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 14:32:35.777 +03:00 [DBG] Processing signout request for aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:32:35.777 +03:00 [DBG] Start end session request validation
2019-07-24 14:32:35.778 +03:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","PostLogOutUri":null,"State":null,"Raw":{},"$type":"EndSessionRequestValidationLog"}
2019-07-24 14:32:35.778 +03:00 [DBG] Success validating end session request from null
2019-07-24 14:32:35.802 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 14:32:35.802 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 14:32:35.802 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 14:32:35.803 +03:00 [INF] {"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","DisplayName":"Evgeniy","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG4GND0NJB:0000000D","TimeStamp":"2019-07-24T11:32:35.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 14:32:35.806 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 286
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 252
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-24 14:33:01.748 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:33:01.749 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:33:01.749 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:33:01.750 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:33:01.754 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:33:01.754 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:33:01.754 +03:00 [DBG] Start discovery request
2019-07-24 14:33:01.792 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:33:01.793 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:33:01.793 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:33:01.793 +03:00 [DBG] Start authorize request
2019-07-24 14:33:01.793 +03:00 [DBG] User in authorize request: aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:33:01.793 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:33:01.793 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:01.794 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:33:01.795 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1c66175fb41d450ea24db6785ba771b5","UiLocales":null,"Nonce":"b36490ee455d44039e5938974537ca82","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"215c37a21ce8ac7805b299c41ae5e6f8","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1c66175fb41d450ea24db6785ba771b5","nonce":"b36490ee455d44039e5938974537ca82"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:33:01.822 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-24 14:33:01.822 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 14:33:01.822 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 14:33:01.822 +03:00 [DBG] Getting claims for access token for subject: aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:33:01.843 +03:00 [DBG] Getting claims for identity token for subject: aaf6b7cc-ff7d-4c80-b77b-b4963693033e and client: spa
2019-07-24 14:33:01.843 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 14:33:01.855 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****9byA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****s2bw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG4GND0NJB:0000000F","TimeStamp":"2019-07-24T11:33:01.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 14:33:01.857 +03:00 [INF] Authorize endpoint response
{"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"1c66175fb41d450ea24db6785ba771b5","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 14:33:02.774 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:33:02.775 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:33:02.776 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:33:02.788 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:33:02.789 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:33:02.789 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:33:02.789 +03:00 [DBG] Start discovery request
2019-07-24 14:33:02.891 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 14:33:02.891 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:33:02.891 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:33:02.892 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:33:02.893 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:33:02.893 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:33:02.893 +03:00 [DBG] Start key discovery request
2019-07-24 14:33:03.071 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:33:03.072 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:33:03.072 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:33:03.109 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:33:03.110 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:33:03.110 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:33:03.111 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 14:33:03.114 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 14:33:03.115 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 14:33:03.115 +03:00 [DBG] Start userinfo request
2019-07-24 14:33:03.116 +03:00 [DBG] Bearer token found in header
2019-07-24 14:33:03.124 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:03.125 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:03.133 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:33:03.134 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563967981,"exp":1563971581,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","auth_time":1563967389,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:33:03.135 +03:00 [DBG] Creating userinfo response
2019-07-24 14:33:03.135 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:33:03.136 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:33:03.136 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 14:33:03.137 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:33:03.145 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 14:33:03.145 +03:00 [DBG] End userinfo request
2019-07-24 14:33:03.209 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 14:33:03.209 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 14:33:03.209 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 14:33:03.209 +03:00 [DBG] Rendering check session result
2019-07-24 14:33:05.975 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 14:33:05.976 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 14:33:05.976 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 14:33:05.977 +03:00 [DBG] Processing signout request for aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:33:05.977 +03:00 [DBG] Start end session request validation
2019-07-24 14:33:05.978 +03:00 [DBG] Start identity token validation
2019-07-24 14:33:05.979 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:05.979 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 14:33:05.994 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:33:05.996 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563967981,"exp":1563968281,"iss":"http://localhost:5000","aud":"spa","nonce":"b36490ee455d44039e5938974537ca82","iat":1563967981,"at_hash":"pWoaTgXlaQ1sAgFsAtVQ2g","sid":"215c37a21ce8ac7805b299c41ae5e6f8","sub":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","auth_time":1563967389,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:33:05.998 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5Njc5ODEsImV4cCI6MTU2Mzk2ODI4MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJiMzY0OTBlZTQ1NWQ0NDAzOWU1OTM4OTc0NTM3Y2E4MiIsImlhdCI6MTU2Mzk2Nzk4MSwiYXRfaGFzaCI6InBXb2FUZ1hsYVExc0FnRnNBdFZRMmciLCJzaWQiOiIyMTVjMzdhMjFjZThhYzc4MDViMjk5YzQxYWU1ZTZmOCIsInN1YiI6ImFhZjZiN2NjLWZmN2QtNGM4MC1iNzdiLWI0OTYzNjkzMDMzZSIsImF1dGhfdGltZSI6MTU2Mzk2NzM4OSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.kNHUFBpshvNr1HVL70ri1g_qvzaUGQlqcdVAd-gKav6vYtWKJ5nEZzLnXUbmmM-4OmRRR6a3L3XzshaNw2TndZcrpmtR64fNfS-OKzz-ChLbJErQYIKq1aQfZG3EOPDHMld1K1ldMhju3Qawtt16zZFtxemrVKbsgVCUkp5-rcv9kK2MYliDuoj9ZLVsVizmINiUco7ijvif6qUXalKkrYC3D_tQ9oArza1nHgy5YlhUOyekuenOFHv2DGydwce0n9vni7cspfv7vgNAY2KBP2b67g6VAcFL1E8dg8OVwMPcMRX6koi9Gq-9TpgVI68ahRK0A6Z6jj25iRcN2R9byA"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 14:33:05.998 +03:00 [DBG] Success validating end session request from spa
2019-07-24 14:33:06.035 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 14:33:06.035 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 14:33:06.035 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 14:33:06.036 +03:00 [INF] {"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","DisplayName":"Evgeniy","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG4GND0NJB:00000016","TimeStamp":"2019-07-24T11:33:06.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 14:33:09.705 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:33:09.706 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:33:09.706 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:33:09.708 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:33:09.709 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:33:09.709 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:33:09.709 +03:00 [DBG] Start discovery request
2019-07-24 14:33:09.755 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:33:09.757 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:33:09.758 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:33:09.758 +03:00 [DBG] Start authorize request
2019-07-24 14:33:09.758 +03:00 [DBG] No user present in authorize request
2019-07-24 14:33:09.758 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:33:09.758 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:09.760 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:33:09.761 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a1ccf727406849f38717eb7dc6f5a85f","UiLocales":null,"Nonce":"71b7284cdf7d4e6f83e98afe16407b3f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a1ccf727406849f38717eb7dc6f5a85f","nonce":"71b7284cdf7d4e6f83e98afe16407b3f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:33:09.761 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:33:09.777 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:33:09.777 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:09.777 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:33:09.778 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:18.900 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:33:18.912 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:33:18.913 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:18.913 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:33:18.918 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:18.930 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:33:18.932 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:33:18.932 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:33:18.934 +03:00 [DBG] Start authorize callback request
2019-07-24 14:33:18.935 +03:00 [DBG] No user present in authorize request
2019-07-24 14:33:18.936 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:33:18.936 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:18.936 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:33:18.936 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a1ccf727406849f38717eb7dc6f5a85f","UiLocales":null,"Nonce":"71b7284cdf7d4e6f83e98afe16407b3f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a1ccf727406849f38717eb7dc6f5a85f","nonce":"71b7284cdf7d4e6f83e98afe16407b3f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:33:18.937 +03:00 [INF] Error: User denied consent
2019-07-24 14:33:18.968 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a1ccf727406849f38717eb7dc6f5a85f","UiLocales":null,"Nonce":"71b7284cdf7d4e6f83e98afe16407b3f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a1ccf727406849f38717eb7dc6f5a85f","nonce":"71b7284cdf7d4e6f83e98afe16407b3f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:33:18.977 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLOG4GND0NJB:0000001B","TimeStamp":"2019-07-24T11:33:18.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-24 14:33:32.777 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:33:32.778 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:33:32.781 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:33:32.782 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:33:32.783 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:33:32.783 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:33:32.783 +03:00 [DBG] Start discovery request
2019-07-24 14:33:32.806 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:33:32.808 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:33:32.809 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:33:32.809 +03:00 [DBG] Start authorize request
2019-07-24 14:33:32.809 +03:00 [DBG] No user present in authorize request
2019-07-24 14:33:32.810 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:33:32.810 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:32.811 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:33:32.811 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cff831ffd0c24310ae4d997c995ec9a3","UiLocales":null,"Nonce":"ae69a5fb10224a85aeba88c961e8c951","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cff831ffd0c24310ae4d997c995ec9a3","nonce":"ae69a5fb10224a85aeba88c961e8c951"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:33:32.811 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:33:32.824 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:33:32.825 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:32.825 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:33:32.825 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:38.254 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:33:38.264 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:33:38.265 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:38.266 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:33:38.300 +03:00 [DBG] Augmenting SignInContext
2019-07-24 14:33:38.300 +03:00 [DBG] Adding idp claim with value: local
2019-07-24 14:33:38.300 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-24 14:33:38.300 +03:00 [DBG] Adding auth_time claim with value: 1563968018
2019-07-24 14:33:38.301 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 14:33:38.301 +03:00 [INF] {"Username":"ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","DisplayName":"ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG4GND0NJB:0000001F","TimeStamp":"2019-07-24T11:33:38.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 14:33:38.302 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:38.319 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:33:38.319 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:33:38.319 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:33:38.320 +03:00 [DBG] Start authorize callback request
2019-07-24 14:33:38.320 +03:00 [DBG] User in authorize request: 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:33:38.320 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:33:38.320 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:38.321 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:33:38.323 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cff831ffd0c24310ae4d997c995ec9a3","UiLocales":null,"Nonce":"ae69a5fb10224a85aeba88c961e8c951","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9e96ede2eb12c42e5aebed77ad83b7c8","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cff831ffd0c24310ae4d997c995ec9a3","nonce":"ae69a5fb10224a85aeba88c961e8c951"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:33:38.348 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-24 14:33:38.348 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 14:33:38.348 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 14:33:38.349 +03:00 [DBG] Getting claims for access token for subject: 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:33:38.362 +03:00 [DBG] Getting claims for identity token for subject: 1d449fe5-1ff7-4ce1-876c-9305773827f7 and client: spa
2019-07-24 14:33:38.363 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 14:33:38.370 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****FvKw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****okhg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG4GND0NJB:00000020","TimeStamp":"2019-07-24T11:33:38.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 14:33:38.370 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"cff831ffd0c24310ae4d997c995ec9a3","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 14:33:38.370 +03:00 [DBG] Augmenting SignInContext
2019-07-24 14:33:38.371 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 14:33:39.858 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:33:39.864 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:33:39.865 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:33:39.866 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:33:39.866 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:33:39.866 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:33:39.866 +03:00 [DBG] Start discovery request
2019-07-24 14:33:39.965 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 14:33:39.965 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:33:39.965 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:33:39.966 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:33:39.969 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:33:39.969 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:33:39.969 +03:00 [DBG] Start key discovery request
2019-07-24 14:33:40.092 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:33:40.095 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:33:40.095 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:33:40.120 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:33:40.124 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:33:40.124 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:33:40.124 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 14:33:40.125 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 14:33:40.125 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 14:33:40.125 +03:00 [DBG] Start userinfo request
2019-07-24 14:33:40.125 +03:00 [DBG] Bearer token found in header
2019-07-24 14:33:40.134 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:40.135 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:33:40.140 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:33:40.141 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563968018,"exp":1563971618,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d449fe5-1ff7-4ce1-876c-9305773827f7","auth_time":1563968018,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:33:40.141 +03:00 [DBG] Creating userinfo response
2019-07-24 14:33:40.141 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:33:40.141 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:33:40.142 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 14:33:40.142 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:33:40.154 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 14:33:40.154 +03:00 [DBG] End userinfo request
2019-07-24 14:33:40.207 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 14:33:40.208 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 14:33:40.208 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 14:33:40.208 +03:00 [DBG] Rendering check session result
2019-07-24 14:35:27.278 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:35:27.278 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:35:27.279 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:35:27.279 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:35:27.280 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:35:27.280 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:35:27.280 +03:00 [DBG] Start discovery request
2019-07-24 14:35:27.318 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:35:27.319 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:35:27.319 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:35:27.319 +03:00 [DBG] Start authorize request
2019-07-24 14:35:27.320 +03:00 [DBG] User in authorize request: 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:35:27.320 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:35:27.320 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:35:27.320 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:35:27.321 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8f9957d0f70b4fb8b999e638bf1ef53a","UiLocales":null,"Nonce":"cd5a6fd3bc8143189c928cf57fcf3c98","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9e96ede2eb12c42e5aebed77ad83b7c8","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8f9957d0f70b4fb8b999e638bf1ef53a","nonce":"cd5a6fd3bc8143189c928cf57fcf3c98"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:35:27.347 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-24 14:35:27.348 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 14:35:27.348 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 14:35:27.348 +03:00 [DBG] Getting claims for access token for subject: 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:35:27.372 +03:00 [DBG] Getting claims for identity token for subject: 1d449fe5-1ff7-4ce1-876c-9305773827f7 and client: spa
2019-07-24 14:35:27.372 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 14:35:27.382 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****6_-Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****BoXg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG4GND0NJC:00000002","TimeStamp":"2019-07-24T11:35:27.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 14:35:27.382 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"8f9957d0f70b4fb8b999e638bf1ef53a","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 14:35:28.299 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:35:28.304 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:35:28.305 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:35:28.306 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:35:28.307 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:35:28.307 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:35:28.307 +03:00 [DBG] Start discovery request
2019-07-24 14:35:28.369 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 14:35:28.370 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:35:28.370 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:35:28.370 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:35:28.371 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:35:28.371 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:35:28.371 +03:00 [DBG] Start key discovery request
2019-07-24 14:35:28.517 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:35:28.520 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:35:28.520 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:35:28.539 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:35:28.539 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:35:28.540 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:35:28.540 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 14:35:28.541 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 14:35:28.541 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 14:35:28.541 +03:00 [DBG] Start userinfo request
2019-07-24 14:35:28.541 +03:00 [DBG] Bearer token found in header
2019-07-24 14:35:28.588 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:35:28.588 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:35:28.595 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:35:28.596 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563968127,"exp":1563971727,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d449fe5-1ff7-4ce1-876c-9305773827f7","auth_time":1563968018,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:35:28.596 +03:00 [DBG] Creating userinfo response
2019-07-24 14:35:28.597 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:35:28.597 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:35:28.597 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 14:35:28.597 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:35:28.603 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 14:35:28.603 +03:00 [DBG] End userinfo request
2019-07-24 14:35:29.116 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 14:35:29.116 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 14:35:29.116 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 14:35:29.116 +03:00 [DBG] Rendering check session result
2019-07-24 14:35:34.673 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 14:35:34.674 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 14:35:34.674 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 14:35:34.674 +03:00 [DBG] Processing signout request for 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:35:34.674 +03:00 [DBG] Start end session request validation
2019-07-24 14:35:34.674 +03:00 [DBG] Start identity token validation
2019-07-24 14:35:34.675 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:35:34.676 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 14:35:34.687 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:35:34.687 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563968127,"exp":1563968427,"iss":"http://localhost:5000","aud":"spa","nonce":"cd5a6fd3bc8143189c928cf57fcf3c98","iat":1563968127,"at_hash":"T-anFePzB1Xhoy4aCuCrMA","sid":"9e96ede2eb12c42e5aebed77ad83b7c8","sub":"1d449fe5-1ff7-4ce1-876c-9305773827f7","auth_time":1563968018,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:35:34.688 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5NjgxMjcsImV4cCI6MTU2Mzk2ODQyNywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJjZDVhNmZkM2JjODE0MzE4OWM5MjhjZjU3ZmNmM2M5OCIsImlhdCI6MTU2Mzk2ODEyNywiYXRfaGFzaCI6IlQtYW5GZVB6QjFYaG95NGFDdUNyTUEiLCJzaWQiOiI5ZTk2ZWRlMmViMTJjNDJlNWFlYmVkNzdhZDgzYjdjOCIsInN1YiI6IjFkNDQ5ZmU1LTFmZjctNGNlMS04NzZjLTkzMDU3NzM4MjdmNyIsImF1dGhfdGltZSI6MTU2Mzk2ODAxOCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.bvOQ9yOltpIg3f2b064sYZE4EAWjPvPZmK4Kh7LNnPqD816S9j_9DuiE6zulKfACI3vvP6paBvmTFnEmlWpA0KAsnqknTLiPP8JqaH-UwgwNd5qO-xLQg2ivGZhXjrFkMe5wv0Avdp3qG3pPHTtsf3umO3MXcbCgy5I7uOP0LpsxNwwszNB9mUYaODhYcl7yBjS1aF2eMMKRObEJf4hJxidcpBjj7EgDSasBNYFgGhIBHUFFad1OZuG4FoT2564PiqCBDnNT0nZmt2J7byYOd-Q0A1YGcIm_-vbsAK42bYZE5QJfmOfRfCFIE6nmCsYUR9aez783TyQy5kFb9I6_-Q"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 14:35:34.688 +03:00 [DBG] Success validating end session request from spa
2019-07-24 14:35:34.704 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 14:35:34.704 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 14:35:34.704 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 14:35:34.705 +03:00 [INF] {"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","DisplayName":"ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG4GND0NJC:00000009","TimeStamp":"2019-07-24T11:35:34.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 14:35:38.729 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:35:38.729 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:35:38.729 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:35:38.734 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:35:38.735 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:35:38.735 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:35:38.735 +03:00 [DBG] Start discovery request
2019-07-24 14:35:38.768 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:35:38.769 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:35:38.769 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:35:38.769 +03:00 [DBG] Start authorize request
2019-07-24 14:35:38.769 +03:00 [DBG] No user present in authorize request
2019-07-24 14:35:38.769 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:35:38.770 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:35:38.770 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:35:38.771 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8d5279ded32743d18c5b1bffd939c291","UiLocales":null,"Nonce":"c3929699fdd749c3ae7449897be18d43","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8d5279ded32743d18c5b1bffd939c291","nonce":"c3929699fdd749c3ae7449897be18d43"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:35:38.771 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:35:38.783 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:35:38.783 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:35:38.784 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:35:38.784 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:03.343 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:36:03.348 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:36:03.348 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:03.348 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:36:03.376 +03:00 [DBG] Augmenting SignInContext
2019-07-24 14:36:03.377 +03:00 [DBG] Adding idp claim with value: local
2019-07-24 14:36:03.377 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-24 14:36:03.377 +03:00 [DBG] Adding auth_time claim with value: 1563968163
2019-07-24 14:36:03.379 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 14:36:03.381 +03:00 [INF] {"Username":"Evgeniy","Provider":null,"ProviderUserId":null,"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","DisplayName":"Evgeniy","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG4GND0NJC:0000000D","TimeStamp":"2019-07-24T11:36:03.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 14:36:03.381 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:03.412 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:36:03.412 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:36:03.412 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:36:03.412 +03:00 [DBG] Start authorize callback request
2019-07-24 14:36:03.413 +03:00 [DBG] User in authorize request: aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:36:03.413 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:36:03.413 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:03.414 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:36:03.414 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8d5279ded32743d18c5b1bffd939c291","UiLocales":null,"Nonce":"c3929699fdd749c3ae7449897be18d43","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"a538046412b3ce7afad80ff2b4e158f4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8d5279ded32743d18c5b1bffd939c291","nonce":"c3929699fdd749c3ae7449897be18d43"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:36:03.430 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-24 14:36:03.430 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 14:36:03.431 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 14:36:03.431 +03:00 [DBG] Getting claims for access token for subject: aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:36:03.450 +03:00 [DBG] Getting claims for identity token for subject: aaf6b7cc-ff7d-4c80-b77b-b4963693033e and client: spa
2019-07-24 14:36:03.450 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 14:36:03.458 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****oQiQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zQbA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG4GND0NJC:0000000E","TimeStamp":"2019-07-24T11:36:03.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 14:36:03.459 +03:00 [INF] Authorize endpoint response
{"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"8d5279ded32743d18c5b1bffd939c291","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 14:36:03.460 +03:00 [DBG] Augmenting SignInContext
2019-07-24 14:36:03.460 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 14:36:04.281 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:36:04.282 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:36:04.282 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:36:04.282 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:36:04.283 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:36:04.283 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:36:04.283 +03:00 [DBG] Start discovery request
2019-07-24 14:36:04.334 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 14:36:04.334 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:36:04.334 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:36:04.335 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:36:04.336 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:36:04.336 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:36:04.336 +03:00 [DBG] Start key discovery request
2019-07-24 14:36:04.408 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:36:04.408 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:36:04.408 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:36:04.418 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:36:04.419 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:36:04.419 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:36:04.419 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 14:36:04.420 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 14:36:04.420 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 14:36:04.420 +03:00 [DBG] Start userinfo request
2019-07-24 14:36:04.421 +03:00 [DBG] Bearer token found in header
2019-07-24 14:36:04.427 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:04.427 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:04.434 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:36:04.434 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563968163,"exp":1563971763,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","auth_time":1563968163,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:36:04.434 +03:00 [DBG] Creating userinfo response
2019-07-24 14:36:04.435 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:36:04.435 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:36:04.435 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 14:36:04.436 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:36:04.448 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 14:36:04.448 +03:00 [DBG] End userinfo request
2019-07-24 14:36:04.515 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 14:36:04.516 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 14:36:04.516 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 14:36:04.516 +03:00 [DBG] Rendering check session result
2019-07-24 14:36:17.127 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 14:36:17.128 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 14:36:17.128 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 14:36:17.128 +03:00 [DBG] Processing signout request for aaf6b7cc-ff7d-4c80-b77b-b4963693033e
2019-07-24 14:36:17.128 +03:00 [DBG] Start end session request validation
2019-07-24 14:36:17.128 +03:00 [DBG] Start identity token validation
2019-07-24 14:36:17.130 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:17.130 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 14:36:17.143 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:36:17.143 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563968163,"exp":1563968463,"iss":"http://localhost:5000","aud":"spa","nonce":"c3929699fdd749c3ae7449897be18d43","iat":1563968163,"at_hash":"qddmlYzd1gzEQh0JCrkoeQ","sid":"a538046412b3ce7afad80ff2b4e158f4","sub":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","auth_time":1563968163,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:36:17.143 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5NjgxNjMsImV4cCI6MTU2Mzk2ODQ2MywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJjMzkyOTY5OWZkZDc0OWMzYWU3NDQ5ODk3YmUxOGQ0MyIsImlhdCI6MTU2Mzk2ODE2MywiYXRfaGFzaCI6InFkZG1sWXpkMWd6RVFoMEpDcmtvZVEiLCJzaWQiOiJhNTM4MDQ2NDEyYjNjZTdhZmFkODBmZjJiNGUxNThmNCIsInN1YiI6ImFhZjZiN2NjLWZmN2QtNGM4MC1iNzdiLWI0OTYzNjkzMDMzZSIsImF1dGhfdGltZSI6MTU2Mzk2ODE2MywiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.02jq_BHSV1y8V4-SbA04ypGO1LGcZPCbvZxd-UiLjiTm1d_tFHTRM6QFu39kHXa4iSdAE3g-64oGlVmrxjIVfBlA5SxsGAwNuc7H9bgRgOoIvJyV1bxh1zJh6vNbFhjBcm_OS8dQNruNl9x-tefgND2SKL77leu5gxRsXsBVYeS12fICfkAzhfz9FZmQVUe1bdRxW9nhiVpfMPa00crygWkCjrTpnLodX5NKnY--4IMCOlmzWcbRJmA8RX5NZL3vcIg-UM0AuFGx93u9BfYyl7h33TDg9M4hFYMZ_vLE5NUMFjDQnuELtXrzZ6jKB7twdIhGhbit8iASDrw9uWoQiQ"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 14:36:17.144 +03:00 [DBG] Success validating end session request from spa
2019-07-24 14:36:17.157 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 14:36:17.157 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 14:36:17.158 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 14:36:17.158 +03:00 [INF] {"SubjectId":"aaf6b7cc-ff7d-4c80-b77b-b4963693033e","DisplayName":"Evgeniy","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG4GND0NJC:00000015","TimeStamp":"2019-07-24T11:36:17.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 14:36:19.432 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:36:19.432 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:36:19.432 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:36:19.435 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:36:19.436 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:36:19.436 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:36:19.437 +03:00 [DBG] Start discovery request
2019-07-24 14:36:19.471 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:36:19.472 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:36:19.472 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:36:19.472 +03:00 [DBG] Start authorize request
2019-07-24 14:36:19.473 +03:00 [DBG] No user present in authorize request
2019-07-24 14:36:19.473 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:36:19.473 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:19.473 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:36:19.474 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"503eb0df70c143e88419507be221438f","UiLocales":null,"Nonce":"41f57f5fded24fd58a9d705bc611b187","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"503eb0df70c143e88419507be221438f","nonce":"41f57f5fded24fd58a9d705bc611b187"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:36:19.474 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:36:19.487 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:36:19.488 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:19.488 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:36:19.488 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:23.660 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:36:23.668 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:36:23.668 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:23.669 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:36:23.696 +03:00 [DBG] Augmenting SignInContext
2019-07-24 14:36:23.697 +03:00 [DBG] Adding idp claim with value: local
2019-07-24 14:36:23.697 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-24 14:36:23.697 +03:00 [DBG] Adding auth_time claim with value: 1563968183
2019-07-24 14:36:23.698 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 14:36:23.699 +03:00 [INF] {"Username":"ilya","Provider":null,"ProviderUserId":null,"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","DisplayName":"ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG4GND0NJC:00000019","TimeStamp":"2019-07-24T11:36:23.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 14:36:23.699 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:23.718 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:36:23.719 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:36:23.719 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:36:23.719 +03:00 [DBG] Start authorize callback request
2019-07-24 14:36:23.719 +03:00 [DBG] User in authorize request: 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:36:23.719 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:36:23.720 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:23.720 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:36:23.721 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"503eb0df70c143e88419507be221438f","UiLocales":null,"Nonce":"41f57f5fded24fd58a9d705bc611b187","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"462644e475d490eb2482350572779c9e","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"503eb0df70c143e88419507be221438f","nonce":"41f57f5fded24fd58a9d705bc611b187"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:36:23.741 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-24 14:36:23.741 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 14:36:23.741 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 14:36:23.741 +03:00 [DBG] Getting claims for access token for subject: 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:36:23.758 +03:00 [DBG] Getting claims for identity token for subject: 1d449fe5-1ff7-4ce1-876c-9305773827f7 and client: spa
2019-07-24 14:36:23.758 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 14:36:23.768 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****CXBw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5liQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG4GND0NJC:0000001A","TimeStamp":"2019-07-24T11:36:23.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 14:36:23.768 +03:00 [INF] Authorize endpoint response
{"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"503eb0df70c143e88419507be221438f","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 14:36:23.768 +03:00 [DBG] Augmenting SignInContext
2019-07-24 14:36:23.769 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 14:36:24.272 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:36:24.280 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:36:24.280 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:36:24.281 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:36:24.284 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:36:24.284 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:36:24.284 +03:00 [DBG] Start discovery request
2019-07-24 14:36:24.324 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 14:36:24.325 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:36:24.325 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:36:24.326 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:36:24.327 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:36:24.327 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:36:24.327 +03:00 [DBG] Start key discovery request
2019-07-24 14:36:24.403 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:36:24.433 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:36:24.434 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:36:24.461 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 14:36:24.463 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:36:24.463 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:36:24.465 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 14:36:24.466 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 14:36:24.466 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 14:36:24.467 +03:00 [DBG] Start userinfo request
2019-07-24 14:36:24.467 +03:00 [DBG] Bearer token found in header
2019-07-24 14:36:24.473 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:24.473 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:24.487 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:36:24.488 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563968183,"exp":1563971783,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"1d449fe5-1ff7-4ce1-876c-9305773827f7","auth_time":1563968183,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:36:24.488 +03:00 [DBG] Creating userinfo response
2019-07-24 14:36:24.489 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:36:24.489 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:36:24.490 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 14:36:24.490 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 14:36:24.513 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 14:36:24.514 +03:00 [DBG] End userinfo request
2019-07-24 14:36:24.604 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 14:36:24.604 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 14:36:24.604 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 14:36:24.604 +03:00 [DBG] Rendering check session result
2019-07-24 14:36:32.549 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 14:36:32.549 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 14:36:32.549 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 14:36:32.550 +03:00 [DBG] Processing signout request for 1d449fe5-1ff7-4ce1-876c-9305773827f7
2019-07-24 14:36:32.550 +03:00 [DBG] Start end session request validation
2019-07-24 14:36:32.550 +03:00 [DBG] Start identity token validation
2019-07-24 14:36:32.551 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:32.552 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 14:36:32.567 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 14:36:32.567 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563968183,"exp":1563968483,"iss":"http://localhost:5000","aud":"spa","nonce":"41f57f5fded24fd58a9d705bc611b187","iat":1563968183,"at_hash":"a1tHDG3X8AiyfcIdgVEoiQ","sid":"462644e475d490eb2482350572779c9e","sub":"1d449fe5-1ff7-4ce1-876c-9305773827f7","auth_time":1563968183,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 14:36:32.568 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5NjgxODMsImV4cCI6MTU2Mzk2ODQ4MywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI0MWY1N2Y1ZmRlZDI0ZmQ1OGE5ZDcwNWJjNjExYjE4NyIsImlhdCI6MTU2Mzk2ODE4MywiYXRfaGFzaCI6ImExdEhERzNYOEFpeWZjSWRnVkVvaVEiLCJzaWQiOiI0NjI2NDRlNDc1ZDQ5MGViMjQ4MjM1MDU3Mjc3OWM5ZSIsInN1YiI6IjFkNDQ5ZmU1LTFmZjctNGNlMS04NzZjLTkzMDU3NzM4MjdmNyIsImF1dGhfdGltZSI6MTU2Mzk2ODE4MywiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.k85MZYjiJYgnoyGal6N227_Ac9zXy0bT0bcJcAXh_myWUsae7yJ1M_j1o1qH4z48wHK538IadgDCT9QNJKB2nrmgwIsb8pH6UXHnV5PKdwtKQffO0TbYLuTCshKOtN9RHFAmbn31P7T2pLxCvTRg2eUYiamQYmWfABs1_Bkg5rpnbhkIx_DcsiCGAUMHfkhYAYTGzT7fIv6gLusLgnRaNPW0jcLnSMAOddK-iAeSAxVcbozIg3xylugZOphauDsnpGZRC35JI4MaJznTHiCcAu4FGhKJnl6cIjCdoYHUst0NPAf_15x17jRwrB1qh0Mf8WfD85hO7PrKpPtgNkCXBw"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 14:36:32.568 +03:00 [DBG] Success validating end session request from spa
2019-07-24 14:36:32.590 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 14:36:32.590 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 14:36:32.590 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 14:36:32.591 +03:00 [INF] {"SubjectId":"1d449fe5-1ff7-4ce1-876c-9305773827f7","DisplayName":"ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG4GND0NJC:00000021","TimeStamp":"2019-07-24T11:36:32.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 14:36:34.664 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:36:34.665 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:36:34.665 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:36:34.666 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:36:34.667 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:36:34.667 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:36:34.667 +03:00 [DBG] Start discovery request
2019-07-24 14:36:34.702 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:36:34.703 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:36:34.703 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:36:34.703 +03:00 [DBG] Start authorize request
2019-07-24 14:36:34.703 +03:00 [DBG] No user present in authorize request
2019-07-24 14:36:34.703 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:36:34.703 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:34.704 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:36:34.704 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"fd3f9ae1dbd644578455610d8306da42","UiLocales":null,"Nonce":"e684a6b8cbf44f74b0bf94286a999c6c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"fd3f9ae1dbd644578455610d8306da42","nonce":"e684a6b8cbf44f74b0bf94286a999c6c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:36:34.704 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:36:34.731 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:36:34.731 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:34.732 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:36:34.732 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:36.965 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:36:36.970 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:36:36.971 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:36.971 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:36:36.973 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:36.986 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:36:36.998 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:36:36.998 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:36:36.998 +03:00 [DBG] Start authorize callback request
2019-07-24 14:36:36.999 +03:00 [DBG] No user present in authorize request
2019-07-24 14:36:37.000 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:36:37.000 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:36:37.001 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:36:37.002 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"fd3f9ae1dbd644578455610d8306da42","UiLocales":null,"Nonce":"e684a6b8cbf44f74b0bf94286a999c6c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"fd3f9ae1dbd644578455610d8306da42","nonce":"e684a6b8cbf44f74b0bf94286a999c6c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:36:37.002 +03:00 [INF] Error: User denied consent
2019-07-24 14:36:37.003 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"fd3f9ae1dbd644578455610d8306da42","UiLocales":null,"Nonce":"e684a6b8cbf44f74b0bf94286a999c6c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"fd3f9ae1dbd644578455610d8306da42","nonce":"e684a6b8cbf44f74b0bf94286a999c6c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:36:37.004 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLOG4GND0NJC:00000026","TimeStamp":"2019-07-24T11:36:37.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-24 14:40:12.473 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:40:12.474 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:40:12.475 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:40:12.475 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:40:12.476 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:40:12.476 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:40:12.476 +03:00 [DBG] Start discovery request
2019-07-24 14:40:12.569 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:40:12.570 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:40:12.571 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:40:12.571 +03:00 [DBG] Start authorize request
2019-07-24 14:40:12.572 +03:00 [DBG] No user present in authorize request
2019-07-24 14:40:12.572 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:40:12.572 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:12.572 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:40:12.573 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b3a2e9a9e2f34a9eb69d05da4ca6ea85","UiLocales":null,"Nonce":"cccda27f74104e13b0777c6c49c500c3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b3a2e9a9e2f34a9eb69d05da4ca6ea85","nonce":"cccda27f74104e13b0777c6c49c500c3"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:40:12.574 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:40:12.654 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:40:12.655 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:12.655 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:40:12.655 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:15.925 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:40:15.930 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:40:15.930 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:15.938 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:40:15.969 +03:00 [INF] {"Username":"Evgeniy","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOG4GND0NJH:00000002","TimeStamp":"2019-07-24T11:40:15.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-24 14:40:15.970 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:40:15.970 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:15.970 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:40:15.970 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:19.377 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:40:19.387 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:40:19.389 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:19.402 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:40:19.403 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:19.449 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:40:19.452 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:40:19.452 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:40:19.452 +03:00 [DBG] Start authorize callback request
2019-07-24 14:40:19.453 +03:00 [DBG] No user present in authorize request
2019-07-24 14:40:19.453 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:40:19.453 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:19.454 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:40:19.454 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b3a2e9a9e2f34a9eb69d05da4ca6ea85","UiLocales":null,"Nonce":"cccda27f74104e13b0777c6c49c500c3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b3a2e9a9e2f34a9eb69d05da4ca6ea85","nonce":"cccda27f74104e13b0777c6c49c500c3"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:40:19.454 +03:00 [INF] Error: User denied consent
2019-07-24 14:40:19.455 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b3a2e9a9e2f34a9eb69d05da4ca6ea85","UiLocales":null,"Nonce":"cccda27f74104e13b0777c6c49c500c3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b3a2e9a9e2f34a9eb69d05da4ca6ea85","nonce":"cccda27f74104e13b0777c6c49c500c3"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:40:19.455 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLOG4GND0NJD:00000007","TimeStamp":"2019-07-24T11:40:19.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-24 14:40:42.204 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:40:42.204 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:40:42.204 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:40:42.205 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:40:42.206 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:40:42.206 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:40:42.206 +03:00 [DBG] Start discovery request
2019-07-24 14:40:42.265 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:40:42.265 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:40:42.265 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:40:42.266 +03:00 [DBG] Start authorize request
2019-07-24 14:40:42.266 +03:00 [DBG] No user present in authorize request
2019-07-24 14:40:42.266 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:40:42.266 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:42.267 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:40:42.267 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"89e4a22a651e4a248c9962a9d01a2f52","UiLocales":null,"Nonce":"497315c9c7e4408cb25944a5e3e53b18","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"89e4a22a651e4a248c9962a9d01a2f52","nonce":"497315c9c7e4408cb25944a5e3e53b18"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:40:42.268 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:40:42.294 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:40:42.294 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:42.295 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:40:42.296 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:44.150 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:40:44.153 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:40:44.155 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:44.158 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:40:44.159 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:44.215 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:40:44.216 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:40:44.220 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:40:44.220 +03:00 [DBG] Start authorize callback request
2019-07-24 14:40:44.221 +03:00 [DBG] No user present in authorize request
2019-07-24 14:40:44.221 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:40:44.222 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:40:44.227 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:40:44.228 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"89e4a22a651e4a248c9962a9d01a2f52","UiLocales":null,"Nonce":"497315c9c7e4408cb25944a5e3e53b18","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"89e4a22a651e4a248c9962a9d01a2f52","nonce":"497315c9c7e4408cb25944a5e3e53b18"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:40:44.228 +03:00 [INF] Error: User denied consent
2019-07-24 14:40:44.228 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"89e4a22a651e4a248c9962a9d01a2f52","UiLocales":null,"Nonce":"497315c9c7e4408cb25944a5e3e53b18","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"89e4a22a651e4a248c9962a9d01a2f52","nonce":"497315c9c7e4408cb25944a5e3e53b18"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:40:44.229 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLOG4GND0NJD:00000009","TimeStamp":"2019-07-24T11:40:44.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-24 14:43:46.746 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:43:46.747 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:43:46.747 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:43:46.749 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:43:46.754 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:43:46.754 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:43:46.755 +03:00 [DBG] Start discovery request
2019-07-24 14:43:46.810 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:43:46.812 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:43:46.812 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:43:46.812 +03:00 [DBG] Start authorize request
2019-07-24 14:43:46.813 +03:00 [DBG] No user present in authorize request
2019-07-24 14:43:46.813 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:43:46.814 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:43:46.815 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:43:46.816 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d93b6339047347e3bfd97ea1447cb698","UiLocales":null,"Nonce":"723db98804a84731b4c6b4b061118233","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d93b6339047347e3bfd97ea1447cb698","nonce":"723db98804a84731b4c6b4b061118233"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:43:46.817 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:43:46.846 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:43:46.847 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:43:46.847 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:43:46.847 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:43:50.322 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:43:50.326 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:43:50.326 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:43:50.327 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:43:50.330 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:43:50.357 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:43:50.358 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:43:50.359 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:43:50.360 +03:00 [DBG] Start authorize callback request
2019-07-24 14:43:50.363 +03:00 [DBG] No user present in authorize request
2019-07-24 14:43:50.364 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:43:50.367 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:43:50.368 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:43:50.368 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d93b6339047347e3bfd97ea1447cb698","UiLocales":null,"Nonce":"723db98804a84731b4c6b4b061118233","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d93b6339047347e3bfd97ea1447cb698","nonce":"723db98804a84731b4c6b4b061118233"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:43:50.369 +03:00 [INF] Error: User denied consent
2019-07-24 14:43:50.369 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d93b6339047347e3bfd97ea1447cb698","UiLocales":null,"Nonce":"723db98804a84731b4c6b4b061118233","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d93b6339047347e3bfd97ea1447cb698","nonce":"723db98804a84731b4c6b4b061118233"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:43:50.370 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLOG4GND0NJI:00000005","TimeStamp":"2019-07-24T11:43:50.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-24 14:44:02.630 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:44:02.630 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:44:02.630 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:44:02.632 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:44:02.633 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:44:02.634 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:44:02.634 +03:00 [DBG] Start discovery request
2019-07-24 14:44:02.666 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:44:02.668 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:44:02.668 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:44:02.668 +03:00 [DBG] Start authorize request
2019-07-24 14:44:02.668 +03:00 [DBG] No user present in authorize request
2019-07-24 14:44:02.668 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:44:02.668 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:44:02.669 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:44:02.669 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6901cc8569a4486eb1717c1142cd7d68","UiLocales":null,"Nonce":"328ae11ae1134c6c86356c0748aa99b9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6901cc8569a4486eb1717c1142cd7d68","nonce":"328ae11ae1134c6c86356c0748aa99b9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:44:02.669 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:44:02.692 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:44:02.692 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:44:02.693 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:44:02.694 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:44:08.039 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:44:08.041 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:44:08.041 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:44:08.042 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:44:08.044 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:44:08.058 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 14:44:08.059 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 14:44:08.059 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 14:44:08.060 +03:00 [DBG] Start authorize callback request
2019-07-24 14:44:08.060 +03:00 [DBG] No user present in authorize request
2019-07-24 14:44:08.061 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:44:08.061 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:44:08.062 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:44:08.062 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6901cc8569a4486eb1717c1142cd7d68","UiLocales":null,"Nonce":"328ae11ae1134c6c86356c0748aa99b9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6901cc8569a4486eb1717c1142cd7d68","nonce":"328ae11ae1134c6c86356c0748aa99b9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:44:08.062 +03:00 [INF] Error: User denied consent
2019-07-24 14:44:08.063 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6901cc8569a4486eb1717c1142cd7d68","UiLocales":null,"Nonce":"328ae11ae1134c6c86356c0748aa99b9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6901cc8569a4486eb1717c1142cd7d68","nonce":"328ae11ae1134c6c86356c0748aa99b9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:44:08.063 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLOG4GND0NJI:00000006","TimeStamp":"2019-07-24T11:44:08.0000000Z","ProcessId":7328,"LocalIpAddress":"127.0.0.1:15582","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-24 14:44:12.483 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:44:12.484 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:44:12.484 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:44:12.488 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:44:12.489 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:44:12.490 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:44:12.490 +03:00 [DBG] Start discovery request
2019-07-24 14:44:12.523 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:44:12.525 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:44:12.525 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:44:12.525 +03:00 [DBG] Start authorize request
2019-07-24 14:44:12.525 +03:00 [DBG] No user present in authorize request
2019-07-24 14:44:12.526 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:44:12.526 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:44:12.526 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:44:12.527 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"87255ed8ab27486585331a61b0276180","UiLocales":null,"Nonce":"ff8ef2a57ff54ddbba71a150377d7da3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"87255ed8ab27486585331a61b0276180","nonce":"ff8ef2a57ff54ddbba71a150377d7da3"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:44:12.527 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:44:12.550 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:44:12.551 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:44:12.551 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:44:12.551 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:45:38.592 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:45:38.598 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:45:38.599 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:45:38.600 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:48:07.892 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:48:19.155 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-24 14:48:37.166 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:51:31.706 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 14:51:31.797 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-24 14:51:31.805 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-24 14:51:31.805 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-24 14:51:31.805 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-24 14:51:31.805 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-24 14:51:31.805 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-24 14:51:32.455 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 14:51:32.472 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 14:51:32.472 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 14:51:32.566 +03:00 [DBG] Login Url: /Account/Login
2019-07-24 14:51:32.566 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 14:51:32.566 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-24 14:51:32.566 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-24 14:51:32.566 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 14:51:32.566 +03:00 [DBG] Error Url: /home/error
2019-07-24 14:51:32.567 +03:00 [DBG] Error Id Parameter: errorId
2019-07-24 14:51:32.621 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:51:32.973 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:51:32.973 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:51:32.982 +03:00 [DBG] Start discovery request
2019-07-24 14:51:33.155 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 14:51:33.171 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 14:51:33.171 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 14:51:33.181 +03:00 [DBG] Start authorize request
2019-07-24 14:51:33.211 +03:00 [DBG] No user present in authorize request
2019-07-24 14:51:33.226 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:51:33.271 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:51:33.434 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:51:33.461 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"dfba922e410c409a848065d6d7bda51c","UiLocales":null,"Nonce":"8f7e3f6282fc4844afe80e771fec1f6a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"dfba922e410c409a848065d6d7bda51c","nonce":"8f7e3f6282fc4844afe80e771fec1f6a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 14:51:33.555 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 14:51:34.505 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:51:34.506 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:51:34.508 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:51:34.537 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:51:52.190 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 14:51:52.323 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:51:52.323 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:51:52.324 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:51:56.174 +03:00 [INF] {"Username":"jupitel1993@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOG5L2O1B19:00000004","TimeStamp":"2019-07-24T11:51:56.0000000Z","ProcessId":1136,"LocalIpAddress":"127.0.0.1:7362","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-24 14:51:56.178 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 14:51:56.178 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 14:51:56.179 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 14:51:56.179 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:02:53.245 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:02:53.262 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:02:53.262 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:02:53.263 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:02:53.305 +03:00 [INF] {"Username":"jupitel1993@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOG5L2O1B1A:00000001","TimeStamp":"2019-07-24T12:02:53.0000000Z","ProcessId":1136,"LocalIpAddress":"127.0.0.1:7362","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-24 15:02:53.305 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:02:53.305 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:02:53.306 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:02:53.306 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:03:01.371 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:03:01.376 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:03:01.376 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:03:01.377 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:03:13.063 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-24 15:03:23.587 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:03:39.538 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-24 15:03:51.084 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:04:12.720 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-24 15:04:20.653 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:04:36.238 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:04:36.239 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:04:36.240 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:04:36.243 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:04:36.245 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:04:36.245 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:04:36.245 +03:00 [DBG] Start discovery request
2019-07-24 15:04:36.319 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 15:04:36.321 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 15:04:36.322 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 15:04:36.327 +03:00 [DBG] Start authorize request
2019-07-24 15:04:36.328 +03:00 [DBG] No user present in authorize request
2019-07-24 15:04:36.328 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:04:36.328 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:04:36.329 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:04:36.329 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1d00a7c577db46d583ed51d3e0f7c262","UiLocales":null,"Nonce":"b169169fad734a86be69a9a24e80aba3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1d00a7c577db46d583ed51d3e0f7c262","nonce":"b169169fad734a86be69a9a24e80aba3"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:04:36.330 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:04:36.384 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:04:36.385 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:04:36.385 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:04:36.386 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:04:46.311 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:04:46.317 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:04:46.317 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:04:46.317 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:04:46.340 +03:00 [INF] {"Username":"jupitel1993@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOG5L2O1B1A:00000017","TimeStamp":"2019-07-24T12:04:46.0000000Z","ProcessId":1136,"LocalIpAddress":"127.0.0.1:7362","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-24 15:04:46.340 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:04:46.342 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:04:46.343 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:04:46.344 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:04:48.118 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:04:48.122 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:04:48.123 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:04:48.124 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:04:59.089 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:05:42.252 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:05:42.283 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:05:42.284 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:05:42.284 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:05:42.285 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:05:42.285 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:05:42.285 +03:00 [DBG] Start discovery request
2019-07-24 15:05:42.651 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 15:05:42.652 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 15:05:42.652 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 15:05:42.652 +03:00 [DBG] Start authorize request
2019-07-24 15:05:42.652 +03:00 [DBG] No user present in authorize request
2019-07-24 15:05:42.652 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:05:42.652 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:05:42.653 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:05:42.653 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ab8690f3900343d2b3ab3e52639eabe1","UiLocales":null,"Nonce":"5dba0f1c2f914d9fa44b30a4e6e2c277","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ab8690f3900343d2b3ab3e52639eabe1","nonce":"5dba0f1c2f914d9fa44b30a4e6e2c277"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:05:42.653 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:05:42.787 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:05:42.787 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:05:42.790 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:05:42.790 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:05:56.044 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:05:56.051 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:05:56.052 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:05:56.053 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:05:56.082 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOG5L2O1B1A:0000001E","TimeStamp":"2019-07-24T12:05:56.0000000Z","ProcessId":1136,"LocalIpAddress":"127.0.0.1:7362","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-24 15:05:56.083 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:05:56.083 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:05:56.085 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:05:56.085 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:05:59.415 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:05:59.425 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:05:59.426 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:05:59.427 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:06:07.734 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:06:14.848 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 15:06:14.869 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 15:06:14.870 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 15:06:14.889 +03:00 [DBG] Start authorize callback request
2019-07-24 15:06:14.921 +03:00 [DBG] No user present in authorize request
2019-07-24 15:06:14.921 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:06:14.922 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:06:14.923 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:06:14.924 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ab8690f3900343d2b3ab3e52639eabe1","UiLocales":null,"Nonce":"5dba0f1c2f914d9fa44b30a4e6e2c277","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ab8690f3900343d2b3ab3e52639eabe1","nonce":"5dba0f1c2f914d9fa44b30a4e6e2c277"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:06:14.924 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:06:14.970 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:06:14.970 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:06:14.971 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:06:14.971 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:08.054 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:07:08.057 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:07:08.057 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:08.057 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:07:08.411 +03:00 [DBG] Augmenting SignInContext
2019-07-24 15:07:08.419 +03:00 [DBG] Adding idp claim with value: local
2019-07-24 15:07:08.420 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-24 15:07:08.420 +03:00 [DBG] Adding auth_time claim with value: 1563970028
2019-07-24 15:07:08.464 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 15:07:08.467 +03:00 [INF] {"Username":"ilya","Provider":null,"ProviderUserId":null,"SubjectId":"65bdb1db-8837-4e1c-92f6-fb9e6473e7c2","DisplayName":"ilya","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG5L2O1B1A:00000025","TimeStamp":"2019-07-24T12:07:08.0000000Z","ProcessId":1136,"LocalIpAddress":"127.0.0.1:7362","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 15:07:08.471 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:08.511 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 15:07:08.512 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 15:07:08.513 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 15:07:08.513 +03:00 [DBG] Start authorize callback request
2019-07-24 15:07:08.514 +03:00 [DBG] User in authorize request: 65bdb1db-8837-4e1c-92f6-fb9e6473e7c2
2019-07-24 15:07:08.514 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:07:08.514 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:08.515 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:07:08.516 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"65bdb1db-8837-4e1c-92f6-fb9e6473e7c2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ab8690f3900343d2b3ab3e52639eabe1","UiLocales":null,"Nonce":"5dba0f1c2f914d9fa44b30a4e6e2c277","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d2c47881f36cf47cfb5afa1d3b8a6795","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ab8690f3900343d2b3ab3e52639eabe1","nonce":"5dba0f1c2f914d9fa44b30a4e6e2c277"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:07:08.578 +03:00 [DBG] user_consent grant with value: spa|65bdb1db-8837-4e1c-92f6-fb9e6473e7c2 not found in store.
2019-07-24 15:07:08.579 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 15:07:08.579 +03:00 [INF] Showing consent: User has not yet consented
2019-07-24 15:07:08.641 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:07:08.641 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:08.641 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:07:08.642 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:10.245 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:07:10.286 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:07:10.286 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:10.286 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:07:10.290 +03:00 [INF] {"SubjectId":"65bdb1db-8837-4e1c-92f6-fb9e6473e7c2","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOG5L2O1B1A:00000028","TimeStamp":"2019-07-24T12:07:10.0000000Z","ProcessId":1136,"LocalIpAddress":"127.0.0.1:7362","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-24 15:07:10.332 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:10.343 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 15:07:10.343 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 15:07:10.344 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 15:07:10.344 +03:00 [DBG] Start authorize callback request
2019-07-24 15:07:10.353 +03:00 [DBG] User in authorize request: 65bdb1db-8837-4e1c-92f6-fb9e6473e7c2
2019-07-24 15:07:10.353 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:07:10.354 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:10.354 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:07:10.354 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"65bdb1db-8837-4e1c-92f6-fb9e6473e7c2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ab8690f3900343d2b3ab3e52639eabe1","UiLocales":null,"Nonce":"5dba0f1c2f914d9fa44b30a4e6e2c277","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d2c47881f36cf47cfb5afa1d3b8a6795","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ab8690f3900343d2b3ab3e52639eabe1","nonce":"5dba0f1c2f914d9fa44b30a4e6e2c277"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:07:10.360 +03:00 [DBG] user_consent grant with value: spa|65bdb1db-8837-4e1c-92f6-fb9e6473e7c2 not found in store.
2019-07-24 15:07:10.360 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 15:07:10.372 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-24 15:07:10.376 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-24 15:07:10.382 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 65bdb1db-8837-4e1c-92f6-fb9e6473e7c2
2019-07-24 15:07:10.410 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 15:07:10.431 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 15:07:10.431 +03:00 [DBG] Getting claims for access token for subject: 65bdb1db-8837-4e1c-92f6-fb9e6473e7c2
2019-07-24 15:07:10.643 +03:00 [DBG] Getting claims for identity token for subject: 65bdb1db-8837-4e1c-92f6-fb9e6473e7c2 and client: spa
2019-07-24 15:07:10.644 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 15:07:10.672 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"65bdb1db-8837-4e1c-92f6-fb9e6473e7c2","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Eleg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****izsw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG5L2O1B1A:00000029","TimeStamp":"2019-07-24T12:07:10.0000000Z","ProcessId":1136,"LocalIpAddress":"127.0.0.1:7362","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 15:07:10.680 +03:00 [INF] Authorize endpoint response
{"SubjectId":"65bdb1db-8837-4e1c-92f6-fb9e6473e7c2","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"ab8690f3900343d2b3ab3e52639eabe1","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 15:07:10.749 +03:00 [DBG] Augmenting SignInContext
2019-07-24 15:07:10.751 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 15:07:12.621 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:07:12.621 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:07:12.621 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:07:12.622 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:07:12.625 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:07:12.625 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:07:12.625 +03:00 [DBG] Start discovery request
2019-07-24 15:07:12.722 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 15:07:12.722 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:07:12.722 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:07:12.723 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 15:07:12.729 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 15:07:12.729 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 15:07:12.750 +03:00 [DBG] Start key discovery request
2019-07-24 15:07:12.852 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 15:07:12.853 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:07:12.853 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:07:12.872 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 15:07:12.872 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:07:12.872 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:07:12.873 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 15:07:12.884 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 15:07:12.885 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 15:07:12.904 +03:00 [DBG] Start userinfo request
2019-07-24 15:07:12.916 +03:00 [DBG] Bearer token found in header
2019-07-24 15:07:12.998 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:13.003 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:13.011 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 15:07:13.014 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563970030,"exp":1563973630,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"65bdb1db-8837-4e1c-92f6-fb9e6473e7c2","auth_time":1563970028,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 15:07:13.032 +03:00 [DBG] Creating userinfo response
2019-07-24 15:07:13.037 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 15:07:13.042 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 15:07:13.048 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 15:07:13.048 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 15:07:13.057 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 15:07:13.058 +03:00 [DBG] End userinfo request
2019-07-24 15:07:13.101 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 15:07:13.103 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 15:07:13.103 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 15:07:13.115 +03:00 [DBG] Rendering check session result
2019-07-24 15:07:17.797 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 15:07:17.802 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 15:07:17.802 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 15:07:17.813 +03:00 [DBG] Processing signout request for 65bdb1db-8837-4e1c-92f6-fb9e6473e7c2
2019-07-24 15:07:17.825 +03:00 [DBG] Start end session request validation
2019-07-24 15:07:17.836 +03:00 [DBG] Start identity token validation
2019-07-24 15:07:17.838 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:17.838 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 15:07:17.847 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 15:07:17.848 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563970030,"exp":1563970330,"iss":"http://localhost:5000","aud":"spa","nonce":"5dba0f1c2f914d9fa44b30a4e6e2c277","iat":1563970030,"at_hash":"uxwJ2ecBJv3rSGZIg0k-Sg","sid":"d2c47881f36cf47cfb5afa1d3b8a6795","sub":"65bdb1db-8837-4e1c-92f6-fb9e6473e7c2","auth_time":1563970028,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 15:07:17.853 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"65bdb1db-8837-4e1c-92f6-fb9e6473e7c2","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5NzAwMzAsImV4cCI6MTU2Mzk3MDMzMCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1ZGJhMGYxYzJmOTE0ZDlmYTQ0YjMwYTRlNmUyYzI3NyIsImlhdCI6MTU2Mzk3MDAzMCwiYXRfaGFzaCI6InV4d0oyZWNCSnYzclNHWklnMGstU2ciLCJzaWQiOiJkMmM0Nzg4MWYzNmNmNDdjZmI1YWZhMWQzYjhhNjc5NSIsInN1YiI6IjY1YmRiMWRiLTg4MzctNGUxYy05MmY2LWZiOWU2NDczZTdjMiIsImF1dGhfdGltZSI6MTU2Mzk3MDAyOCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.FBAG52xTCXhsTTKd8KmtBLIKZb5VQMAPgI5VvXP9go2jjSsRwQftFQ09HD92wktxqeg6OB9QVspuE_EPEf3mTl0A5KRgpz4Y9yFstQp0mwjhARHnDMHXe6KJG-MOcJlbH4v9VEnlEaapLlyZxrAiNMQTUVER6t8lLMI7xU4FpUPsu_GDHUyp12LO9FjC09JEmS7SRMma858nR8A3b6jW3V5zj-PTnlwYmiKvsGEMifW8MgakgGNfcmlw35u0P97Jkx625mPb3eS9xkASq-ukSXfIT7mnjtO1UhtvL3gWCNu6VYJbhr2CLbggEk9FVdMASv56tje145aiA7FNa6Eleg"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 15:07:17.854 +03:00 [DBG] Success validating end session request from spa
2019-07-24 15:07:17.950 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 15:07:17.952 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 15:07:17.953 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 15:07:17.954 +03:00 [INF] {"SubjectId":"65bdb1db-8837-4e1c-92f6-fb9e6473e7c2","DisplayName":"ilya","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG5L2O1B1A:00000030","TimeStamp":"2019-07-24T12:07:17.0000000Z","ProcessId":1136,"LocalIpAddress":"127.0.0.1:7362","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 15:07:19.757 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:07:19.759 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:07:19.763 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:07:19.764 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:07:19.765 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:07:19.765 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:07:19.766 +03:00 [DBG] Start discovery request
2019-07-24 15:07:19.797 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 15:07:19.798 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 15:07:19.799 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 15:07:19.799 +03:00 [DBG] Start authorize request
2019-07-24 15:07:19.799 +03:00 [DBG] No user present in authorize request
2019-07-24 15:07:19.799 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:07:19.799 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:19.800 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:07:19.800 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e483062dbc114f7c8f8346514c918c8c","UiLocales":null,"Nonce":"313ec0ed1d7e4e1ab8f0931db6d0bec4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e483062dbc114f7c8f8346514c918c8c","nonce":"313ec0ed1d7e4e1ab8f0931db6d0bec4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:07:19.800 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:07:19.812 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:07:19.813 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:07:19.814 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:07:19.814 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:08:15.465 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:08:15.469 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:08:15.470 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:08:15.470 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:08:22.887 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:08:22.887 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:08:22.889 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:08:22.890 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:03.914 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 15:14:03.974 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-24 15:14:03.979 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-24 15:14:03.979 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-24 15:14:03.980 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-24 15:14:03.980 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-24 15:14:03.980 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-24 15:14:04.786 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:14:04.798 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:14:04.799 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:14:04.870 +03:00 [DBG] Login Url: /Account/Login
2019-07-24 15:14:04.870 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 15:14:04.871 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-24 15:14:04.871 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-24 15:14:04.871 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 15:14:04.871 +03:00 [DBG] Error Url: /home/error
2019-07-24 15:14:04.871 +03:00 [DBG] Error Id Parameter: errorId
2019-07-24 15:14:04.917 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:14:05.245 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:14:05.246 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:14:05.256 +03:00 [DBG] Start discovery request
2019-07-24 15:14:05.558 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 15:14:05.591 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 15:14:05.591 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 15:14:05.688 +03:00 [DBG] Start authorize request
2019-07-24 15:14:05.736 +03:00 [DBG] No user present in authorize request
2019-07-24 15:14:05.815 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:14:05.890 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:06.077 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:14:06.120 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e04f6d11deed4795bc8bc04ebfa1de7b","UiLocales":null,"Nonce":"2cf4704e735c43589c4eb93f68d0d036","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e04f6d11deed4795bc8bc04ebfa1de7b","nonce":"2cf4704e735c43589c4eb93f68d0d036"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:14:06.175 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:14:06.756 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:14:06.759 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:06.760 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:14:06.775 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:21.930 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:14:22.049 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:14:22.049 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:22.049 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:14:33.455 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:14:33.455 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:33.460 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:14:33.461 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:36.887 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:14:36.895 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:14:36.895 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:36.896 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:14:36.900 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:14:36.901 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:36.906 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:14:36.909 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:42.907 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:14:42.912 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:14:42.913 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:42.913 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:14:45.575 +03:00 [WRN] Invalid password for user 65bdb1db-8837-4e1c-92f6-fb9e6473e7c2.
2019-07-24 15:14:45.578 +03:00 [WRN] User 65bdb1db-8837-4e1c-92f6-fb9e6473e7c2 failed to provide the correct password.
2019-07-24 15:14:46.066 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOG61LOFF10:00000008","TimeStamp":"2019-07-24T12:14:46.0000000Z","ProcessId":11060,"LocalIpAddress":"127.0.0.1:1802","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-24 15:14:46.069 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:14:46.069 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:46.070 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:14:46.070 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:53.138 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:14:53.144 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:14:53.144 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:14:53.145 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:15:40.470 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:15:43.134 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 15:15:43.138 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 15:15:43.138 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 15:15:43.149 +03:00 [DBG] Start authorize callback request
2019-07-24 15:15:43.159 +03:00 [DBG] No user present in authorize request
2019-07-24 15:15:43.160 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:15:43.160 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:15:43.160 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:15:43.161 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e04f6d11deed4795bc8bc04ebfa1de7b","UiLocales":null,"Nonce":"2cf4704e735c43589c4eb93f68d0d036","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e04f6d11deed4795bc8bc04ebfa1de7b","nonce":"2cf4704e735c43589c4eb93f68d0d036"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:15:43.161 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:15:43.175 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:15:43.175 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:15:43.175 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:15:43.176 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:01.080 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:16:01.086 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:16:01.086 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:01.086 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:16:01.092 +03:00 [INF] {"Username":"jupitel1993trash@gmail.com","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOG61LOFF10:0000000E","TimeStamp":"2019-07-24T12:16:01.0000000Z","ProcessId":11060,"LocalIpAddress":"127.0.0.1:1802","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-24 15:16:01.093 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:16:01.094 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:01.095 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:16:01.095 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:45.690 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:16:45.693 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:16:45.695 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:45.696 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:16:46.077 +03:00 [DBG] Augmenting SignInContext
2019-07-24 15:16:46.084 +03:00 [DBG] Adding idp claim with value: local
2019-07-24 15:16:46.084 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-24 15:16:46.086 +03:00 [DBG] Adding auth_time claim with value: 1563970606
2019-07-24 15:16:46.134 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 15:16:46.135 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG61LOFF10:00000010","TimeStamp":"2019-07-24T12:16:46.0000000Z","ProcessId":11060,"LocalIpAddress":"127.0.0.1:1802","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 15:16:46.140 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:46.176 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 15:16:46.177 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 15:16:46.177 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 15:16:46.177 +03:00 [DBG] Start authorize callback request
2019-07-24 15:16:46.178 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 15:16:46.178 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:16:46.179 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:46.179 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:16:46.181 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e04f6d11deed4795bc8bc04ebfa1de7b","UiLocales":null,"Nonce":"2cf4704e735c43589c4eb93f68d0d036","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2505e5199837f6b6608313fcc68582a3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e04f6d11deed4795bc8bc04ebfa1de7b","nonce":"2cf4704e735c43589c4eb93f68d0d036"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:16:46.235 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-24 15:16:46.235 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 15:16:46.235 +03:00 [INF] Showing consent: User has not yet consented
2019-07-24 15:16:46.309 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:16:46.309 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:46.310 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:16:46.310 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:48.239 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:16:48.276 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:16:48.276 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:48.277 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:16:48.279 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOG61LOFF10:00000013","TimeStamp":"2019-07-24T12:16:48.0000000Z","ProcessId":11060,"LocalIpAddress":"127.0.0.1:1802","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-24 15:16:48.323 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:48.333 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 15:16:48.333 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 15:16:48.333 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 15:16:48.333 +03:00 [DBG] Start authorize callback request
2019-07-24 15:16:48.344 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 15:16:48.344 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:16:48.345 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:48.345 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:16:48.345 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e04f6d11deed4795bc8bc04ebfa1de7b","UiLocales":null,"Nonce":"2cf4704e735c43589c4eb93f68d0d036","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2505e5199837f6b6608313fcc68582a3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e04f6d11deed4795bc8bc04ebfa1de7b","nonce":"2cf4704e735c43589c4eb93f68d0d036"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:16:48.350 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-24 15:16:48.351 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 15:16:48.363 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-24 15:16:48.366 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-24 15:16:48.372 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 15:16:48.399 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 15:16:48.419 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 15:16:48.420 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 15:16:48.569 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-24 15:16:48.569 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 15:16:48.591 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****iI3A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****6C8g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG61LOFF10:00000014","TimeStamp":"2019-07-24T12:16:48.0000000Z","ProcessId":11060,"LocalIpAddress":"127.0.0.1:1802","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 15:16:48.595 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"e04f6d11deed4795bc8bc04ebfa1de7b","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 15:16:48.634 +03:00 [DBG] Augmenting SignInContext
2019-07-24 15:16:48.637 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 15:16:50.710 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:16:50.711 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:16:50.712 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:16:50.714 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:16:50.715 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:16:50.715 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:16:50.716 +03:00 [DBG] Start discovery request
2019-07-24 15:16:50.769 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 15:16:50.769 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:16:50.770 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:16:50.770 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 15:16:50.772 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 15:16:50.772 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 15:16:50.785 +03:00 [DBG] Start key discovery request
2019-07-24 15:16:50.883 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 15:16:50.883 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:16:50.883 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:16:50.893 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 15:16:50.893 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:16:50.894 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:16:50.894 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 15:16:50.900 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 15:16:50.901 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 15:16:50.918 +03:00 [DBG] Start userinfo request
2019-07-24 15:16:50.925 +03:00 [DBG] Bearer token found in header
2019-07-24 15:16:50.988 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:50.994 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:16:51.002 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 15:16:51.006 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563970608,"exp":1563974208,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1563970606,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 15:16:51.024 +03:00 [DBG] Creating userinfo response
2019-07-24 15:16:51.032 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 15:16:51.037 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 15:16:51.041 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 15:16:51.042 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 15:16:51.052 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 15:16:51.054 +03:00 [DBG] End userinfo request
2019-07-24 15:16:51.087 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 15:16:51.088 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 15:16:51.088 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 15:16:51.095 +03:00 [DBG] Rendering check session result
2019-07-24 15:20:46.711 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 15:20:46.836 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-24 15:20:46.848 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-24 15:20:46.848 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-24 15:20:46.848 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-24 15:20:46.848 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-24 15:20:46.849 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-24 15:20:47.670 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:20:47.686 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:20:47.686 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:20:47.772 +03:00 [DBG] Login Url: /Account/Login
2019-07-24 15:20:47.773 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 15:20:47.773 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-24 15:20:47.773 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-24 15:20:47.773 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 15:20:47.773 +03:00 [DBG] Error Url: /home/error
2019-07-24 15:20:47.774 +03:00 [DBG] Error Id Parameter: errorId
2019-07-24 15:20:47.834 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:20:48.197 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:20:48.197 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:20:48.205 +03:00 [DBG] Start discovery request
2019-07-24 15:20:48.365 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 15:20:48.381 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 15:20:48.381 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 15:20:48.391 +03:00 [DBG] Start authorize request
2019-07-24 15:20:48.420 +03:00 [DBG] No user present in authorize request
2019-07-24 15:20:48.431 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:20:48.475 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:20:48.563 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:20:48.594 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2d23461d9dd241c0805c1b5212f5f96b","UiLocales":null,"Nonce":"66643cfa0156470db87ec2628668ceb9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2d23461d9dd241c0805c1b5212f5f96b","nonce":"66643cfa0156470db87ec2628668ceb9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:20:48.643 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:20:49.064 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:20:49.065 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:20:49.065 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:20:49.074 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:20:58.671 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:20:58.765 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:20:58.765 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:20:58.766 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:24:43.564 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 15:24:43.725 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-24 15:24:43.737 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-24 15:24:43.738 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-24 15:24:43.738 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-24 15:24:43.739 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-24 15:24:43.739 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-24 15:24:46.232 +03:00 [DBG] Login Url: /Account/Login
2019-07-24 15:24:46.244 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 15:24:46.244 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-24 15:24:46.244 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-24 15:24:46.244 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 15:24:46.244 +03:00 [DBG] Error Url: /home/error
2019-07-24 15:24:46.244 +03:00 [DBG] Error Id Parameter: errorId
2019-07-24 15:25:16.817 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:25:16.828 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:25:16.828 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:25:16.864 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:25:18.312 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:25:18.313 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:25:18.325 +03:00 [DBG] Start discovery request
2019-07-24 15:25:18.506 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 15:25:18.534 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 15:25:18.535 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 15:25:18.548 +03:00 [DBG] Start authorize request
2019-07-24 15:25:18.579 +03:00 [DBG] No user present in authorize request
2019-07-24 15:25:18.590 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:25:18.633 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:25:18.749 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:25:18.797 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"722f11994b044259b0a2659b3793332b","UiLocales":null,"Nonce":"a7cf5943cabc48f9b028f67e501efdbd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"722f11994b044259b0a2659b3793332b","nonce":"a7cf5943cabc48f9b028f67e501efdbd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:25:18.856 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:25:28.966 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:25:28.968 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:25:28.969 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:25:28.976 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:25:57.518 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:29:06.654 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:29:06.656 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:29:06.660 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:32:24.016 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 15:32:24.496 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-24 15:32:24.505 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-24 15:32:24.505 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-24 15:32:24.505 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-24 15:32:24.505 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-24 15:32:24.505 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-24 15:32:26.981 +03:00 [DBG] Login Url: /Account/Login
2019-07-24 15:32:26.989 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 15:32:26.989 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-24 15:32:26.990 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-24 15:32:26.990 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 15:32:26.990 +03:00 [DBG] Error Url: /home/error
2019-07-24 15:32:26.990 +03:00 [DBG] Error Id Parameter: errorId
2019-07-24 15:32:31.926 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-24 15:32:45.655 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:32:57.633 +03:00 [ERR] Request matched multiple actions resulting in ambiguity. Matching actions: IdentityServer4.Quickstart.UI.AccountController.Register (EP.15Puzzle.Security)
IdentityServer4.Quickstart.UI.AccountController.Register (EP.15Puzzle.Security)
2019-07-24 15:32:57.659 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Mvc.Internal.AmbiguousActionException: Multiple actions matched. The following actions matched route data and had all constraints satisfied:

IdentityServer4.Quickstart.UI.AccountController.Register (EP.15Puzzle.Security)
IdentityServer4.Quickstart.UI.AccountController.Register (EP.15Puzzle.Security)
   at Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestCandidate(RouteContext context, IReadOnlyList`1 candidates)
   at Microsoft.AspNetCore.Mvc.Internal.MvcRouteHandler.RouteAsync(RouteContext context)
   at Microsoft.AspNetCore.Routing.Route.OnRouteMatched(RouteContext context)
   at Microsoft.AspNetCore.Routing.RouteBase.RouteAsync(RouteContext context)
   at Microsoft.AspNetCore.Routing.RouteCollection.RouteAsync(RouteContext context)
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-24 15:36:57.904 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 15:36:58.040 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-24 15:36:58.052 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-24 15:36:58.052 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-24 15:36:58.052 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-24 15:36:58.052 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-24 15:36:58.053 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-24 15:37:00.450 +03:00 [DBG] Login Url: /Account/Login
2019-07-24 15:37:00.453 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 15:37:00.453 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-24 15:37:00.453 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-24 15:37:00.453 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 15:37:00.453 +03:00 [DBG] Error Url: /home/error
2019-07-24 15:37:00.453 +03:00 [DBG] Error Id Parameter: errorId
2019-07-24 15:37:24.656 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-24 15:37:39.021 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:40:08.452 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:40:08.494 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:40:08.495 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:40:08.509 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:40:08.531 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:40:08.532 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:40:08.636 +03:00 [DBG] Start discovery request
2019-07-24 15:40:08.841 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 15:40:08.863 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 15:40:08.863 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 15:40:08.872 +03:00 [DBG] Start authorize request
2019-07-24 15:40:08.891 +03:00 [DBG] No user present in authorize request
2019-07-24 15:40:08.903 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:40:08.970 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:40:09.053 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:40:09.082 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2ddc7ff4b75741c49eac5c0a254e5db3","UiLocales":null,"Nonce":"bbbb833745ba4d09abf4654e30834d98","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2ddc7ff4b75741c49eac5c0a254e5db3","nonce":"bbbb833745ba4d09abf4654e30834d98"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:40:09.121 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:40:09.236 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:40:09.237 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:40:09.237 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:40:09.241 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:40:14.074 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:40:25.667 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:40:25.668 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:40:25.669 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:42:06.398 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:42:06.412 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:42:06.412 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:42:06.413 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:42:06.414 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:42:06.414 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:42:06.414 +03:00 [DBG] Start discovery request
2019-07-24 15:42:06.476 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 15:42:06.477 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 15:42:06.478 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 15:42:06.478 +03:00 [DBG] Start authorize request
2019-07-24 15:42:06.478 +03:00 [DBG] No user present in authorize request
2019-07-24 15:42:06.478 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:42:06.478 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:42:06.479 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:42:06.480 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"35e5b34f7fdd4afda589c867ef6b7c74","UiLocales":null,"Nonce":"0295fa525bf74680bb9516f774c222ac","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"35e5b34f7fdd4afda589c867ef6b7c74","nonce":"0295fa525bf74680bb9516f774c222ac"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:42:06.481 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:42:06.687 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:42:06.687 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:42:06.688 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:42:06.688 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:42:10.772 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:42:17.335 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:42:17.335 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:42:17.336 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:43:40.424 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-24 15:43:43.048 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:47:17.572 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 15:47:17.871 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-24 15:47:17.881 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-24 15:47:17.881 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-24 15:47:17.882 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-24 15:47:17.882 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-24 15:47:17.882 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-24 15:47:19.499 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:47:19.526 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:47:19.527 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:47:19.622 +03:00 [DBG] Login Url: /Account/Login
2019-07-24 15:47:19.622 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 15:47:19.625 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-24 15:47:19.625 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-24 15:47:19.625 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 15:47:19.625 +03:00 [DBG] Error Url: /home/error
2019-07-24 15:47:19.626 +03:00 [DBG] Error Id Parameter: errorId
2019-07-24 15:47:19.681 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:47:21.499 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:47:21.499 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:47:21.508 +03:00 [DBG] Start discovery request
2019-07-24 15:47:21.845 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 15:47:21.858 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 15:47:21.858 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 15:47:21.868 +03:00 [DBG] Start authorize request
2019-07-24 15:47:21.912 +03:00 [DBG] No user present in authorize request
2019-07-24 15:47:21.944 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:47:22.008 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:47:22.184 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:47:22.230 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"72590b18c06047829a10c641ad07ac89","UiLocales":null,"Nonce":"b4ef36b216034a468506dee4933572f6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"72590b18c06047829a10c641ad07ac89","nonce":"b4ef36b216034a468506dee4933572f6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:47:22.307 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:47:22.568 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:47:22.571 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:47:22.573 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:47:22.581 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:47:27.286 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:47:39.736 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:47:39.736 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:47:39.737 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:50:43.180 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 15:50:43.568 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-24 15:50:43.583 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-24 15:50:43.583 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-24 15:50:43.583 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-24 15:50:43.583 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-24 15:50:43.584 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-24 15:50:45.489 +03:00 [DBG] Login Url: /Account/Login
2019-07-24 15:50:45.494 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 15:50:45.495 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-24 15:50:45.495 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-24 15:50:45.495 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 15:50:45.495 +03:00 [DBG] Error Url: /home/error
2019-07-24 15:50:45.495 +03:00 [DBG] Error Id Parameter: errorId
2019-07-24 15:50:51.318 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:50:51.327 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:50:51.328 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:50:51.332 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:50:52.704 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:50:52.705 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:50:52.716 +03:00 [DBG] Start discovery request
2019-07-24 15:50:52.932 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 15:50:52.944 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 15:50:52.945 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 15:50:52.953 +03:00 [DBG] Start authorize request
2019-07-24 15:50:52.980 +03:00 [DBG] No user present in authorize request
2019-07-24 15:50:52.996 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:50:53.057 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:50:53.188 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:50:53.232 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"1e16b7687c4b402199c5ea60970aa0c5","UiLocales":null,"Nonce":"9fb74fe73e3d4c6696572a3ece33bbe5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"1e16b7687c4b402199c5ea60970aa0c5","nonce":"9fb74fe73e3d4c6696572a3ece33bbe5"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:50:53.296 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:50:53.471 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:50:53.473 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:50:53.474 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:50:53.480 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:51:01.975 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:51:02.117 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:51:02.118 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:51:02.118 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:51:40.285 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:51:40.293 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:51:40.294 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:51:40.295 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:53:14.217 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 15:53:14.336 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-24 15:53:14.345 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-24 15:53:14.345 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-24 15:53:14.345 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-24 15:53:14.345 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-24 15:53:14.345 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-24 15:53:15.542 +03:00 [DBG] Login Url: /Account/Login
2019-07-24 15:53:15.547 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 15:53:15.547 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-24 15:53:15.548 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-24 15:53:15.548 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 15:53:15.548 +03:00 [DBG] Error Url: /home/error
2019-07-24 15:53:15.548 +03:00 [DBG] Error Id Parameter: errorId
2019-07-24 15:53:42.125 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 15:53:42.134 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 15:53:42.134 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 15:53:42.138 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 15:53:42.440 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 15:53:42.441 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 15:53:42.450 +03:00 [DBG] Start discovery request
2019-07-24 15:53:42.584 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 15:53:42.593 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 15:53:42.594 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 15:53:42.609 +03:00 [DBG] Start authorize request
2019-07-24 15:53:42.648 +03:00 [DBG] No user present in authorize request
2019-07-24 15:53:42.665 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:53:42.700 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:53:42.774 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:53:42.811 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ae05c485e9a940ff9a2364ee571893e2","UiLocales":null,"Nonce":"9e49fa1536304cac848b357e4f8b49cd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ae05c485e9a940ff9a2364ee571893e2","nonce":"9e49fa1536304cac848b357e4f8b49cd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 15:53:42.855 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 15:53:42.973 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:53:42.974 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:53:42.975 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:53:42.981 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:53:47.747 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 15:53:47.853 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 15:53:47.853 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 15:53:47.854 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 15:54:12.564 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 16:00:42.308 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 16:00:42.447 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-24 16:00:42.458 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-24 16:00:42.458 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-24 16:00:42.458 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-24 16:00:42.458 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-24 16:00:42.458 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-24 16:00:43.566 +03:00 [DBG] Login Url: /Account/Login
2019-07-24 16:00:43.573 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 16:00:43.573 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-24 16:00:43.574 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-24 16:00:43.574 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 16:00:43.574 +03:00 [DBG] Error Url: /home/error
2019-07-24 16:00:43.574 +03:00 [DBG] Error Id Parameter: errorId
2019-07-24 16:00:57.233 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:00:57.240 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:00:57.240 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:00:57.244 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:00:57.540 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:00:57.540 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:00:57.574 +03:00 [DBG] Start discovery request
2019-07-24 16:00:57.728 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 16:00:57.741 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 16:00:57.741 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 16:00:57.752 +03:00 [DBG] Start authorize request
2019-07-24 16:00:57.780 +03:00 [DBG] No user present in authorize request
2019-07-24 16:00:57.796 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:00:57.854 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:00:57.952 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:00:57.982 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"39f8a200b39f4a5eafc5065ebfd3dbae","UiLocales":null,"Nonce":"82fc2537f6784420955742c878e121c9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"39f8a200b39f4a5eafc5065ebfd3dbae","nonce":"82fc2537f6784420955742c878e121c9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:00:58.030 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 16:00:58.161 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:00:58.162 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:00:58.164 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:00:58.168 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:02.827 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 16:01:02.963 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:01:02.963 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:02.964 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:01:05.794 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 16:01:05.864 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:01:05.866 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:05.867 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:01:05.868 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:18.596 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 16:01:18.601 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:01:18.602 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:18.603 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:01:21.733 +03:00 [DBG] Augmenting SignInContext
2019-07-24 16:01:21.741 +03:00 [DBG] Adding idp claim with value: local
2019-07-24 16:01:21.741 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-24 16:01:21.742 +03:00 [DBG] Adding auth_time claim with value: 1563973281
2019-07-24 16:01:21.763 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 16:01:21.783 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG6RNQ0M9S:00000009","TimeStamp":"2019-07-24T13:01:21.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 16:01:21.787 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:21.816 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 16:01:21.818 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 16:01:21.818 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 16:01:21.831 +03:00 [DBG] Start authorize callback request
2019-07-24 16:01:21.840 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:01:21.840 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:01:21.840 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:21.841 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:01:21.842 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"39f8a200b39f4a5eafc5065ebfd3dbae","UiLocales":null,"Nonce":"82fc2537f6784420955742c878e121c9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df27fa7cf06cffc4df414bc01496b51f","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"39f8a200b39f4a5eafc5065ebfd3dbae","nonce":"82fc2537f6784420955742c878e121c9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:01:21.966 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-24 16:01:21.966 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 16:01:21.966 +03:00 [INF] Showing consent: User has not yet consented
2019-07-24 16:01:22.018 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:01:22.019 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:22.021 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:01:22.022 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:23.646 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 16:01:23.688 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:01:23.688 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:23.689 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:01:23.693 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOG6RNQ0M9S:0000000C","TimeStamp":"2019-07-24T13:01:23.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-24 16:01:23.727 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:23.738 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 16:01:23.741 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 16:01:23.741 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 16:01:23.741 +03:00 [DBG] Start authorize callback request
2019-07-24 16:01:23.754 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:01:23.754 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:01:23.754 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:23.755 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:01:23.755 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"39f8a200b39f4a5eafc5065ebfd3dbae","UiLocales":null,"Nonce":"82fc2537f6784420955742c878e121c9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df27fa7cf06cffc4df414bc01496b51f","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"39f8a200b39f4a5eafc5065ebfd3dbae","nonce":"82fc2537f6784420955742c878e121c9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:01:23.774 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-24 16:01:23.774 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 16:01:23.800 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-24 16:01:23.803 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-24 16:01:23.816 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:01:23.876 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 16:01:23.918 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 16:01:23.919 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:01:24.101 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-24 16:01:24.101 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 16:01:24.125 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****0UeQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****jdBA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG6RNQ0M9S:0000000D","TimeStamp":"2019-07-24T13:01:24.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 16:01:24.132 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"39f8a200b39f4a5eafc5065ebfd3dbae","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 16:01:24.184 +03:00 [DBG] Augmenting SignInContext
2019-07-24 16:01:24.186 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 16:01:26.200 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:01:26.203 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:01:26.203 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:01:26.204 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:01:26.206 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:01:26.206 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:01:26.206 +03:00 [DBG] Start discovery request
2019-07-24 16:01:26.275 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 16:01:26.276 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:01:26.276 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:01:26.276 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 16:01:26.278 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 16:01:26.278 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 16:01:26.292 +03:00 [DBG] Start key discovery request
2019-07-24 16:01:26.400 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 16:01:26.400 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:01:26.400 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:01:26.413 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 16:01:26.414 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:01:26.414 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:01:26.416 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 16:01:26.420 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 16:01:26.421 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 16:01:26.438 +03:00 [DBG] Start userinfo request
2019-07-24 16:01:26.444 +03:00 [DBG] Bearer token found in header
2019-07-24 16:01:26.499 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:26.507 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:01:26.513 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 16:01:26.517 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563973283,"exp":1563976883,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1563973281,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 16:01:26.529 +03:00 [DBG] Creating userinfo response
2019-07-24 16:01:26.538 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:01:26.543 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:01:26.552 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 16:01:26.552 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:01:26.561 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 16:01:26.566 +03:00 [DBG] End userinfo request
2019-07-24 16:01:26.636 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 16:01:26.638 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 16:01:26.638 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 16:01:26.641 +03:00 [DBG] Rendering check session result
2019-07-24 16:15:47.900 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 16:15:47.946 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 16:15:47.946 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 16:15:48.009 +03:00 [DBG] Processing signout request for 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:15:48.039 +03:00 [DBG] Start end session request validation
2019-07-24 16:15:48.071 +03:00 [DBG] Start identity token validation
2019-07-24 16:15:48.087 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:15:48.087 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 16:15:48.214 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 16:15:48.218 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563973284,"exp":1563973584,"iss":"http://localhost:5000","aud":"spa","nonce":"82fc2537f6784420955742c878e121c9","iat":1563973284,"at_hash":"sLvtWoSpSBXO8qQD7u6LAw","sid":"df27fa7cf06cffc4df414bc01496b51f","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1563973281,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 16:15:48.236 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5NzMyODQsImV4cCI6MTU2Mzk3MzU4NCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI4MmZjMjUzN2Y2Nzg0NDIwOTU1NzQyYzg3OGUxMjFjOSIsImlhdCI6MTU2Mzk3MzI4NCwiYXRfaGFzaCI6InNMdnRXb1NwU0JYTzhxUUQ3dTZMQXciLCJzaWQiOiJkZjI3ZmE3Y2YwNmNmZmM0ZGY0MTRiYzAxNDk2YjUxZiIsInN1YiI6IjZiMjQ4NDRlLWZmN2MtNDVkYy04Zjk0LTk4ZjhkNDYzYzcxOSIsImF1dGhfdGltZSI6MTU2Mzk3MzI4MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.rB1izVJCh5mN5XTGWTffs5wgET8dYjtwQwMk6-uBGCXu0J7GDDi7jBBus9t9k-vDjeywIVkvEIR5Zw0TXWogxPibfdXvXXY4IQwjtD2OD_40Cc_AA3xMBorBgYG9l6HYroeze5N_prXUg9kDdWgCvxAHp00IHNPUuL72KjMt1a843W7l8KvUwr8YD8wKO-od7k_nBoUNKghkfK7sEUv_U2dR7L2y2a8382aPioUDsIhofg_iWPfwZIaPNA1FzQ2P22b9XQSQgN5RfQnwUcXZ4zqXpvprTC6cFboea0SN_qiitwOYNZjU7_cqyOQlsT67BOcYRIz2SpX7bVmzUa0UeQ"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 16:15:48.237 +03:00 [DBG] Success validating end session request from spa
2019-07-24 16:15:48.536 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 16:15:48.538 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 16:15:48.539 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 16:15:48.541 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG6RNQ0M9T:00000002","TimeStamp":"2019-07-24T13:15:48.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 16:15:52.720 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:15:52.721 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:15:52.721 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:15:52.721 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:15:52.722 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:15:52.722 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:15:52.722 +03:00 [DBG] Start discovery request
2019-07-24 16:15:52.757 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 16:15:52.760 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 16:15:52.761 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 16:15:52.761 +03:00 [DBG] Start authorize request
2019-07-24 16:15:52.762 +03:00 [DBG] No user present in authorize request
2019-07-24 16:15:52.762 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:15:52.762 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:15:52.762 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:15:52.763 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"67959ee4591f48b2b687f58a53cd7e32","UiLocales":null,"Nonce":"e20c8b390ad0434eb8b94578dac4f5f5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"67959ee4591f48b2b687f58a53cd7e32","nonce":"e20c8b390ad0434eb8b94578dac4f5f5"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:15:52.764 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 16:15:52.783 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:15:52.784 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:15:52.784 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:15:52.786 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:00.847 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 16:16:00.856 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:00.856 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:00.857 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:04.760 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 16:16:04.775 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:04.776 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:04.776 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:04.777 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:05.968 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 16:16:05.972 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:05.972 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:05.974 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:07.437 +03:00 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 16:16:07.463 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 16:16:07.465 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 16:16:07.466 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 16:16:07.466 +03:00 [DBG] Start authorize callback request
2019-07-24 16:16:07.466 +03:00 [DBG] No user present in authorize request
2019-07-24 16:16:07.467 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:07.468 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:07.468 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:07.468 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"67959ee4591f48b2b687f58a53cd7e32","UiLocales":null,"Nonce":"e20c8b390ad0434eb8b94578dac4f5f5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"67959ee4591f48b2b687f58a53cd7e32","nonce":"e20c8b390ad0434eb8b94578dac4f5f5"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:16:07.469 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 16:16:07.487 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:07.488 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:07.489 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:07.489 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:09.166 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 16:16:09.215 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:09.215 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:09.216 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:09.218 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:09.271 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 16:16:09.271 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 16:16:09.271 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 16:16:09.272 +03:00 [DBG] Start authorize callback request
2019-07-24 16:16:09.272 +03:00 [DBG] No user present in authorize request
2019-07-24 16:16:09.272 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:09.272 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:09.273 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:09.273 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"67959ee4591f48b2b687f58a53cd7e32","UiLocales":null,"Nonce":"e20c8b390ad0434eb8b94578dac4f5f5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"67959ee4591f48b2b687f58a53cd7e32","nonce":"e20c8b390ad0434eb8b94578dac4f5f5"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:16:09.273 +03:00 [INF] Error: User denied consent
2019-07-24 16:16:09.281 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"67959ee4591f48b2b687f58a53cd7e32","UiLocales":null,"Nonce":"e20c8b390ad0434eb8b94578dac4f5f5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"67959ee4591f48b2b687f58a53cd7e32","nonce":"e20c8b390ad0434eb8b94578dac4f5f5"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:16:09.286 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLOG6RNQ0M9T:00000010","TimeStamp":"2019-07-24T13:16:09.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-24 16:16:26.328 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:16:26.328 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:16:26.328 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:16:26.329 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:16:26.330 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:16:26.330 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:16:26.330 +03:00 [DBG] Start discovery request
2019-07-24 16:16:26.367 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 16:16:26.368 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 16:16:26.368 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 16:16:26.368 +03:00 [DBG] Start authorize request
2019-07-24 16:16:26.369 +03:00 [DBG] No user present in authorize request
2019-07-24 16:16:26.369 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:26.369 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:26.369 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:26.370 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a33ab03ebea3412f8455794e951a14ff","UiLocales":null,"Nonce":"5e313b4293704d8d996bcb9cfeacee96","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a33ab03ebea3412f8455794e951a14ff","nonce":"5e313b4293704d8d996bcb9cfeacee96"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:16:26.370 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 16:16:26.384 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:26.385 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:26.385 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:26.385 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:39.701 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 16:16:39.706 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:39.706 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:39.707 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:39.758 +03:00 [DBG] Augmenting SignInContext
2019-07-24 16:16:39.758 +03:00 [DBG] Adding idp claim with value: local
2019-07-24 16:16:39.758 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-24 16:16:39.758 +03:00 [DBG] Adding auth_time claim with value: 1563974199
2019-07-24 16:16:39.761 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 16:16:39.762 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG6RNQ0M9T:00000014","TimeStamp":"2019-07-24T13:16:39.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 16:16:39.763 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:39.783 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 16:16:39.784 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 16:16:39.784 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 16:16:39.784 +03:00 [DBG] Start authorize callback request
2019-07-24 16:16:39.784 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:16:39.784 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:39.785 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:39.785 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:39.785 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a33ab03ebea3412f8455794e951a14ff","UiLocales":null,"Nonce":"5e313b4293704d8d996bcb9cfeacee96","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e251d05ca04035458deb22273726cc02","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a33ab03ebea3412f8455794e951a14ff","nonce":"5e313b4293704d8d996bcb9cfeacee96"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:16:39.804 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-24 16:16:39.804 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 16:16:39.804 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 16:16:39.805 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:16:39.819 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-24 16:16:39.820 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 16:16:39.830 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_rqg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vFqA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG6RNQ0M9T:00000015","TimeStamp":"2019-07-24T13:16:39.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 16:16:39.831 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"a33ab03ebea3412f8455794e951a14ff","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 16:16:40.677 +03:00 [DBG] Augmenting SignInContext
2019-07-24 16:16:40.678 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 16:16:42.592 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:16:42.594 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:16:42.595 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:16:42.602 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:16:42.603 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:16:42.603 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:16:42.603 +03:00 [DBG] Start discovery request
2019-07-24 16:16:42.698 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 16:16:42.699 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:16:42.699 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:16:42.700 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 16:16:42.702 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 16:16:42.703 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 16:16:42.704 +03:00 [DBG] Start key discovery request
2019-07-24 16:16:42.777 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 16:16:42.778 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:16:42.778 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:16:42.793 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 16:16:42.794 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:16:42.794 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:16:42.799 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 16:16:42.800 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 16:16:42.801 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 16:16:42.802 +03:00 [DBG] Start userinfo request
2019-07-24 16:16:42.802 +03:00 [DBG] Bearer token found in header
2019-07-24 16:16:42.808 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:42.808 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:42.814 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 16:16:42.814 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563974199,"exp":1563977799,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1563974199,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 16:16:42.815 +03:00 [DBG] Creating userinfo response
2019-07-24 16:16:42.815 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:16:42.815 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:16:42.815 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 16:16:42.815 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:16:42.828 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 16:16:42.829 +03:00 [DBG] End userinfo request
2019-07-24 16:16:42.898 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 16:16:42.899 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 16:16:42.899 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 16:16:42.899 +03:00 [DBG] Rendering check session result
2019-07-24 16:16:56.850 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 16:16:56.852 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 16:16:56.853 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 16:16:56.853 +03:00 [DBG] Processing signout request for 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:16:56.853 +03:00 [DBG] Start end session request validation
2019-07-24 16:16:56.854 +03:00 [DBG] Start identity token validation
2019-07-24 16:16:56.854 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:56.854 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 16:16:56.869 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 16:16:56.870 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563974199,"exp":1563974499,"iss":"http://localhost:5000","aud":"spa","nonce":"5e313b4293704d8d996bcb9cfeacee96","iat":1563974199,"at_hash":"SN0SOX51c3-t-lztT1IF2w","sid":"e251d05ca04035458deb22273726cc02","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1563974199,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 16:16:56.870 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5NzQxOTksImV4cCI6MTU2Mzk3NDQ5OSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1ZTMxM2I0MjkzNzA0ZDhkOTk2YmNiOWNmZWFjZWU5NiIsImlhdCI6MTU2Mzk3NDE5OSwiYXRfaGFzaCI6IlNOMFNPWDUxYzMtdC1senRUMUlGMnciLCJzaWQiOiJlMjUxZDA1Y2EwNDAzNTQ1OGRlYjIyMjczNzI2Y2MwMiIsInN1YiI6IjZiMjQ4NDRlLWZmN2MtNDVkYy04Zjk0LTk4ZjhkNDYzYzcxOSIsImF1dGhfdGltZSI6MTU2Mzk3NDE5OSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.X-IqUB70GmR2xgZQ1uqjCR1s2QLk4O3ZI36HLFtDf6alwO8aKfvT2LJSC6n9eit_C4DEVtwq_5ww-OTpcXi2oPZGmHI07qJ1vN2zIRXj2JWIRQNKicgh9Cr586GeKBdiYJouwV-tppTFQOIaHG0lm-gQUShh_Fkt9BD0FEg62geX8ChxVutFiAhFtEg6uGjWgjE5I5akeoRpXC7uoBOsoghoZP4z_VqpCwDztH1tgwEI06SvXvzuMsPYap_IUh0SQ0OdODj17zvVMQYXGuJybl6OSLdMPBthwiyY31rSBOR1QcNBaEuHCOj1deZHuTGQ6cWm6TULjs7plN0tE2_rqg"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 16:16:56.870 +03:00 [DBG] Success validating end session request from spa
2019-07-24 16:16:56.898 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 16:16:56.898 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 16:16:56.898 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 16:16:56.899 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG6RNQ0M9T:0000001C","TimeStamp":"2019-07-24T13:16:56.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 16:16:58.502 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:16:58.503 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:16:58.503 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:16:58.506 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:16:58.506 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:16:58.506 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:16:58.506 +03:00 [DBG] Start discovery request
2019-07-24 16:16:58.538 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 16:16:58.539 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 16:16:58.539 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 16:16:58.539 +03:00 [DBG] Start authorize request
2019-07-24 16:16:58.539 +03:00 [DBG] No user present in authorize request
2019-07-24 16:16:58.539 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:58.539 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:58.540 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:58.540 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a8cd125c33fe410992dedf75b34c8dd4","UiLocales":null,"Nonce":"8b0fce04377b477ca4c8d586daa1f571","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a8cd125c33fe410992dedf75b34c8dd4","nonce":"8b0fce04377b477ca4c8d586daa1f571"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:16:58.540 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 16:16:58.554 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:16:58.554 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:16:58.555 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:16:58.555 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:00.037 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-24 16:17:01.990 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-24 16:17:02.941 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG6RNQ0M9T:00000022","TimeStamp":"2019-07-24T13:17:02.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 16:17:02.962 +03:00 [DBG] Augmenting SignInContext
2019-07-24 16:17:02.962 +03:00 [DBG] Adding amr claim with value: external
2019-07-24 16:17:02.963 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 16:17:02.963 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 16:17:02.979 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 16:17:02.979 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 16:17:02.979 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 16:17:02.979 +03:00 [DBG] Start authorize callback request
2019-07-24 16:17:02.980 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-24 16:17:02.980 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:17:02.980 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:02.981 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:17:02.981 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a8cd125c33fe410992dedf75b34c8dd4","UiLocales":null,"Nonce":"8b0fce04377b477ca4c8d586daa1f571","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"300866bae7c7eb114c4d46fde814b031","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a8cd125c33fe410992dedf75b34c8dd4","nonce":"8b0fce04377b477ca4c8d586daa1f571"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:17:02.989 +03:00 [DBG] user_consent grant with value: spa|2e9c0c95-7cb6-4e0f-9554-f017b3d294fd not found in store.
2019-07-24 16:17:02.989 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 16:17:02.989 +03:00 [INF] Showing consent: User has not yet consented
2019-07-24 16:17:03.005 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:17:03.006 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:03.006 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:17:03.006 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:04.598 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 16:17:04.602 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:17:04.603 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:04.604 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:17:04.606 +03:00 [INF] {"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOG6RNQ0M9T:00000025","TimeStamp":"2019-07-24T13:17:04.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-24 16:17:04.607 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:04.619 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 16:17:04.619 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 16:17:04.619 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 16:17:04.619 +03:00 [DBG] Start authorize callback request
2019-07-24 16:17:04.620 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-24 16:17:04.620 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:17:04.620 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:04.621 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:17:04.621 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a8cd125c33fe410992dedf75b34c8dd4","UiLocales":null,"Nonce":"8b0fce04377b477ca4c8d586daa1f571","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"300866bae7c7eb114c4d46fde814b031","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a8cd125c33fe410992dedf75b34c8dd4","nonce":"8b0fce04377b477ca4c8d586daa1f571"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:17:04.627 +03:00 [DBG] user_consent grant with value: spa|2e9c0c95-7cb6-4e0f-9554-f017b3d294fd not found in store.
2019-07-24 16:17:04.627 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 16:17:04.627 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-24 16:17:04.627 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-24 16:17:04.628 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-24 16:17:04.637 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 16:17:04.637 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 16:17:04.637 +03:00 [DBG] Getting claims for access token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-24 16:17:04.654 +03:00 [DBG] Getting claims for identity token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd and client: spa
2019-07-24 16:17:04.654 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 16:17:04.664 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ja6g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****bcIg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG6RNQ0M9T:00000026","TimeStamp":"2019-07-24T13:17:04.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 16:17:04.665 +03:00 [INF] Authorize endpoint response
{"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"a8cd125c33fe410992dedf75b34c8dd4","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 16:17:04.666 +03:00 [DBG] Augmenting SignInContext
2019-07-24 16:17:04.666 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 16:17:05.648 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:17:05.648 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:17:05.648 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:17:05.651 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:17:05.652 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:17:05.652 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:17:05.652 +03:00 [DBG] Start discovery request
2019-07-24 16:17:05.711 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 16:17:05.712 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:17:05.712 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:17:05.713 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 16:17:05.714 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 16:17:05.715 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 16:17:05.715 +03:00 [DBG] Start key discovery request
2019-07-24 16:17:05.772 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 16:17:05.772 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:17:05.772 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:17:05.786 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 16:17:05.786 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:17:05.786 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:17:05.787 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 16:17:05.787 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 16:17:05.788 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 16:17:05.788 +03:00 [DBG] Start userinfo request
2019-07-24 16:17:05.788 +03:00 [DBG] Bearer token found in header
2019-07-24 16:17:05.793 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:05.793 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:05.801 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 16:17:05.801 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563974224,"exp":1563977824,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","auth_time":1563974222,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-24 16:17:05.802 +03:00 [DBG] Creating userinfo response
2019-07-24 16:17:05.802 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:17:05.802 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:17:05.802 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 16:17:05.802 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:17:05.809 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 16:17:05.809 +03:00 [DBG] End userinfo request
2019-07-24 16:17:05.876 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 16:17:05.881 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 16:17:05.881 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 16:17:05.881 +03:00 [DBG] Rendering check session result
2019-07-24 16:17:38.913 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 16:17:38.918 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 16:17:38.918 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 16:17:38.919 +03:00 [DBG] Processing signout request for 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-24 16:17:38.919 +03:00 [DBG] Start end session request validation
2019-07-24 16:17:38.920 +03:00 [DBG] Start identity token validation
2019-07-24 16:17:38.926 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:38.926 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 16:17:38.985 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 16:17:38.987 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563974224,"exp":1563974524,"iss":"http://localhost:5000","aud":"spa","nonce":"8b0fce04377b477ca4c8d586daa1f571","iat":1563974224,"at_hash":"hgmwYe0cZdtXjM7aMdRIzg","sid":"300866bae7c7eb114c4d46fde814b031","sub":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","auth_time":1563974222,"idp":"Facebook","amr":"external"},"$type":"TokenValidationLog"}
2019-07-24 16:17:38.988 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5NzQyMjQsImV4cCI6MTU2Mzk3NDUyNCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI4YjBmY2UwNDM3N2I0NzdjYTRjOGQ1ODZkYWExZjU3MSIsImlhdCI6MTU2Mzk3NDIyNCwiYXRfaGFzaCI6ImhnbXdZZTBjWmR0WGpNN2FNZFJJemciLCJzaWQiOiIzMDA4NjZiYWU3YzdlYjExNGM0ZDQ2ZmRlODE0YjAzMSIsInN1YiI6IjJlOWMwYzk1LTdjYjYtNGUwZi05NTU0LWYwMTdiM2QyOTRmZCIsImF1dGhfdGltZSI6MTU2Mzk3NDIyMiwiaWRwIjoiRmFjZWJvb2siLCJhbXIiOlsiZXh0ZXJuYWwiXX0.s0_MhEr4W0u-1Hb4rhVJmuBdBGw3cVKEcyrOeudkQ-dGJM40pLiwsuzWjeGTJxeXDIQp1e1eMsIj8tCaqpnayVEeBFT-giUrYaH18iKhOksobrGXORqgYeVXPxsILBP3EEgU59xDZMa6bzAY1QoqkjqjtnFnNeZEPj7ZOafL_BwxJVWBi4Hc5Jhvr8mkkc_Sa_lR5Y4Y847XHm1qIA2Ti8rhAclZwcZKyLY7b-OdHAfCbJfH_4ZACOOexlV-zn6gecGu05oOwt0egcTP3bTSgB2yD-V8HcPg1VZSn-skLRO-4uT5dTCjOnUFozgfFiXGVD47-1oZmd_lEklErxja6g"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 16:17:38.988 +03:00 [DBG] Success validating end session request from spa
2019-07-24 16:17:39.027 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 16:17:39.027 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 16:17:39.028 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 16:17:39.029 +03:00 [INF] {"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG6RNQ0M9T:0000002D","TimeStamp":"2019-07-24T13:17:39.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 16:17:41.216 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:17:41.219 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:17:41.219 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:17:41.220 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:17:41.222 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:17:41.222 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:17:41.222 +03:00 [DBG] Start discovery request
2019-07-24 16:17:41.260 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 16:17:41.261 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 16:17:41.261 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 16:17:41.261 +03:00 [DBG] Start authorize request
2019-07-24 16:17:41.263 +03:00 [DBG] No user present in authorize request
2019-07-24 16:17:41.263 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:17:41.263 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:41.265 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:17:41.266 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"aac523dfae0e4d2da4796c91128041c7","UiLocales":null,"Nonce":"d07f607ddbea4594881c50b7c5012e68","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"aac523dfae0e4d2da4796c91128041c7","nonce":"d07f607ddbea4594881c50b7c5012e68"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:17:41.266 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 16:17:41.283 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:17:41.283 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:41.284 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:17:41.284 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:43.098 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-24 16:17:49.104 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-24 16:17:49.131 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG6RNQ0M9T:00000033","TimeStamp":"2019-07-24T13:17:49.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 16:17:49.131 +03:00 [DBG] Augmenting SignInContext
2019-07-24 16:17:49.132 +03:00 [DBG] Adding amr claim with value: external
2019-07-24 16:17:49.134 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 16:17:49.135 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 16:17:49.147 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 16:17:49.148 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 16:17:49.148 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 16:17:49.148 +03:00 [DBG] Start authorize callback request
2019-07-24 16:17:49.148 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:17:49.149 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:17:49.149 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:49.150 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:17:49.150 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"aac523dfae0e4d2da4796c91128041c7","UiLocales":null,"Nonce":"d07f607ddbea4594881c50b7c5012e68","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5dc2568301373657f7388977a57c0c16","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"aac523dfae0e4d2da4796c91128041c7","nonce":"d07f607ddbea4594881c50b7c5012e68"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:17:49.171 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-24 16:17:49.172 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 16:17:49.172 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 16:17:49.172 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:17:49.188 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-24 16:17:49.189 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 16:17:49.197 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****KeYw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****RX1A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG6RNQ0M9T:00000034","TimeStamp":"2019-07-24T13:17:49.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 16:17:49.198 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"aac523dfae0e4d2da4796c91128041c7","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 16:17:49.198 +03:00 [DBG] Augmenting SignInContext
2019-07-24 16:17:49.199 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 16:17:52.004 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:17:52.005 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:17:52.007 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:17:52.008 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:17:52.008 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:17:52.008 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:17:52.008 +03:00 [DBG] Start discovery request
2019-07-24 16:17:52.204 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 16:17:52.205 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:17:52.205 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:17:52.205 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 16:17:52.206 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 16:17:52.206 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 16:17:52.206 +03:00 [DBG] Start key discovery request
2019-07-24 16:17:52.281 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 16:17:52.281 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:17:52.281 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:17:52.295 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 16:17:52.295 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:17:52.295 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:17:52.296 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 16:17:52.297 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 16:17:52.297 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 16:17:52.297 +03:00 [DBG] Start userinfo request
2019-07-24 16:17:52.298 +03:00 [DBG] Bearer token found in header
2019-07-24 16:17:52.305 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:52.305 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:17:52.312 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 16:17:52.313 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563974269,"exp":1563977869,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1563974269,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-24 16:17:52.313 +03:00 [DBG] Creating userinfo response
2019-07-24 16:17:52.313 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:17:52.313 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:17:52.313 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 16:17:52.313 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:17:52.322 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 16:17:52.322 +03:00 [DBG] End userinfo request
2019-07-24 16:17:52.368 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 16:17:52.369 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 16:17:52.369 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 16:17:52.369 +03:00 [DBG] Rendering check session result
2019-07-24 16:27:11.303 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:27:11.310 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:27:11.310 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:27:11.316 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:27:11.323 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:27:11.323 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:27:11.323 +03:00 [DBG] Start discovery request
2019-07-24 16:27:11.425 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 16:27:11.426 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 16:27:11.426 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 16:27:11.427 +03:00 [DBG] Rendering check session result
2019-07-24 16:27:40.569 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:27:40.570 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:27:40.570 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:27:40.574 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:27:40.575 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:27:40.575 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:27:40.576 +03:00 [DBG] Start discovery request
2019-07-24 16:27:40.719 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 16:27:40.719 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 16:27:40.719 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 16:27:40.720 +03:00 [DBG] Rendering check session result
2019-07-24 16:35:43.258 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:35:43.276 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:35:43.277 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:35:43.306 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:35:43.393 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:35:43.394 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:35:43.394 +03:00 [DBG] Start discovery request
2019-07-24 16:35:44.409 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 16:35:44.411 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 16:35:44.411 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 16:35:44.413 +03:00 [DBG] Rendering check session result
2019-07-24 16:36:03.818 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 16:36:03.838 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 16:36:03.839 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 16:36:03.855 +03:00 [DBG] Processing signout request for 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:36:03.857 +03:00 [DBG] Start end session request validation
2019-07-24 16:36:03.859 +03:00 [DBG] Start identity token validation
2019-07-24 16:36:03.873 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:36:03.874 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 16:36:04.567 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 16:36:04.576 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563974269,"exp":1563974569,"iss":"http://localhost:5000","aud":"spa","nonce":"d07f607ddbea4594881c50b7c5012e68","iat":1563974269,"at_hash":"B1TQCkC0X_bWf6IJfpLmkg","sid":"5dc2568301373657f7388977a57c0c16","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1563974269,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-24 16:36:04.577 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5NzQyNjksImV4cCI6MTU2Mzk3NDU2OSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJkMDdmNjA3ZGRiZWE0NTk0ODgxYzUwYjdjNTAxMmU2OCIsImlhdCI6MTU2Mzk3NDI2OSwiYXRfaGFzaCI6IkIxVFFDa0MwWF9iV2Y2SUpmcExta2ciLCJzaWQiOiI1ZGMyNTY4MzAxMzczNjU3ZjczODg5NzdhNTdjMGMxNiIsInN1YiI6IjZiMjQ4NDRlLWZmN2MtNDVkYy04Zjk0LTk4ZjhkNDYzYzcxOSIsImF1dGhfdGltZSI6MTU2Mzk3NDI2OSwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.Lp2cJ7SYiH8royvxA_WGE-ALdszH8Wai7s7Ad7E07KVBlRoD3-xmY1AW77J8D3wM4Js9-7MAhAnbfRyGC-8UbOQ4FpFnjY-npKb3x_YoQtz7tmVghO45nmsVq5VvyEBT03m3Adl4kfItSKUvVZkRgX3_KwQZvVBeGZvbPlD7IjCmrNrdMFY5QWVXxE4X4O0zDORDR4FrB59PylMry7M54g8AkkfV9CQaLm_Ks5Sfa00q7oVJMt538VmKguftWImMSCq9phOC6LCOCgv_YH3kZ9tZVFFX8AdoItvhAnTGx5lxvi6reGorL5bOoCBq3oyLrutfZR3FQbyVyOKjLlKeYw"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 16:36:04.578 +03:00 [DBG] Success validating end session request from spa
2019-07-24 16:36:04.714 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 16:36:04.715 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 16:36:04.715 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 16:36:04.719 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG6RNQ0M9V:00000004","TimeStamp":"2019-07-24T13:36:04.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 16:36:30.465 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:36:30.466 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:36:30.467 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:36:30.468 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:36:30.469 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:36:30.469 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:36:30.469 +03:00 [DBG] Start discovery request
2019-07-24 16:36:30.527 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 16:36:30.530 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 16:36:30.531 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 16:36:30.531 +03:00 [DBG] Start authorize request
2019-07-24 16:36:30.532 +03:00 [DBG] No user present in authorize request
2019-07-24 16:36:30.532 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:36:30.536 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:36:30.544 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:36:30.548 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"70843c832ab943aead3eeeed9917697c","UiLocales":null,"Nonce":"cec74c190b1841408445a38c074b1b7f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"70843c832ab943aead3eeeed9917697c","nonce":"cec74c190b1841408445a38c074b1b7f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:36:30.549 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 16:36:30.577 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:36:30.577 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:36:30.578 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:36:30.579 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:36:35.450 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-24 16:36:42.499 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-24 16:36:42.582 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG6RNQ0M9V:00000009","TimeStamp":"2019-07-24T13:36:42.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 16:36:42.584 +03:00 [DBG] Augmenting SignInContext
2019-07-24 16:36:42.585 +03:00 [DBG] Adding amr claim with value: external
2019-07-24 16:36:42.586 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 16:36:42.586 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 16:36:42.615 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 16:36:42.617 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 16:36:42.617 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 16:36:42.617 +03:00 [DBG] Start authorize callback request
2019-07-24 16:36:42.619 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:36:42.620 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 16:36:42.620 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:36:42.622 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 16:36:42.622 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"70843c832ab943aead3eeeed9917697c","UiLocales":null,"Nonce":"cec74c190b1841408445a38c074b1b7f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5c125ffef6c657e17f1166c6f4cfe2b5","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"70843c832ab943aead3eeeed9917697c","nonce":"cec74c190b1841408445a38c074b1b7f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 16:36:42.669 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-24 16:36:42.670 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 16:36:42.670 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 16:36:42.671 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 16:36:42.691 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-24 16:36:42.691 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 16:36:42.701 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****7ghw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****SmfA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG6RNQ0MA1:00000002","TimeStamp":"2019-07-24T13:36:42.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 16:36:42.702 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"70843c832ab943aead3eeeed9917697c","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 16:36:42.703 +03:00 [DBG] Augmenting SignInContext
2019-07-24 16:36:42.703 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 16:36:49.596 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:36:49.597 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:36:49.597 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:36:49.598 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:36:49.598 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:36:49.598 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:36:49.599 +03:00 [DBG] Start discovery request
2019-07-24 16:36:49.802 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 16:36:49.807 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:36:49.807 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:36:49.807 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 16:36:49.808 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 16:36:49.808 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 16:36:49.810 +03:00 [DBG] Start key discovery request
2019-07-24 16:36:49.983 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 16:36:49.984 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:36:49.984 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:36:50.011 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 16:36:50.011 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:36:50.011 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:36:50.012 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 16:36:50.012 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 16:36:50.013 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 16:36:50.013 +03:00 [DBG] Start userinfo request
2019-07-24 16:36:50.013 +03:00 [DBG] Bearer token found in header
2019-07-24 16:36:50.020 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:36:50.020 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 16:36:50.026 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 16:36:50.027 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563975402,"exp":1563979002,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1563975402,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-24 16:36:50.027 +03:00 [DBG] Creating userinfo response
2019-07-24 16:36:50.027 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:36:50.027 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:36:50.028 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 16:36:50.028 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 16:36:50.036 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 16:36:50.036 +03:00 [DBG] End userinfo request
2019-07-24 16:36:50.086 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 16:36:50.086 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 16:36:50.087 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 16:36:50.087 +03:00 [DBG] Rendering check session result
2019-07-24 16:43:13.839 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:43:13.875 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:43:13.875 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:43:13.923 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:43:13.976 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:43:13.977 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:43:13.978 +03:00 [DBG] Start discovery request
2019-07-24 16:43:14.130 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 16:43:14.132 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 16:43:14.133 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 16:43:14.133 +03:00 [DBG] Rendering check session result
2019-07-24 16:43:49.798 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:43:49.865 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:43:49.865 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:43:49.876 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:43:49.891 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:43:49.891 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:43:49.892 +03:00 [DBG] Start discovery request
2019-07-24 16:43:49.987 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 16:43:49.988 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 16:43:49.988 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 16:43:49.988 +03:00 [DBG] Rendering check session result
2019-07-24 16:58:34.169 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 16:58:34.239 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 16:58:34.242 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 16:58:34.292 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 16:58:34.377 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 16:58:34.379 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 16:58:34.381 +03:00 [DBG] Start discovery request
2019-07-24 16:58:34.561 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 16:58:34.562 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 16:58:34.562 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 16:58:34.563 +03:00 [DBG] Rendering check session result
2019-07-24 17:20:59.614 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 17:20:59.631 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 17:20:59.631 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 17:20:59.652 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 17:20:59.682 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 17:20:59.682 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 17:20:59.682 +03:00 [DBG] Start discovery request
2019-07-24 17:21:00.285 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 17:21:00.286 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 17:21:00.286 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 17:21:00.289 +03:00 [DBG] Rendering check session result
2019-07-24 17:22:42.068 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 17:22:42.069 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 17:22:42.069 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 17:22:42.070 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 17:22:42.071 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 17:22:42.072 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 17:22:42.072 +03:00 [DBG] Start discovery request
2019-07-24 17:22:42.330 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 17:22:42.331 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 17:22:42.331 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 17:22:42.331 +03:00 [DBG] Rendering check session result
2019-07-24 17:23:02.696 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 17:23:02.717 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 17:23:02.718 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 17:23:02.721 +03:00 [DBG] Processing signout request for 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 17:23:02.721 +03:00 [DBG] Start end session request validation
2019-07-24 17:23:02.723 +03:00 [DBG] Start identity token validation
2019-07-24 17:23:02.738 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:23:02.738 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 17:23:02.789 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 17:23:02.796 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563975402,"exp":1563975702,"iss":"http://localhost:5000","aud":"spa","nonce":"cec74c190b1841408445a38c074b1b7f","iat":1563975402,"at_hash":"tjXWqfzfnjOHNcmHt5Q9nA","sid":"5c125ffef6c657e17f1166c6f4cfe2b5","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1563975402,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-24 17:23:02.799 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5NzU0MDIsImV4cCI6MTU2Mzk3NTcwMiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJjZWM3NGMxOTBiMTg0MTQwODQ0NWEzOGMwNzRiMWI3ZiIsImlhdCI6MTU2Mzk3NTQwMiwiYXRfaGFzaCI6InRqWFdxZnpmbmpPSE5jbUh0NVE5bkEiLCJzaWQiOiI1YzEyNWZmZWY2YzY1N2UxN2YxMTY2YzZmNGNmZTJiNSIsInN1YiI6IjZiMjQ4NDRlLWZmN2MtNDVkYy04Zjk0LTk4ZjhkNDYzYzcxOSIsImF1dGhfdGltZSI6MTU2Mzk3NTQwMiwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.enG2h2D3Q7Ed1dzQoAfYoAkXpNwNWlsHPTO0tNuSfmTbwzRSYUAitNfP2vF7SvrhDSIKHr-JWQSfrfY0R2otEtoW2mXQGZFU69ownwYGtHTR7Kxtjy0EloX8bVkUTpJf1-80xzZuhs4s5iQ2KQgVQbGsomZjqilg7s7CtcLQjmCVzatY2FcyTuuFgMPTc2qMbOEmymiGRDHHRcg8B50lTlUm5TDyQvGs1ivHYWsPuqhitJMF1ed7pk8D3kyZWHaRYatdAY7vGg7LMoDa_NaHWCNxfK1YdcCF4mfM_l8T1z187gojKaUGC1cETQjYGFaDHgXo467Ha0qI0aGKS47ghw"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 17:23:02.799 +03:00 [DBG] Success validating end session request from spa
2019-07-24 17:23:02.906 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 17:23:02.907 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 17:23:02.908 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 17:23:02.914 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG6RNQ0MA7:00000004","TimeStamp":"2019-07-24T14:23:02.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 17:24:14.485 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 17:24:14.485 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 17:24:14.485 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 17:24:14.486 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 17:24:14.486 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 17:24:14.487 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 17:24:14.487 +03:00 [DBG] Start discovery request
2019-07-24 17:24:14.546 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 17:24:14.551 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 17:24:14.552 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 17:24:14.552 +03:00 [DBG] Start authorize request
2019-07-24 17:24:14.553 +03:00 [DBG] No user present in authorize request
2019-07-24 17:24:14.553 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 17:24:14.554 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:24:14.557 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 17:24:14.558 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"968d771113f74df4876dd625d366dac6","UiLocales":null,"Nonce":"adf778aacd1440eab6820deb9a618bc0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"968d771113f74df4876dd625d366dac6","nonce":"adf778aacd1440eab6820deb9a618bc0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 17:24:14.559 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 17:24:14.594 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 17:24:14.594 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:24:14.595 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 17:24:14.596 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:24:18.208 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-24 17:24:28.574 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-24 17:24:28.612 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG6RNQ0MA8:00000005","TimeStamp":"2019-07-24T14:24:28.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 17:24:28.612 +03:00 [DBG] Augmenting SignInContext
2019-07-24 17:24:28.613 +03:00 [DBG] Adding amr claim with value: external
2019-07-24 17:24:28.614 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 17:24:28.614 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 17:24:28.641 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 17:24:28.645 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 17:24:28.645 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 17:24:28.645 +03:00 [DBG] Start authorize callback request
2019-07-24 17:24:28.646 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 17:24:28.646 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 17:24:28.646 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:24:28.647 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 17:24:28.648 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"968d771113f74df4876dd625d366dac6","UiLocales":null,"Nonce":"adf778aacd1440eab6820deb9a618bc0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9f6eb47ba16f6dcc5301f40cff51c59d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"968d771113f74df4876dd625d366dac6","nonce":"adf778aacd1440eab6820deb9a618bc0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 17:24:28.682 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-24 17:24:28.683 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 17:24:28.683 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 17:24:28.683 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 17:24:28.701 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-24 17:24:28.702 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 17:24:28.713 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****vJXQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vqzQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG6RNQ0MAB:00000002","TimeStamp":"2019-07-24T14:24:28.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 17:24:28.714 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"968d771113f74df4876dd625d366dac6","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 17:24:28.714 +03:00 [DBG] Augmenting SignInContext
2019-07-24 17:24:28.715 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 17:24:35.765 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 17:24:35.765 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 17:24:35.766 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 17:24:35.767 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 17:24:35.768 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 17:24:35.768 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 17:24:35.768 +03:00 [DBG] Start discovery request
2019-07-24 17:24:35.833 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 17:24:35.833 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 17:24:35.834 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 17:24:35.834 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 17:24:35.835 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 17:24:35.835 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 17:24:35.835 +03:00 [DBG] Start key discovery request
2019-07-24 17:24:35.942 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 17:24:35.944 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 17:24:35.944 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 17:24:35.964 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 17:24:35.964 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 17:24:35.964 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 17:24:35.965 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 17:24:35.966 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 17:24:35.967 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 17:24:35.967 +03:00 [DBG] Start userinfo request
2019-07-24 17:24:35.967 +03:00 [DBG] Bearer token found in header
2019-07-24 17:24:35.974 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:24:35.975 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:24:35.980 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 17:24:35.982 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563978268,"exp":1563981868,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1563978268,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-24 17:24:35.983 +03:00 [DBG] Creating userinfo response
2019-07-24 17:24:35.983 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 17:24:35.983 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 17:24:35.983 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 17:24:35.983 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 17:24:35.994 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 17:24:35.994 +03:00 [DBG] End userinfo request
2019-07-24 17:24:36.115 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 17:24:36.115 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 17:24:36.115 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 17:24:36.115 +03:00 [DBG] Rendering check session result
2019-07-24 17:24:43.681 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 17:24:43.681 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 17:24:43.682 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 17:24:43.682 +03:00 [DBG] Processing signout request for 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-24 17:24:43.684 +03:00 [DBG] Start end session request validation
2019-07-24 17:24:43.684 +03:00 [DBG] Start identity token validation
2019-07-24 17:24:43.684 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:24:43.685 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 17:24:43.696 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 17:24:43.697 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563978268,"exp":1563978568,"iss":"http://localhost:5000","aud":"spa","nonce":"adf778aacd1440eab6820deb9a618bc0","iat":1563978268,"at_hash":"5ZXB4D7NQ0xDQpg491F4MQ","sid":"9f6eb47ba16f6dcc5301f40cff51c59d","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1563978268,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-24 17:24:43.697 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5NzgyNjgsImV4cCI6MTU2Mzk3ODU2OCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJhZGY3NzhhYWNkMTQ0MGVhYjY4MjBkZWI5YTYxOGJjMCIsImlhdCI6MTU2Mzk3ODI2OCwiYXRfaGFzaCI6IjVaWEI0RDdOUTB4RFFwZzQ5MUY0TVEiLCJzaWQiOiI5ZjZlYjQ3YmExNmY2ZGNjNTMwMWY0MGNmZjUxYzU5ZCIsInN1YiI6IjZiMjQ4NDRlLWZmN2MtNDVkYy04Zjk0LTk4ZjhkNDYzYzcxOSIsImF1dGhfdGltZSI6MTU2Mzk3ODI2OCwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.hjs_ubpasPPwWo2cSFWPFElG1nZYKfHZcd-vFyoligL5WJ_ueNIfS2Zhwnu7EAasci5xH_Ld_qoTvgqXYI66F0WnblEW_j5v8RdkGk3g4ls4pEdrMOkx0Yg_H9v4fllVAtXwYc1nNtGPb20HfU2Nwd-2_-AF-wrH6FJ_fCPVMfv-KZNxAoKxbV2uALj4etI3ZaW-nVqaFkTIrn8cMeaG2blyjA0Fh6P7HIqH2cjExX69Jg4i6EOhWhIXpKkdYMQWHy0c27riYfpgch5qQ9GqwQ2WfwSRGVTskh2fOvt1zU8IqYiV94frKE5Syp-8oB6KBt9rkiSlIq1HrttX3GvJXQ"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 17:24:43.698 +03:00 [DBG] Success validating end session request from spa
2019-07-24 17:24:43.737 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 17:24:43.739 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 17:24:43.740 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 17:24:43.740 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG6RNQ0MA9:00000004","TimeStamp":"2019-07-24T14:24:43.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-24 17:24:48.977 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 17:24:48.977 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 17:24:48.977 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 17:24:48.978 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 17:24:48.979 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 17:24:48.979 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 17:24:48.979 +03:00 [DBG] Start discovery request
2019-07-24 17:24:49.018 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 17:24:49.018 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 17:24:49.018 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 17:24:49.019 +03:00 [DBG] Start authorize request
2019-07-24 17:24:49.019 +03:00 [DBG] No user present in authorize request
2019-07-24 17:24:49.019 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 17:24:49.019 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:24:49.019 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 17:24:49.020 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d30eadb601124695b6802593cbb34ce4","UiLocales":null,"Nonce":"ac9c8be7d225461d82b1fb563a4eadff","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d30eadb601124695b6802593cbb34ce4","nonce":"ac9c8be7d225461d82b1fb563a4eadff"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 17:24:49.020 +03:00 [INF] Showing login: User is not authenticated
2019-07-24 17:24:49.069 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 17:24:49.069 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:24:49.070 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 17:24:49.070 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:24:50.809 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-24 17:24:57.067 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-24 17:24:57.717 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"112262384376329039327","SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","DisplayName":"Илья","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOG6RNQ0MAC:00000006","TimeStamp":"2019-07-24T14:24:57.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-24 17:24:57.719 +03:00 [DBG] Augmenting SignInContext
2019-07-24 17:24:57.720 +03:00 [DBG] Adding amr claim with value: external
2019-07-24 17:24:57.721 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 17:24:57.722 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 17:24:57.778 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 17:24:57.778 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 17:24:57.778 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 17:24:57.778 +03:00 [DBG] Start authorize callback request
2019-07-24 17:24:57.779 +03:00 [DBG] User in authorize request: 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-24 17:24:57.779 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 17:24:57.779 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:24:57.782 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 17:24:57.782 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d30eadb601124695b6802593cbb34ce4","UiLocales":null,"Nonce":"ac9c8be7d225461d82b1fb563a4eadff","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df56f9ca8484e07ea4a70080cfa1cb95","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d30eadb601124695b6802593cbb34ce4","nonce":"ac9c8be7d225461d82b1fb563a4eadff"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 17:24:57.788 +03:00 [DBG] user_consent grant with value: spa|951678ae-e2c5-4fe9-8742-2be3bc55c043 not found in store.
2019-07-24 17:24:57.788 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 17:24:57.788 +03:00 [INF] Showing consent: User has not yet consented
2019-07-24 17:24:57.844 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 17:24:57.844 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:24:57.845 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 17:24:57.845 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:25:01.095 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 17:25:01.107 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 17:25:01.108 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:25:01.108 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 17:25:01.109 +03:00 [INF] {"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOG6RNQ0MAA:00000008","TimeStamp":"2019-07-24T14:25:01.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-24 17:25:01.111 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:25:01.126 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 17:25:01.130 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 17:25:01.130 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 17:25:01.130 +03:00 [DBG] Start authorize callback request
2019-07-24 17:25:01.131 +03:00 [DBG] User in authorize request: 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-24 17:25:01.131 +03:00 [DBG] Start authorize request protocol validation
2019-07-24 17:25:01.131 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:25:01.132 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 17:25:01.132 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"d30eadb601124695b6802593cbb34ce4","UiLocales":null,"Nonce":"ac9c8be7d225461d82b1fb563a4eadff","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df56f9ca8484e07ea4a70080cfa1cb95","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"d30eadb601124695b6802593cbb34ce4","nonce":"ac9c8be7d225461d82b1fb563a4eadff"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 17:25:01.137 +03:00 [DBG] user_consent grant with value: spa|951678ae-e2c5-4fe9-8742-2be3bc55c043 not found in store.
2019-07-24 17:25:01.138 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-24 17:25:01.138 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-24 17:25:01.138 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-24 17:25:01.139 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-24 17:25:01.152 +03:00 [DBG] Creating Implicit Flow response.
2019-07-24 17:25:01.152 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-24 17:25:01.153 +03:00 [DBG] Getting claims for access token for subject: 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-24 17:25:01.169 +03:00 [DBG] Getting claims for identity token for subject: 951678ae-e2c5-4fe9-8742-2be3bc55c043 and client: spa
2019-07-24 17:25:01.169 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 17:25:01.179 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****AF8A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****NKMA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOG6RNQ0MAC:00000008","TimeStamp":"2019-07-24T14:25:01.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-24 17:25:01.179 +03:00 [INF] Authorize endpoint response
{"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"d30eadb601124695b6802593cbb34ce4","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 17:25:01.180 +03:00 [DBG] Augmenting SignInContext
2019-07-24 17:25:01.181 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-24 17:25:07.018 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 17:25:07.019 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 17:25:07.019 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 17:25:07.020 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 17:25:07.048 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 17:25:07.048 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 17:25:07.048 +03:00 [DBG] Start discovery request
2019-07-24 17:25:07.134 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 17:25:07.140 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 17:25:07.140 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 17:25:07.141 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 17:25:07.142 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 17:25:07.142 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 17:25:07.146 +03:00 [DBG] Start key discovery request
2019-07-24 17:25:07.262 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 17:25:07.264 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 17:25:07.265 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 17:25:07.282 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 17:25:07.282 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 17:25:07.282 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 17:25:07.283 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 17:25:07.283 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 17:25:07.283 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 17:25:07.283 +03:00 [DBG] Start userinfo request
2019-07-24 17:25:07.284 +03:00 [DBG] Bearer token found in header
2019-07-24 17:25:07.290 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:25:07.290 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:25:07.296 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 17:25:07.297 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563978301,"exp":1563981901,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"951678ae-e2c5-4fe9-8742-2be3bc55c043","auth_time":1563978297,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-24 17:25:07.297 +03:00 [DBG] Creating userinfo response
2019-07-24 17:25:07.297 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 17:25:07.297 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 17:25:07.298 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-24 17:25:07.298 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-24 17:25:07.307 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-24 17:25:07.307 +03:00 [DBG] End userinfo request
2019-07-24 17:25:07.401 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 17:25:07.402 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 17:25:07.402 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 17:25:07.403 +03:00 [DBG] Rendering check session result
2019-07-24 17:26:14.479 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-24 17:26:14.484 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-24 17:26:14.485 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-24 17:26:14.485 +03:00 [DBG] Processing signout request for 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-24 17:26:14.485 +03:00 [DBG] Start end session request validation
2019-07-24 17:26:14.485 +03:00 [DBG] Start identity token validation
2019-07-24 17:26:14.485 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-24 17:26:14.486 +03:00 [DBG] Client found: spa / SPA Client
2019-07-24 17:26:14.495 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 17:26:14.496 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563978301,"exp":1563978601,"iss":"http://localhost:5000","aud":"spa","nonce":"ac9c8be7d225461d82b1fb563a4eadff","iat":1563978301,"at_hash":"2-DNR_aPpSd4iy9h_iY02w","sid":"df56f9ca8484e07ea4a70080cfa1cb95","sub":"951678ae-e2c5-4fe9-8742-2be3bc55c043","auth_time":1563978297,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-24 17:26:14.501 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjM5NzgzMDEsImV4cCI6MTU2Mzk3ODYwMSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJhYzljOGJlN2QyMjU0NjFkODJiMWZiNTYzYTRlYWRmZiIsImlhdCI6MTU2Mzk3ODMwMSwiYXRfaGFzaCI6IjItRE5SX2FQcFNkNGl5OWhfaVkwMnciLCJzaWQiOiJkZjU2ZjljYTg0ODRlMDdlYTRhNzAwODBjZmExY2I5NSIsInN1YiI6Ijk1MTY3OGFlLWUyYzUtNGZlOS04NzQyLTJiZTNiYzU1YzA0MyIsImF1dGhfdGltZSI6MTU2Mzk3ODI5NywiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.C0nEVwqGMKEFGDzt27ASnNX5PrH-Kss-1WEF62vmTAu2bRDwCjS0XWcAp3XW4dJsc6oJMINSAoGUa6Lpdy77iNHd7I05cBHbN4_ArYSUGwvLRt1FtMQKxjXkWo2AEG6Up9XOjYFglRPEW09U_GqiITANeFW34XyQPbQ087bRpv14hDiOMb3sDfUoixZ4xLSH86QpuG_Ngbi2khkTFAei_uzVopD6WSBMZ5NG7ugyndKfiQOPSBG4wCdBKc82GPBW4cVmb10pGKWHURuKmkGQwc8_jTyPfTZ_jCzuWFN1o8rnBgdpFKMybf12ols171fobPgoHgeZtnq4RXttWFAF8A"},"$type":"EndSessionRequestValidationLog"}
2019-07-24 17:26:14.502 +03:00 [DBG] Success validating end session request from spa
2019-07-24 17:26:14.537 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-24 17:26:14.537 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-24 17:26:14.538 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-24 17:26:14.539 +03:00 [INF] {"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","DisplayName":"Илья","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOG6RNQ0MAD:00000002","TimeStamp":"2019-07-24T14:26:14.0000000Z","ProcessId":9640,"LocalIpAddress":"127.0.0.1:35444","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 09:58:10.445 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 09:58:10.744 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-25 09:58:10.760 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-25 09:58:10.760 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-25 09:58:10.760 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-25 09:58:10.760 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-25 09:58:10.764 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-25 09:58:13.239 +03:00 [DBG] Login Url: /Account/Login
2019-07-25 09:58:13.250 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 09:58:13.250 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-25 09:58:13.250 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-25 09:58:13.250 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 09:58:13.251 +03:00 [DBG] Error Url: /home/error
2019-07-25 09:58:13.251 +03:00 [DBG] Error Id Parameter: errorId
2019-07-25 10:06:46.549 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 10:06:46.617 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-25 10:06:46.624 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-25 10:06:46.625 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-25 10:06:46.625 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-25 10:06:46.625 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-25 10:06:46.625 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-25 10:06:47.423 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 10:06:47.447 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 10:06:47.448 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 10:06:47.524 +03:00 [DBG] Login Url: /Account/Login
2019-07-25 10:06:47.524 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 10:06:47.524 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-25 10:06:47.524 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-25 10:06:47.525 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 10:06:47.525 +03:00 [DBG] Error Url: /home/error
2019-07-25 10:06:47.525 +03:00 [DBG] Error Id Parameter: errorId
2019-07-25 10:06:47.568 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 10:06:47.923 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 10:06:47.923 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 10:06:47.933 +03:00 [DBG] Start discovery request
2019-07-25 10:06:48.298 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 10:06:48.298 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 10:06:48.298 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 10:06:48.301 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 10:06:48.303 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 10:06:48.303 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 10:06:48.304 +03:00 [DBG] Start discovery request
2019-07-25 10:06:48.404 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-25 10:06:48.418 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-25 10:06:48.419 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-25 10:06:48.433 +03:00 [DBG] Start authorize request
2019-07-25 10:06:48.472 +03:00 [DBG] No user present in authorize request
2019-07-25 10:06:48.491 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 10:06:48.543 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 10:06:48.652 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 10:06:48.686 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"02412825f4504109b5294c1af7656fe9","UiLocales":null,"Nonce":"ee7bb6e6a6104de792d028dfd8990087","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"02412825f4504109b5294c1af7656fe9","nonce":"ee7bb6e6a6104de792d028dfd8990087"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 10:06:48.743 +03:00 [INF] Showing login: User is not authenticated
2019-07-25 10:06:49.103 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 10:06:49.103 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 10:06:49.104 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 10:06:49.114 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 10:06:54.643 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-25 10:06:56.395 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-25 10:06:59.007 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGPQK6VL51:00000007","TimeStamp":"2019-07-25T07:06:59.0000000Z","ProcessId":17052,"LocalIpAddress":"127.0.0.1:24045","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 10:06:59.026 +03:00 [DBG] Augmenting SignInContext
2019-07-25 10:06:59.032 +03:00 [DBG] Adding amr claim with value: external
2019-07-25 10:06:59.041 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 10:06:59.051 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 10:06:59.076 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 10:06:59.078 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 10:06:59.078 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 10:06:59.089 +03:00 [DBG] Start authorize callback request
2019-07-25 10:06:59.096 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 10:06:59.096 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 10:06:59.097 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 10:06:59.097 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 10:06:59.098 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"02412825f4504109b5294c1af7656fe9","UiLocales":null,"Nonce":"ee7bb6e6a6104de792d028dfd8990087","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"981fa93403fef6df80fe1f35745d5e18","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"02412825f4504109b5294c1af7656fe9","nonce":"ee7bb6e6a6104de792d028dfd8990087"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 10:06:59.208 +03:00 [DBG] user_consent grant with value: spa|2e9c0c95-7cb6-4e0f-9554-f017b3d294fd not found in store.
2019-07-25 10:06:59.210 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 10:06:59.210 +03:00 [INF] Showing consent: User has not yet consented
2019-07-25 10:06:59.262 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 10:06:59.263 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 10:06:59.263 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 10:06:59.263 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 10:07:01.023 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-25 10:07:01.118 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 10:07:01.118 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 10:07:01.119 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 10:07:01.122 +03:00 [INF] {"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOGPQK6VL51:0000000A","TimeStamp":"2019-07-25T07:07:01.0000000Z","ProcessId":17052,"LocalIpAddress":"127.0.0.1:24045","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-25 10:07:01.155 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 10:07:01.168 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 10:07:01.169 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 10:07:01.170 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 10:07:01.170 +03:00 [DBG] Start authorize callback request
2019-07-25 10:07:01.177 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 10:07:01.177 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 10:07:01.177 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 10:07:01.178 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 10:07:01.178 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"02412825f4504109b5294c1af7656fe9","UiLocales":null,"Nonce":"ee7bb6e6a6104de792d028dfd8990087","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"981fa93403fef6df80fe1f35745d5e18","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"02412825f4504109b5294c1af7656fe9","nonce":"ee7bb6e6a6104de792d028dfd8990087"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 10:07:01.197 +03:00 [DBG] user_consent grant with value: spa|2e9c0c95-7cb6-4e0f-9554-f017b3d294fd not found in store.
2019-07-25 10:07:01.197 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 10:07:01.215 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-25 10:07:01.220 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-25 10:07:01.235 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 10:07:01.319 +03:00 [DBG] Creating Implicit Flow response.
2019-07-25 10:07:01.368 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-25 10:07:01.371 +03:00 [DBG] Getting claims for access token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 10:07:01.591 +03:00 [DBG] Getting claims for identity token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd and client: spa
2019-07-25 10:07:01.592 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-25 10:07:01.610 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****2xyg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****F2nQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOGPQK6VL51:0000000B","TimeStamp":"2019-07-25T07:07:01.0000000Z","ProcessId":17052,"LocalIpAddress":"127.0.0.1:24045","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-25 10:07:01.613 +03:00 [INF] Authorize endpoint response
{"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"02412825f4504109b5294c1af7656fe9","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-25 10:07:01.656 +03:00 [DBG] Augmenting SignInContext
2019-07-25 10:07:01.657 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 10:07:02.944 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 10:07:02.947 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 10:07:02.949 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 10:07:02.950 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 10:07:02.951 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 10:07:02.951 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 10:07:02.952 +03:00 [DBG] Start discovery request
2019-07-25 10:07:03.018 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-25 10:07:03.019 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 10:07:03.019 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 10:07:03.020 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 10:07:03.027 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 10:07:03.028 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 10:07:03.041 +03:00 [DBG] Start key discovery request
2019-07-25 10:07:03.129 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 10:07:03.129 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 10:07:03.129 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 10:07:03.141 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 10:07:03.141 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 10:07:03.141 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 10:07:03.142 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-25 10:07:03.146 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-25 10:07:03.146 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-25 10:07:03.170 +03:00 [DBG] Start userinfo request
2019-07-25 10:07:03.181 +03:00 [DBG] Bearer token found in header
2019-07-25 10:07:03.249 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 10:07:03.258 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 10:07:03.264 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 10:07:03.268 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564038421,"exp":1564042021,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","auth_time":1564038419,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-25 10:07:03.287 +03:00 [DBG] Creating userinfo response
2019-07-25 10:07:03.299 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 10:07:03.314 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 10:07:03.331 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-25 10:07:03.331 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 10:07:03.344 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-25 10:07:03.344 +03:00 [DBG] End userinfo request
2019-07-25 10:07:03.424 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-25 10:07:03.427 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-25 10:07:03.427 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-25 10:07:03.430 +03:00 [DBG] Rendering check session result
2019-07-25 10:07:08.845 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 10:07:08.846 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 10:07:08.848 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 10:07:08.848 +03:00 [DBG] Start discovery request
2019-07-25 10:07:09.129 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 10:07:09.131 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 10:07:09.131 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 10:07:09.132 +03:00 [DBG] Start key discovery request
2019-07-25 10:07:29.351 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-25 10:07:29.356 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-25 10:07:29.356 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-25 10:07:29.370 +03:00 [DBG] Processing signout request for 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 10:07:29.383 +03:00 [DBG] Start end session request validation
2019-07-25 10:07:29.397 +03:00 [DBG] Start identity token validation
2019-07-25 10:07:29.398 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 10:07:29.398 +03:00 [DBG] Client found: spa / SPA Client
2019-07-25 10:07:29.419 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 10:07:29.420 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564038421,"exp":1564038721,"iss":"http://localhost:5000","aud":"spa","nonce":"ee7bb6e6a6104de792d028dfd8990087","iat":1564038421,"at_hash":"ltP6WjjJEAkuE8qJP9S-uw","sid":"981fa93403fef6df80fe1f35745d5e18","sub":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","auth_time":1564038419,"idp":"Facebook","amr":"external"},"$type":"TokenValidationLog"}
2019-07-25 10:07:29.426 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQwMzg0MjEsImV4cCI6MTU2NDAzODcyMSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJlZTdiYjZlNmE2MTA0ZGU3OTJkMDI4ZGZkODk5MDA4NyIsImlhdCI6MTU2NDAzODQyMSwiYXRfaGFzaCI6Imx0UDZXampKRUFrdUU4cUpQOVMtdXciLCJzaWQiOiI5ODFmYTkzNDAzZmVmNmRmODBmZTFmMzU3NDVkNWUxOCIsInN1YiI6IjJlOWMwYzk1LTdjYjYtNGUwZi05NTU0LWYwMTdiM2QyOTRmZCIsImF1dGhfdGltZSI6MTU2NDAzODQxOSwiaWRwIjoiRmFjZWJvb2siLCJhbXIiOlsiZXh0ZXJuYWwiXX0.vs3YalUrnad9mkRsVQZN4y2l2bVkI2wXFTFXa2iGx13PF87rQr6TQ1zClrhDDBLZAYvqFanmY9sq4tJTEF43SS9g8xVJCIhbU2XUOmXfJgSfb1oPOe4YPzk4LzE0ShX8tj4msGyx0STtn0MpGpfT6x969-VQYfwrziATyq8P9pE2hGTfv3mYJ93W805o6IWcGehIBtbfItpb6UhtknarePzKTND9Rcw_qY5EQyaJAkPz-S_WktkDICViM7vBpHEWXhdpWXzAcg2fdHMj9l_G3pzHmemHTGYTQiJJZiIKJ-UtkXn1fcXpON7F-RpwQGeluBYbohHbLCDKIJcfep2xyg"},"$type":"EndSessionRequestValidationLog"}
2019-07-25 10:07:29.426 +03:00 [DBG] Success validating end session request from spa
2019-07-25 10:07:29.526 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 10:07:29.526 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 10:07:29.527 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 10:07:29.528 +03:00 [INF] {"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGPQK6VL51:00000014","TimeStamp":"2019-07-25T07:07:29.0000000Z","ProcessId":17052,"LocalIpAddress":"127.0.0.1:24045","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 11:07:09.696 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 11:07:09.814 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-25 11:07:09.822 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-25 11:07:09.823 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-25 11:07:09.823 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-25 11:07:09.823 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-25 11:07:09.823 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-25 11:07:11.073 +03:00 [DBG] Login Url: /Account/Login
2019-07-25 11:07:11.079 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 11:07:11.080 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-25 11:07:11.080 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-25 11:07:11.080 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 11:07:11.080 +03:00 [DBG] Error Url: /home/error
2019-07-25 11:07:11.080 +03:00 [DBG] Error Id Parameter: errorId
2019-07-25 11:08:36.505 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:08:36.551 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:08:36.553 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:08:36.628 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:08:37.329 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:08:37.330 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:08:37.343 +03:00 [DBG] Start discovery request
2019-07-25 11:08:37.545 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-25 11:08:37.555 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-25 11:08:37.555 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-25 11:08:37.564 +03:00 [DBG] Start authorize request
2019-07-25 11:08:37.583 +03:00 [DBG] No user present in authorize request
2019-07-25 11:08:37.596 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:08:37.632 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:08:37.711 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:08:37.736 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"42bb344a0cfb463f9a0d85d3efe6a823","UiLocales":null,"Nonce":"22fe2b661a7c471cb02cd6498911dff0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"42bb344a0cfb463f9a0d85d3efe6a823","nonce":"22fe2b661a7c471cb02cd6498911dff0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:08:37.775 +03:00 [INF] Showing login: User is not authenticated
2019-07-25 11:08:37.947 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:08:37.948 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:08:37.948 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:08:37.951 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:08:40.981 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-25 11:08:42.871 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-25 11:08:46.732 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGQSC38MV2:00000006","TimeStamp":"2019-07-25T08:08:46.0000000Z","ProcessId":2664,"LocalIpAddress":"127.0.0.1:4668","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 11:08:46.750 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:08:46.755 +03:00 [DBG] Adding amr claim with value: external
2019-07-25 11:08:46.763 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:08:46.775 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:08:46.809 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:08:46.811 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:08:46.811 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:08:46.823 +03:00 [DBG] Start authorize callback request
2019-07-25 11:08:46.832 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:08:46.833 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:08:46.833 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:08:46.833 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:08:46.834 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"42bb344a0cfb463f9a0d85d3efe6a823","UiLocales":null,"Nonce":"22fe2b661a7c471cb02cd6498911dff0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6dab64bce2e01cecb09e62776192770a","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"42bb344a0cfb463f9a0d85d3efe6a823","nonce":"22fe2b661a7c471cb02cd6498911dff0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:08:46.968 +03:00 [DBG] user_consent grant with value: spa|2e9c0c95-7cb6-4e0f-9554-f017b3d294fd not found in store.
2019-07-25 11:08:46.969 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 11:08:46.969 +03:00 [INF] Showing consent: User has not yet consented
2019-07-25 11:08:47.022 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:09:40.512 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:09:40.513 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:09:40.513 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:09:42.305 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-25 11:09:42.396 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:09:42.396 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:09:42.397 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:09:42.398 +03:00 [INF] {"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOGQSC38MV2:0000000A","TimeStamp":"2019-07-25T08:09:42.0000000Z","ProcessId":2664,"LocalIpAddress":"127.0.0.1:4668","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-25 11:09:42.429 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:09:42.440 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:09:42.441 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:09:42.441 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:09:42.441 +03:00 [DBG] Start authorize callback request
2019-07-25 11:09:42.449 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:09:42.450 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:09:42.450 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:09:42.450 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:09:42.451 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"42bb344a0cfb463f9a0d85d3efe6a823","UiLocales":null,"Nonce":"22fe2b661a7c471cb02cd6498911dff0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6dab64bce2e01cecb09e62776192770a","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"42bb344a0cfb463f9a0d85d3efe6a823","nonce":"22fe2b661a7c471cb02cd6498911dff0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:09:42.466 +03:00 [DBG] user_consent grant with value: spa|2e9c0c95-7cb6-4e0f-9554-f017b3d294fd not found in store.
2019-07-25 11:10:39.513 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 11:10:39.523 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-25 11:10:39.526 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-25 11:10:39.531 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:10:39.559 +03:00 [DBG] Creating Implicit Flow response.
2019-07-25 11:10:39.579 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-25 11:10:39.580 +03:00 [DBG] Getting claims for access token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:10:39.728 +03:00 [DBG] Getting claims for identity token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd and client: spa
2019-07-25 11:10:39.728 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-25 11:10:39.744 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****XL8g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gF8w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOGQSC38MV2:0000000B","TimeStamp":"2019-07-25T08:10:39.0000000Z","ProcessId":2664,"LocalIpAddress":"127.0.0.1:4668","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-25 11:10:39.746 +03:00 [INF] Authorize endpoint response
{"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"42bb344a0cfb463f9a0d85d3efe6a823","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-25 11:10:39.778 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:10:39.779 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:10:41.754 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:10:41.754 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:10:41.755 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:10:41.756 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:10:41.758 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:10:41.758 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:10:41.759 +03:00 [DBG] Start discovery request
2019-07-25 11:10:41.879 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-25 11:11:37.512 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:11:37.513 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:11:37.513 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 11:11:37.514 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 11:11:37.514 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 11:11:37.521 +03:00 [DBG] Start key discovery request
2019-07-25 11:11:37.613 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:11:37.613 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:11:37.613 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:11:37.624 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:11:37.624 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:11:37.625 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:11:37.625 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-25 11:11:37.629 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-25 11:11:37.630 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-25 11:11:37.642 +03:00 [DBG] Start userinfo request
2019-07-25 11:11:37.647 +03:00 [DBG] Bearer token found in header
2019-07-25 11:11:37.693 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:11:37.698 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:11:37.703 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 11:11:37.705 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564042239,"exp":1564045839,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","auth_time":1564042126,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-25 11:11:37.715 +03:00 [DBG] Creating userinfo response
2019-07-25 11:11:37.721 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:11:37.725 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:11:37.729 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-25 11:11:47.382 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:12:02.191 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:13:18.643 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 11:13:18.741 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-25 11:13:18.745 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-25 11:13:18.746 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-25 11:13:18.746 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-25 11:13:18.746 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-25 11:13:18.746 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-25 11:13:19.592 +03:00 [DBG] Login Url: /Account/Login
2019-07-25 11:13:19.596 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 11:13:19.596 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-25 11:13:19.596 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-25 11:13:19.597 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 11:13:19.597 +03:00 [DBG] Error Url: /home/error
2019-07-25 11:13:19.597 +03:00 [DBG] Error Id Parameter: errorId
2019-07-25 11:14:40.703 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:14:40.715 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:14:40.715 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:14:40.720 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:14:41.408 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:14:41.408 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:14:41.414 +03:00 [DBG] Start discovery request
2019-07-25 11:14:41.539 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-25 11:14:41.545 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-25 11:14:41.545 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-25 11:14:41.553 +03:00 [DBG] Start authorize request
2019-07-25 11:14:41.581 +03:00 [DBG] No user present in authorize request
2019-07-25 11:14:41.597 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:14:41.665 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:14:41.782 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:14:41.813 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0ce072264df74f778022c973674c9f59","UiLocales":null,"Nonce":"92b5b051895c4b5488897e1ef503cadb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0ce072264df74f778022c973674c9f59","nonce":"92b5b051895c4b5488897e1ef503cadb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:14:41.864 +03:00 [INF] Showing login: User is not authenticated
2019-07-25 11:14:42.030 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:14:42.031 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:14:42.032 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:14:42.038 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:14:44.132 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-25 11:14:46.036 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-25 11:14:49.827 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGQVPU69AF:00000006","TimeStamp":"2019-07-25T08:14:49.0000000Z","ProcessId":8884,"LocalIpAddress":"127.0.0.1:32270","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 11:14:49.849 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:14:49.854 +03:00 [DBG] Adding amr claim with value: external
2019-07-25 11:14:49.863 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:14:49.874 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:14:49.905 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:14:49.906 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:14:49.907 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:14:49.916 +03:00 [DBG] Start authorize callback request
2019-07-25 11:14:49.927 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:14:49.927 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:14:49.927 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:14:49.927 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:14:49.928 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0ce072264df74f778022c973674c9f59","UiLocales":null,"Nonce":"92b5b051895c4b5488897e1ef503cadb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"01bf5feb8b34cb93bfae74586bfbce01","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0ce072264df74f778022c973674c9f59","nonce":"92b5b051895c4b5488897e1ef503cadb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:14:50.097 +03:00 [DBG] user_consent grant with value: spa|2e9c0c95-7cb6-4e0f-9554-f017b3d294fd not found in store.
2019-07-25 11:14:50.097 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 11:14:50.098 +03:00 [INF] Showing consent: User has not yet consented
2019-07-25 11:14:50.153 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:15:44.701 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:15:44.702 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:15:44.702 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:16:01.817 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-25 11:16:01.919 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:16:01.919 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:16:01.920 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:16:01.921 +03:00 [INF] {"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOGQVPU69AF:00000009","TimeStamp":"2019-07-25T08:16:01.0000000Z","ProcessId":8884,"LocalIpAddress":"127.0.0.1:32270","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-25 11:16:01.944 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:16:01.955 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:16:01.956 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:16:01.956 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:16:01.956 +03:00 [DBG] Start authorize callback request
2019-07-25 11:16:01.969 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:16:01.969 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:16:01.969 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:16:01.970 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:16:01.970 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0ce072264df74f778022c973674c9f59","UiLocales":null,"Nonce":"92b5b051895c4b5488897e1ef503cadb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"01bf5feb8b34cb93bfae74586bfbce01","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0ce072264df74f778022c973674c9f59","nonce":"92b5b051895c4b5488897e1ef503cadb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:16:01.986 +03:00 [DBG] user_consent grant with value: spa|2e9c0c95-7cb6-4e0f-9554-f017b3d294fd not found in store.
2019-07-25 11:16:43.701 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 11:16:43.711 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-25 11:16:43.713 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-25 11:16:43.718 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:16:43.743 +03:00 [DBG] Creating Implicit Flow response.
2019-07-25 11:16:43.762 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-25 11:16:43.763 +03:00 [DBG] Getting claims for access token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:16:43.884 +03:00 [DBG] Getting claims for identity token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd and client: spa
2019-07-25 11:16:43.884 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-25 11:16:43.898 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****nJ3Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****PwQg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOGQVPU69AF:0000000A","TimeStamp":"2019-07-25T08:16:43.0000000Z","ProcessId":8884,"LocalIpAddress":"127.0.0.1:32270","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-25 11:16:43.901 +03:00 [INF] Authorize endpoint response
{"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"0ce072264df74f778022c973674c9f59","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-25 11:16:43.932 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:16:43.932 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:16:45.769 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:16:45.770 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:16:45.770 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:16:45.771 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:16:45.772 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:16:45.773 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:16:45.774 +03:00 [DBG] Start discovery request
2019-07-25 11:16:45.835 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-25 11:17:41.733 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:17:41.734 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:17:41.737 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 11:17:41.741 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 11:17:41.742 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 11:17:41.752 +03:00 [DBG] Start key discovery request
2019-07-25 11:20:05.179 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:20:05.182 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:20:05.182 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:20:05.188 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:20:05.199 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:20:05.200 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:20:05.200 +03:00 [DBG] Start discovery request
2019-07-25 11:20:05.277 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-25 11:20:05.282 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-25 11:20:05.282 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-25 11:20:05.283 +03:00 [DBG] Start authorize request
2019-07-25 11:20:05.285 +03:00 [DBG] No user present in authorize request
2019-07-25 11:20:05.285 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:20:05.287 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:20:05.290 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:20:05.292 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f0bc876da79f40b196a76274203d3264","UiLocales":null,"Nonce":"b2218401e43745e1b7e0f52136d48c64","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f0bc876da79f40b196a76274203d3264","nonce":"b2218401e43745e1b7e0f52136d48c64"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:20:05.293 +03:00 [INF] Showing login: User is not authenticated
2019-07-25 11:20:05.331 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:20:05.332 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:20:05.332 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:20:05.334 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:20:07.434 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-25 11:20:08.690 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-25 11:20:08.775 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGQVPU69AG:00000006","TimeStamp":"2019-07-25T08:20:08.0000000Z","ProcessId":8884,"LocalIpAddress":"127.0.0.1:32270","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 11:20:08.776 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:20:08.776 +03:00 [DBG] Adding amr claim with value: external
2019-07-25 11:20:08.777 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:20:08.778 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:20:08.795 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:20:08.795 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:20:08.795 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:20:08.795 +03:00 [DBG] Start authorize callback request
2019-07-25 11:20:08.797 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:20:08.797 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:20:08.797 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:20:08.797 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:20:08.798 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f0bc876da79f40b196a76274203d3264","UiLocales":null,"Nonce":"b2218401e43745e1b7e0f52136d48c64","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5abe36dc98b8e30b9c77b29f6d025f51","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f0bc876da79f40b196a76274203d3264","nonce":"b2218401e43745e1b7e0f52136d48c64"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:20:08.822 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-25 11:20:08.822 +03:00 [DBG] Creating Implicit Flow response.
2019-07-25 11:20:08.823 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-25 11:20:08.823 +03:00 [DBG] Getting claims for access token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:20:08.842 +03:00 [DBG] Getting claims for identity token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd and client: spa
2019-07-25 11:21:12.248 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-25 11:21:12.259 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****JE5g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aL9w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOGQVPU69AG:00000007","TimeStamp":"2019-07-25T08:21:12.0000000Z","ProcessId":8884,"LocalIpAddress":"127.0.0.1:32270","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-25 11:21:12.259 +03:00 [INF] Authorize endpoint response
{"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"f0bc876da79f40b196a76274203d3264","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-25 11:21:12.260 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:21:12.261 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:21:13.975 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:21:13.977 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:21:13.979 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:21:13.980 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:21:13.981 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:21:13.981 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:21:13.981 +03:00 [DBG] Start discovery request
2019-07-25 11:21:14.058 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-25 11:21:14.058 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:21:14.058 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:21:14.059 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 11:21:14.060 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 11:21:14.060 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 11:21:14.060 +03:00 [DBG] Start key discovery request
2019-07-25 11:21:14.159 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:21:14.159 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:22:11.309 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:22:11.328 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:22:11.328 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:22:11.328 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:22:11.329 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-25 11:22:11.337 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-25 11:22:11.337 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-25 11:22:11.354 +03:00 [DBG] Start userinfo request
2019-07-25 11:22:11.364 +03:00 [DBG] Bearer token found in header
2019-07-25 11:22:11.429 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:22:11.434 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:22:11.451 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 11:22:11.452 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564042808,"exp":1564046408,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","auth_time":1564042808,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-25 11:22:11.463 +03:00 [DBG] Creating userinfo response
2019-07-25 11:22:11.470 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:22:11.474 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:22:11.479 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-25 11:22:11.480 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:22:11.486 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-25 11:22:11.487 +03:00 [DBG] End userinfo request
2019-07-25 11:22:11.555 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-25 11:22:11.556 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-25 11:22:11.556 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-25 11:22:11.561 +03:00 [DBG] Rendering check session result
2019-07-25 11:26:16.192 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:26:16.201 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:26:16.202 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:26:16.202 +03:00 [DBG] Start discovery request
2019-07-25 11:26:16.653 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 11:26:16.654 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 11:26:16.654 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 11:26:16.654 +03:00 [DBG] Start key discovery request
2019-07-25 11:27:06.100 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-25 11:27:06.108 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-25 11:27:06.108 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-25 11:27:06.143 +03:00 [DBG] Processing signout request for 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:27:06.158 +03:00 [DBG] Start end session request validation
2019-07-25 11:27:06.170 +03:00 [DBG] Start identity token validation
2019-07-25 11:27:06.173 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:27:06.173 +03:00 [DBG] Client found: spa / SPA Client
2019-07-25 11:27:06.197 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 11:27:06.199 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564042872,"exp":1564043172,"iss":"http://localhost:5000","aud":"spa","nonce":"b2218401e43745e1b7e0f52136d48c64","iat":1564042808,"at_hash":"F5OVAooGeLfJM4dpz4Oq3w","sid":"5abe36dc98b8e30b9c77b29f6d025f51","sub":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","auth_time":1564042808,"idp":"Facebook","amr":"external"},"$type":"TokenValidationLog"}
2019-07-25 11:27:06.208 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQwNDI4NzIsImV4cCI6MTU2NDA0MzE3MiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJiMjIxODQwMWU0Mzc0NWUxYjdlMGY1MjEzNmQ0OGM2NCIsImlhdCI6MTU2NDA0MjgwOCwiYXRfaGFzaCI6IkY1T1ZBb29HZUxmSk00ZHB6NE9xM3ciLCJzaWQiOiI1YWJlMzZkYzk4YjhlMzBiOWM3N2IyOWY2ZDAyNWY1MSIsInN1YiI6IjJlOWMwYzk1LTdjYjYtNGUwZi05NTU0LWYwMTdiM2QyOTRmZCIsImF1dGhfdGltZSI6MTU2NDA0MjgwOCwiaWRwIjoiRmFjZWJvb2siLCJhbXIiOlsiZXh0ZXJuYWwiXX0.qrjXU7RN05cb6kd-RmiBXdh1HrBU4Or82Y4UWNvDN5X3sgPcqDAqW5-cUbSk0OgxWsHh_6rL7NzGhX7WNhcss308HA4KSrpVR-xfjX2ryVsQze7uIbK3gtJ7RtbDbx6c57MQ0gqfsCUrOClLm2aPo8KeCl4_HEPxY-3zUBmWcInGvh4G1WJxrQcIFvP8mnWi6r1ShFcqQl0AD_La5oCrkyYPzd5Gn6SzKBA4YOk_SrLPnGVHrWyz1voum8fn117qkrnwgwfXJmQzyHjXafMCGzjjgUVeRHVGIr6TxW_a1u-LTbCbVh5yPY6gDlg0xvLjLrOZlmaJFoxKggnHpOJE5g"},"$type":"EndSessionRequestValidationLog"}
2019-07-25 11:27:06.208 +03:00 [DBG] Success validating end session request from spa
2019-07-25 11:27:06.351 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 11:27:06.352 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:27:06.354 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 11:27:06.357 +03:00 [INF] {"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGQVPU69AH:00000004","TimeStamp":"2019-07-25T08:27:06.0000000Z","ProcessId":8884,"LocalIpAddress":"127.0.0.1:32270","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 11:27:09.705 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:27:09.705 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:27:09.705 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:27:09.707 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:27:09.707 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:27:09.707 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:27:09.707 +03:00 [DBG] Start discovery request
2019-07-25 11:27:09.742 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-25 11:27:09.743 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-25 11:27:09.743 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-25 11:27:09.743 +03:00 [DBG] Start authorize request
2019-07-25 11:27:09.743 +03:00 [DBG] No user present in authorize request
2019-07-25 11:27:09.743 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:27:09.744 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:27:09.744 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:27:09.745 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"fa2afbc580cd4cea8fe0605796daac7a","UiLocales":null,"Nonce":"d9cccc85387e4c7b97515040ac1d52bf","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"fa2afbc580cd4cea8fe0605796daac7a","nonce":"d9cccc85387e4c7b97515040ac1d52bf"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:27:09.745 +03:00 [INF] Showing login: User is not authenticated
2019-07-25 11:27:09.768 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:27:09.768 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:27:09.769 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:27:09.770 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:27:12.371 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-25 11:27:17.780 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-25 11:27:17.822 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGQVPU69AH:0000000A","TimeStamp":"2019-07-25T08:27:17.0000000Z","ProcessId":8884,"LocalIpAddress":"127.0.0.1:32270","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 11:27:56.091 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:27:56.092 +03:00 [DBG] Adding amr claim with value: external
2019-07-25 11:27:56.092 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:27:56.092 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:27:56.106 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:27:56.107 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:27:56.108 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:27:56.108 +03:00 [DBG] Start authorize callback request
2019-07-25 11:27:56.109 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:27:56.109 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:27:56.109 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:27:56.110 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:27:56.110 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"fa2afbc580cd4cea8fe0605796daac7a","UiLocales":null,"Nonce":"d9cccc85387e4c7b97515040ac1d52bf","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fa63aa9c673ab64293ee13eb99d37699","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"fa2afbc580cd4cea8fe0605796daac7a","nonce":"d9cccc85387e4c7b97515040ac1d52bf"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:27:56.118 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-25 11:27:56.118 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 11:27:56.118 +03:00 [INF] Showing consent: User has not yet consented
2019-07-25 11:27:56.138 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:27:56.138 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:27:56.138 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:27:56.138 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:29:10.116 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-25 11:29:10.130 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:29:10.131 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:29:10.131 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:29:10.132 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOGQVPU69AH:0000000D","TimeStamp":"2019-07-25T08:29:10.0000000Z","ProcessId":8884,"LocalIpAddress":"127.0.0.1:32270","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-25 11:29:10.134 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:29:10.144 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:29:10.144 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:29:10.144 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:29:10.144 +03:00 [DBG] Start authorize callback request
2019-07-25 11:29:10.145 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:29:10.145 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:29:10.145 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:29:10.146 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:29:10.146 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"fa2afbc580cd4cea8fe0605796daac7a","UiLocales":null,"Nonce":"d9cccc85387e4c7b97515040ac1d52bf","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fa63aa9c673ab64293ee13eb99d37699","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"fa2afbc580cd4cea8fe0605796daac7a","nonce":"d9cccc85387e4c7b97515040ac1d52bf"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:29:10.154 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-25 11:29:10.154 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 11:29:10.154 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-25 11:30:07.091 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-25 11:30:07.092 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:30:07.102 +03:00 [DBG] Creating Implicit Flow response.
2019-07-25 11:30:07.103 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-25 11:30:07.103 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:30:07.119 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-25 11:30:07.119 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-25 11:30:07.126 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****T_xg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Gdjw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOGQVPU69AH:0000000E","TimeStamp":"2019-07-25T08:30:07.0000000Z","ProcessId":8884,"LocalIpAddress":"127.0.0.1:32270","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-25 11:30:07.129 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"fa2afbc580cd4cea8fe0605796daac7a","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-25 11:30:07.130 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:30:07.130 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:30:09.586 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:30:09.586 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:30:09.586 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:30:09.587 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:30:09.588 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:30:09.588 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:30:09.588 +03:00 [DBG] Start discovery request
2019-07-25 11:30:09.633 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-25 11:30:09.634 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:30:09.634 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:31:03.092 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 11:31:03.092 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 11:31:03.092 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 11:31:03.092 +03:00 [DBG] Start key discovery request
2019-07-25 11:31:03.198 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:31:03.198 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:31:03.198 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:31:03.209 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:31:03.209 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:31:03.209 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:31:03.210 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-25 11:31:03.212 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-25 11:31:03.212 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-25 11:31:03.212 +03:00 [DBG] Start userinfo request
2019-07-25 11:31:03.213 +03:00 [DBG] Bearer token found in header
2019-07-25 11:31:03.218 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:31:03.219 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:31:03.224 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 11:31:03.224 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564043407,"exp":1564047007,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564043276,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-25 11:31:03.225 +03:00 [DBG] Creating userinfo response
2019-07-25 11:31:03.225 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:31:03.225 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:31:03.225 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-25 11:31:03.225 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:31:03.231 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-25 11:31:03.232 +03:00 [DBG] End userinfo request
2019-07-25 11:32:07.147 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-25 11:32:07.148 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-25 11:32:07.148 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-25 11:32:07.148 +03:00 [DBG] Rendering check session result
2019-07-25 11:32:51.242 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:32:51.242 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:32:51.243 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:32:51.243 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:32:51.244 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:32:51.244 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:32:51.244 +03:00 [DBG] Start discovery request
2019-07-25 11:32:51.278 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-25 11:32:51.279 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-25 11:32:51.279 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-25 11:32:51.279 +03:00 [DBG] Start authorize request
2019-07-25 11:32:51.279 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:32:51.279 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:32:51.279 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:32:51.280 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:32:51.280 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"266489d01f5a45229c44892bc9fe550f","UiLocales":null,"Nonce":"3817a5f883784e17b076fd3ee142a850","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fa63aa9c673ab64293ee13eb99d37699","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"266489d01f5a45229c44892bc9fe550f","nonce":"3817a5f883784e17b076fd3ee142a850"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:32:51.313 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-25 11:32:51.313 +03:00 [DBG] Creating Implicit Flow response.
2019-07-25 11:32:51.313 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-25 11:33:25.280 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:33:25.290 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-25 11:33:25.290 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-25 11:33:25.296 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****05kQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3Nsg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOGQVPU69AH:00000015","TimeStamp":"2019-07-25T08:33:25.0000000Z","ProcessId":8884,"LocalIpAddress":"127.0.0.1:32270","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-25 11:33:25.297 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"266489d01f5a45229c44892bc9fe550f","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-25 11:34:45.079 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 11:34:45.244 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-25 11:34:45.272 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-25 11:34:45.272 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-25 11:34:45.273 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-25 11:34:45.273 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-25 11:34:45.273 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-25 11:34:47.000 +03:00 [DBG] Login Url: /Account/Login
2019-07-25 11:34:47.008 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 11:34:47.008 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-25 11:34:47.008 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-25 11:34:47.008 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 11:34:47.008 +03:00 [DBG] Error Url: /home/error
2019-07-25 11:34:47.008 +03:00 [DBG] Error Id Parameter: errorId
2019-07-25 11:35:04.911 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-25 11:35:08.226 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-25 11:35:09.936 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-25 11:35:13.090 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGRBPH6TG4:00000007","TimeStamp":"2019-07-25T08:35:13.0000000Z","ProcessId":3164,"LocalIpAddress":"127.0.0.1:10374","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 11:35:13.123 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:35:13.127 +03:00 [DBG] Adding amr claim with value: external
2019-07-25 11:35:13.136 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:35:13.147 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:35:16.370 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 11:35:16.370 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:35:16.371 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 11:35:16.371 +03:00 [INF] {"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGRBPH6TG4:00000009","TimeStamp":"2019-07-25T08:35:16.0000000Z","ProcessId":3164,"LocalIpAddress":"127.0.0.1:10374","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 11:35:16.383 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 299
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 265
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-25 11:36:02.280 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-25 11:36:19.213 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-25 11:36:19.384 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:36:19.385 +03:00 [DBG] Adding idp claim with value: local
2019-07-25 11:36:19.385 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-25 11:36:19.385 +03:00 [DBG] Adding auth_time claim with value: 1564043779
2019-07-25 11:36:19.385 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:36:19.386 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGRBPH6TG4:0000000D","TimeStamp":"2019-07-25T08:36:19.0000000Z","ProcessId":3164,"LocalIpAddress":"127.0.0.1:10374","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 11:36:26.825 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 11:36:26.825 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:36:26.826 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 11:36:26.826 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGRBPH6TG4:0000000F","TimeStamp":"2019-07-25T08:36:26.0000000Z","ProcessId":3164,"LocalIpAddress":"127.0.0.1:10374","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 11:36:26.828 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 299
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 265
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-25 11:36:51.736 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:36:51.744 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:36:51.744 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:36:51.746 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:36:51.752 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:36:51.753 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:36:51.761 +03:00 [DBG] Start discovery request
2019-07-25 11:36:52.016 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-25 11:36:52.022 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-25 11:36:52.022 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-25 11:36:52.034 +03:00 [DBG] Start authorize request
2019-07-25 11:36:52.051 +03:00 [DBG] No user present in authorize request
2019-07-25 11:37:18.351 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:37:18.384 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:37:18.455 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:37:18.469 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"df94efe74f114ebf8434d50dbc187f80","UiLocales":null,"Nonce":"9caeaadd02404f54864174b100c6a52d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"df94efe74f114ebf8434d50dbc187f80","nonce":"9caeaadd02404f54864174b100c6a52d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:37:18.490 +03:00 [INF] Showing login: User is not authenticated
2019-07-25 11:37:18.517 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:37:18.518 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:37:18.519 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:37:18.522 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:37:33.947 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-25 11:37:33.960 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:37:33.960 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:37:33.961 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:37:34.004 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:37:34.005 +03:00 [DBG] Adding idp claim with value: local
2019-07-25 11:37:34.005 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-25 11:37:34.005 +03:00 [DBG] Adding auth_time claim with value: 1564043854
2019-07-25 11:37:34.006 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:37:34.007 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGRBPH6TG4:00000014","TimeStamp":"2019-07-25T08:37:34.0000000Z","ProcessId":3164,"LocalIpAddress":"127.0.0.1:10374","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 11:37:34.012 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:37:34.027 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:38:14.389 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:38:14.390 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:38:14.401 +03:00 [DBG] Start authorize callback request
2019-07-25 11:38:14.410 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:38:14.411 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:38:14.411 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:38:14.411 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:38:14.412 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"df94efe74f114ebf8434d50dbc187f80","UiLocales":null,"Nonce":"9caeaadd02404f54864174b100c6a52d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"c401302fb0bd1e7ba2925881f101c48c","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"df94efe74f114ebf8434d50dbc187f80","nonce":"9caeaadd02404f54864174b100c6a52d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:38:14.516 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-25 11:38:14.516 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 11:38:14.516 +03:00 [INF] Showing consent: User has not yet consented
2019-07-25 11:38:14.549 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:38:14.550 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:38:14.550 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:38:14.550 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:38:17.042 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-25 11:38:17.082 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:38:17.082 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:38:17.082 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:38:17.084 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOGRBPH6TG4:00000017","TimeStamp":"2019-07-25T08:38:17.0000000Z","ProcessId":3164,"LocalIpAddress":"127.0.0.1:10374","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-25 11:39:18.417 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:39:18.432 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:39:18.433 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:39:18.433 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:39:18.433 +03:00 [DBG] Start authorize callback request
2019-07-25 11:39:18.445 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:39:18.446 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:39:18.446 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:39:18.446 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:39:18.447 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"df94efe74f114ebf8434d50dbc187f80","UiLocales":null,"Nonce":"9caeaadd02404f54864174b100c6a52d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"c401302fb0bd1e7ba2925881f101c48c","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"df94efe74f114ebf8434d50dbc187f80","nonce":"9caeaadd02404f54864174b100c6a52d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:39:18.453 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-25 11:39:18.453 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 11:39:18.468 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-25 11:39:18.471 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-25 11:39:18.480 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:39:18.520 +03:00 [DBG] Creating Implicit Flow response.
2019-07-25 11:39:18.548 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-25 11:39:18.549 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:39:18.693 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-25 11:39:18.694 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-25 11:40:20.404 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****rmmQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****HqiA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOGRBPH6TG4:00000018","TimeStamp":"2019-07-25T08:40:20.0000000Z","ProcessId":3164,"LocalIpAddress":"127.0.0.1:10374","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-25 11:40:20.407 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"df94efe74f114ebf8434d50dbc187f80","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-25 11:40:20.433 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:40:20.434 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:40:25.372 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:40:25.375 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:40:25.375 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:40:25.377 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:40:25.381 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:40:25.381 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:40:25.381 +03:00 [DBG] Start discovery request
2019-07-25 11:40:28.350 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-25 11:40:28.350 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:40:28.350 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:40:28.351 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 11:40:28.352 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 11:40:28.352 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 11:40:28.360 +03:00 [DBG] Start key discovery request
2019-07-25 11:40:28.437 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:40:28.437 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:40:28.437 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:40:28.450 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:41:21.389 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:41:21.389 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:41:21.389 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-25 11:41:21.394 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-25 11:41:21.394 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-25 11:41:21.404 +03:00 [DBG] Start userinfo request
2019-07-25 11:41:21.410 +03:00 [DBG] Bearer token found in header
2019-07-25 11:41:21.470 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:41:21.475 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:41:21.480 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 11:41:21.482 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564043958,"exp":1564047558,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564043854,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-25 11:41:21.494 +03:00 [DBG] Creating userinfo response
2019-07-25 11:41:21.499 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:41:21.512 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:41:21.516 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-25 11:41:21.516 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:41:21.522 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-25 11:41:21.523 +03:00 [DBG] End userinfo request
2019-07-25 11:41:21.628 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-25 11:41:21.629 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-25 11:41:21.629 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-25 11:41:21.637 +03:00 [DBG] Rendering check session result
2019-07-25 11:41:22.524 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:41:22.524 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:41:22.525 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:42:27.388 +03:00 [DBG] Start discovery request
2019-07-25 11:43:52.577 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:43:52.616 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:43:52.617 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:43:52.617 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:43:52.618 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:43:52.618 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:43:52.618 +03:00 [DBG] Start discovery request
2019-07-25 11:43:52.838 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-25 11:43:52.838 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-25 11:43:52.838 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-25 11:43:52.839 +03:00 [DBG] Start authorize request
2019-07-25 11:43:52.839 +03:00 [DBG] No user present in authorize request
2019-07-25 11:43:52.839 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:43:52.839 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:43:52.839 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:43:52.840 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2ef332aa6cfd4acf899b54a3bafb2c1a","UiLocales":null,"Nonce":"3fddc1a8ecaa4c2994f062ece9bc2ce2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2ef332aa6cfd4acf899b54a3bafb2c1a","nonce":"3fddc1a8ecaa4c2994f062ece9bc2ce2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:43:52.840 +03:00 [INF] Showing login: User is not authenticated
2019-07-25 11:43:53.265 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:43:53.265 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:43:53.266 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:43:53.266 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:44:05.084 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-25 11:44:05.087 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:44:05.087 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:44:05.087 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:44:05.129 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:44:05.129 +03:00 [DBG] Adding idp claim with value: local
2019-07-25 11:44:05.129 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-25 11:44:05.129 +03:00 [DBG] Adding auth_time claim with value: 1564044245
2019-07-25 11:44:05.130 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:44:05.130 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGRBPH6TG5:00000004","TimeStamp":"2019-07-25T08:44:05.0000000Z","ProcessId":3164,"LocalIpAddress":"127.0.0.1:10374","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 11:44:05.130 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:44:05.142 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:44:05.142 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:44:05.142 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:44:05.142 +03:00 [DBG] Start authorize callback request
2019-07-25 11:44:05.142 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:44:05.142 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:44:05.142 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:44:05.143 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:44:05.143 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2ef332aa6cfd4acf899b54a3bafb2c1a","UiLocales":null,"Nonce":"3fddc1a8ecaa4c2994f062ece9bc2ce2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"94a192e67b271de570637c35f5a6d722","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2ef332aa6cfd4acf899b54a3bafb2c1a","nonce":"3fddc1a8ecaa4c2994f062ece9bc2ce2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:51:14.639 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 11:51:14.797 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-25 11:51:14.804 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-25 11:51:14.804 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-25 11:51:14.804 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-25 11:51:14.804 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-25 11:51:14.804 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-25 11:51:16.661 +03:00 [DBG] Login Url: /Account/Login
2019-07-25 11:51:16.668 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 11:51:16.668 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-25 11:51:16.668 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-25 11:51:16.668 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 11:51:16.668 +03:00 [DBG] Error Url: /home/error
2019-07-25 11:51:16.668 +03:00 [DBG] Error Id Parameter: errorId
2019-07-25 11:51:30.743 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-25 11:51:34.890 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-25 11:51:40.974 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-25 11:51:44.184 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGRL0GFJJ2:00000006","TimeStamp":"2019-07-25T08:51:44.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 11:51:44.229 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:51:44.233 +03:00 [DBG] Adding amr claim with value: external
2019-07-25 11:51:44.247 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:51:44.260 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:51:48.956 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 11:51:48.957 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:51:48.957 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 11:51:48.959 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGRL0GFJJ2:00000008","TimeStamp":"2019-07-25T08:51:48.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 11:51:48.970 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 299
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 265
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-25 11:54:43.337 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:54:43.376 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:54:43.376 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:54:43.393 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:54:43.424 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:54:43.425 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:54:43.450 +03:00 [DBG] Start discovery request
2019-07-25 11:54:43.971 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-25 11:54:43.997 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-25 11:54:43.997 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-25 11:54:44.009 +03:00 [DBG] Start authorize request
2019-07-25 11:54:44.048 +03:00 [DBG] No user present in authorize request
2019-07-25 11:54:44.064 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:54:44.120 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:44.237 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:54:44.265 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9b52e17a265240d3b1ac5629e7563784","UiLocales":null,"Nonce":"e24c161cdc1b4f75bbc701a782d51b04","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9b52e17a265240d3b1ac5629e7563784","nonce":"e24c161cdc1b4f75bbc701a782d51b04"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:54:44.306 +03:00 [INF] Showing login: User is not authenticated
2019-07-25 11:54:44.362 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:54:44.363 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:44.364 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:54:44.367 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:54.748 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-25 11:54:54.883 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:54:54.883 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:54.883 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:54:55.047 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:54:55.047 +03:00 [DBG] Adding idp claim with value: local
2019-07-25 11:54:55.047 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-25 11:54:55.048 +03:00 [DBG] Adding auth_time claim with value: 1564044895
2019-07-25 11:54:55.052 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:54:55.055 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGRL0GFJJ3:00000004","TimeStamp":"2019-07-25T08:54:55.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 11:54:55.060 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:55.073 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:54:55.075 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:54:55.075 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:54:55.085 +03:00 [DBG] Start authorize callback request
2019-07-25 11:54:55.100 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:54:55.100 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:54:55.100 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:55.101 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:54:55.102 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9b52e17a265240d3b1ac5629e7563784","UiLocales":null,"Nonce":"e24c161cdc1b4f75bbc701a782d51b04","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"13a853cfdd4525b61a13442601989f33","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9b52e17a265240d3b1ac5629e7563784","nonce":"e24c161cdc1b4f75bbc701a782d51b04"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:54:55.234 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-25 11:54:55.234 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 11:54:55.234 +03:00 [INF] Showing consent: User has not yet consented
2019-07-25 11:54:55.276 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:54:55.276 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:55.277 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:54:55.277 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:56.885 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-25 11:54:56.925 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:54:56.926 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:56.927 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:54:56.930 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOGRL0GFJJ3:00000007","TimeStamp":"2019-07-25T08:54:56.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-25 11:54:56.964 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:56.972 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:54:56.973 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:54:56.973 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:54:56.974 +03:00 [DBG] Start authorize callback request
2019-07-25 11:54:56.983 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:54:56.984 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:54:56.984 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:56.984 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:54:56.984 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9b52e17a265240d3b1ac5629e7563784","UiLocales":null,"Nonce":"e24c161cdc1b4f75bbc701a782d51b04","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"13a853cfdd4525b61a13442601989f33","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9b52e17a265240d3b1ac5629e7563784","nonce":"e24c161cdc1b4f75bbc701a782d51b04"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:54:56.990 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-25 11:54:56.990 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 11:54:57.008 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-25 11:54:57.014 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-25 11:54:57.023 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:54:57.066 +03:00 [DBG] Creating Implicit Flow response.
2019-07-25 11:54:57.102 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-25 11:54:57.104 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:54:57.270 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-25 11:54:57.271 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-25 11:54:57.289 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****l-tA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3VgA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOGRL0GFJJ3:00000008","TimeStamp":"2019-07-25T08:54:57.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-25 11:54:57.293 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"9b52e17a265240d3b1ac5629e7563784","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-25 11:54:57.320 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:54:57.321 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:54:58.960 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:54:58.963 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:54:58.963 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:54:58.965 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:54:58.967 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:54:58.967 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:54:58.968 +03:00 [DBG] Start discovery request
2019-07-25 11:54:59.040 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-25 11:54:59.041 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:54:59.041 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:54:59.041 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 11:54:59.043 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 11:54:59.043 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 11:54:59.055 +03:00 [DBG] Start key discovery request
2019-07-25 11:54:59.133 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:54:59.135 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:54:59.135 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:54:59.147 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:54:59.148 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:54:59.148 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:54:59.149 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-25 11:54:59.156 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-25 11:54:59.156 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-25 11:54:59.170 +03:00 [DBG] Start userinfo request
2019-07-25 11:54:59.180 +03:00 [DBG] Bearer token found in header
2019-07-25 11:54:59.276 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:59.283 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:54:59.295 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 11:54:59.298 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564044897,"exp":1564048497,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564044895,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-25 11:54:59.312 +03:00 [DBG] Creating userinfo response
2019-07-25 11:54:59.321 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:54:59.328 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:54:59.334 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-25 11:54:59.334 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:54:59.342 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-25 11:54:59.342 +03:00 [DBG] End userinfo request
2019-07-25 11:54:59.382 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-25 11:54:59.385 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-25 11:54:59.385 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-25 11:54:59.390 +03:00 [DBG] Rendering check session result
2019-07-25 11:55:03.978 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:55:03.980 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:55:03.981 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:55:03.981 +03:00 [DBG] Start discovery request
2019-07-25 11:55:04.130 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 11:55:04.131 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 11:55:04.131 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 11:55:04.132 +03:00 [DBG] Start key discovery request
2019-07-25 11:55:13.365 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-25 11:55:13.369 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-25 11:55:13.370 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-25 11:55:13.409 +03:00 [DBG] Processing signout request for 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:55:13.434 +03:00 [DBG] Start end session request validation
2019-07-25 11:55:13.464 +03:00 [DBG] Start identity token validation
2019-07-25 11:55:13.465 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:13.466 +03:00 [DBG] Client found: spa / SPA Client
2019-07-25 11:55:13.492 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 11:55:13.494 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564044897,"exp":1564045197,"iss":"http://localhost:5000","aud":"spa","nonce":"e24c161cdc1b4f75bbc701a782d51b04","iat":1564044897,"at_hash":"EqW_7_eOgv0IyKr4AMRizA","sid":"13a853cfdd4525b61a13442601989f33","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564044895,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-25 11:55:13.500 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQwNDQ4OTcsImV4cCI6MTU2NDA0NTE5NywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJlMjRjMTYxY2RjMWI0Zjc1YmJjNzAxYTc4MmQ1MWIwNCIsImlhdCI6MTU2NDA0NDg5NywiYXRfaGFzaCI6IkVxV183X2VPZ3YwSXlLcjRBTVJpekEiLCJzaWQiOiIxM2E4NTNjZmRkNDUyNWI2MWExMzQ0MjYwMTk4OWYzMyIsInN1YiI6IjZiMjQ4NDRlLWZmN2MtNDVkYy04Zjk0LTk4ZjhkNDYzYzcxOSIsImF1dGhfdGltZSI6MTU2NDA0NDg5NSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.PlLuHhTlpJxK6WGNp0ULAX1yH1x2TNdKKb3tYYSHO_eD5cYD7Up-ZFSahugmvMaxmVOtw-MmYhp_JiMhD_MOa2xRS5_IisYSRD6fUAnr8VdK6voTxq2dMpTT-hFmWJCjNMVchD0Txv2IsYzLg6A6nDITY0Fy5kxEL9naG-HrG8KqFwXyIL6cN7NffDTcy7FGwbZ9ftjlHzE5EgBpXEKZa_bp0S9dgnZPwkc9zGb1LZRqxwfkqIdqzUtcX9BJEt6uVU6vDVlI5dsVhY2zjG7wex9JFMmiR3TJUNtG8_xww6K_mnxdanX8zp1ov6uok6KVzS1jIyr0bhS2vM8qzTl-tA"},"$type":"EndSessionRequestValidationLog"}
2019-07-25 11:55:13.500 +03:00 [DBG] Success validating end session request from spa
2019-07-25 11:55:13.567 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 11:55:13.567 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:55:13.568 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 11:55:13.568 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGRL0GFJJ3:00000011","TimeStamp":"2019-07-25T08:55:13.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 11:55:17.037 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:55:17.037 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:55:17.037 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:55:17.038 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:55:17.039 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:55:17.039 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:55:17.039 +03:00 [DBG] Start discovery request
2019-07-25 11:55:17.081 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-25 11:55:17.087 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-25 11:55:17.088 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-25 11:55:17.088 +03:00 [DBG] Start authorize request
2019-07-25 11:55:17.088 +03:00 [DBG] No user present in authorize request
2019-07-25 11:55:17.089 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:55:17.089 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:17.089 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:55:17.094 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"919dedc627544d9d8cecb27510492414","UiLocales":null,"Nonce":"aad18d75a16b4298a69255977e2ef5cd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"919dedc627544d9d8cecb27510492414","nonce":"aad18d75a16b4298a69255977e2ef5cd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:55:17.094 +03:00 [INF] Showing login: User is not authenticated
2019-07-25 11:55:17.137 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:55:17.137 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:17.138 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:55:17.138 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:18.746 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-25 11:55:23.172 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-25 11:55:23.192 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGRL0GFJJ3:00000017","TimeStamp":"2019-07-25T08:55:23.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 11:55:23.193 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:55:23.193 +03:00 [DBG] Adding amr claim with value: external
2019-07-25 11:55:23.194 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:55:23.194 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:55:23.210 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:55:23.210 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:55:23.210 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:55:23.210 +03:00 [DBG] Start authorize callback request
2019-07-25 11:55:23.210 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:55:23.211 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:55:23.211 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:23.211 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:55:23.212 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"919dedc627544d9d8cecb27510492414","UiLocales":null,"Nonce":"aad18d75a16b4298a69255977e2ef5cd","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"dd5bba7eb26b619472142c0ca7ec0c98","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"919dedc627544d9d8cecb27510492414","nonce":"aad18d75a16b4298a69255977e2ef5cd"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:55:23.229 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-25 11:55:23.230 +03:00 [DBG] Creating Implicit Flow response.
2019-07-25 11:55:23.230 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-25 11:55:23.230 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:55:23.245 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-25 11:55:23.245 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-25 11:55:23.254 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****-rwQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****EPnQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOGRL0GFJJ3:00000018","TimeStamp":"2019-07-25T08:55:23.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-25 11:55:23.255 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"919dedc627544d9d8cecb27510492414","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-25 11:55:23.255 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:55:23.256 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:55:24.779 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:55:24.779 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:55:24.779 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:55:24.780 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:55:24.780 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:55:24.781 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:55:24.781 +03:00 [DBG] Start discovery request
2019-07-25 11:55:24.893 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-25 11:55:24.897 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:55:24.924 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:55:24.925 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 11:55:24.926 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 11:55:24.927 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 11:55:24.927 +03:00 [DBG] Start key discovery request
2019-07-25 11:55:24.991 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:55:24.991 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:55:24.991 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:55:25.001 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:55:25.001 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:55:25.002 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:55:25.002 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-25 11:55:25.003 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-25 11:55:25.003 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-25 11:55:25.004 +03:00 [DBG] Start userinfo request
2019-07-25 11:55:25.004 +03:00 [DBG] Bearer token found in header
2019-07-25 11:55:25.009 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:25.010 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:25.015 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 11:55:25.015 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564044923,"exp":1564048523,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564044923,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-25 11:55:25.019 +03:00 [DBG] Creating userinfo response
2019-07-25 11:55:25.019 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:55:25.020 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:55:25.020 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-25 11:55:25.020 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:55:25.026 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-25 11:55:25.027 +03:00 [DBG] End userinfo request
2019-07-25 11:55:25.080 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-25 11:55:25.080 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-25 11:55:25.081 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-25 11:55:25.081 +03:00 [DBG] Rendering check session result
2019-07-25 11:55:31.156 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-25 11:55:31.158 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-25 11:55:31.158 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-25 11:55:31.159 +03:00 [DBG] Processing signout request for 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-25 11:55:31.159 +03:00 [DBG] Start end session request validation
2019-07-25 11:55:31.159 +03:00 [DBG] Start identity token validation
2019-07-25 11:55:31.160 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:31.160 +03:00 [DBG] Client found: spa / SPA Client
2019-07-25 11:55:31.173 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 11:55:31.173 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564044923,"exp":1564045223,"iss":"http://localhost:5000","aud":"spa","nonce":"aad18d75a16b4298a69255977e2ef5cd","iat":1564044923,"at_hash":"-uhbzdR-QGnxJzRlpz9Azg","sid":"dd5bba7eb26b619472142c0ca7ec0c98","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564044923,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-25 11:55:31.173 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQwNDQ5MjMsImV4cCI6MTU2NDA0NTIyMywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJhYWQxOGQ3NWExNmI0Mjk4YTY5MjU1OTc3ZTJlZjVjZCIsImlhdCI6MTU2NDA0NDkyMywiYXRfaGFzaCI6Ii11aGJ6ZFItUUdueEp6UmxwejlBemciLCJzaWQiOiJkZDViYmE3ZWIyNmI2MTk0NzIxNDJjMGNhN2VjMGM5OCIsInN1YiI6IjZiMjQ4NDRlLWZmN2MtNDVkYy04Zjk0LTk4ZjhkNDYzYzcxOSIsImF1dGhfdGltZSI6MTU2NDA0NDkyMywiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.ao9YxezgSI_6kuTRQstmMTR32VH68p9mUGHqtnArXbNylKoy5VrO2IQv-gg2rkzUxTceFQSx65Kv_YncCfIQ__5qzrZt7LNJuec0mbWbz4gGW30D7Cm97mGfxjOGRfw76Gn7r0OzXYNp_Ycm9XmbHRSu609ULiHEt79K9fOSzRnydJ_iWztfOgENYOKPQpvcV77DTF8FqDzU4Zq0F0zcrvv3XMb6DhMHmCCssnjIxl6KukRtprZt6jfs2wE0mMjdOpBcjzpb6kExWcIw56JzQqSUuzQn_3vGk1vo5M0QJBRrtYRXflvwECrS03z4P0h_PclE35cgojh7_JMmD6-rwQ"},"$type":"EndSessionRequestValidationLog"}
2019-07-25 11:55:31.173 +03:00 [DBG] Success validating end session request from spa
2019-07-25 11:55:31.193 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 11:55:31.194 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:55:31.194 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 11:55:31.195 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGRL0GFJJ3:0000001F","TimeStamp":"2019-07-25T08:55:31.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 11:55:33.084 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:55:33.084 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:55:33.084 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:55:33.085 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:55:33.087 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:55:33.087 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:55:33.087 +03:00 [DBG] Start discovery request
2019-07-25 11:55:33.119 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-25 11:55:33.120 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-25 11:55:33.121 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-25 11:55:33.121 +03:00 [DBG] Start authorize request
2019-07-25 11:55:33.121 +03:00 [DBG] No user present in authorize request
2019-07-25 11:55:33.121 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:55:33.121 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:33.123 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:55:33.124 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8888e963be0d4e3cb57ba9a444e573a2","UiLocales":null,"Nonce":"e3616ed6997c4082a7a7703321690659","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8888e963be0d4e3cb57ba9a444e573a2","nonce":"e3616ed6997c4082a7a7703321690659"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:55:33.124 +03:00 [INF] Showing login: User is not authenticated
2019-07-25 11:55:33.134 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:55:33.135 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:33.135 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:55:33.135 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:34.472 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-25 11:55:35.879 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-25 11:55:35.898 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGRL0GFJJ3:00000025","TimeStamp":"2019-07-25T08:55:35.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 11:55:35.898 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:55:35.899 +03:00 [DBG] Adding amr claim with value: external
2019-07-25 11:55:35.899 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:55:35.899 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:55:35.909 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:55:35.909 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:55:35.910 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:55:35.910 +03:00 [DBG] Start authorize callback request
2019-07-25 11:55:35.910 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:55:35.910 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:55:35.910 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:35.911 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:55:35.911 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8888e963be0d4e3cb57ba9a444e573a2","UiLocales":null,"Nonce":"e3616ed6997c4082a7a7703321690659","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"dcb3189408a8ba63cd76d729e47f8d20","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8888e963be0d4e3cb57ba9a444e573a2","nonce":"e3616ed6997c4082a7a7703321690659"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:55:35.916 +03:00 [DBG] user_consent grant with value: spa|2e9c0c95-7cb6-4e0f-9554-f017b3d294fd not found in store.
2019-07-25 11:55:35.916 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 11:55:35.916 +03:00 [INF] Showing consent: User has not yet consented
2019-07-25 11:55:35.926 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:55:35.926 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:35.927 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:55:35.927 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:41.381 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-25 11:55:41.384 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:55:41.384 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:41.385 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:55:41.385 +03:00 [INF] {"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOGRL0GFJJ3:00000028","TimeStamp":"2019-07-25T08:55:41.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-25 11:55:41.386 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:41.400 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-25 11:55:41.400 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-25 11:55:41.400 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-25 11:55:41.401 +03:00 [DBG] Start authorize callback request
2019-07-25 11:55:41.401 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:55:41.401 +03:00 [DBG] Start authorize request protocol validation
2019-07-25 11:55:41.401 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:41.402 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-25 11:55:41.402 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8888e963be0d4e3cb57ba9a444e573a2","UiLocales":null,"Nonce":"e3616ed6997c4082a7a7703321690659","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"dcb3189408a8ba63cd76d729e47f8d20","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8888e963be0d4e3cb57ba9a444e573a2","nonce":"e3616ed6997c4082a7a7703321690659"},"$type":"AuthorizeRequestValidationLog"}
2019-07-25 11:55:41.407 +03:00 [DBG] user_consent grant with value: spa|2e9c0c95-7cb6-4e0f-9554-f017b3d294fd not found in store.
2019-07-25 11:55:41.407 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-25 11:55:41.407 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-25 11:55:41.407 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-25 11:55:41.408 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:55:41.418 +03:00 [DBG] Creating Implicit Flow response.
2019-07-25 11:55:41.418 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-25 11:55:41.418 +03:00 [DBG] Getting claims for access token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:55:41.431 +03:00 [DBG] Getting claims for identity token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd and client: spa
2019-07-25 11:55:41.432 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-25 11:55:41.438 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_AwQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****x-4Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOGRL0GFJJ3:00000029","TimeStamp":"2019-07-25T08:55:41.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-25 11:55:41.439 +03:00 [INF] Authorize endpoint response
{"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"8888e963be0d4e3cb57ba9a444e573a2","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-25 11:55:41.439 +03:00 [DBG] Augmenting SignInContext
2019-07-25 11:55:41.440 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 11:55:42.971 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-25 11:55:42.974 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:55:42.975 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:55:42.975 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 11:55:42.975 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 11:55:42.975 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 11:55:42.976 +03:00 [DBG] Start discovery request
2019-07-25 11:55:43.024 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-25 11:55:43.025 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:55:43.025 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:55:43.025 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 11:55:43.026 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 11:55:43.026 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 11:55:43.026 +03:00 [DBG] Start key discovery request
2019-07-25 11:55:43.108 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:55:43.108 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:55:43.108 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:55:43.123 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-25 11:55:43.124 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-25 11:55:43.124 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-25 11:55:43.124 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-25 11:55:43.125 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-25 11:55:43.125 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-25 11:55:43.125 +03:00 [DBG] Start userinfo request
2019-07-25 11:55:43.125 +03:00 [DBG] Bearer token found in header
2019-07-25 11:55:43.130 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:43.131 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:55:43.138 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 11:55:43.138 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564044941,"exp":1564048541,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","auth_time":1564044935,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-25 11:55:43.138 +03:00 [DBG] Creating userinfo response
2019-07-25 11:55:43.139 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:55:43.139 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:55:43.139 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-25 11:55:43.139 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-25 11:55:43.145 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-25 11:55:43.146 +03:00 [DBG] End userinfo request
2019-07-25 11:55:43.196 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-25 11:55:43.197 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-25 11:55:43.197 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-25 11:55:43.197 +03:00 [DBG] Rendering check session result
2019-07-25 11:56:53.952 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-25 11:56:53.952 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-25 11:56:53.952 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-25 11:56:53.953 +03:00 [DBG] Processing signout request for 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-25 11:56:53.953 +03:00 [DBG] Start end session request validation
2019-07-25 11:56:53.953 +03:00 [DBG] Start identity token validation
2019-07-25 11:56:53.953 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-25 11:56:53.954 +03:00 [DBG] Client found: spa / SPA Client
2019-07-25 11:56:53.980 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-25 11:56:53.981 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564044941,"exp":1564045241,"iss":"http://localhost:5000","aud":"spa","nonce":"e3616ed6997c4082a7a7703321690659","iat":1564044941,"at_hash":"LjSS_-Ex-dCiiDxQO4axHQ","sid":"dcb3189408a8ba63cd76d729e47f8d20","sub":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","auth_time":1564044935,"idp":"Facebook","amr":"external"},"$type":"TokenValidationLog"}
2019-07-25 11:56:53.981 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQwNDQ5NDEsImV4cCI6MTU2NDA0NTI0MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJlMzYxNmVkNjk5N2M0MDgyYTdhNzcwMzMyMTY5MDY1OSIsImlhdCI6MTU2NDA0NDk0MSwiYXRfaGFzaCI6IkxqU1NfLUV4LWRDaWlEeFFPNGF4SFEiLCJzaWQiOiJkY2IzMTg5NDA4YThiYTYzY2Q3NmQ3MjllNDdmOGQyMCIsInN1YiI6IjJlOWMwYzk1LTdjYjYtNGUwZi05NTU0LWYwMTdiM2QyOTRmZCIsImF1dGhfdGltZSI6MTU2NDA0NDkzNSwiaWRwIjoiRmFjZWJvb2siLCJhbXIiOlsiZXh0ZXJuYWwiXX0.0-ZVeLtCPxi1neVK-SEXry3WF21ggtZ4uZroSoxptdP8WlzIrq1TpTZ-ZI1kNAHZVuf2blwJG4KP46F7qfVEJp41KF296FaK9QNLObRhZgHMOnJ8-DuoV96x3VH2xa60LBdsFJ5G_7lYIMm7izOoIM04WSGEjb1hBL6nWjRIhK2GuNp1kF_ys04eN5mwTPrm2fKGqBSrLXR9KMJ8JFvZxC6Rb6zbDKTzc2Exsn4zbeOr3umqXGGBJchaDDT7JQEzIYOmqQgByIpkPVye5HptxwnJ4phZ0D2IFxKCankCG3T3F0G86FXmuDo5sY41BQSUo9KdaxPqKf0UWS08a-_AwQ"},"$type":"EndSessionRequestValidationLog"}
2019-07-25 11:56:53.982 +03:00 [DBG] Success validating end session request from spa
2019-07-25 11:56:53.998 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 11:56:53.998 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 11:56:53.999 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 11:56:54.000 +03:00 [INF] {"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGRL0GFJJ4:00000002","TimeStamp":"2019-07-25T08:56:53.0000000Z","ProcessId":12488,"LocalIpAddress":"127.0.0.1:1661","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 11:58:57.230 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 11:58:57.329 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-25 11:58:57.335 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-25 11:58:57.336 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-25 11:58:57.336 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-25 11:58:57.336 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-25 11:58:57.336 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-25 11:58:58.990 +03:00 [DBG] Login Url: /Account/Login
2019-07-25 11:58:58.995 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 11:58:58.996 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-25 11:58:58.996 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-25 11:58:58.996 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 11:58:58.996 +03:00 [DBG] Error Url: /home/error
2019-07-25 11:58:58.996 +03:00 [DBG] Error Id Parameter: errorId
2019-07-25 12:08:38.634 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-25 12:08:54.302 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-25 12:08:58.133 +03:00 [DBG] Augmenting SignInContext
2019-07-25 12:08:58.140 +03:00 [DBG] Adding idp claim with value: local
2019-07-25 12:08:58.140 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-25 12:08:58.143 +03:00 [DBG] Adding auth_time claim with value: 1564045738
2019-07-25 12:08:58.172 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-25 12:08:58.247 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOGRPA6R3FO:00000003","TimeStamp":"2019-07-25T09:08:58.0000000Z","ProcessId":8444,"LocalIpAddress":"127.0.0.1:7150","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-25 12:09:02.070 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 12:09:02.073 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 12:09:02.075 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 12:09:02.077 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGRPA6R3FO:00000005","TimeStamp":"2019-07-25T09:09:02.0000000Z","ProcessId":8444,"LocalIpAddress":"127.0.0.1:7150","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 12:09:02.103 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 299
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 265
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-25 12:09:20.607 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 12:09:20.607 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 12:09:20.608 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 12:09:20.608 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGRPA6R3FO:00000006","TimeStamp":"2019-07-25T09:09:20.0000000Z","ProcessId":8444,"LocalIpAddress":"127.0.0.1:7150","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 12:09:20.638 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 299
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 265
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-25 12:09:27.549 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 12:09:27.550 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 12:09:27.550 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 12:09:27.550 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGRPA6R3FO:00000009","TimeStamp":"2019-07-25T09:09:27.0000000Z","ProcessId":8444,"LocalIpAddress":"127.0.0.1:7150","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 12:09:27.555 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 299
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 265
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-25 12:10:31.029 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 12:10:31.030 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 12:10:31.031 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 12:10:31.031 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGRPA6R3FP:00000001","TimeStamp":"2019-07-25T09:10:31.0000000Z","ProcessId":8444,"LocalIpAddress":"127.0.0.1:7150","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 12:10:31.037 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 299
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 265
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-25 12:11:43.928 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 12:11:44.017 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-25 12:11:44.030 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-25 12:11:44.031 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-25 12:11:44.031 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-25 12:11:44.031 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-25 12:11:44.031 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-25 12:11:45.377 +03:00 [DBG] Login Url: /Account/Login
2019-07-25 12:11:45.382 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 12:11:45.382 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-25 12:11:45.382 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-25 12:11:45.382 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 12:11:45.382 +03:00 [DBG] Error Url: /home/error
2019-07-25 12:11:45.382 +03:00 [DBG] Error Id Parameter: errorId
2019-07-25 12:13:22.965 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 12:13:22.967 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 12:13:22.969 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 12:13:24.524 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGS0EKU3C1:00000002","TimeStamp":"2019-07-25T09:13:24.0000000Z","ProcessId":5636,"LocalIpAddress":"127.0.0.1:43655","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-25 12:13:45.549 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 299
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle\EP.15Puzzle.Security\Quickstart\Account\AccountController.cs:line 265
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-25 12:15:00.903 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 12:15:01.022 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-25 12:15:01.035 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-25 12:15:01.036 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-25 12:15:01.036 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-25 12:15:01.037 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-25 12:15:01.037 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-25 12:15:02.571 +03:00 [DBG] Login Url: /Account/Login
2019-07-25 12:15:02.582 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 12:15:02.582 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-25 12:15:02.582 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-25 12:15:02.582 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 12:15:02.582 +03:00 [DBG] Error Url: /home/error
2019-07-25 12:15:02.583 +03:00 [DBG] Error Id Parameter: errorId
2019-07-25 12:15:19.608 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-25 12:15:19.610 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-25 12:15:19.612 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-25 12:15:19.708 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOGS29D8827:00000002","TimeStamp":"2019-07-25T09:15:19.0000000Z","ProcessId":12600,"LocalIpAddress":"127.0.0.1:27859","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
<<<<<<< HEAD
2019-07-26 14:49:07.353 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 14:49:07.500 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 14:49:07.504 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 14:49:07.504 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 14:49:07.504 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 14:49:07.504 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 14:49:07.504 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 14:49:15.203 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 14:49:15.206 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 14:49:15.206 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 14:49:15.206 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 14:49:15.206 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 14:49:15.206 +03:00 [DBG] Error Url: /home/error
2019-07-26 14:49:15.206 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 14:55:50.501 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 14:55:50.573 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 14:55:50.573 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 14:55:50.576 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 14:55:51.133 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 14:55:51.135 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 14:55:51.167 +03:00 [DBG] Start discovery request
2019-07-26 14:55:51.474 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 14:55:51.482 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 14:55:51.482 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 14:55:51.490 +03:00 [DBG] Start authorize request
2019-07-26 14:55:51.600 +03:00 [DBG] No user present in authorize request
2019-07-26 14:55:51.611 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 14:55:51.669 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:55:51.740 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 14:55:51.773 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c2845d41a3be41399acd8e5d5c3f7efe","UiLocales":null,"Nonce":"09986c78da1048eda170058c9b6c6771","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c2845d41a3be41399acd8e5d5c3f7efe","nonce":"09986c78da1048eda170058c9b6c6771"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 14:55:51.821 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 14:55:52.016 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 14:55:52.019 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:55:52.020 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 14:55:52.024 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:56:31.926 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 14:56:32.278 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 14:56:32.278 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:56:32.278 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 14:56:35.682 +03:00 [INF] {"Username":"smolin4u@ya.ru","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOHNT37GRF2:00000004","TimeStamp":"2019-07-26T11:56:35.0000000Z","ProcessId":6812,"LocalIpAddress":"127.0.0.1:29981","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-26 14:56:35.692 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 14:56:35.693 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:56:35.694 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 14:56:35.694 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:56:42.789 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 14:56:42.806 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 14:56:42.806 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:56:42.807 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 14:56:42.820 +03:00 [INF] {"Username":"smolin4u@ya.ru","Endpoint":"UI","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLOHNT37GRF2:00000005","TimeStamp":"2019-07-26T11:56:42.0000000Z","ProcessId":6812,"LocalIpAddress":"127.0.0.1:29981","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-07-26 14:56:42.820 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 14:56:42.820 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:56:42.820 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 14:56:42.821 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:58:07.268 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-26 14:58:36.136 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 14:58:36.139 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 14:58:36.139 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 14:58:36.140 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 14:58:36.141 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 14:58:36.141 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 14:58:36.141 +03:00 [DBG] Start discovery request
2019-07-26 14:58:36.228 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 14:58:36.229 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 14:58:36.229 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 14:58:36.229 +03:00 [DBG] Start authorize request
2019-07-26 14:58:36.229 +03:00 [DBG] No user present in authorize request
2019-07-26 14:58:36.229 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 14:58:36.230 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:58:36.230 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 14:58:36.230 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"631398d789eb4092ae41bfd48788f558","UiLocales":null,"Nonce":"b415a9b158324cd285ccceb466e66cf0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"631398d789eb4092ae41bfd48788f558","nonce":"b415a9b158324cd285ccceb466e66cf0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 14:58:36.230 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 14:58:36.290 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 14:58:36.290 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:58:36.291 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 14:58:36.291 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:58:37.796 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 14:59:01.471 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 14:59:03.621 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHNT37GRF3:00000007","TimeStamp":"2019-07-26T11:59:03.0000000Z","ProcessId":6812,"LocalIpAddress":"127.0.0.1:29981","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 14:59:03.639 +03:00 [DBG] Augmenting SignInContext
2019-07-26 14:59:03.642 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 14:59:03.649 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 14:59:03.658 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 14:59:04.183 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 14:59:04.185 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 14:59:04.185 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 14:59:04.195 +03:00 [DBG] Start authorize callback request
2019-07-26 14:59:04.217 +03:00 [DBG] User in authorize request: 4a967a12-12c1-4bcd-a228-b4309f2ba9a2
2019-07-26 14:59:04.217 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 14:59:04.217 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:59:04.217 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 14:59:04.217 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"631398d789eb4092ae41bfd48788f558","UiLocales":null,"Nonce":"b415a9b158324cd285ccceb466e66cf0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"963ca032de754043daf575589ca1ffee","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"631398d789eb4092ae41bfd48788f558","nonce":"b415a9b158324cd285ccceb466e66cf0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 14:59:04.374 +03:00 [DBG] user_consent grant with value: spa|4a967a12-12c1-4bcd-a228-b4309f2ba9a2 not found in store.
2019-07-26 14:59:04.375 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 14:59:04.375 +03:00 [INF] Showing consent: User has not yet consented
2019-07-26 14:59:04.451 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 14:59:04.452 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:59:04.452 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 14:59:04.452 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:59:09.187 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 14:59:09.271 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 14:59:09.272 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:59:09.272 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 14:59:09.274 +03:00 [INF] {"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOHNT37GRF3:0000000B","TimeStamp":"2019-07-26T11:59:09.0000000Z","ProcessId":6812,"LocalIpAddress":"127.0.0.1:29981","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-26 14:59:09.318 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:59:09.328 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 14:59:09.328 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 14:59:09.328 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 14:59:09.328 +03:00 [DBG] Start authorize callback request
2019-07-26 14:59:09.415 +03:00 [DBG] User in authorize request: 4a967a12-12c1-4bcd-a228-b4309f2ba9a2
2019-07-26 14:59:09.415 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 14:59:09.415 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:59:09.415 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 14:59:09.415 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"631398d789eb4092ae41bfd48788f558","UiLocales":null,"Nonce":"b415a9b158324cd285ccceb466e66cf0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"963ca032de754043daf575589ca1ffee","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"631398d789eb4092ae41bfd48788f558","nonce":"b415a9b158324cd285ccceb466e66cf0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 14:59:09.418 +03:00 [DBG] user_consent grant with value: spa|4a967a12-12c1-4bcd-a228-b4309f2ba9a2 not found in store.
2019-07-26 14:59:09.418 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 14:59:09.429 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-26 14:59:09.431 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-26 14:59:09.437 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 4a967a12-12c1-4bcd-a228-b4309f2ba9a2
2019-07-26 14:59:09.475 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 14:59:09.513 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 14:59:09.513 +03:00 [DBG] Getting claims for access token for subject: 4a967a12-12c1-4bcd-a228-b4309f2ba9a2
2019-07-26 14:59:10.161 +03:00 [DBG] Getting claims for identity token for subject: 4a967a12-12c1-4bcd-a228-b4309f2ba9a2 and client: spa
2019-07-26 14:59:10.161 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 14:59:10.186 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****FXVw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aScA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHNT37GRF3:0000000C","TimeStamp":"2019-07-26T11:59:10.0000000Z","ProcessId":6812,"LocalIpAddress":"127.0.0.1:29981","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 14:59:10.189 +03:00 [INF] Authorize endpoint response
{"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"631398d789eb4092ae41bfd48788f558","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 14:59:10.243 +03:00 [DBG] Augmenting SignInContext
2019-07-26 14:59:10.244 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 14:59:12.111 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 14:59:12.111 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 14:59:12.112 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 14:59:12.112 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 14:59:12.112 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 14:59:12.113 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 14:59:12.113 +03:00 [DBG] Start discovery request
2019-07-26 14:59:12.721 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 14:59:12.721 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 14:59:12.728 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 14:59:12.729 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 14:59:12.730 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 14:59:12.730 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 14:59:12.736 +03:00 [DBG] Start key discovery request
2019-07-26 14:59:12.939 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 14:59:12.940 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 14:59:12.940 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 14:59:12.952 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 14:59:12.952 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 14:59:12.953 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 14:59:12.953 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 14:59:12.955 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 14:59:12.955 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 14:59:12.976 +03:00 [DBG] Start userinfo request
2019-07-26 14:59:12.983 +03:00 [DBG] Bearer token found in header
2019-07-26 14:59:13.190 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:59:13.197 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 14:59:13.201 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 14:59:13.204 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564142349,"exp":1564145949,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","auth_time":1564142343,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-26 14:59:13.222 +03:00 [DBG] Creating userinfo response
2019-07-26 14:59:13.229 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 14:59:13.233 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 14:59:13.236 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 14:59:13.237 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 14:59:13.241 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 14:59:13.241 +03:00 [DBG] End userinfo request
2019-07-26 14:59:13.330 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 14:59:13.331 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 14:59:13.331 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 14:59:13.332 +03:00 [DBG] Rendering check session result
2019-07-26 14:59:16.016 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 14:59:16.017 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 14:59:16.017 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 14:59:16.017 +03:00 [DBG] Start discovery request
2019-07-26 14:59:16.965 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 14:59:16.965 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 14:59:16.965 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 14:59:16.966 +03:00 [DBG] Start key discovery request
2019-07-26 14:59:44.135 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 14:59:44.135 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 14:59:44.135 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 14:59:44.137 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 14:59:44.138 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 14:59:44.138 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 14:59:44.138 +03:00 [DBG] Start discovery request
2019-07-26 14:59:44.254 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 14:59:44.255 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 14:59:44.255 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 14:59:44.255 +03:00 [DBG] Rendering check session result
2019-07-26 15:00:35.970 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:00:35.971 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:00:35.971 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:00:35.972 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:00:35.972 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:00:35.972 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:00:35.972 +03:00 [DBG] Start discovery request
2019-07-26 15:00:36.146 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 15:00:36.147 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 15:00:36.147 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 15:00:36.147 +03:00 [DBG] Rendering check session result
2019-07-26 15:01:09.609 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:01:09.609 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:01:09.609 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:01:09.610 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:01:09.615 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:01:09.615 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:01:09.615 +03:00 [DBG] Start discovery request
2019-07-26 15:01:09.735 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 15:01:09.738 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 15:01:09.738 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 15:01:09.738 +03:00 [DBG] Rendering check session result
2019-07-26 15:07:15.600 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:07:15.613 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:07:15.613 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:07:15.614 +03:00 [DBG] Start discovery request
2019-07-26 15:07:16.101 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 15:07:16.103 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 15:07:16.103 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 15:07:16.103 +03:00 [DBG] Start key discovery request
2019-07-26 15:07:38.227 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:07:38.228 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:07:38.229 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:07:38.230 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:07:38.230 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:07:38.230 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:07:38.230 +03:00 [DBG] Start discovery request
2019-07-26 15:07:38.544 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 15:07:38.544 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 15:07:38.545 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 15:07:38.545 +03:00 [DBG] Rendering check session result
2019-07-26 15:08:01.658 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:08:01.659 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:08:01.659 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:08:01.660 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:08:01.660 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:08:01.661 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:08:01.661 +03:00 [DBG] Start discovery request
2019-07-26 15:08:01.919 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 15:08:01.920 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 15:08:01.920 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 15:08:01.920 +03:00 [DBG] Rendering check session result
2019-07-26 15:08:19.432 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:08:19.433 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:08:19.433 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:08:19.434 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:08:19.435 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:08:19.436 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:08:19.436 +03:00 [DBG] Start discovery request
2019-07-26 15:08:19.648 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 15:08:19.649 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 15:08:19.649 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 15:08:19.649 +03:00 [DBG] Rendering check session result
2019-07-26 15:12:01.443 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-26 15:12:01.461 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-26 15:12:01.462 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-26 15:12:01.486 +03:00 [DBG] Processing signout request for 4a967a12-12c1-4bcd-a228-b4309f2ba9a2
2019-07-26 15:12:01.556 +03:00 [DBG] Start end session request validation
2019-07-26 15:12:01.572 +03:00 [DBG] Start identity token validation
2019-07-26 15:12:01.576 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:12:01.576 +03:00 [DBG] Client found: spa / SPA Client
2019-07-26 15:12:01.620 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 15:12:01.630 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564142350,"exp":1564142650,"iss":"http://localhost:5000","aud":"spa","nonce":"b415a9b158324cd285ccceb466e66cf0","iat":1564142350,"at_hash":"FO1Gm4934GiOFmZd5-EuFg","sid":"963ca032de754043daf575589ca1ffee","sub":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","auth_time":1564142343,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-26 15:12:01.639 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQxNDIzNTAsImV4cCI6MTU2NDE0MjY1MCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJiNDE1YTliMTU4MzI0Y2QyODVjY2NlYjQ2NmU2NmNmMCIsImlhdCI6MTU2NDE0MjM1MCwiYXRfaGFzaCI6IkZPMUdtNDkzNEdpT0ZtWmQ1LUV1RmciLCJzaWQiOiI5NjNjYTAzMmRlNzU0MDQzZGFmNTc1NTg5Y2ExZmZlZSIsInN1YiI6IjRhOTY3YTEyLTEyYzEtNGJjZC1hMjI4LWI0MzA5ZjJiYTlhMiIsImF1dGhfdGltZSI6MTU2NDE0MjM0MywiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.z6s7OV4drg8AMIvphgpQao2Igm8boPYtZDQz8keXvkA8SIybgsHF5hdKYldIOJJkWfjZzLo5tD9LcC1Mxv4edalUBaSrvDfv6iBVhCnBr3ccSdLlcB2RNrp2xrL_UFWOZcBzahgKghANSvhGMPFxCo18Gj_cks5YSg8hqEn8PNVr_Sh7gziuZR2aNoolwucIMTJ7ox2lAWqhe3xyDC1-OlMv6KR2MfmztVzWU0uBg89guYJtVTdptjmliB4bbyCIKhfK_DIPFOSpTSbblAlIeg3ETa_nbWjqyTLa8eAss6vn0z3vrtR_j_3yk1E8p9WYdIO6s5Z5rLfAltA6efFXVw"},"$type":"EndSessionRequestValidationLog"}
2019-07-26 15:12:01.639 +03:00 [DBG] Success validating end session request from spa
2019-07-26 15:12:01.794 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 15:12:01.795 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 15:12:01.797 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 15:12:01.798 +03:00 [INF] {"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHNT37GRF5:00000002","TimeStamp":"2019-07-26T12:12:01.0000000Z","ProcessId":6812,"LocalIpAddress":"127.0.0.1:29981","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 15:12:05.144 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:12:05.145 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:12:05.146 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:12:05.146 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:12:05.146 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:12:05.147 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:12:05.147 +03:00 [DBG] Start discovery request
2019-07-26 15:12:05.203 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 15:12:05.208 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 15:12:05.209 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 15:12:05.209 +03:00 [DBG] Start authorize request
2019-07-26 15:12:05.209 +03:00 [DBG] No user present in authorize request
2019-07-26 15:12:05.209 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 15:12:05.209 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:12:05.209 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 15:12:05.211 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e439d7302731420c935a63688ed4efa1","UiLocales":null,"Nonce":"56d981ca1df44e4484678b6ad2b1df7a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e439d7302731420c935a63688ed4efa1","nonce":"56d981ca1df44e4484678b6ad2b1df7a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 15:12:05.211 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 15:12:05.251 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 15:12:05.252 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:12:05.252 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 15:12:05.252 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:20:35.702 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 15:20:37.250 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 15:20:37.306 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHNT37GRF6:00000003","TimeStamp":"2019-07-26T12:20:37.0000000Z","ProcessId":6812,"LocalIpAddress":"127.0.0.1:29981","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 15:20:37.312 +03:00 [DBG] Augmenting SignInContext
2019-07-26 15:20:37.312 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 15:20:37.313 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 15:20:37.313 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 15:20:37.335 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 15:20:37.336 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 15:20:37.336 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 15:20:37.336 +03:00 [DBG] Start authorize callback request
2019-07-26 15:20:37.337 +03:00 [DBG] User in authorize request: 4a967a12-12c1-4bcd-a228-b4309f2ba9a2
2019-07-26 15:20:37.337 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 15:20:37.337 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:20:37.338 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 15:20:37.338 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"e439d7302731420c935a63688ed4efa1","UiLocales":null,"Nonce":"56d981ca1df44e4484678b6ad2b1df7a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e9b0ee2eda6b9baa62f19313f227c504","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"e439d7302731420c935a63688ed4efa1","nonce":"56d981ca1df44e4484678b6ad2b1df7a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 15:20:37.358 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-26 15:20:37.358 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 15:20:37.358 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 15:20:37.358 +03:00 [DBG] Getting claims for access token for subject: 4a967a12-12c1-4bcd-a228-b4309f2ba9a2
2019-07-26 15:20:37.387 +03:00 [DBG] Getting claims for identity token for subject: 4a967a12-12c1-4bcd-a228-b4309f2ba9a2 and client: spa
2019-07-26 15:20:37.387 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 15:20:37.406 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****K-Hw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_pog","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHNT37GRF6:00000004","TimeStamp":"2019-07-26T12:20:37.0000000Z","ProcessId":6812,"LocalIpAddress":"127.0.0.1:29981","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 15:20:37.406 +03:00 [INF] Authorize endpoint response
{"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"e439d7302731420c935a63688ed4efa1","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 15:20:37.407 +03:00 [DBG] Augmenting SignInContext
2019-07-26 15:20:37.407 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 15:20:39.772 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:20:39.780 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:20:39.781 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:20:39.781 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:20:39.781 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:20:39.781 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:20:39.781 +03:00 [DBG] Start discovery request
2019-07-26 15:20:39.977 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 15:20:39.980 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:20:39.980 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:20:39.980 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 15:20:39.980 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 15:20:39.981 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 15:20:39.982 +03:00 [DBG] Start key discovery request
2019-07-26 15:20:40.063 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 15:20:40.064 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:20:40.064 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:20:40.242 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 15:20:40.243 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:20:40.243 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:20:40.243 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 15:20:40.244 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 15:20:40.244 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 15:20:40.244 +03:00 [DBG] Start userinfo request
2019-07-26 15:20:40.244 +03:00 [DBG] Bearer token found in header
2019-07-26 15:20:40.246 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:20:40.246 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:20:40.249 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 15:20:40.249 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564143637,"exp":1564147237,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","auth_time":1564143637,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-26 15:20:40.249 +03:00 [DBG] Creating userinfo response
2019-07-26 15:20:40.249 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 15:20:40.249 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 15:20:40.249 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 15:20:40.249 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 15:20:40.292 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 15:20:40.292 +03:00 [DBG] End userinfo request
2019-07-26 15:20:40.474 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 15:20:40.474 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 15:20:40.475 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 15:20:40.475 +03:00 [DBG] Rendering check session result
2019-07-26 15:20:44.308 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-26 15:20:44.308 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-26 15:20:44.309 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-26 15:20:44.312 +03:00 [DBG] Processing signout request for 4a967a12-12c1-4bcd-a228-b4309f2ba9a2
2019-07-26 15:20:44.312 +03:00 [DBG] Start end session request validation
2019-07-26 15:20:44.312 +03:00 [DBG] Start identity token validation
2019-07-26 15:20:44.312 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:20:44.312 +03:00 [DBG] Client found: spa / SPA Client
2019-07-26 15:20:44.316 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 15:20:44.317 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564143637,"exp":1564143937,"iss":"http://localhost:5000","aud":"spa","nonce":"56d981ca1df44e4484678b6ad2b1df7a","iat":1564143637,"at_hash":"SUrUSjmWkhgvUUW9XLiriw","sid":"e9b0ee2eda6b9baa62f19313f227c504","sub":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","auth_time":1564143637,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-26 15:20:44.317 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQxNDM2MzcsImV4cCI6MTU2NDE0MzkzNywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1NmQ5ODFjYTFkZjQ0ZTQ0ODQ2NzhiNmFkMmIxZGY3YSIsImlhdCI6MTU2NDE0MzYzNywiYXRfaGFzaCI6IlNVclVTam1Xa2hndlVVVzlYTGlyaXciLCJzaWQiOiJlOWIwZWUyZWRhNmI5YmFhNjJmMTkzMTNmMjI3YzUwNCIsInN1YiI6IjRhOTY3YTEyLTEyYzEtNGJjZC1hMjI4LWI0MzA5ZjJiYTlhMiIsImF1dGhfdGltZSI6MTU2NDE0MzYzNywiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.uKYUnB4FBH-2UhtRnyJRX08bcMNQC2ejD0qIBhbFKSbUXszdizUGqQYiyknY4nCkB7df3zNxQDCgOF2y6d3TX_kZedaOl0wKo8PFmXsEKY2YH9JlP2PPLNPceOE_XbT8aa_bVGNVZpfKPGZ6V6MpF50EkR1QXf7jCqBRGwQ70RrZkFBMHTsTRVy7gmoyg22pf4TZWKj6RsMiDK96NfPGsFj8g0ctL-l09NHNA8OCG0DE-MfHpUFoVB0At09CtJ6ECxEHiUPtqRu28SeF49dEN5AEYcMPfY4lA6dBAV8LLo3VK12orQjHCl1u4j4PwYg81QuECa2eGQi-ksx5rLK-Hw"},"$type":"EndSessionRequestValidationLog"}
2019-07-26 15:20:44.317 +03:00 [DBG] Success validating end session request from spa
2019-07-26 15:20:44.466 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 15:20:44.466 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 15:20:44.467 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 15:20:44.467 +03:00 [INF] {"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHNT37GRF6:0000000B","TimeStamp":"2019-07-26T12:20:44.0000000Z","ProcessId":6812,"LocalIpAddress":"127.0.0.1:29981","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 15:20:48.322 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:20:48.323 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:20:48.323 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:20:48.323 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:20:48.324 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:20:48.324 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:20:48.324 +03:00 [DBG] Start discovery request
2019-07-26 15:20:48.414 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 15:20:48.420 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 15:20:48.421 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 15:20:48.421 +03:00 [DBG] Start authorize request
2019-07-26 15:20:48.422 +03:00 [DBG] No user present in authorize request
2019-07-26 15:20:48.422 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 15:20:48.422 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:20:48.423 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 15:20:48.423 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c723881bc6c44e1bb5778b58d986e85d","UiLocales":null,"Nonce":"7fdc939e7b1e435ba5d9fd77613ff65b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c723881bc6c44e1bb5778b58d986e85d","nonce":"7fdc939e7b1e435ba5d9fd77613ff65b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 15:20:48.423 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 15:20:48.503 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 15:20:48.505 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:20:48.507 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 15:20:48.507 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:20:50.149 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 15:20:50.715 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 15:20:50.731 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHNT37GRF6:00000011","TimeStamp":"2019-07-26T12:20:50.0000000Z","ProcessId":6812,"LocalIpAddress":"127.0.0.1:29981","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 15:20:50.732 +03:00 [DBG] Augmenting SignInContext
2019-07-26 15:20:50.732 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 15:20:50.733 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 15:20:50.733 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 15:20:50.831 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 15:20:50.832 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 15:20:50.832 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 15:20:50.832 +03:00 [DBG] Start authorize callback request
2019-07-26 15:20:50.832 +03:00 [DBG] User in authorize request: 4a967a12-12c1-4bcd-a228-b4309f2ba9a2
2019-07-26 15:20:50.832 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 15:20:50.832 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:20:50.833 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 15:20:50.833 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"c723881bc6c44e1bb5778b58d986e85d","UiLocales":null,"Nonce":"7fdc939e7b1e435ba5d9fd77613ff65b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6989fcefe98a6ab42e25035e3cf19eef","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"c723881bc6c44e1bb5778b58d986e85d","nonce":"7fdc939e7b1e435ba5d9fd77613ff65b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 15:20:50.844 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-26 15:20:50.844 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 15:20:50.844 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 15:20:50.844 +03:00 [DBG] Getting claims for access token for subject: 4a967a12-12c1-4bcd-a228-b4309f2ba9a2
2019-07-26 15:20:50.867 +03:00 [DBG] Getting claims for identity token for subject: 4a967a12-12c1-4bcd-a228-b4309f2ba9a2 and client: spa
2019-07-26 15:20:50.867 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 15:20:50.885 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****FSBQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****67ZA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHNT37GRF6:00000012","TimeStamp":"2019-07-26T12:20:50.0000000Z","ProcessId":6812,"LocalIpAddress":"127.0.0.1:29981","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 15:20:50.885 +03:00 [INF] Authorize endpoint response
{"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"c723881bc6c44e1bb5778b58d986e85d","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 15:20:50.886 +03:00 [DBG] Augmenting SignInContext
2019-07-26 15:20:50.886 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 15:20:52.949 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:20:52.950 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:20:52.951 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:20:52.952 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:20:52.952 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:20:52.952 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:20:52.952 +03:00 [DBG] Start discovery request
2019-07-26 15:20:53.223 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 15:20:53.224 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:20:53.224 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:20:53.224 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 15:20:53.224 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 15:20:53.224 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 15:20:53.225 +03:00 [DBG] Start key discovery request
2019-07-26 15:20:53.370 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 15:20:53.370 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:20:53.371 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:20:53.432 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 15:20:53.432 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:20:53.432 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:20:53.432 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 15:20:53.433 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 15:20:53.433 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 15:20:53.433 +03:00 [DBG] Start userinfo request
2019-07-26 15:20:53.433 +03:00 [DBG] Bearer token found in header
2019-07-26 15:20:53.435 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:20:53.435 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:20:53.439 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 15:20:53.440 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564143650,"exp":1564147250,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","auth_time":1564143650,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-26 15:20:53.441 +03:00 [DBG] Creating userinfo response
2019-07-26 15:20:53.441 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 15:20:53.441 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 15:20:53.441 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 15:20:53.441 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 15:20:53.450 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 15:20:53.450 +03:00 [DBG] End userinfo request
2019-07-26 15:20:53.571 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 15:20:53.571 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 15:20:53.571 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 15:20:53.571 +03:00 [DBG] Rendering check session result
2019-07-26 15:27:47.013 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 15:27:47.097 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 15:27:47.105 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 15:27:47.105 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 15:27:47.105 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 15:27:47.105 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 15:27:47.106 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 15:27:50.670 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 15:27:50.677 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 15:27:50.677 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 15:27:50.677 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 15:27:50.677 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 15:27:50.677 +03:00 [DBG] Error Url: /home/error
2019-07-26 15:27:50.677 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 15:28:06.716 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 15:28:06.720 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 15:28:06.722 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 15:28:06.882 +03:00 [INF] {"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHOILKS8G3:00000002","TimeStamp":"2019-07-26T12:28:06.0000000Z","ProcessId":1376,"LocalIpAddress":"127.0.0.1:16352","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 15:28:07.087 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-26 15:28:07.102 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-26 15:28:07.103 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-26 15:28:07.112 +03:00 [DBG] Processing signout callback request
2019-07-26 15:28:07.169 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:28:07.169 +03:00 [DBG] No client front-channel logout URLs
2019-07-26 15:28:07.170 +03:00 [DBG] No client back-channel logout URLs
2019-07-26 15:28:07.170 +03:00 [INF] Successful signout callback.
2019-07-26 15:28:07.170 +03:00 [DBG] No client front-channel iframe urls
2019-07-26 15:28:07.170 +03:00 [DBG] No client back-channel iframe urls
2019-07-26 15:28:09.921 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 15:28:33.351 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 15:28:37.343 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 15:28:41.677 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHOILKS8G3:00000006","TimeStamp":"2019-07-26T12:28:41.0000000Z","ProcessId":1376,"LocalIpAddress":"127.0.0.1:16352","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 15:28:41.694 +03:00 [DBG] Augmenting SignInContext
2019-07-26 15:28:41.698 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 15:28:41.704 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 15:28:41.705 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 15:29:39.368 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 15:29:39.368 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 15:29:39.368 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 15:29:39.369 +03:00 [INF] {"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHOILKS8G3:00000007","TimeStamp":"2019-07-26T12:29:39.0000000Z","ProcessId":1376,"LocalIpAddress":"127.0.0.1:16352","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 15:29:41.964 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 15:31:29.949 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 15:31:32.592 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 15:32:26.018 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHOILKS8G3:0000000B","TimeStamp":"2019-07-26T12:32:26.0000000Z","ProcessId":1376,"LocalIpAddress":"127.0.0.1:16352","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 15:32:26.021 +03:00 [DBG] Augmenting SignInContext
2019-07-26 15:32:26.021 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 15:32:26.022 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 15:32:26.022 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 16:02:20.150 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 16:02:20.258 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 16:02:20.263 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 16:02:20.263 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 16:02:20.263 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 16:02:20.263 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 16:02:20.263 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 16:02:22.479 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 16:02:22.482 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 16:02:22.482 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 16:02:22.482 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 16:02:22.482 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 16:02:22.482 +03:00 [DBG] Error Url: /home/error
2019-07-26 16:02:22.482 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 16:02:36.131 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 16:03:34.843 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 16:03:39.404 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 16:03:41.536 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 16:03:46.142 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHP5VG3NOK:00000007","TimeStamp":"2019-07-26T13:03:46.0000000Z","ProcessId":3504,"LocalIpAddress":"127.0.0.1:24699","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 16:03:46.178 +03:00 [DBG] Augmenting SignInContext
2019-07-26 16:03:46.183 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 16:03:46.193 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 16:03:46.207 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 16:15:04.467 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 16:15:04.582 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 16:15:04.595 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 16:15:04.595 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 16:15:04.595 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 16:15:04.595 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 16:15:04.595 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 16:15:06.314 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 16:15:06.318 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 16:15:06.318 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 16:15:06.323 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 16:15:06.323 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 16:15:06.323 +03:00 [DBG] Error Url: /home/error
2019-07-26 16:15:06.323 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 16:15:11.774 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 16:15:36.627 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 16:15:38.339 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 16:15:41.402 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHPD39JHP1:00000004","TimeStamp":"2019-07-26T13:15:41.0000000Z","ProcessId":9756,"LocalIpAddress":"127.0.0.1:24762","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 16:15:41.434 +03:00 [DBG] Augmenting SignInContext
2019-07-26 16:15:41.442 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 16:15:41.452 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 16:15:41.462 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 16:16:05.958 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 16:16:07.195 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 16:16:07.338 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHPD39JHP2:00000006","TimeStamp":"2019-07-26T13:16:07.0000000Z","ProcessId":9756,"LocalIpAddress":"127.0.0.1:24762","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 16:16:07.338 +03:00 [DBG] Augmenting SignInContext
2019-07-26 16:16:07.339 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 16:16:07.340 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 16:16:07.340 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 16:17:14.514 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 16:17:15.321 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 16:17:15.396 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHPD39JHP1:00000009","TimeStamp":"2019-07-26T13:17:15.0000000Z","ProcessId":9756,"LocalIpAddress":"127.0.0.1:24762","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 16:17:15.396 +03:00 [DBG] Augmenting SignInContext
2019-07-26 16:17:15.396 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 16:17:15.397 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 16:17:15.397 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 16:17:33.012 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 16:17:33.013 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 16:17:33.020 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 16:17:33.021 +03:00 [INF] {"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHPD39JHP2:0000000A","TimeStamp":"2019-07-26T13:17:33.0000000Z","ProcessId":9756,"LocalIpAddress":"127.0.0.1:24762","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 16:17:35.980 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 16:17:37.103 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 16:17:37.761 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 16:17:37.826 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHPD39JHP2:0000000D","TimeStamp":"2019-07-26T13:17:37.0000000Z","ProcessId":9756,"LocalIpAddress":"127.0.0.1:24762","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 16:17:37.826 +03:00 [DBG] Augmenting SignInContext
2019-07-26 16:17:37.826 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 16:17:37.827 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 16:17:37.827 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 16:18:09.263 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 16:18:10.436 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 16:18:10.494 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHPD39JHP1:00000010","TimeStamp":"2019-07-26T13:18:10.0000000Z","ProcessId":9756,"LocalIpAddress":"127.0.0.1:24762","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 16:18:10.495 +03:00 [DBG] Augmenting SignInContext
2019-07-26 16:18:10.495 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 16:18:10.496 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 16:18:10.496 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 16:19:34.849 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 16:19:36.228 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 16:19:36.300 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHPD39JHP2:00000012","TimeStamp":"2019-07-26T13:19:36.0000000Z","ProcessId":9756,"LocalIpAddress":"127.0.0.1:24762","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 16:19:36.300 +03:00 [DBG] Augmenting SignInContext
2019-07-26 16:19:36.300 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 16:19:36.301 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 16:19:36.301 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 16:29:21.309 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 16:29:21.397 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 16:29:21.403 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 16:29:21.403 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 16:29:21.403 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 16:29:21.403 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 16:29:21.403 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 16:29:25.665 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 16:29:25.669 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 16:29:25.670 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 16:29:25.670 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 16:29:25.670 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 16:29:25.670 +03:00 [DBG] Error Url: /home/error
2019-07-26 16:29:25.670 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 16:34:16.768 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 16:34:16.854 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 16:34:16.859 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 16:34:16.859 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 16:34:16.859 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 16:34:16.859 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 16:34:16.859 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 16:34:18.561 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 16:34:18.567 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 16:34:18.567 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 16:34:18.567 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 16:34:18.567 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 16:34:18.567 +03:00 [DBG] Error Url: /home/error
2019-07-26 16:34:18.567 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 16:34:25.674 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 16:34:28.156 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 16:34:30.016 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 16:34:32.957 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHPNQM0UQJ:00000004","TimeStamp":"2019-07-26T13:34:32.0000000Z","ProcessId":4904,"LocalIpAddress":"127.0.0.1:19981","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 16:34:32.988 +03:00 [DBG] Augmenting SignInContext
2019-07-26 16:34:32.991 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 16:34:33.005 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 16:34:33.014 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 16:35:23.782 +03:00 [ERR] The view 'ChangeUsername' was not found. Searched locations: ["/Views/External/ChangeUsername.cshtml","/Views/Shared/ChangeUsername.cshtml","/Pages/Shared/ChangeUsername.cshtml"]
2019-07-26 16:35:23.830 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The view 'ChangeUsername' was not found. The following locations were searched:
/Views/External/ChangeUsername.cshtml
/Views/Shared/ChangeUsername.cshtml
/Pages/Shared/ChangeUsername.cshtml
   at Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(IEnumerable`1 originalLocations)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-26 16:38:10.199 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 16:38:10.324 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 16:38:10.331 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 16:38:10.331 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 16:38:10.332 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 16:38:10.332 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 16:38:10.332 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 16:38:12.063 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 16:38:12.068 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 16:38:12.068 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 16:38:12.069 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 16:38:12.069 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 16:38:12.069 +03:00 [DBG] Error Url: /home/error
2019-07-26 16:38:12.069 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 16:38:25.594 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 16:38:27.707 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 16:38:29.294 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 16:38:31.951 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHPQ07LHAI:00000004","TimeStamp":"2019-07-26T13:38:31.0000000Z","ProcessId":9116,"LocalIpAddress":"127.0.0.1:40078","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 16:38:31.984 +03:00 [DBG] Augmenting SignInContext
2019-07-26 16:38:31.988 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 16:38:32.000 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 16:38:32.008 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 16:49:40.107 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 16:49:40.206 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 16:49:40.211 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 16:49:40.211 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 16:49:40.211 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 16:49:40.211 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 16:49:40.211 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 16:49:42.317 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 16:49:42.319 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 16:49:42.320 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 16:49:42.320 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 16:49:42.320 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 16:49:42.320 +03:00 [DBG] Error Url: /home/error
2019-07-26 16:49:42.320 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 16:49:53.635 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 16:49:57.089 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 16:49:59.647 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 16:50:04.860 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHQ0DRH4PF:00000004","TimeStamp":"2019-07-26T13:50:04.0000000Z","ProcessId":9052,"LocalIpAddress":"127.0.0.1:42863","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 16:50:04.924 +03:00 [DBG] Augmenting SignInContext
2019-07-26 16:50:04.928 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 16:50:04.952 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 16:50:04.964 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 18:39:28.652 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 18:39:28.781 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 18:39:28.786 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 18:39:28.786 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 18:39:28.786 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 18:39:28.787 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 18:39:28.787 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 18:39:31.675 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 18:39:31.679 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 18:39:31.679 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 18:39:31.679 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 18:39:31.679 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 18:39:31.679 +03:00 [DBG] Error Url: /home/error
2019-07-26 18:39:31.679 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 18:39:46.407 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 18:39:50.890 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 18:39:53.079 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 18:39:57.329 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHRTPGAAQT:00000003","TimeStamp":"2019-07-26T15:39:57.0000000Z","ProcessId":5984,"LocalIpAddress":"127.0.0.1:28162","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 18:39:57.364 +03:00 [DBG] Augmenting SignInContext
2019-07-26 18:39:57.367 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 18:39:57.380 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 18:39:57.397 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 18:50:03.917 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 18:50:03.986 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 18:50:03.991 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 18:50:03.991 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 18:50:03.991 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 18:50:03.991 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 18:50:03.991 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 18:50:06.092 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 18:50:06.099 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 18:50:06.100 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 18:50:06.100 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 18:50:06.100 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 18:50:06.100 +03:00 [DBG] Error Url: /home/error
2019-07-26 18:50:06.101 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 18:51:09.866 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 18:51:09.957 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 18:51:09.965 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 18:51:09.965 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 18:51:09.966 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 18:51:09.966 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 18:51:09.966 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 18:51:12.465 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 18:51:12.488 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 18:51:12.488 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 18:51:12.488 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 18:51:12.488 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 18:51:12.488 +03:00 [DBG] Error Url: /home/error
2019-07-26 18:51:12.488 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 18:52:32.197 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 18:52:32.200 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 18:52:32.202 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 18:52:32.258 +03:00 [INF] {"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHS4ABVDS4:00000002","TimeStamp":"2019-07-26T15:52:32.0000000Z","ProcessId":5572,"LocalIpAddress":"127.0.0.1:17712","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 18:52:35.111 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 18:52:37.040 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 18:52:38.474 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 18:52:41.813 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHS4ABVDS4:00000009","TimeStamp":"2019-07-26T15:52:41.0000000Z","ProcessId":5572,"LocalIpAddress":"127.0.0.1:17712","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 18:52:41.831 +03:00 [DBG] Augmenting SignInContext
2019-07-26 18:52:41.835 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 18:52:41.841 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 18:52:41.841 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 18:53:00.394 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 18:54:14.376 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 18:54:14.464 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 18:54:14.471 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 18:54:14.471 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 18:54:14.472 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 18:54:14.472 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 18:54:14.472 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 18:54:17.237 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 18:54:17.241 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 18:54:17.241 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 18:54:17.241 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 18:54:17.241 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 18:54:17.241 +03:00 [DBG] Error Url: /home/error
2019-07-26 18:54:17.241 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 18:54:23.418 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 18:54:26.060 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 18:54:27.579 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 18:54:30.378 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHS61LVR2C:00000004","TimeStamp":"2019-07-26T15:54:30.0000000Z","ProcessId":4868,"LocalIpAddress":"127.0.0.1:3094","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 18:54:30.417 +03:00 [DBG] Augmenting SignInContext
2019-07-26 18:54:30.425 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 18:54:30.441 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 18:54:30.450 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 18:54:32.774 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 18:54:45.775 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 18:54:45.776 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 18:54:45.777 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 18:54:45.778 +03:00 [INF] {"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHS61LVR2C:00000006","TimeStamp":"2019-07-26T15:54:45.0000000Z","ProcessId":4868,"LocalIpAddress":"127.0.0.1:3094","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 18:54:48.327 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 18:54:49.240 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 18:54:49.804 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 18:54:49.886 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHS61LVR2C:00000009","TimeStamp":"2019-07-26T15:54:49.0000000Z","ProcessId":4868,"LocalIpAddress":"127.0.0.1:3094","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 18:54:49.887 +03:00 [DBG] Augmenting SignInContext
2019-07-26 18:54:49.887 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 18:54:49.887 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 18:54:49.887 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 18:54:51.220 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 18:55:54.642 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 18:55:54.718 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 18:55:54.736 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 18:55:54.736 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 18:55:54.736 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 18:55:54.736 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 18:55:54.736 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 18:55:56.380 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 18:55:56.387 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 18:55:56.387 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 18:55:56.388 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 18:55:56.388 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 18:55:56.388 +03:00 [DBG] Error Url: /home/error
2019-07-26 18:55:56.388 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 18:56:11.027 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 18:56:19.232 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 18:56:20.647 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 18:56:23.791 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHS6V71VLP:00000004","TimeStamp":"2019-07-26T15:56:23.0000000Z","ProcessId":2208,"LocalIpAddress":"127.0.0.1:44925","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 18:56:23.841 +03:00 [DBG] Augmenting SignInContext
2019-07-26 18:56:23.845 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 18:56:23.860 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 18:56:23.877 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 18:56:27.790 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 19:02:07.909 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 19:02:08.005 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 19:02:08.010 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 19:02:08.010 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 19:02:08.010 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 19:02:08.010 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 19:02:08.010 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 19:02:09.360 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 19:02:09.363 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 19:02:09.363 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 19:02:09.363 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 19:02:09.363 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 19:02:09.363 +03:00 [DBG] Error Url: /home/error
2019-07-26 19:02:09.363 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 19:02:12.576 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 19:02:15.463 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 19:02:17.277 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 19:02:20.949 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHSAECQKGM:00000004","TimeStamp":"2019-07-26T16:02:20.0000000Z","ProcessId":7788,"LocalIpAddress":"127.0.0.1:38814","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 19:02:20.987 +03:00 [DBG] Augmenting SignInContext
2019-07-26 19:02:20.992 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 19:02:21.004 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 19:02:21.012 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 19:15:41.660 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 19:15:43.078 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 19:15:43.083 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 19:15:43.083 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 19:15:43.083 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 19:15:43.083 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 19:15:43.083 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 19:16:03.401 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 19:16:03.403 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 19:16:03.403 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 19:16:03.403 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 19:16:03.404 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 19:16:03.404 +03:00 [DBG] Error Url: /home/error
2019-07-26 19:16:03.404 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 19:16:25.018 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 19:16:35.469 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 19:16:39.777 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 19:16:47.390 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHSI4QB8D8:00000004","TimeStamp":"2019-07-26T16:16:47.0000000Z","ProcessId":6732,"LocalIpAddress":"127.0.0.1:26043","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 19:16:47.424 +03:00 [DBG] Augmenting SignInContext
2019-07-26 19:16:47.428 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 19:16:47.438 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 19:16:47.448 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 19:17:00.865 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 19:17:00.884 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 19:17:00.886 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 19:17:00.887 +03:00 [INF] {"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHSI4QB8D8:00000005","TimeStamp":"2019-07-26T16:17:00.0000000Z","ProcessId":6732,"LocalIpAddress":"127.0.0.1:26043","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 19:17:14.700 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 19:17:33.295 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 19:17:33.886 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 19:17:33.944 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHSI4QB8D8:00000008","TimeStamp":"2019-07-26T16:17:33.0000000Z","ProcessId":6732,"LocalIpAddress":"127.0.0.1:26043","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 19:17:33.945 +03:00 [DBG] Augmenting SignInContext
2019-07-26 19:17:33.945 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 19:17:33.945 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 19:17:33.945 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 19:17:48.035 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 19:17:48.035 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 19:17:48.035 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 19:17:48.035 +03:00 [INF] {"SubjectId":"4a967a12-12c1-4bcd-a228-b4309f2ba9a2","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHSI4QB8D8:00000009","TimeStamp":"2019-07-26T16:17:48.0000000Z","ProcessId":6732,"LocalIpAddress":"127.0.0.1:26043","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 19:18:36.297 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 19:18:37.654 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 19:18:38.253 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 19:18:43.702 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHSI4QB8D8:0000000C","TimeStamp":"2019-07-26T16:18:43.0000000Z","ProcessId":6732,"LocalIpAddress":"127.0.0.1:26043","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 19:18:43.702 +03:00 [DBG] Augmenting SignInContext
2019-07-26 19:18:43.702 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 19:18:43.703 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 19:18:43.704 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 19:19:40.111 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 19:19:40.111 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 19:19:40.112 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 19:19:40.112 +03:00 [INF] {"SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHSI4QB8D8:0000000D","TimeStamp":"2019-07-26T16:19:40.0000000Z","ProcessId":6732,"LocalIpAddress":"127.0.0.1:26043","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 19:30:38.286 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 19:30:38.358 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 19:30:38.362 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 19:30:38.362 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 19:30:38.362 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 19:30:38.363 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 19:30:38.363 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 19:30:40.054 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 19:30:40.057 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 19:30:40.057 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 19:30:40.057 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 19:30:40.059 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 19:30:40.059 +03:00 [DBG] Error Url: /home/error
2019-07-26 19:30:40.059 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 19:30:55.756 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 19:30:58.848 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 19:31:00.324 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 19:31:03.437 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHSQC5D3AF:00000004","TimeStamp":"2019-07-26T16:31:03.0000000Z","ProcessId":7156,"LocalIpAddress":"127.0.0.1:31097","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 19:31:03.471 +03:00 [DBG] Augmenting SignInContext
2019-07-26 19:31:03.474 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 19:31:03.485 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 19:31:03.493 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 19:54:20.880 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 19:54:20.991 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 19:54:20.996 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 19:54:20.996 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 19:54:20.996 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 19:54:20.996 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 19:54:20.996 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 19:54:23.198 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 19:54:23.200 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 19:54:23.200 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 19:54:23.201 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 19:54:23.201 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 19:54:23.201 +03:00 [DBG] Error Url: /home/error
2019-07-26 19:54:23.201 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 19:55:24.202 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 19:55:27.426 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 19:55:29.227 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 19:55:33.040 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHT7K8NEQ7:00000006","TimeStamp":"2019-07-26T16:55:33.0000000Z","ProcessId":572,"LocalIpAddress":"127.0.0.1:17996","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 19:55:33.081 +03:00 [DBG] Augmenting SignInContext
2019-07-26 19:55:33.085 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 19:55:33.100 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 19:55:33.120 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:02:54.775 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 20:02:54.865 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 20:02:54.875 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 20:02:54.875 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 20:02:54.875 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 20:02:54.876 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 20:02:54.876 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 20:02:56.651 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 20:02:56.655 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 20:02:56.655 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 20:02:56.655 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 20:02:56.655 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 20:02:56.656 +03:00 [DBG] Error Url: /home/error
2019-07-26 20:02:56.656 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 20:03:02.030 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 20:03:04.208 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 20:03:05.468 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 20:03:08.577 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHTCDBTUMT:00000004","TimeStamp":"2019-07-26T17:03:08.0000000Z","ProcessId":1204,"LocalIpAddress":"127.0.0.1:10938","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 20:03:08.611 +03:00 [DBG] Augmenting SignInContext
2019-07-26 20:03:08.615 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 20:03:08.627 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 20:03:08.636 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:03:13.692 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 20:03:13.693 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:03:13.694 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 20:03:13.695 +03:00 [INF] {"SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHTCDBTUMT:00000005","TimeStamp":"2019-07-26T17:03:13.0000000Z","ProcessId":1204,"LocalIpAddress":"127.0.0.1:10938","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 20:03:25.002 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 20:03:26.516 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 20:03:26.994 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 20:03:27.053 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHTCDBTUMT:00000008","TimeStamp":"2019-07-26T17:03:27.0000000Z","ProcessId":1204,"LocalIpAddress":"127.0.0.1:10938","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 20:03:27.054 +03:00 [DBG] Augmenting SignInContext
2019-07-26 20:03:27.054 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 20:03:27.054 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 20:03:27.054 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:04:43.331 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 20:04:43.443 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 20:04:43.476 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 20:04:43.476 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 20:04:43.476 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 20:04:43.476 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 20:04:43.477 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 20:04:44.819 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 20:04:44.823 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 20:04:44.823 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 20:04:44.838 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 20:04:44.839 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 20:04:44.839 +03:00 [DBG] Error Url: /home/error
2019-07-26 20:04:44.839 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 20:05:00.469 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 20:05:02.772 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 20:05:03.912 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 20:05:06.271 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHTDDKKG0F:00000004","TimeStamp":"2019-07-26T17:05:06.0000000Z","ProcessId":6512,"LocalIpAddress":"127.0.0.1:1912","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 20:05:06.303 +03:00 [DBG] Augmenting SignInContext
2019-07-26 20:05:06.306 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 20:05:06.316 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 20:05:06.325 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:05:14.572 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 20:31:17.963 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 20:31:18.081 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 20:31:18.087 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 20:31:18.087 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 20:31:18.087 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 20:31:18.087 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 20:31:18.087 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 20:31:20.701 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 20:31:20.711 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 20:31:20.712 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 20:31:20.712 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 20:31:20.712 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 20:31:20.712 +03:00 [DBG] Error Url: /home/error
2019-07-26 20:31:20.712 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 20:31:30.404 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 20:31:30.406 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:31:30.407 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 20:31:30.473 +03:00 [INF] {"SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHTS919M8N:00000002","TimeStamp":"2019-07-26T17:31:30.0000000Z","ProcessId":3692,"LocalIpAddress":"127.0.0.1:29365","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 20:32:17.927 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 20:32:49.685 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 20:32:51.586 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 20:32:55.264 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHTS919M8N:00000005","TimeStamp":"2019-07-26T17:32:55.0000000Z","ProcessId":3692,"LocalIpAddress":"127.0.0.1:29365","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 20:32:55.283 +03:00 [DBG] Augmenting SignInContext
2019-07-26 20:32:55.288 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 20:32:55.301 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 20:32:55.301 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:33:26.946 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 20:33:27.255 +03:00 [WRN] User 3c7fbe02-e331-4da9-934c-6e7c42513fec validation failed: InvalidUserName.
2019-07-26 20:33:33.421 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 20:33:33.422 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:33:33.423 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 20:33:33.423 +03:00 [INF] {"SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHTS919M8N:00000007","TimeStamp":"2019-07-26T17:33:33.0000000Z","ProcessId":3692,"LocalIpAddress":"127.0.0.1:29365","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 20:33:36.947 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 20:33:38.583 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 20:33:39.127 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 20:33:39.181 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHTS919M8N:0000000A","TimeStamp":"2019-07-26T17:33:39.0000000Z","ProcessId":3692,"LocalIpAddress":"127.0.0.1:29365","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 20:33:39.182 +03:00 [DBG] Augmenting SignInContext
2019-07-26 20:33:39.182 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 20:33:39.183 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 20:33:39.183 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:43:12.183 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 20:43:12.339 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 20:43:12.384 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 20:43:12.385 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 20:43:12.385 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 20:43:12.385 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 20:43:12.385 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 20:43:16.878 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 20:43:16.881 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 20:43:16.882 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 20:43:16.882 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 20:43:16.882 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 20:43:16.882 +03:00 [DBG] Error Url: /home/error
2019-07-26 20:43:16.882 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 20:46:12.250 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 20:46:29.215 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 20:46:30.927 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 20:46:33.907 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHU2UEHAVN:00000005","TimeStamp":"2019-07-26T17:46:33.0000000Z","ProcessId":4260,"LocalIpAddress":"127.0.0.1:45316","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 20:46:33.938 +03:00 [DBG] Augmenting SignInContext
2019-07-26 20:46:33.941 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 20:46:33.953 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 20:46:33.963 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:48:09.299 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 20:50:02.942 +03:00 [WRN] User 3c7fbe02-e331-4da9-934c-6e7c42513fec validation failed: InvalidUserName.
2019-07-26 20:51:08.992 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 20:51:08.992 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:51:08.995 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 20:51:08.997 +03:00 [INF] {"SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHU2UEHAVO:00000003","TimeStamp":"2019-07-26T17:51:08.0000000Z","ProcessId":4260,"LocalIpAddress":"127.0.0.1:45316","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 20:53:26.460 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 20:53:26.556 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 20:53:26.561 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 20:53:26.562 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 20:53:26.562 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 20:53:26.562 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 20:53:26.562 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 20:53:29.514 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 20:53:29.518 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 20:53:29.519 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 20:53:29.519 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 20:53:29.519 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 20:53:29.519 +03:00 [DBG] Error Url: /home/error
2019-07-26 20:53:29.519 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 20:53:59.749 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 20:54:02.702 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 20:54:04.610 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 20:54:08.316 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHU8L06037:00000004","TimeStamp":"2019-07-26T17:54:08.0000000Z","ProcessId":8896,"LocalIpAddress":"127.0.0.1:6890","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 20:54:08.345 +03:00 [DBG] Augmenting SignInContext
2019-07-26 20:54:08.349 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 20:54:08.361 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 20:54:08.369 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:54:13.448 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 20:56:25.938 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 20:56:26.063 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 20:56:26.072 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 20:56:26.072 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 20:56:26.072 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 20:56:26.072 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 20:56:26.072 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 20:56:27.745 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 20:56:27.750 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 20:56:27.751 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 20:56:27.751 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 20:56:27.751 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 20:56:27.751 +03:00 [DBG] Error Url: /home/error
2019-07-26 20:56:27.751 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 20:56:49.772 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 20:56:49.775 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:56:49.776 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 20:56:49.821 +03:00 [INF] {"SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHUAABR73P:00000002","TimeStamp":"2019-07-26T17:56:49.0000000Z","ProcessId":4604,"LocalIpAddress":"127.0.0.1:32456","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 20:56:52.117 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 20:56:53.260 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 20:56:54.462 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 20:56:56.912 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHUAABR73P:00000005","TimeStamp":"2019-07-26T17:56:56.0000000Z","ProcessId":4604,"LocalIpAddress":"127.0.0.1:32456","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 20:56:56.933 +03:00 [DBG] Augmenting SignInContext
2019-07-26 20:56:56.937 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 20:56:56.942 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 20:56:56.942 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:57:03.524 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 20:57:44.372 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'EP._15Puzzle.Security.Data.ApplicationDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 5: 'database is locked'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteNonQuery()
   at Microsoft.Data.Sqlite.SqliteConnectionExtensions.ExecuteNonQuery(SqliteConnection connection, String commandText)
   at Microsoft.Data.Sqlite.SqliteTransaction..ctor(SqliteConnection connection, IsolationLevel isolationLevel)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginDbTransaction(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionWithNoPreconditions(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(IsolationLevel isolationLevel, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IReadOnlyList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 5: 'database is locked'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteNonQuery()
   at Microsoft.Data.Sqlite.SqliteConnectionExtensions.ExecuteNonQuery(SqliteConnection connection, String commandText)
   at Microsoft.Data.Sqlite.SqliteTransaction..ctor(SqliteConnection connection, IsolationLevel isolationLevel)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginDbTransaction(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionWithNoPreconditions(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(IsolationLevel isolationLevel, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IReadOnlyList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2019-07-26 20:58:53.673 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 20:58:53.673 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:58:53.673 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 20:58:53.674 +03:00 [INF] {"SubjectId":"3c7fbe02-e331-4da9-934c-6e7c42513fec","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHUAABR73P:00000008","TimeStamp":"2019-07-26T17:58:53.0000000Z","ProcessId":4604,"LocalIpAddress":"127.0.0.1:32456","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 20:59:36.832 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-26 20:59:37.903 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 20:59:38.858 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 20:59:39.867 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"1ed300c1-0bc4-42d4-b094-4a6ad76430f6","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHUAABR73P:0000000E","TimeStamp":"2019-07-26T17:59:39.0000000Z","ProcessId":4604,"LocalIpAddress":"127.0.0.1:32456","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 20:59:39.867 +03:00 [DBG] Augmenting SignInContext
2019-07-26 20:59:39.867 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 20:59:39.869 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 20:59:39.869 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:59:48.621 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 20:59:51.758 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 20:59:51.762 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 20:59:51.762 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 20:59:51.763 +03:00 [INF] {"SubjectId":"1ed300c1-0bc4-42d4-b094-4a6ad76430f6","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHUAABR73P:00000012","TimeStamp":"2019-07-26T17:59:51.0000000Z","ProcessId":4604,"LocalIpAddress":"127.0.0.1:32456","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 21:00:34.023 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 21:00:34.106 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 21:00:34.114 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 21:00:34.115 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 21:00:34.115 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 21:00:34.115 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 21:00:34.115 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 21:00:34.622 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 21:00:34.628 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 21:00:34.628 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 21:00:34.628 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 21:00:34.628 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 21:00:34.628 +03:00 [DBG] Error Url: /home/error
2019-07-26 21:00:34.628 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 21:06:37.288 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 21:06:37.369 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:06:37.369 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:06:37.373 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 21:06:37.920 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 21:06:37.920 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 21:06:37.934 +03:00 [DBG] Start discovery request
2019-07-26 21:06:38.057 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 21:06:38.073 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 21:06:38.073 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 21:06:38.081 +03:00 [DBG] Start authorize request
2019-07-26 21:06:38.144 +03:00 [DBG] No user present in authorize request
2019-07-26 21:06:38.153 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:06:38.209 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:06:38.279 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:06:38.302 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"253c801986b64291a3e6614c1594b158","UiLocales":null,"Nonce":"71295a51ec6b402eaf70816c1545734e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"253c801986b64291a3e6614c1594b158","nonce":"71295a51ec6b402eaf70816c1545734e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 21:06:38.339 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 21:06:38.483 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:06:38.483 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:06:38.484 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:06:38.487 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:06:41.874 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 21:06:43.256 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 21:06:49.604 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHUCK25ER2:00000006","TimeStamp":"2019-07-26T18:06:49.0000000Z","ProcessId":4304,"LocalIpAddress":"127.0.0.1:40963","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 21:06:49.629 +03:00 [DBG] Augmenting SignInContext
2019-07-26 21:06:49.632 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 21:06:49.652 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 21:06:49.661 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 21:07:11.072 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 21:07:11.569 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 21:07:11.570 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 21:07:11.570 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 21:07:11.581 +03:00 [DBG] Start authorize callback request
2019-07-26 21:07:11.614 +03:00 [DBG] User in authorize request: 4c5297ab-cdfe-4f36-8124-8e654ea7c95b
2019-07-26 21:07:11.614 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:07:11.614 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:07:11.614 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:07:11.614 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"253c801986b64291a3e6614c1594b158","UiLocales":null,"Nonce":"71295a51ec6b402eaf70816c1545734e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ff8c9ca84280c44354d0b6c056268674","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"253c801986b64291a3e6614c1594b158","nonce":"71295a51ec6b402eaf70816c1545734e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 21:07:11.723 +03:00 [DBG] user_consent grant with value: spa|4c5297ab-cdfe-4f36-8124-8e654ea7c95b not found in store.
2019-07-26 21:07:11.724 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 21:07:11.724 +03:00 [INF] Showing consent: User has not yet consented
2019-07-26 21:07:11.825 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:07:11.826 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:07:11.826 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:07:11.826 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:07:14.461 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 21:07:14.525 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:07:14.525 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:07:14.526 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:07:14.528 +03:00 [INF] {"SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOHUCK25ER2:0000000C","TimeStamp":"2019-07-26T18:07:14.0000000Z","ProcessId":4304,"LocalIpAddress":"127.0.0.1:40963","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-26 21:07:14.566 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:07:14.572 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 21:07:14.573 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 21:07:14.573 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 21:07:14.573 +03:00 [DBG] Start authorize callback request
2019-07-26 21:07:14.578 +03:00 [DBG] User in authorize request: 4c5297ab-cdfe-4f36-8124-8e654ea7c95b
2019-07-26 21:07:14.578 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:07:14.578 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:07:14.579 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:07:14.579 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"253c801986b64291a3e6614c1594b158","UiLocales":null,"Nonce":"71295a51ec6b402eaf70816c1545734e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ff8c9ca84280c44354d0b6c056268674","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"253c801986b64291a3e6614c1594b158","nonce":"71295a51ec6b402eaf70816c1545734e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 21:07:14.581 +03:00 [DBG] user_consent grant with value: spa|4c5297ab-cdfe-4f36-8124-8e654ea7c95b not found in store.
2019-07-26 21:07:14.581 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 21:07:14.589 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-26 21:07:14.591 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-26 21:07:14.598 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 4c5297ab-cdfe-4f36-8124-8e654ea7c95b
2019-07-26 21:07:14.639 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 21:07:14.670 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 21:07:14.671 +03:00 [DBG] Getting claims for access token for subject: 4c5297ab-cdfe-4f36-8124-8e654ea7c95b
2019-07-26 21:07:15.182 +03:00 [DBG] Getting claims for identity token for subject: 4c5297ab-cdfe-4f36-8124-8e654ea7c95b and client: spa
2019-07-26 21:07:15.182 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 21:07:15.208 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****U9mg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****XtUw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHUCK25ER2:0000000D","TimeStamp":"2019-07-26T18:07:15.0000000Z","ProcessId":4304,"LocalIpAddress":"127.0.0.1:40963","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 21:07:15.212 +03:00 [INF] Authorize endpoint response
{"SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"253c801986b64291a3e6614c1594b158","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 21:07:15.247 +03:00 [DBG] Augmenting SignInContext
2019-07-26 21:07:15.248 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 21:07:17.743 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 21:07:17.822 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:07:17.823 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:07:17.823 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 21:07:17.824 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 21:07:17.824 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 21:07:17.824 +03:00 [DBG] Start discovery request
2019-07-26 21:07:18.111 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 21:07:18.111 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:07:18.111 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:07:18.111 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 21:07:18.113 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 21:07:18.113 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 21:07:18.118 +03:00 [DBG] Start key discovery request
2019-07-26 21:07:18.238 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 21:07:18.238 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:07:18.238 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:07:18.255 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 21:07:18.255 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:07:18.255 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:07:18.256 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 21:07:18.259 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 21:07:18.259 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 21:07:18.270 +03:00 [DBG] Start userinfo request
2019-07-26 21:07:18.275 +03:00 [DBG] Bearer token found in header
2019-07-26 21:07:18.413 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:07:18.417 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:07:18.422 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 21:07:18.424 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564164434,"exp":1564168034,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","auth_time":1564164409,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-26 21:07:18.461 +03:00 [DBG] Creating userinfo response
2019-07-26 21:07:18.466 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 21:07:18.471 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 21:07:18.474 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 21:07:18.475 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 21:07:18.481 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 21:07:18.482 +03:00 [DBG] End userinfo request
2019-07-26 21:07:18.536 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 21:07:18.537 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 21:07:18.537 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 21:07:18.538 +03:00 [DBG] Rendering check session result
2019-07-26 21:07:19.623 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 21:07:19.625 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 21:07:19.625 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 21:07:19.625 +03:00 [DBG] Start discovery request
2019-07-26 21:07:19.818 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 21:07:19.818 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 21:07:19.818 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 21:07:19.819 +03:00 [DBG] Start key discovery request
2019-07-26 21:38:11.913 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 21:38:12.089 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 21:38:12.093 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 21:38:12.093 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 21:38:12.093 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 21:38:12.093 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 21:38:12.093 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 21:38:13.444 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 21:38:13.446 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 21:38:13.447 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 21:38:13.447 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 21:38:13.447 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 21:38:13.447 +03:00 [DBG] Error Url: /home/error
2019-07-26 21:38:13.447 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 21:38:18.436 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 21:38:18.438 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 21:38:18.439 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 21:38:18.440 +03:00 [INF] Identity.Application was not authenticated. Failure message: No principal.
2019-07-26 21:38:18.480 +03:00 [INF] Identity.Application was not authenticated. Failure message: No principal.
2019-07-26 21:41:41.377 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 21:41:41.399 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 21:41:41.399 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 21:41:41.414 +03:00 [DBG] Start discovery request
2019-07-26 21:41:41.836 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 21:41:41.837 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 21:41:41.838 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 21:41:41.843 +03:00 [DBG] Start key discovery request
2019-07-26 21:41:43.258 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-26 21:41:43.286 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-26 21:41:43.287 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-26 21:41:43.337 +03:00 [DBG] Processing signout request for anonymous
2019-07-26 21:41:43.363 +03:00 [DBG] Start end session request validation
2019-07-26 21:41:43.381 +03:00 [DBG] Start identity token validation
2019-07-26 21:41:43.439 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:41:43.446 +03:00 [DBG] Client found: spa / SPA Client
2019-07-26 21:41:43.518 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 21:41:43.548 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564164435,"exp":1564164735,"iss":"http://localhost:5000","aud":"spa","nonce":"71295a51ec6b402eaf70816c1545734e","iat":1564164435,"at_hash":"Cmv0FiGD33-dNEb3Elrd2A","sid":"ff8c9ca84280c44354d0b6c056268674","sub":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","auth_time":1564164409,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-26 21:41:43.614 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"unknown","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQxNjQ0MzUsImV4cCI6MTU2NDE2NDczNSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI3MTI5NWE1MWVjNmI0MDJlYWY3MDgxNmMxNTQ1NzM0ZSIsImlhdCI6MTU2NDE2NDQzNSwiYXRfaGFzaCI6IkNtdjBGaUdEMzMtZE5FYjNFbHJkMkEiLCJzaWQiOiJmZjhjOWNhODQyODBjNDQzNTRkMGI2YzA1NjI2ODY3NCIsInN1YiI6IjRjNTI5N2FiLWNkZmUtNGYzNi04MTI0LThlNjU0ZWE3Yzk1YiIsImF1dGhfdGltZSI6MTU2NDE2NDQwOSwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.fvgk7uNvPTEnK_eOWLdvEhLCVBKD755xO_9k6k-Ys3eGhqpgRm6ATiYy_ao8I5tv3cmPTzNbgGFAyJ0gu1DsCf-AC6PzXjIx3hZtBxKGtYwdBvIvAlk2o4TMkR3trS-iSJCvSIMYGMqmr73ObIiCqL3SzhIRR7q3IM6oHUTjkw6qCZEQjtxR4ZX4yv1zUQUfg8SrXgeeUyzlCoBgdLsHq0wt4UD44ZK09Qyc0V9R3xDE8d71WV8OvX1UCo32DLNLHHMUmv6SfrjTFBGEYygR9GYLb-3lJUJ_OxOQ8X3ZqYs1jFQNjUvbUQzMn-UmUHsLP9ebP-bpTEbtiGx7k4U9mg"},"$type":"EndSessionRequestValidationLog"}
2019-07-26 21:41:43.614 +03:00 [DBG] Success validating end session request from spa
2019-07-26 21:41:52.413 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 21:41:52.488 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:41:52.489 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:41:52.491 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 21:41:52.492 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 21:41:52.492 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 21:41:52.492 +03:00 [DBG] Start discovery request
2019-07-26 21:41:52.570 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 21:41:52.575 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 21:41:52.575 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 21:41:52.585 +03:00 [DBG] Start authorize request
2019-07-26 21:41:52.597 +03:00 [DBG] No user present in authorize request
2019-07-26 21:41:52.606 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:41:52.616 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:41:52.691 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:41:52.698 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9acbca44fd8648b5853c0845adad1a74","UiLocales":null,"Nonce":"de7ca5df618a44968ae4440af43cf5d1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9acbca44fd8648b5853c0845adad1a74","nonce":"de7ca5df618a44968ae4440af43cf5d1"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 21:41:52.715 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 21:41:52.757 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:41:52.758 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:41:52.758 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:41:52.763 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:41:54.840 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 21:41:58.653 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 21:41:59.068 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","DisplayName":"oleg","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHV1L4UL5J:0000000A","TimeStamp":"2019-07-26T18:41:59.0000000Z","ProcessId":4272,"LocalIpAddress":"127.0.0.1:36751","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 21:41:59.083 +03:00 [DBG] Augmenting SignInContext
2019-07-26 21:41:59.086 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 21:41:59.095 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 21:41:59.096 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 21:42:04.752 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 21:42:05.683 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 21:42:05.684 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 21:42:05.684 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 21:42:05.694 +03:00 [DBG] Start authorize callback request
2019-07-26 21:42:05.698 +03:00 [DBG] User in authorize request: 4c5297ab-cdfe-4f36-8124-8e654ea7c95b
2019-07-26 21:42:05.699 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:42:05.699 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:42:05.699 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:42:05.700 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9acbca44fd8648b5853c0845adad1a74","UiLocales":null,"Nonce":"de7ca5df618a44968ae4440af43cf5d1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ced9a4198a58c7d29e2d9ec396996345","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9acbca44fd8648b5853c0845adad1a74","nonce":"de7ca5df618a44968ae4440af43cf5d1"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 21:42:05.844 +03:00 [DBG] user_consent grant with value: spa|4c5297ab-cdfe-4f36-8124-8e654ea7c95b not found in store.
2019-07-26 21:42:05.845 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 21:42:05.845 +03:00 [INF] Showing consent: User has not yet consented
2019-07-26 21:42:05.880 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:42:05.880 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:42:05.881 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:42:05.881 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:42:07.706 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 21:42:07.749 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:42:07.749 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:42:07.749 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:42:07.751 +03:00 [INF] {"SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOHV1L4UL5J:0000000F","TimeStamp":"2019-07-26T18:42:07.0000000Z","ProcessId":4272,"LocalIpAddress":"127.0.0.1:36751","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-26 21:42:07.788 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:42:07.798 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 21:42:07.799 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 21:42:07.799 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 21:42:07.799 +03:00 [DBG] Start authorize callback request
2019-07-26 21:42:07.801 +03:00 [DBG] User in authorize request: 4c5297ab-cdfe-4f36-8124-8e654ea7c95b
2019-07-26 21:42:07.801 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:42:07.802 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:42:07.802 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:42:07.802 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9acbca44fd8648b5853c0845adad1a74","UiLocales":null,"Nonce":"de7ca5df618a44968ae4440af43cf5d1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ced9a4198a58c7d29e2d9ec396996345","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9acbca44fd8648b5853c0845adad1a74","nonce":"de7ca5df618a44968ae4440af43cf5d1"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 21:42:07.805 +03:00 [DBG] user_consent grant with value: spa|4c5297ab-cdfe-4f36-8124-8e654ea7c95b not found in store.
2019-07-26 21:42:07.805 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 21:42:07.813 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-26 21:42:07.815 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-26 21:42:07.822 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 4c5297ab-cdfe-4f36-8124-8e654ea7c95b
2019-07-26 21:42:07.862 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 21:42:07.882 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 21:42:07.883 +03:00 [DBG] Getting claims for access token for subject: 4c5297ab-cdfe-4f36-8124-8e654ea7c95b
2019-07-26 21:42:08.015 +03:00 [DBG] Getting claims for identity token for subject: 4c5297ab-cdfe-4f36-8124-8e654ea7c95b and client: spa
2019-07-26 21:42:08.015 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 21:42:08.040 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****FCZQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****wRMA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHV1L4UL5J:00000010","TimeStamp":"2019-07-26T18:42:08.0000000Z","ProcessId":4272,"LocalIpAddress":"127.0.0.1:36751","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 21:42:08.044 +03:00 [INF] Authorize endpoint response
{"SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"9acbca44fd8648b5853c0845adad1a74","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 21:42:08.086 +03:00 [DBG] Augmenting SignInContext
2019-07-26 21:42:08.087 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 21:42:09.542 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 21:42:09.542 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:42:09.542 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:42:09.542 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 21:42:09.543 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 21:42:09.543 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 21:42:09.543 +03:00 [DBG] Start discovery request
2019-07-26 21:42:09.610 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 21:42:09.610 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:42:09.611 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:42:09.611 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 21:42:09.611 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 21:42:09.611 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 21:42:09.613 +03:00 [DBG] Start key discovery request
2019-07-26 21:42:09.724 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 21:42:09.724 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:42:09.724 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:42:09.753 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 21:42:09.753 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:42:09.753 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:42:09.753 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 21:42:09.755 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 21:42:09.755 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 21:42:09.765 +03:00 [DBG] Start userinfo request
2019-07-26 21:42:09.770 +03:00 [DBG] Bearer token found in header
2019-07-26 21:42:09.804 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:42:09.805 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:42:09.807 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 21:42:09.808 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564166527,"exp":1564170127,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","auth_time":1564166519,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-26 21:42:09.841 +03:00 [DBG] Creating userinfo response
2019-07-26 21:42:09.847 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 21:42:09.851 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 21:42:09.854 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 21:42:09.855 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 21:42:09.859 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 21:42:09.860 +03:00 [DBG] End userinfo request
2019-07-26 21:42:10.011 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 21:42:10.012 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 21:42:10.012 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 21:42:10.013 +03:00 [DBG] Rendering check session result
2019-07-26 21:47:31.735 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 21:47:31.798 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 21:47:31.802 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 21:47:31.802 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 21:47:31.803 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 21:47:31.803 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 21:47:31.803 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 21:47:32.573 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 21:47:32.575 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 21:47:32.575 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 21:47:32.575 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 21:47:32.576 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 21:47:32.576 +03:00 [DBG] Error Url: /home/error
2019-07-26 21:47:32.576 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 21:49:05.159 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 21:49:05.164 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 21:49:05.164 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 21:49:05.169 +03:00 [DBG] Start discovery request
2019-07-26 21:49:05.470 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 21:49:05.471 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 21:49:05.471 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 21:49:05.478 +03:00 [DBG] Start key discovery request
2019-07-26 21:49:05.925 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-26 21:49:05.928 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-26 21:49:05.928 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-26 21:49:05.943 +03:00 [DBG] Processing signout request for 4c5297ab-cdfe-4f36-8124-8e654ea7c95b
2019-07-26 21:49:05.953 +03:00 [DBG] Start end session request validation
2019-07-26 21:49:05.977 +03:00 [DBG] Start identity token validation
2019-07-26 21:49:06.031 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:06.034 +03:00 [DBG] Client found: spa / SPA Client
2019-07-26 21:49:08.101 +03:00 [WRN] No user found matching subject Id: 4c5297ab-cdfe-4f36-8124-8e654ea7c95b
2019-07-26 21:49:08.101 +03:00 [ERR] User marked as not active: 4c5297ab-cdfe-4f36-8124-8e654ea7c95b
2019-07-26 21:49:08.118 +03:00 [INF] End session request validation failure: Error validating id token hint
{"ClientId":null,"ClientName":null,"SubjectId":"unknown","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQxNjY1MjgsImV4cCI6MTU2NDE2NjgyOCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJkZTdjYTVkZjYxOGE0NDk2OGFlNDQ0MGFmNDNjZjVkMSIsImlhdCI6MTU2NDE2NjUyOCwiYXRfaGFzaCI6ImJJV2xzRldpWC1IVmpqX2t1SFd4M3ciLCJzaWQiOiJjZWQ5YTQxOThhNThjN2QyOWUyZDllYzM5Njk5NjM0NSIsInN1YiI6IjRjNTI5N2FiLWNkZmUtNGYzNi04MTI0LThlNjU0ZWE3Yzk1YiIsImF1dGhfdGltZSI6MTU2NDE2NjUxOSwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.S2OOX5igXsWRDStmmjTqniNGSh6WcO6mOUbPP5T19xgIkCZDJMcCPbb6Xkp6bOypWs4-6rwaZsimj1_2cNINU-b_nzO4sZwP0KyGfMBGt_u190WQdkYA1wpKGAP-HaqGuILNH0UjdeItgEhBGanpi0ffoy0zC01xRsc8ITREO1HyGdQUAHaqA3z6sgfzO7dffOjtXmXBMOgDLEmnEKzixUSgA2kAMyh7UhV7WuSQ9ShHcpIsGsY1H44TIRkjP37-25t004v2Wfv1CMVQ176t9-2F7oqyKzYv60AxYcp2DNRWZ8eUw4_xqFuH0pVeEhv1efEmyDlUK27ifgglXWFCZQ"},"$type":"EndSessionRequestValidationLog"}
2019-07-26 21:49:08.134 +03:00 [ERR] Error processing end session request Invalid request
2019-07-26 21:49:08.274 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 21:49:08.276 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 21:49:08.277 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 21:49:08.288 +03:00 [INF] {"SubjectId":"4c5297ab-cdfe-4f36-8124-8e654ea7c95b","DisplayName":"oleg","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHV6RRH4KE:00000004","TimeStamp":"2019-07-26T18:49:08.0000000Z","ProcessId":2188,"LocalIpAddress":"127.0.0.1:46094","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 21:49:08.455 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-26 21:49:08.458 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-26 21:49:08.458 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-26 21:49:08.464 +03:00 [DBG] Processing signout callback request
2019-07-26 21:49:08.481 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:08.482 +03:00 [DBG] No client front-channel logout URLs
2019-07-26 21:49:08.482 +03:00 [DBG] No client back-channel logout URLs
2019-07-26 21:49:08.482 +03:00 [INF] Successful signout callback.
2019-07-26 21:49:08.482 +03:00 [DBG] No client front-channel iframe urls
2019-07-26 21:49:08.482 +03:00 [DBG] No client back-channel iframe urls
2019-07-26 21:49:26.288 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 21:49:26.297 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:49:26.297 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:49:26.299 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 21:49:26.300 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 21:49:26.300 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 21:49:26.300 +03:00 [DBG] Start discovery request
2019-07-26 21:49:26.332 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 21:49:26.336 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 21:49:26.336 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 21:49:26.341 +03:00 [DBG] Start authorize request
2019-07-26 21:49:26.350 +03:00 [DBG] No user present in authorize request
2019-07-26 21:49:26.358 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:49:26.381 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:26.465 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:49:26.479 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b947fc0196234e3891165e32f5f189fb","UiLocales":null,"Nonce":"3c03924cfba8414cb2dc2c477a1a3cd7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b947fc0196234e3891165e32f5f189fb","nonce":"3c03924cfba8414cb2dc2c477a1a3cd7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 21:49:26.501 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 21:49:26.574 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:49:26.576 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:26.583 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:49:26.586 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:28.250 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-26 21:49:30.199 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 21:49:32.382 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4f03d139-578e-45fd-90d4-cf6cc2da0c77","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHV6RRH4KF:00000005","TimeStamp":"2019-07-26T18:49:32.0000000Z","ProcessId":2188,"LocalIpAddress":"127.0.0.1:46094","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 21:49:32.452 +03:00 [DBG] Augmenting SignInContext
2019-07-26 21:49:32.459 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 21:49:32.464 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 21:49:32.464 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 21:49:49.242 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 21:49:49.865 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 21:49:49.866 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 21:49:49.867 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 21:49:49.876 +03:00 [DBG] Start authorize callback request
2019-07-26 21:49:49.882 +03:00 [DBG] User in authorize request: 4f03d139-578e-45fd-90d4-cf6cc2da0c77
2019-07-26 21:49:49.884 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:49:49.884 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:49.885 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:49:49.886 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"4f03d139-578e-45fd-90d4-cf6cc2da0c77","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b947fc0196234e3891165e32f5f189fb","UiLocales":null,"Nonce":"3c03924cfba8414cb2dc2c477a1a3cd7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d0e6ffe726040909c55f4c240a79bc28","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b947fc0196234e3891165e32f5f189fb","nonce":"3c03924cfba8414cb2dc2c477a1a3cd7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 21:49:49.945 +03:00 [DBG] user_consent grant with value: spa|4f03d139-578e-45fd-90d4-cf6cc2da0c77 not found in store.
2019-07-26 21:49:49.946 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 21:49:49.946 +03:00 [INF] Showing consent: User has not yet consented
2019-07-26 21:49:50.015 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:49:50.015 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:50.015 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:49:50.015 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:51.728 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 21:49:51.759 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:49:51.760 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:51.760 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:49:51.761 +03:00 [INF] {"SubjectId":"4f03d139-578e-45fd-90d4-cf6cc2da0c77","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOHV6RRH4KF:00000008","TimeStamp":"2019-07-26T18:49:51.0000000Z","ProcessId":2188,"LocalIpAddress":"127.0.0.1:46094","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-26 21:49:51.824 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:51.862 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 21:49:51.863 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 21:49:51.863 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 21:49:51.863 +03:00 [DBG] Start authorize callback request
2019-07-26 21:49:51.866 +03:00 [DBG] User in authorize request: 4f03d139-578e-45fd-90d4-cf6cc2da0c77
2019-07-26 21:49:51.866 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 21:49:51.866 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:51.866 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 21:49:51.866 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"4f03d139-578e-45fd-90d4-cf6cc2da0c77","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b947fc0196234e3891165e32f5f189fb","UiLocales":null,"Nonce":"3c03924cfba8414cb2dc2c477a1a3cd7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d0e6ffe726040909c55f4c240a79bc28","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b947fc0196234e3891165e32f5f189fb","nonce":"3c03924cfba8414cb2dc2c477a1a3cd7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 21:49:51.869 +03:00 [DBG] user_consent grant with value: spa|4f03d139-578e-45fd-90d4-cf6cc2da0c77 not found in store.
2019-07-26 21:49:51.869 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 21:49:51.878 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-26 21:49:51.880 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-26 21:49:51.886 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 4f03d139-578e-45fd-90d4-cf6cc2da0c77
2019-07-26 21:49:51.926 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 21:49:51.949 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 21:49:51.950 +03:00 [DBG] Getting claims for access token for subject: 4f03d139-578e-45fd-90d4-cf6cc2da0c77
2019-07-26 21:49:52.050 +03:00 [DBG] Getting claims for identity token for subject: 4f03d139-578e-45fd-90d4-cf6cc2da0c77 and client: spa
2019-07-26 21:49:52.050 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 21:49:52.076 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"4f03d139-578e-45fd-90d4-cf6cc2da0c77","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3VXQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****nFrA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHV6RRH4KE:0000000C","TimeStamp":"2019-07-26T18:49:52.0000000Z","ProcessId":2188,"LocalIpAddress":"127.0.0.1:46094","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 21:49:52.079 +03:00 [INF] Authorize endpoint response
{"SubjectId":"4f03d139-578e-45fd-90d4-cf6cc2da0c77","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"b947fc0196234e3891165e32f5f189fb","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 21:49:52.100 +03:00 [DBG] Augmenting SignInContext
2019-07-26 21:49:52.101 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 21:49:54.412 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 21:49:54.415 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:49:54.415 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:49:54.415 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 21:49:54.416 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 21:49:54.416 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 21:49:54.416 +03:00 [DBG] Start discovery request
2019-07-26 21:49:54.646 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 21:49:54.646 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:49:54.646 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:49:54.647 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 21:49:54.648 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 21:49:54.648 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 21:49:54.648 +03:00 [DBG] Start key discovery request
2019-07-26 21:49:54.714 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 21:49:54.715 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:49:54.715 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:49:54.745 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 21:49:54.746 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:49:54.746 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:49:54.746 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 21:49:54.750 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 21:49:54.751 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 21:49:54.765 +03:00 [DBG] Start userinfo request
2019-07-26 21:49:54.770 +03:00 [DBG] Bearer token found in header
2019-07-26 21:49:54.792 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:54.792 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 21:49:54.796 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 21:49:54.798 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564166992,"exp":1564170592,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"4f03d139-578e-45fd-90d4-cf6cc2da0c77","auth_time":1564166972,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-26 21:49:54.813 +03:00 [DBG] Creating userinfo response
2019-07-26 21:49:54.818 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 21:49:54.822 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 21:49:54.826 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 21:49:54.826 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 21:49:54.830 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 21:49:54.830 +03:00 [DBG] End userinfo request
2019-07-26 21:49:54.902 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 21:49:54.903 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 21:49:54.903 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 21:49:54.905 +03:00 [DBG] Rendering check session result
2019-07-26 21:50:46.935 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 21:50:46.936 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 21:50:46.936 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 21:50:46.936 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 21:50:46.936 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 21:50:46.936 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 21:50:46.936 +03:00 [DBG] Start discovery request
2019-07-26 21:50:47.174 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 21:50:47.174 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 21:50:47.175 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 21:50:47.175 +03:00 [DBG] Rendering check session result
2019-07-28 18:38:25.540 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-28 18:38:25.631 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-28 18:38:25.644 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-28 18:38:25.645 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-28 18:38:25.645 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-28 18:38:25.645 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-28 18:38:25.645 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-28 18:38:27.597 +03:00 [DBG] Login Url: /Account/Login
2019-07-28 18:38:27.601 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-28 18:38:27.601 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-28 18:38:27.601 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-28 18:38:27.601 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-28 18:38:27.601 +03:00 [DBG] Error Url: /home/error
2019-07-28 18:38:27.601 +03:00 [DBG] Error Id Parameter: errorId
2019-07-28 18:38:43.742 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-28 18:38:46.906 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 18:38:48.886 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 18:38:52.030 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"4f03d139-578e-45fd-90d4-cf6cc2da0c77","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOJE6H16CDB:00000003","TimeStamp":"2019-07-28T15:38:52.0000000Z","ProcessId":6788,"LocalIpAddress":"127.0.0.1:22437","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-28 18:38:52.059 +03:00 [DBG] Augmenting SignInContext
2019-07-28 18:38:52.062 +03:00 [DBG] Adding amr claim with value: external
2019-07-28 18:38:52.075 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-28 18:38:52.084 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 18:38:57.814 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-28 18:38:57.819 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 18:38:57.820 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-28 18:38:57.821 +03:00 [INF] {"SubjectId":"4f03d139-578e-45fd-90d4-cf6cc2da0c77","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOJE6H16CDG:00000003","TimeStamp":"2019-07-28T15:38:57.0000000Z","ProcessId":6788,"LocalIpAddress":"127.0.0.1:22437","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-28 18:40:46.745 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-28 18:41:10.394 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 18:41:49.562 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 19:06:52.587 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-28 19:06:52.660 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-28 19:06:52.673 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-28 19:06:52.674 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-28 19:06:52.674 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-28 19:06:52.674 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-28 19:06:52.674 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-28 19:06:54.370 +03:00 [DBG] Login Url: /Account/Login
2019-07-28 19:06:54.376 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-28 19:06:54.376 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-28 19:06:54.376 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-28 19:06:54.376 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-28 19:06:54.376 +03:00 [DBG] Error Url: /home/error
2019-07-28 19:06:54.376 +03:00 [DBG] Error Id Parameter: errorId
2019-07-28 19:07:00.423 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-28 19:07:03.871 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 19:07:06.001 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 19:07:08.426 +03:00 [ERR] Failed executing DbCommand (176ms) [Parameters=[@__normalizedEmail_0='?' (Size = 16)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."AccessFailedCount", "u"."ChangeUsername", "u"."ConcurrencyStamp", "u"."Email", "u"."EmailConfirmed", "u"."LockoutEnabled", "u"."LockoutEnd", "u"."NormalizedEmail", "u"."NormalizedUserName", "u"."PasswordHash", "u"."PhoneNumber", "u"."PhoneNumberConfirmed", "u"."SecurityStamp", "u"."TwoFactorEnabled", "u"."UserName"
FROM "AspNetUsers" AS "u"
WHERE "u"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 1
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
2019-07-28 19:07:09.296 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EP._15Puzzle.Security.Data.ApplicationDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
2019-07-28 19:07:09.326 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EP._15Puzzle.Security.Data.ApplicationDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
2019-07-28 19:13:04.903 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-28 19:13:05.031 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-28 19:13:05.044 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-28 19:13:05.044 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-28 19:13:05.044 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-28 19:13:05.044 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-28 19:13:05.045 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-28 19:13:09.133 +03:00 [DBG] Login Url: /Account/Login
2019-07-28 19:13:09.136 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-28 19:13:09.137 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-28 19:13:09.137 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-28 19:13:09.137 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-28 19:13:09.137 +03:00 [DBG] Error Url: /home/error
2019-07-28 19:13:09.137 +03:00 [DBG] Error Id Parameter: errorId
2019-07-28 19:13:16.230 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-28 19:13:21.198 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 19:13:23.104 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 19:13:25.413 +03:00 [ERR] Failed executing DbCommand (59ms) [Parameters=[@__normalizedEmail_0='?' (Size = 16)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."AccessFailedCount", "u"."ChangeUsername", "u"."ConcurrencyStamp", "u"."Email", "u"."EmailConfirmed", "u"."LockoutEnabled", "u"."LockoutEnd", "u"."NormalizedEmail", "u"."NormalizedUserName", "u"."PasswordHash", "u"."PhoneNumber", "u"."PhoneNumberConfirmed", "u"."SecurityStamp", "u"."TwoFactorEnabled", "u"."UserName"
FROM "AspNetUsers" AS "u"
WHERE "u"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 1
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
2019-07-28 19:13:25.625 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EP._15Puzzle.Security.Data.ApplicationDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
2019-07-28 19:13:26.269 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EP._15Puzzle.Security.Data.ApplicationDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
2019-07-28 19:20:40.126 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-28 19:20:40.227 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-28 19:20:40.235 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-28 19:20:40.236 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-28 19:20:40.236 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-28 19:20:40.236 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-28 19:20:40.236 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-28 19:20:41.690 +03:00 [DBG] Login Url: /Account/Login
2019-07-28 19:20:41.693 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-28 19:20:41.693 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-28 19:20:41.693 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-28 19:20:41.693 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-28 19:20:41.693 +03:00 [DBG] Error Url: /home/error
2019-07-28 19:20:41.693 +03:00 [DBG] Error Id Parameter: errorId
2019-07-28 19:20:45.253 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-28 19:20:48.150 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 19:20:49.534 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 19:20:51.624 +03:00 [ERR] Failed executing DbCommand (28ms) [Parameters=[@__normalizedEmail_0='?' (Size = 16)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."AccessFailedCount", "u"."ChangeUsername", "u"."ConcurrencyStamp", "u"."Email", "u"."EmailConfirmed", "u"."LockoutEnabled", "u"."LockoutEnd", "u"."NormalizedEmail", "u"."NormalizedUserName", "u"."PasswordHash", "u"."PhoneNumber", "u"."PhoneNumberConfirmed", "u"."SecurityStamp", "u"."TwoFactorEnabled", "u"."UserName"
FROM "AspNetUsers" AS "u"
WHERE "u"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 1
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
2019-07-28 19:20:51.844 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EP._15Puzzle.Security.Data.ApplicationDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
2019-07-28 19:20:51.892 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EP._15Puzzle.Security.Data.ApplicationDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
2019-07-28 19:20:58.435 +03:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[@__normalizedEmail_0='?' (Size = 16)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."AccessFailedCount", "u"."ChangeUsername", "u"."ConcurrencyStamp", "u"."Email", "u"."EmailConfirmed", "u"."LockoutEnabled", "u"."LockoutEnd", "u"."NormalizedEmail", "u"."NormalizedUserName", "u"."PasswordHash", "u"."PhoneNumber", "u"."PhoneNumberConfirmed", "u"."SecurityStamp", "u"."TwoFactorEnabled", "u"."UserName"
FROM "AspNetUsers" AS "u"
WHERE "u"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 1
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.ChangeUsername'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
2019-07-28 19:20:58.451 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EP._15Puzzle.Security.Data.ApplicationDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.ChangeUsername'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.ChangeUsername'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
2019-07-28 19:20:58.485 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EP._15Puzzle.Security.Data.ApplicationDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.ChangeUsername'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.ChangeUsername'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
2019-07-28 19:21:04.495 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-28 19:21:05.821 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 19:21:06.399 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 19:21:06.445 +03:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[@__normalizedEmail_0='?' (Size = 16)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."AccessFailedCount", "u"."ChangeUsername", "u"."ConcurrencyStamp", "u"."Email", "u"."EmailConfirmed", "u"."LockoutEnabled", "u"."LockoutEnd", "u"."NormalizedEmail", "u"."NormalizedUserName", "u"."PasswordHash", "u"."PhoneNumber", "u"."PhoneNumberConfirmed", "u"."SecurityStamp", "u"."TwoFactorEnabled", "u"."UserName"
FROM "AspNetUsers" AS "u"
WHERE "u"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 1
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.ChangeUsername'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
2019-07-28 19:21:06.456 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EP._15Puzzle.Security.Data.ApplicationDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.ChangeUsername'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.ChangeUsername'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
2019-07-28 19:21:06.473 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EP._15Puzzle.Security.Data.ApplicationDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.ChangeUsername'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.ChangeUsername'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
2019-07-28 19:33:31.571 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-28 19:33:31.637 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-28 19:33:31.645 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-28 19:33:31.645 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-28 19:33:31.645 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-28 19:33:31.645 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-28 19:33:31.645 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-28 19:33:32.856 +03:00 [DBG] Login Url: /Account/Login
2019-07-28 19:33:32.860 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-28 19:33:32.860 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-28 19:33:32.860 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-28 19:33:32.860 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-28 19:33:32.860 +03:00 [DBG] Error Url: /home/error
2019-07-28 19:33:32.860 +03:00 [DBG] Error Id Parameter: errorId
2019-07-28 19:33:42.073 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-28 19:33:50.142 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 19:33:51.561 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 19:33:55.354 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOJF5A5IFGH:00000004","TimeStamp":"2019-07-28T16:33:55.0000000Z","ProcessId":4440,"LocalIpAddress":"127.0.0.1:36636","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-28 19:33:55.387 +03:00 [DBG] Augmenting SignInContext
2019-07-28 19:33:55.391 +03:00 [DBG] Adding amr claim with value: external
2019-07-28 19:33:55.404 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-28 19:33:55.412 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 19:36:08.040 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-28 19:36:08.111 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-28 19:36:08.115 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-28 19:36:08.115 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-28 19:36:08.115 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-28 19:36:08.115 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-28 19:36:08.117 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-28 19:36:09.296 +03:00 [DBG] Login Url: /Account/Login
2019-07-28 19:36:09.300 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-28 19:36:09.300 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-28 19:36:09.300 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-28 19:36:09.300 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-28 19:36:09.300 +03:00 [DBG] Error Url: /home/error
2019-07-28 19:36:09.300 +03:00 [DBG] Error Id Parameter: errorId
2019-07-28 19:36:16.199 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-28 19:36:16.203 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 19:36:16.204 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-28 19:36:16.246 +03:00 [INF] {"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOJF6OPSPSA:00000002","TimeStamp":"2019-07-28T16:36:16.0000000Z","ProcessId":3836,"LocalIpAddress":"127.0.0.1:24259","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-28 19:36:19.367 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-28 19:36:21.229 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 19:36:22.714 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 19:36:25.249 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOJF6OPSPS9:00000006","TimeStamp":"2019-07-28T16:36:25.0000000Z","ProcessId":3836,"LocalIpAddress":"127.0.0.1:24259","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-28 19:36:25.266 +03:00 [DBG] Augmenting SignInContext
2019-07-28 19:36:25.273 +03:00 [DBG] Adding amr claim with value: external
2019-07-28 19:36:25.286 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-28 19:36:25.286 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 19:40:36.518 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-28 19:40:36.607 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-28 19:40:36.611 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-28 19:40:36.611 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-28 19:40:36.611 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-28 19:40:36.612 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-28 19:40:36.612 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-28 19:40:37.993 +03:00 [DBG] Login Url: /Account/Login
2019-07-28 19:40:37.997 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-28 19:40:37.997 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-28 19:40:37.997 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-28 19:40:37.997 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-28 19:40:37.997 +03:00 [DBG] Error Url: /home/error
2019-07-28 19:40:37.998 +03:00 [DBG] Error Id Parameter: errorId
2019-07-28 19:40:47.138 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-28 19:40:47.140 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 19:40:47.141 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-28 19:40:47.184 +03:00 [INF] {"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOJF98RBK93:00000002","TimeStamp":"2019-07-28T16:40:47.0000000Z","ProcessId":8020,"LocalIpAddress":"127.0.0.1:31593","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-28 19:40:49.117 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-28 19:40:51.086 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 19:40:52.469 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 19:40:54.995 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOJF98RBK93:00000005","TimeStamp":"2019-07-28T16:40:54.0000000Z","ProcessId":8020,"LocalIpAddress":"127.0.0.1:31593","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-28 19:40:55.010 +03:00 [DBG] Augmenting SignInContext
2019-07-28 19:40:55.013 +03:00 [DBG] Adding amr claim with value: external
2019-07-28 19:40:55.019 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-28 19:40:55.020 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 19:49:43.893 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-28 19:49:43.998 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-28 19:49:44.004 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-28 19:49:44.005 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-28 19:49:44.005 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-28 19:49:44.005 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-28 19:49:44.005 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-28 19:49:45.527 +03:00 [DBG] Login Url: /Account/Login
2019-07-28 19:49:45.533 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-28 19:49:45.533 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-28 19:49:45.533 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-28 19:49:45.534 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-28 19:49:45.534 +03:00 [DBG] Error Url: /home/error
2019-07-28 19:49:45.534 +03:00 [DBG] Error Id Parameter: errorId
2019-07-28 19:49:52.649 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-28 19:49:52.652 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 19:49:52.653 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-28 19:49:52.717 +03:00 [INF] {"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOJFEBVQ7P1:00000001","TimeStamp":"2019-07-28T16:49:52.0000000Z","ProcessId":4016,"LocalIpAddress":"127.0.0.1:26039","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-28 19:49:56.119 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-28 19:49:57.937 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 19:50:11.553 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 19:50:15.803 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOJFEBVQ7P2:00000001","TimeStamp":"2019-07-28T16:50:15.0000000Z","ProcessId":4016,"LocalIpAddress":"127.0.0.1:26039","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-28 19:50:15.822 +03:00 [DBG] Augmenting SignInContext
2019-07-28 19:50:15.826 +03:00 [DBG] Adding amr claim with value: external
2019-07-28 19:50:15.833 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-28 19:50:15.833 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 19:52:51.012 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-28 19:52:51.082 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-28 19:52:51.095 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-28 19:52:51.095 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-28 19:52:51.095 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-28 19:52:51.095 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-28 19:52:51.096 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-28 19:52:53.107 +03:00 [DBG] Login Url: /Account/Login
2019-07-28 19:52:53.111 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-28 19:52:53.111 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-28 19:52:53.111 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-28 19:52:53.112 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-28 19:52:53.112 +03:00 [DBG] Error Url: /home/error
2019-07-28 19:52:53.112 +03:00 [DBG] Error Id Parameter: errorId
2019-07-28 19:53:00.633 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-28 19:53:00.634 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 19:53:00.638 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-28 19:53:00.684 +03:00 [INF] {"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOJFG3TKD65:00000002","TimeStamp":"2019-07-28T16:53:00.0000000Z","ProcessId":7512,"LocalIpAddress":"127.0.0.1:45199","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-28 19:53:04.984 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-28 19:53:07.089 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 19:53:08.723 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 19:53:11.423 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOJFG3TKD65:00000005","TimeStamp":"2019-07-28T16:53:11.0000000Z","ProcessId":7512,"LocalIpAddress":"127.0.0.1:45199","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-28 19:53:11.442 +03:00 [DBG] Augmenting SignInContext
2019-07-28 19:53:11.445 +03:00 [DBG] Adding amr claim with value: external
2019-07-28 19:53:11.452 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-28 19:53:11.452 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 19:53:36.053 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-28 19:53:36.053 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 19:53:36.054 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-28 19:53:36.054 +03:00 [INF] {"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOJFG3TKD65:00000006","TimeStamp":"2019-07-28T16:53:36.0000000Z","ProcessId":7512,"LocalIpAddress":"127.0.0.1:45199","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-28 20:21:00.360 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-28 20:21:00.511 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-28 20:21:00.515 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-28 20:21:00.515 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-28 20:21:00.515 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-28 20:21:00.515 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-28 20:21:00.515 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-28 20:21:01.728 +03:00 [DBG] Login Url: /Account/Login
2019-07-28 20:21:01.730 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-28 20:21:01.730 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-28 20:21:01.730 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-28 20:21:01.731 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-28 20:21:01.731 +03:00 [DBG] Error Url: /home/error
2019-07-28 20:21:01.731 +03:00 [DBG] Error Id Parameter: errorId
2019-07-28 20:23:20.761 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-28 20:23:20.782 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:23:20.783 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:23:20.787 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-28 20:23:21.300 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-28 20:23:21.301 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-28 20:23:21.318 +03:00 [DBG] Start discovery request
2019-07-28 20:23:21.456 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-28 20:23:21.461 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-28 20:23:21.461 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-28 20:23:21.466 +03:00 [DBG] Start authorize request
2019-07-28 20:23:21.528 +03:00 [DBG] No user present in authorize request
2019-07-28 20:23:21.542 +03:00 [DBG] Start authorize request protocol validation
2019-07-28 20:23:21.685 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:23:21.767 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-28 20:23:21.788 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8f247028cd72431fa275d5139b7b30de","UiLocales":null,"Nonce":"4d68ad83f8f0473eb81637046b2c47c0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8f247028cd72431fa275d5139b7b30de","nonce":"4d68ad83f8f0473eb81637046b2c47c0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-28 20:23:21.834 +03:00 [INF] Showing login: User is not authenticated
2019-07-28 20:23:22.037 +03:00 [DBG] Start authorize request protocol validation
2019-07-28 20:23:22.038 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:23:22.038 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-28 20:23:22.043 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:23:40.269 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 20:23:52.890 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 20:23:56.098 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOJFVR6ME3T:00000006","TimeStamp":"2019-07-28T17:23:56.0000000Z","ProcessId":8308,"LocalIpAddress":"127.0.0.1:34233","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-28 20:23:56.117 +03:00 [DBG] Augmenting SignInContext
2019-07-28 20:23:56.123 +03:00 [DBG] Adding amr claim with value: external
2019-07-28 20:23:56.134 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-28 20:23:56.142 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 20:24:06.064 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-28 20:24:07.416 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-28 20:24:07.418 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-28 20:24:07.418 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-28 20:24:07.427 +03:00 [DBG] Start authorize callback request
2019-07-28 20:24:07.433 +03:00 [DBG] User in authorize request: 050c3efc-40fe-4c35-be6a-c6eb79516499
2019-07-28 20:24:07.433 +03:00 [DBG] Start authorize request protocol validation
2019-07-28 20:24:07.433 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:24:07.434 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-28 20:24:07.434 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8f247028cd72431fa275d5139b7b30de","UiLocales":null,"Nonce":"4d68ad83f8f0473eb81637046b2c47c0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3eef3efcacbfedc905b02c0e5d0571a0","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8f247028cd72431fa275d5139b7b30de","nonce":"4d68ad83f8f0473eb81637046b2c47c0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-28 20:24:07.539 +03:00 [DBG] user_consent grant with value: spa|050c3efc-40fe-4c35-be6a-c6eb79516499 not found in store.
2019-07-28 20:24:07.540 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-28 20:24:07.540 +03:00 [INF] Showing consent: User has not yet consented
2019-07-28 20:24:07.679 +03:00 [DBG] Start authorize request protocol validation
2019-07-28 20:24:07.680 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:24:07.680 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-28 20:24:07.680 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:24:11.798 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-28 20:24:11.833 +03:00 [DBG] Start authorize request protocol validation
2019-07-28 20:24:11.833 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:24:11.834 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-28 20:24:11.835 +03:00 [INF] {"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOJFVR6ME3T:0000000C","TimeStamp":"2019-07-28T17:24:11.0000000Z","ProcessId":8308,"LocalIpAddress":"127.0.0.1:34233","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-28 20:24:11.880 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:24:11.897 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-28 20:24:11.898 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-28 20:24:11.898 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-28 20:24:11.898 +03:00 [DBG] Start authorize callback request
2019-07-28 20:24:11.902 +03:00 [DBG] User in authorize request: 050c3efc-40fe-4c35-be6a-c6eb79516499
2019-07-28 20:24:11.902 +03:00 [DBG] Start authorize request protocol validation
2019-07-28 20:24:11.902 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:24:11.902 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-28 20:24:11.903 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8f247028cd72431fa275d5139b7b30de","UiLocales":null,"Nonce":"4d68ad83f8f0473eb81637046b2c47c0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3eef3efcacbfedc905b02c0e5d0571a0","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8f247028cd72431fa275d5139b7b30de","nonce":"4d68ad83f8f0473eb81637046b2c47c0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-28 20:24:11.906 +03:00 [DBG] user_consent grant with value: spa|050c3efc-40fe-4c35-be6a-c6eb79516499 not found in store.
2019-07-28 20:24:11.906 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-28 20:24:11.914 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-28 20:24:11.916 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-28 20:24:11.921 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 050c3efc-40fe-4c35-be6a-c6eb79516499
2019-07-28 20:24:11.953 +03:00 [DBG] Creating Implicit Flow response.
2019-07-28 20:24:11.977 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-28 20:24:11.978 +03:00 [DBG] Getting claims for access token for subject: 050c3efc-40fe-4c35-be6a-c6eb79516499
2019-07-28 20:24:12.588 +03:00 [DBG] Getting claims for identity token for subject: 050c3efc-40fe-4c35-be6a-c6eb79516499 and client: spa
2019-07-28 20:24:12.589 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-28 20:24:12.615 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****NSOg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****V0iQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOJFVR6ME3T:0000000D","TimeStamp":"2019-07-28T17:24:12.0000000Z","ProcessId":8308,"LocalIpAddress":"127.0.0.1:34233","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-28 20:24:12.617 +03:00 [INF] Authorize endpoint response
{"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"8f247028cd72431fa275d5139b7b30de","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-28 20:24:12.643 +03:00 [DBG] Augmenting SignInContext
2019-07-28 20:24:12.644 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-28 20:24:14.793 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-28 20:24:14.793 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:24:14.793 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:24:14.793 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-28 20:24:14.794 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-28 20:24:14.794 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-28 20:24:14.794 +03:00 [DBG] Start discovery request
2019-07-28 20:24:15.022 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-28 20:24:15.024 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:24:15.024 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:24:15.054 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-28 20:24:15.055 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-28 20:24:15.055 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-28 20:24:15.061 +03:00 [DBG] Start key discovery request
2019-07-28 20:24:15.224 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-28 20:24:15.224 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:24:15.224 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:24:15.254 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-28 20:24:15.254 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:24:15.254 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:24:15.254 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-28 20:24:15.257 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-28 20:24:15.257 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-28 20:24:15.270 +03:00 [DBG] Start userinfo request
2019-07-28 20:24:15.277 +03:00 [DBG] Bearer token found in header
2019-07-28 20:24:15.532 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:24:15.536 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:24:15.539 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-28 20:24:15.541 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564334652,"exp":1564338252,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"050c3efc-40fe-4c35-be6a-c6eb79516499","auth_time":1564334636,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-28 20:24:15.580 +03:00 [DBG] Creating userinfo response
2019-07-28 20:24:15.586 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-28 20:24:15.589 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-28 20:24:15.593 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-28 20:24:15.593 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-28 20:24:15.597 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-28 20:24:15.598 +03:00 [DBG] End userinfo request
2019-07-28 20:24:15.733 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-28 20:24:15.734 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-28 20:24:15.734 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-28 20:24:15.737 +03:00 [DBG] Rendering check session result
2019-07-28 20:24:18.773 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-28 20:24:18.773 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-28 20:24:18.773 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-28 20:24:18.774 +03:00 [DBG] Start discovery request
2019-07-28 20:24:19.178 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-28 20:24:19.179 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-28 20:24:19.179 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-28 20:24:19.179 +03:00 [DBG] Start key discovery request
2019-07-28 20:28:08.786 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-28 20:28:08.809 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-28 20:28:08.810 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-28 20:28:08.860 +03:00 [DBG] Processing signout request for 050c3efc-40fe-4c35-be6a-c6eb79516499
2019-07-28 20:28:08.900 +03:00 [DBG] Start end session request validation
2019-07-28 20:28:08.923 +03:00 [DBG] Start identity token validation
2019-07-28 20:28:08.931 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:28:08.932 +03:00 [DBG] Client found: spa / SPA Client
2019-07-28 20:28:08.983 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-28 20:28:08.986 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564334652,"exp":1564334952,"iss":"http://localhost:5000","aud":"spa","nonce":"4d68ad83f8f0473eb81637046b2c47c0","iat":1564334652,"at_hash":"B9ODD9yuutfOmNkFiDxgdw","sid":"3eef3efcacbfedc905b02c0e5d0571a0","sub":"050c3efc-40fe-4c35-be6a-c6eb79516499","auth_time":1564334636,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-28 20:28:08.994 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQzMzQ2NTIsImV4cCI6MTU2NDMzNDk1MiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI0ZDY4YWQ4M2Y4ZjA0NzNlYjgxNjM3MDQ2YjJjNDdjMCIsImlhdCI6MTU2NDMzNDY1MiwiYXRfaGFzaCI6IkI5T0REOXl1dXRmT21Oa0ZpRHhnZHciLCJzaWQiOiIzZWVmM2VmY2FjYmZlZGM5MDViMDJjMGU1ZDA1NzFhMCIsInN1YiI6IjA1MGMzZWZjLTQwZmUtNGMzNS1iZTZhLWM2ZWI3OTUxNjQ5OSIsImF1dGhfdGltZSI6MTU2NDMzNDYzNiwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.G3sgIBLZyMjKoVFZMT-Evfh6C-cR9PGbmXwyZXsAXv4VIc0l2OjejmLDDRBcgNmVq8IVxXnIXsj12fxGW-Gm9qhEKlZv8sfGBHcyVio4uOl3fdY2lAdiM4oP7EJO06g3H7DMh2iDxYxOUu-6gum7c0KjJbW0LIznOaU7j6EyLHzXfCffGSoSbda0KCNXfR0nwNm5tTTuYPWwyrongUVtryKBNuU9z4_0DpG_FNrFRrxP87U7peswe916sbmDt6Ujc-xtRbGKh2lmoNGW3nmE8EDD0rSTBAk1eamQkaICsf35Stls49fsZQF7-ePilSz2KmmRa6WuYgi5MwXeG3NSOg"},"$type":"EndSessionRequestValidationLog"}
2019-07-28 20:28:08.995 +03:00 [DBG] Success validating end session request from spa
2019-07-28 20:28:09.247 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-28 20:28:09.248 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 20:28:09.251 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-28 20:28:09.253 +03:00 [INF] {"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOJFVR6ME3U:00000002","TimeStamp":"2019-07-28T17:28:09.0000000Z","ProcessId":8308,"LocalIpAddress":"127.0.0.1:34233","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-28 20:28:13.544 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-28 20:28:13.548 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:28:13.548 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:28:13.549 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-28 20:28:13.549 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-28 20:28:13.550 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-28 20:28:13.550 +03:00 [DBG] Start discovery request
2019-07-28 20:28:13.627 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-28 20:28:13.628 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-28 20:28:13.628 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-28 20:28:13.628 +03:00 [DBG] Start authorize request
2019-07-28 20:28:13.628 +03:00 [DBG] No user present in authorize request
2019-07-28 20:28:13.628 +03:00 [DBG] Start authorize request protocol validation
2019-07-28 20:28:13.629 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:28:13.629 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-28 20:28:13.629 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9a10e2dc58494fe3a249bc84205352f0","UiLocales":null,"Nonce":"4448974ab3fb4145bd36f60126499eb4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9a10e2dc58494fe3a249bc84205352f0","nonce":"4448974ab3fb4145bd36f60126499eb4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-28 20:28:13.629 +03:00 [INF] Showing login: User is not authenticated
2019-07-28 20:28:13.749 +03:00 [DBG] Start authorize request protocol validation
2019-07-28 20:28:13.750 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:28:13.750 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-28 20:28:13.750 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:28:16.594 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 20:28:18.305 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 20:28:18.321 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOJFVR6ME3U:00000008","TimeStamp":"2019-07-28T17:28:18.0000000Z","ProcessId":8308,"LocalIpAddress":"127.0.0.1:34233","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-28 20:28:18.322 +03:00 [DBG] Augmenting SignInContext
2019-07-28 20:28:18.322 +03:00 [DBG] Adding amr claim with value: external
2019-07-28 20:28:18.322 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-28 20:28:18.322 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 20:28:41.270 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-28 20:28:41.802 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-28 20:28:41.802 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-28 20:28:41.803 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-28 20:28:41.803 +03:00 [DBG] Start authorize callback request
2019-07-28 20:28:41.803 +03:00 [DBG] User in authorize request: 050c3efc-40fe-4c35-be6a-c6eb79516499
2019-07-28 20:28:41.803 +03:00 [DBG] Start authorize request protocol validation
2019-07-28 20:28:41.803 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:28:41.803 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-28 20:28:41.803 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"9a10e2dc58494fe3a249bc84205352f0","UiLocales":null,"Nonce":"4448974ab3fb4145bd36f60126499eb4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"74cf5708f2d8d737c0c225728f8dd9d1","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"9a10e2dc58494fe3a249bc84205352f0","nonce":"4448974ab3fb4145bd36f60126499eb4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-28 20:28:41.919 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-28 20:28:41.920 +03:00 [DBG] Creating Implicit Flow response.
2019-07-28 20:28:41.920 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-28 20:28:41.920 +03:00 [DBG] Getting claims for access token for subject: 050c3efc-40fe-4c35-be6a-c6eb79516499
2019-07-28 20:28:41.944 +03:00 [DBG] Getting claims for identity token for subject: 050c3efc-40fe-4c35-be6a-c6eb79516499 and client: spa
2019-07-28 20:28:41.945 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-28 20:28:41.964 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****N-bA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****hFdw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOJFVR6ME3U:0000000B","TimeStamp":"2019-07-28T17:28:41.0000000Z","ProcessId":8308,"LocalIpAddress":"127.0.0.1:34233","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-28 20:28:41.964 +03:00 [INF] Authorize endpoint response
{"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"9a10e2dc58494fe3a249bc84205352f0","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-28 20:28:41.965 +03:00 [DBG] Augmenting SignInContext
2019-07-28 20:28:41.965 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-28 20:28:46.433 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-28 20:28:46.433 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:28:46.433 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:28:46.434 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-28 20:28:46.434 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-28 20:28:46.434 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-28 20:28:46.434 +03:00 [DBG] Start discovery request
2019-07-28 20:28:46.566 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-28 20:28:46.566 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:28:46.566 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:28:46.567 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-28 20:28:46.567 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-28 20:28:46.567 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-28 20:28:46.567 +03:00 [DBG] Start key discovery request
2019-07-28 20:28:46.786 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-28 20:28:46.786 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:28:46.786 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:28:46.962 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-28 20:28:46.962 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:28:46.962 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:28:46.962 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-28 20:28:46.963 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-28 20:28:46.963 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-28 20:28:46.963 +03:00 [DBG] Start userinfo request
2019-07-28 20:28:46.963 +03:00 [DBG] Bearer token found in header
2019-07-28 20:28:46.964 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:28:46.965 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:28:46.967 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-28 20:28:46.967 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564334921,"exp":1564338521,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"050c3efc-40fe-4c35-be6a-c6eb79516499","auth_time":1564334898,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-28 20:28:46.967 +03:00 [DBG] Creating userinfo response
2019-07-28 20:28:46.967 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-28 20:28:46.968 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-28 20:28:46.968 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-28 20:28:46.968 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-28 20:28:47.025 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-28 20:28:47.025 +03:00 [DBG] End userinfo request
2019-07-28 20:28:47.273 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-28 20:28:47.273 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-28 20:28:47.273 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-28 20:28:47.273 +03:00 [DBG] Rendering check session result
2019-07-28 20:28:53.459 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-28 20:28:53.463 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-28 20:28:53.463 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-28 20:28:53.463 +03:00 [DBG] Processing signout request for 050c3efc-40fe-4c35-be6a-c6eb79516499
2019-07-28 20:28:53.463 +03:00 [DBG] Start end session request validation
2019-07-28 20:28:53.463 +03:00 [DBG] Start identity token validation
2019-07-28 20:28:53.464 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:28:53.464 +03:00 [DBG] Client found: spa / SPA Client
2019-07-28 20:28:53.468 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-28 20:28:53.469 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564334921,"exp":1564335221,"iss":"http://localhost:5000","aud":"spa","nonce":"4448974ab3fb4145bd36f60126499eb4","iat":1564334921,"at_hash":"I573SVIVw2Plt5rNVQes2w","sid":"74cf5708f2d8d737c0c225728f8dd9d1","sub":"050c3efc-40fe-4c35-be6a-c6eb79516499","auth_time":1564334898,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-28 20:28:53.469 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQzMzQ5MjEsImV4cCI6MTU2NDMzNTIyMSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI0NDQ4OTc0YWIzZmI0MTQ1YmQzNmY2MDEyNjQ5OWViNCIsImlhdCI6MTU2NDMzNDkyMSwiYXRfaGFzaCI6Ikk1NzNTVklWdzJQbHQ1ck5WUWVzMnciLCJzaWQiOiI3NGNmNTcwOGYyZDhkNzM3YzBjMjI1NzI4ZjhkZDlkMSIsInN1YiI6IjA1MGMzZWZjLTQwZmUtNGMzNS1iZTZhLWM2ZWI3OTUxNjQ5OSIsImF1dGhfdGltZSI6MTU2NDMzNDg5OCwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.eRlq0q5Q-7LfM6Nyom4ME8B3DA1SE5DTqA8iC1ylswsE0irnggXdNFxAZp2wXn6OwWkL042uCKx6llPhKduaG7eTCPP8fdSRoMgwYVNAxmMeuNoqQKEulUtFE-xuZdD0Yz1tji40XTFuQ7Nfkfod_IT7miaTvvokj6TD6X30vbdup19cskyaBEBoHnRb3_6NRISU7RGvyT6VjNScNxYau130aKW2I1mYzJyflvOCFpuLCZ8OAXegmYG8OJdhxaPXm1wudfMZZePKgWjwG2pUjY-U2i25sOAD0rA32btLATzzMJAFuPgC2MGp4L7cJreQWGBsMe4B-hVzc2LuGiN-bA"},"$type":"EndSessionRequestValidationLog"}
2019-07-28 20:28:53.469 +03:00 [DBG] Success validating end session request from spa
2019-07-28 20:28:53.539 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-28 20:28:53.539 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 20:28:53.540 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-28 20:28:53.540 +03:00 [INF] {"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOJFVR6ME3U:00000012","TimeStamp":"2019-07-28T17:28:53.0000000Z","ProcessId":8308,"LocalIpAddress":"127.0.0.1:34233","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-28 20:28:56.249 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-28 20:28:56.250 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:28:56.250 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:28:56.251 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-28 20:28:56.251 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-28 20:28:56.251 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-28 20:28:56.251 +03:00 [DBG] Start discovery request
2019-07-28 20:28:56.293 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-28 20:28:56.295 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-28 20:28:56.295 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-28 20:28:56.295 +03:00 [DBG] Start authorize request
2019-07-28 20:28:56.295 +03:00 [DBG] No user present in authorize request
2019-07-28 20:28:56.295 +03:00 [DBG] Start authorize request protocol validation
2019-07-28 20:28:56.295 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:28:56.295 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-28 20:28:56.295 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"95b302a40a6045b7ab51ecc38db31335","UiLocales":null,"Nonce":"6a986fc33e754e62acce9411b2ffc550","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"95b302a40a6045b7ab51ecc38db31335","nonce":"6a986fc33e754e62acce9411b2ffc550"},"$type":"AuthorizeRequestValidationLog"}
2019-07-28 20:28:56.295 +03:00 [INF] Showing login: User is not authenticated
2019-07-28 20:28:56.328 +03:00 [DBG] Start authorize request protocol validation
2019-07-28 20:28:56.328 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:28:56.329 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-28 20:28:56.329 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:28:57.746 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-28 20:28:58.968 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-28 20:28:58.983 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"116890248830616736106","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","DisplayName":"smolin4u","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOJFVR6ME3U:00000018","TimeStamp":"2019-07-28T17:28:58.0000000Z","ProcessId":8308,"LocalIpAddress":"127.0.0.1:34233","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-28 20:28:58.983 +03:00 [DBG] Augmenting SignInContext
2019-07-28 20:28:58.983 +03:00 [DBG] Adding amr claim with value: external
2019-07-28 20:28:58.984 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-28 20:28:58.984 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-28 20:29:05.764 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-28 20:29:06.002 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-28 20:29:06.004 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-28 20:29:06.004 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-28 20:29:06.004 +03:00 [DBG] Start authorize callback request
2019-07-28 20:29:06.005 +03:00 [DBG] User in authorize request: 050c3efc-40fe-4c35-be6a-c6eb79516499
2019-07-28 20:29:06.005 +03:00 [DBG] Start authorize request protocol validation
2019-07-28 20:29:06.005 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:29:06.005 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-28 20:29:06.005 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"95b302a40a6045b7ab51ecc38db31335","UiLocales":null,"Nonce":"6a986fc33e754e62acce9411b2ffc550","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"29e221f59c3c907d36f01c10f9571f7a","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"95b302a40a6045b7ab51ecc38db31335","nonce":"6a986fc33e754e62acce9411b2ffc550"},"$type":"AuthorizeRequestValidationLog"}
2019-07-28 20:29:06.024 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-28 20:29:06.025 +03:00 [DBG] Creating Implicit Flow response.
2019-07-28 20:29:06.025 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-28 20:29:06.025 +03:00 [DBG] Getting claims for access token for subject: 050c3efc-40fe-4c35-be6a-c6eb79516499
2019-07-28 20:29:06.050 +03:00 [DBG] Getting claims for identity token for subject: 050c3efc-40fe-4c35-be6a-c6eb79516499 and client: spa
2019-07-28 20:29:06.050 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-28 20:29:06.069 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****tglw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****xXzA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOJFVR6ME3U:0000001B","TimeStamp":"2019-07-28T17:29:06.0000000Z","ProcessId":8308,"LocalIpAddress":"127.0.0.1:34233","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-28 20:29:06.069 +03:00 [INF] Authorize endpoint response
{"SubjectId":"050c3efc-40fe-4c35-be6a-c6eb79516499","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"95b302a40a6045b7ab51ecc38db31335","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-28 20:29:06.070 +03:00 [DBG] Augmenting SignInContext
2019-07-28 20:29:06.070 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-28 20:29:08.092 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-28 20:29:08.094 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:29:08.094 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:29:08.094 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-28 20:29:08.095 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-28 20:29:08.095 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-28 20:29:08.095 +03:00 [DBG] Start discovery request
2019-07-28 20:29:08.264 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-28 20:29:08.265 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:29:08.265 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:29:08.265 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-28 20:29:08.265 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-28 20:29:08.265 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-28 20:29:08.265 +03:00 [DBG] Start key discovery request
2019-07-28 20:29:08.325 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-28 20:29:08.327 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:29:08.327 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:29:08.336 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-28 20:29:08.336 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-28 20:29:08.336 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-28 20:29:08.337 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-28 20:29:08.337 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-28 20:29:08.337 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-28 20:29:08.338 +03:00 [DBG] Start userinfo request
2019-07-28 20:29:08.338 +03:00 [DBG] Bearer token found in header
2019-07-28 20:29:08.339 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:29:08.339 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-28 20:29:08.342 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-28 20:29:08.342 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564334946,"exp":1564338546,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"050c3efc-40fe-4c35-be6a-c6eb79516499","auth_time":1564334938,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-28 20:29:08.342 +03:00 [DBG] Creating userinfo response
2019-07-28 20:29:08.342 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-28 20:29:08.342 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-28 20:29:08.342 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-28 20:29:08.342 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-28 20:29:08.353 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-28 20:29:08.354 +03:00 [DBG] End userinfo request
2019-07-28 20:29:08.431 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-28 20:29:08.431 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-28 20:29:08.431 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-28 20:29:08.431 +03:00 [DBG] Rendering check session result
=======
2019-07-26 13:07:00.460 +03:00 [ERR] An exception occurred while trying to decrypt the element.
System.Security.Cryptography.CryptographicException: Error occurred during a cryptographic operation.
   at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.UnprotectWithDpapiCore(Byte* pbProtectedData, UInt32 cbProtectedData, Byte* pbOptionalEntropy, UInt32 cbOptionalEntropy)
   at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.UnprotectWithDpapi(Byte[] protectedSecret)
   at Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor.Decrypt(XElement encryptedElement)
2019-07-26 13:07:00.668 +03:00 [ERR] An exception occurred while processing the key element '<key id="2f413fc3-264f-4bd5-b619-645d5fe1ffa5" version="1" />'.
System.Security.Cryptography.CryptographicException: Error occurred during a cryptographic operation.
   at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.UnprotectWithDpapiCore(Byte* pbProtectedData, UInt32 cbProtectedData, Byte* pbOptionalEntropy, UInt32 cbOptionalEntropy)
   at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.UnprotectWithDpapi(Byte[] protectedSecret)
   at Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor.Decrypt(XElement encryptedElement)
   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.DecryptElement(XElement element, IActivator activator)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.DeserializeDescriptorFromKeyElement(XElement keyElement)
2019-07-26 13:07:00.687 +03:00 [WRN] Key "2f413fc3-264f-4bd5-b619-645d5fe1ffa5" is ineligible to be the default key because its CreateEncryptor method failed.
System.Security.Cryptography.CryptographicException: Error occurred during a cryptographic operation.
   at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.UnprotectWithDpapiCore(Byte* pbProtectedData, UInt32 cbProtectedData, Byte* pbOptionalEntropy, UInt32 cbOptionalEntropy)
   at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.UnprotectWithDpapi(Byte[] protectedSecret)
   at Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor.Decrypt(XElement encryptedElement)
   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.DecryptElement(XElement element, IActivator activator)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.DeserializeDescriptorFromKeyElement(XElement keyElement)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.DeferredKey.<>c__DisplayClass1_0.<GetLazyDescriptorDelegate>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)
   at System.Lazy`1.CreateValue()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyBase.get_Descriptor()
   at Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptorFactory.CreateEncryptorInstance(IKey key)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyBase.CreateEncryptor()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver.CanCreateAuthenticatedEncryptor(IKey key)
2019-07-26 13:07:00.722 +03:00 [WRN] Key "2f413fc3-264f-4bd5-b619-645d5fe1ffa5" is ineligible to be the default key because its CreateEncryptor method failed.
System.Security.Cryptography.CryptographicException: Error occurred during a cryptographic operation.
   at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.UnprotectWithDpapiCore(Byte* pbProtectedData, UInt32 cbProtectedData, Byte* pbOptionalEntropy, UInt32 cbOptionalEntropy)
   at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.UnprotectWithDpapi(Byte[] protectedSecret)
   at Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor.Decrypt(XElement encryptedElement)
   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.DecryptElement(XElement element, IActivator activator)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.DeserializeDescriptorFromKeyElement(XElement keyElement)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.DeferredKey.<>c__DisplayClass1_0.<GetLazyDescriptorDelegate>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyBase.get_Descriptor()
   at Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptorFactory.CreateEncryptorInstance(IKey key)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyBase.CreateEncryptor()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver.CanCreateAuthenticatedEncryptor(IKey key)
2019-07-26 13:07:00.792 +03:00 [WRN] Key "2f413fc3-264f-4bd5-b619-645d5fe1ffa5" is ineligible to be the default key because its CreateEncryptor method failed.
System.Security.Cryptography.CryptographicException: Error occurred during a cryptographic operation.
   at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.UnprotectWithDpapiCore(Byte* pbProtectedData, UInt32 cbProtectedData, Byte* pbOptionalEntropy, UInt32 cbOptionalEntropy)
   at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.UnprotectWithDpapi(Byte[] protectedSecret)
   at Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor.Decrypt(XElement encryptedElement)
   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.DecryptElement(XElement element, IActivator activator)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.DeserializeDescriptorFromKeyElement(XElement keyElement)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.DeferredKey.<>c__DisplayClass1_0.<GetLazyDescriptorDelegate>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyBase.get_Descriptor()
   at Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptorFactory.CreateEncryptorInstance(IKey key)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyBase.CreateEncryptor()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver.CanCreateAuthenticatedEncryptor(IKey key)
2019-07-26 13:07:01.042 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 13:07:01.090 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 13:07:01.090 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 13:07:01.090 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 13:07:01.090 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 13:07:01.091 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 13:07:01.091 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 13:07:02.197 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 13:07:02.202 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 13:07:02.202 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 13:07:02.202 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 13:07:02.203 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 13:07:02.203 +03:00 [DBG] Error Url: /home/error
2019-07-26 13:07:02.203 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 13:07:02.224 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-26 13:07:02.278 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-26 13:08:47.920 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 13:08:47.928 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 13:08:47.928 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 13:08:47.933 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 13:08:48.247 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 13:08:48.248 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 13:08:48.255 +03:00 [DBG] Start discovery request
2019-07-26 13:08:48.370 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 13:08:48.380 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 13:08:48.381 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 13:08:48.388 +03:00 [DBG] Start authorize request
2019-07-26 13:08:48.406 +03:00 [DBG] No user present in authorize request
2019-07-26 13:08:48.418 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:08:48.450 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:08:48.514 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:08:48.536 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6b4a74f9b78143e78d0b0ee934ea9b77","UiLocales":null,"Nonce":"6adbb9b54059428380a01c0ad4c56466","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6b4a74f9b78143e78d0b0ee934ea9b77","nonce":"6adbb9b54059428380a01c0ad4c56466"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 13:08:48.572 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 13:08:48.687 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:08:48.688 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:08:48.688 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:08:48.696 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:08:56.101 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 13:08:56.227 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:08:56.228 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:08:56.228 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:08:58.968 +03:00 [DBG] Augmenting SignInContext
2019-07-26 13:08:58.973 +03:00 [DBG] Adding idp claim with value: local
2019-07-26 13:08:58.973 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-26 13:08:58.974 +03:00 [DBG] Adding auth_time claim with value: 1564135738
2019-07-26 13:08:58.991 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 13:08:59.009 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHM40EA83T:00000004","TimeStamp":"2019-07-26T10:08:59.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 13:08:59.013 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:08:59.049 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 13:08:59.050 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 13:08:59.050 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 13:08:59.061 +03:00 [DBG] Start authorize callback request
2019-07-26 13:08:59.070 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 13:08:59.070 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:08:59.070 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:08:59.071 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:08:59.072 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6b4a74f9b78143e78d0b0ee934ea9b77","UiLocales":null,"Nonce":"6adbb9b54059428380a01c0ad4c56466","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"40545b360895f1cba8e11c7ca2c6d530","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6b4a74f9b78143e78d0b0ee934ea9b77","nonce":"6adbb9b54059428380a01c0ad4c56466"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 13:08:59.181 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-26 13:08:59.182 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 13:08:59.182 +03:00 [INF] Showing consent: User has not yet consented
2019-07-26 13:08:59.235 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:08:59.235 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:08:59.236 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:08:59.236 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:09:00.479 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 13:09:00.517 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:09:00.517 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:09:00.518 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:09:00.519 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOHM40EA83T:00000008","TimeStamp":"2019-07-26T10:09:00.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-26 13:09:00.550 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:09:00.562 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 13:09:00.563 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 13:09:00.564 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 13:09:00.564 +03:00 [DBG] Start authorize callback request
2019-07-26 13:09:00.573 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 13:09:00.573 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:09:00.574 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:09:00.574 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:09:00.574 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"6b4a74f9b78143e78d0b0ee934ea9b77","UiLocales":null,"Nonce":"6adbb9b54059428380a01c0ad4c56466","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"40545b360895f1cba8e11c7ca2c6d530","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"6b4a74f9b78143e78d0b0ee934ea9b77","nonce":"6adbb9b54059428380a01c0ad4c56466"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 13:09:00.592 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-26 13:09:00.592 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 13:09:00.608 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-26 13:09:00.612 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-26 13:09:00.622 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 13:09:00.658 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 13:09:00.693 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 13:09:00.695 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 13:09:00.849 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-26 13:09:00.849 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 13:09:00.867 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****pC7w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****msQg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHM40EA83T:00000009","TimeStamp":"2019-07-26T10:09:00.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 13:09:00.870 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"6b4a74f9b78143e78d0b0ee934ea9b77","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 13:09:00.902 +03:00 [DBG] Augmenting SignInContext
2019-07-26 13:09:00.903 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 13:09:02.092 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 13:09:02.094 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 13:09:02.103 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 13:09:02.105 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 13:09:02.107 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 13:09:02.107 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 13:09:02.107 +03:00 [DBG] Start discovery request
2019-07-26 13:09:02.162 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 13:09:02.163 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 13:09:02.163 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 13:09:02.168 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 13:09:02.193 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 13:09:02.194 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 13:09:02.206 +03:00 [DBG] Start key discovery request
2019-07-26 13:09:02.315 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 13:09:02.315 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 13:09:02.315 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 13:09:02.328 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 13:09:02.328 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 13:09:02.328 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 13:09:02.329 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 13:09:02.335 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 13:09:02.336 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 13:09:02.353 +03:00 [DBG] Start userinfo request
2019-07-26 13:09:02.359 +03:00 [DBG] Bearer token found in header
2019-07-26 13:09:02.416 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:09:02.422 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:09:02.427 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 13:09:02.431 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564135740,"exp":1564139340,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564135738,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-26 13:09:02.451 +03:00 [DBG] Creating userinfo response
2019-07-26 13:09:02.458 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 13:09:02.464 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 13:09:02.471 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 13:09:02.471 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 13:09:02.478 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 13:09:02.480 +03:00 [DBG] End userinfo request
2019-07-26 13:09:02.526 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 13:09:02.527 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 13:09:02.527 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 13:09:02.534 +03:00 [DBG] Rendering check session result
2019-07-26 13:09:06.917 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 13:09:06.918 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 13:09:06.919 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 13:09:06.919 +03:00 [DBG] Start discovery request
2019-07-26 13:09:07.096 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 13:09:07.097 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 13:09:07.097 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 13:09:07.098 +03:00 [DBG] Start key discovery request
2019-07-26 13:15:59.554 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-26 13:15:59.594 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-26 13:15:59.595 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-26 13:15:59.669 +03:00 [DBG] Processing signout request for 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 13:15:59.690 +03:00 [DBG] Start end session request validation
2019-07-26 13:15:59.711 +03:00 [DBG] Start identity token validation
2019-07-26 13:15:59.723 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:15:59.723 +03:00 [DBG] Client found: spa / SPA Client
2019-07-26 13:15:59.839 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 13:15:59.843 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564135740,"exp":1564136040,"iss":"http://localhost:5000","aud":"spa","nonce":"6adbb9b54059428380a01c0ad4c56466","iat":1564135740,"at_hash":"ixY2wfnTpUfjqYxc2J33sA","sid":"40545b360895f1cba8e11c7ca2c6d530","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564135738,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-26 13:15:59.864 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQxMzU3NDAsImV4cCI6MTU2NDEzNjA0MCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI2YWRiYjliNTQwNTk0MjgzODBhMDFjMGFkNGM1NjQ2NiIsImlhdCI6MTU2NDEzNTc0MCwiYXRfaGFzaCI6Iml4WTJ3Zm5UcFVmanFZeGMySjMzc0EiLCJzaWQiOiI0MDU0NWIzNjA4OTVmMWNiYThlMTFjN2NhMmM2ZDUzMCIsInN1YiI6IjZiMjQ4NDRlLWZmN2MtNDVkYy04Zjk0LTk4ZjhkNDYzYzcxOSIsImF1dGhfdGltZSI6MTU2NDEzNTczOCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.EVFPItxc5HDo5clSwBFRwqOREkzGv6E9Ejd74xpGYbGQvUU5VZ0hrcagjMy9I6mk0_5Gd8hP8mH8DHPJ2yuht-Qfskq9JtJA-E90MHEjW2CV8RKJ4z_kfhKcV7go1eRxZfsWUfq3GblFLPBXNSLCXpG975raQBtyhdiCHjFlS1h7a0hrHGZH7rbtffzr1YMXNaaG0DqTEklbO0cUVEneFmGacEnAAj1zbV62PuA5dmDzQPQcDUdCqkY8fGK5MWwXaPSgZwlxZi0F-mVrgbO4myNxxfHk58cdO2le-w7PIdT9h8mcy-gwS-qpHP4-FJZTqrAy6JXOzvnVp0K60qpC7w"},"$type":"EndSessionRequestValidationLog"}
2019-07-26 13:15:59.865 +03:00 [DBG] Success validating end session request from spa
2019-07-26 13:16:00.090 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 13:16:00.093 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 13:16:00.095 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 13:16:00.099 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHM40EA83U:00000002","TimeStamp":"2019-07-26T10:16:00.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 13:16:03.476 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 13:16:03.478 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 13:16:03.478 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 13:16:03.478 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 13:16:03.480 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 13:16:03.480 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 13:16:03.480 +03:00 [DBG] Start discovery request
2019-07-26 13:16:03.514 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 13:16:03.516 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 13:16:03.516 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 13:16:03.516 +03:00 [DBG] Start authorize request
2019-07-26 13:16:03.517 +03:00 [DBG] No user present in authorize request
2019-07-26 13:16:03.517 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:16:03.517 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:16:03.518 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:16:03.519 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"3b15fb01e6fb427e8475342b62ea5d02","UiLocales":null,"Nonce":"7b935191e1454b8ebced61f5cafbd13c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"3b15fb01e6fb427e8475342b62ea5d02","nonce":"7b935191e1454b8ebced61f5cafbd13c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 13:16:03.519 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 13:16:03.564 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:16:03.564 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:16:03.565 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:16:03.566 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:16:05.530 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-26 13:16:07.567 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-26 13:16:07.646 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHM40EA83U:00000008","TimeStamp":"2019-07-26T10:16:07.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 13:16:07.667 +03:00 [DBG] Augmenting SignInContext
2019-07-26 13:16:07.668 +03:00 [DBG] Adding amr claim with value: external
2019-07-26 13:16:07.668 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 13:16:07.669 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 13:16:07.684 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 13:16:07.685 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 13:16:07.685 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 13:16:07.686 +03:00 [DBG] Start authorize callback request
2019-07-26 13:16:07.686 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-26 13:16:07.686 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:16:07.687 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:16:07.687 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:16:07.687 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"3b15fb01e6fb427e8475342b62ea5d02","UiLocales":null,"Nonce":"7b935191e1454b8ebced61f5cafbd13c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d3f4737f6636f478c17cbb45377ecd04","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"3b15fb01e6fb427e8475342b62ea5d02","nonce":"7b935191e1454b8ebced61f5cafbd13c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 13:16:07.693 +03:00 [DBG] user_consent grant with value: spa|2e9c0c95-7cb6-4e0f-9554-f017b3d294fd not found in store.
2019-07-26 13:16:07.693 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 13:16:07.693 +03:00 [INF] Showing consent: User has not yet consented
2019-07-26 13:16:07.713 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:16:07.714 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:16:07.715 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:16:07.715 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:16:09.453 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 13:16:09.461 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:16:09.461 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:16:09.462 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:16:09.463 +03:00 [INF] {"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOHM40EA83U:0000000B","TimeStamp":"2019-07-26T10:16:09.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-26 13:16:09.464 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:16:09.476 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 13:16:09.477 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 13:16:09.477 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 13:16:09.477 +03:00 [DBG] Start authorize callback request
2019-07-26 13:16:09.478 +03:00 [DBG] User in authorize request: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-26 13:16:09.478 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 13:16:09.478 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:16:09.479 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 13:16:09.479 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"3b15fb01e6fb427e8475342b62ea5d02","UiLocales":null,"Nonce":"7b935191e1454b8ebced61f5cafbd13c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d3f4737f6636f478c17cbb45377ecd04","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"3b15fb01e6fb427e8475342b62ea5d02","nonce":"7b935191e1454b8ebced61f5cafbd13c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 13:16:09.484 +03:00 [DBG] user_consent grant with value: spa|2e9c0c95-7cb6-4e0f-9554-f017b3d294fd not found in store.
2019-07-26 13:16:09.484 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 13:16:09.485 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-26 13:16:09.485 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-26 13:16:09.485 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-26 13:16:09.496 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 13:16:09.497 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 13:16:09.497 +03:00 [DBG] Getting claims for access token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-26 13:16:09.515 +03:00 [DBG] Getting claims for identity token for subject: 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd and client: spa
2019-07-26 13:16:09.515 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 13:16:09.525 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****S4vw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****IC-g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHM40EA83U:0000000C","TimeStamp":"2019-07-26T10:16:09.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 13:16:09.525 +03:00 [INF] Authorize endpoint response
{"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"3b15fb01e6fb427e8475342b62ea5d02","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 13:16:09.526 +03:00 [DBG] Augmenting SignInContext
2019-07-26 13:16:09.526 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 13:16:10.403 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 13:16:10.405 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 13:16:10.406 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 13:16:10.407 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 13:16:10.408 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 13:16:10.408 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 13:16:10.408 +03:00 [DBG] Start discovery request
2019-07-26 13:16:10.454 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 13:16:10.455 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 13:16:10.455 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 13:16:10.458 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 13:16:10.460 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 13:16:10.460 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 13:16:10.460 +03:00 [DBG] Start key discovery request
2019-07-26 13:16:10.548 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 13:16:10.549 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 13:16:10.549 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 13:16:10.563 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 13:16:10.563 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 13:16:10.564 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 13:16:10.564 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 13:16:10.566 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 13:16:10.566 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 13:16:10.566 +03:00 [DBG] Start userinfo request
2019-07-26 13:16:10.566 +03:00 [DBG] Bearer token found in header
2019-07-26 13:16:10.572 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:16:10.573 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:16:10.577 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 13:16:10.579 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564136169,"exp":1564139769,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","auth_time":1564136167,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-26 13:16:10.579 +03:00 [DBG] Creating userinfo response
2019-07-26 13:16:10.579 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 13:16:10.579 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 13:16:10.579 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 13:16:10.580 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 13:16:10.586 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 13:16:10.586 +03:00 [DBG] End userinfo request
2019-07-26 13:16:10.661 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 13:16:10.661 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 13:16:10.661 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 13:16:10.661 +03:00 [DBG] Rendering check session result
2019-07-26 13:31:21.328 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-26 13:31:21.336 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-26 13:31:21.336 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-26 13:31:21.338 +03:00 [DBG] Processing signout request for 2e9c0c95-7cb6-4e0f-9554-f017b3d294fd
2019-07-26 13:31:21.339 +03:00 [DBG] Start end session request validation
2019-07-26 13:31:21.339 +03:00 [DBG] Start identity token validation
2019-07-26 13:31:21.344 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 13:31:21.344 +03:00 [DBG] Client found: spa / SPA Client
2019-07-26 13:31:21.402 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 13:31:21.403 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564136169,"exp":1564136469,"iss":"http://localhost:5000","aud":"spa","nonce":"7b935191e1454b8ebced61f5cafbd13c","iat":1564136169,"at_hash":"atw6temClSywqkGVVS16VQ","sid":"d3f4737f6636f478c17cbb45377ecd04","sub":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","auth_time":1564136167,"idp":"Facebook","amr":"external"},"$type":"TokenValidationLog"}
2019-07-26 13:31:21.404 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQxMzYxNjksImV4cCI6MTU2NDEzNjQ2OSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI3YjkzNTE5MWUxNDU0YjhlYmNlZDYxZjVjYWZiZDEzYyIsImlhdCI6MTU2NDEzNjE2OSwiYXRfaGFzaCI6ImF0dzZ0ZW1DbFN5d3FrR1ZWUzE2VlEiLCJzaWQiOiJkM2Y0NzM3ZjY2MzZmNDc4YzE3Y2JiNDUzNzdlY2QwNCIsInN1YiI6IjJlOWMwYzk1LTdjYjYtNGUwZi05NTU0LWYwMTdiM2QyOTRmZCIsImF1dGhfdGltZSI6MTU2NDEzNjE2NywiaWRwIjoiRmFjZWJvb2siLCJhbXIiOlsiZXh0ZXJuYWwiXX0.PVTr_Ch_pm8otFSglr1d15AHhn9Lu0lFYTSynQSc6Kzxk26LjhyPCGOsgI3DFU3IoeOFkBNIWHjT16DVH8xEhanXHlmUJH3Ti0BgG3vy7L9dUd6xIMHV7eQsf8rkKPEewhU-aDjZ0vNIcbrlzxdRXNCBKBUgG3qSvDrS3q3A2zHtfjaeASYCiTmqZgSjwPiOUOCfJMPVXFCsk6zmVeM9gap-9Tf78Kiq8__sp-aMjQhwwhWAq-9JRKi2pDoKKshnuN2RYlpvciYjS23MpdBaMuwtXVsNrdB3Zw50R_kkUN5TssCxX1kvpOQJ3Ll7g7q76Bb35gT-hRHaCIXN7mS4vw"},"$type":"EndSessionRequestValidationLog"}
2019-07-26 13:31:21.405 +03:00 [DBG] Success validating end session request from spa
2019-07-26 13:31:21.447 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 13:31:21.447 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 13:31:21.448 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 13:31:21.449 +03:00 [INF] {"SubjectId":"2e9c0c95-7cb6-4e0f-9554-f017b3d294fd","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHM40EA83V:00000002","TimeStamp":"2019-07-26T10:31:21.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 15:35:45.343 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:35:45.394 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:35:45.394 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:35:45.411 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:35:45.443 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:35:45.444 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:35:45.446 +03:00 [DBG] Start discovery request
2019-07-26 15:35:45.530 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 15:35:45.535 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 15:35:45.535 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 15:35:45.536 +03:00 [DBG] Start authorize request
2019-07-26 15:35:45.539 +03:00 [DBG] No user present in authorize request
2019-07-26 15:35:45.539 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 15:35:45.544 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:35:45.548 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 15:35:45.556 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f7696cc548af4fdbae1eed7b43050d00","UiLocales":null,"Nonce":"290be07ed8c347a590343fb7ca7f1ab8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f7696cc548af4fdbae1eed7b43050d00","nonce":"290be07ed8c347a590343fb7ca7f1ab8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 15:35:45.557 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 15:35:45.626 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 15:35:45.627 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:35:45.628 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 15:35:45.632 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:35:54.191 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 15:35:54.203 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 15:35:54.203 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:35:54.204 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 15:35:54.333 +03:00 [DBG] Augmenting SignInContext
2019-07-26 15:35:54.333 +03:00 [DBG] Adding idp claim with value: local
2019-07-26 15:35:54.333 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-26 15:35:54.334 +03:00 [DBG] Adding auth_time claim with value: 1564144554
2019-07-26 15:35:54.338 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 15:35:54.342 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHM40EA840:00000004","TimeStamp":"2019-07-26T12:35:54.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 15:35:54.343 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:35:54.364 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 15:35:54.365 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 15:35:54.365 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 15:35:54.366 +03:00 [DBG] Start authorize callback request
2019-07-26 15:35:54.368 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 15:35:54.368 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 15:35:54.368 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:35:54.369 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 15:35:54.370 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f7696cc548af4fdbae1eed7b43050d00","UiLocales":null,"Nonce":"290be07ed8c347a590343fb7ca7f1ab8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"a9f041b10046916578e74be7a76ebb93","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f7696cc548af4fdbae1eed7b43050d00","nonce":"290be07ed8c347a590343fb7ca7f1ab8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 15:35:54.425 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-26 15:35:54.426 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 15:35:54.427 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 15:35:54.427 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 15:35:54.449 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-26 15:35:54.449 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 15:35:54.461 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****qehg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Ayew","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHM40EA840:00000005","TimeStamp":"2019-07-26T12:35:54.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 15:35:54.462 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"f7696cc548af4fdbae1eed7b43050d00","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 15:35:54.463 +03:00 [DBG] Augmenting SignInContext
2019-07-26 15:35:54.464 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 15:35:56.174 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:35:56.175 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:35:56.176 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:35:56.177 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:35:56.177 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:35:56.178 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:35:56.178 +03:00 [DBG] Start discovery request
2019-07-26 15:35:56.284 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 15:35:56.284 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:35:56.284 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:35:56.285 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 15:35:56.286 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 15:35:56.287 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 15:35:56.287 +03:00 [DBG] Start key discovery request
2019-07-26 15:35:56.384 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 15:35:56.385 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:35:56.385 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:35:56.411 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 15:35:56.413 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:35:56.413 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:35:56.413 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 15:35:56.416 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 15:35:56.416 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 15:35:56.417 +03:00 [DBG] Start userinfo request
2019-07-26 15:35:56.417 +03:00 [DBG] Bearer token found in header
2019-07-26 15:35:56.430 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:35:56.431 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 15:35:56.438 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 15:35:56.438 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564144554,"exp":1564148154,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564144554,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-26 15:35:56.439 +03:00 [DBG] Creating userinfo response
2019-07-26 15:35:56.439 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 15:35:56.439 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 15:35:56.439 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 15:35:56.439 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 15:35:56.448 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 15:35:56.449 +03:00 [DBG] End userinfo request
2019-07-26 15:35:56.556 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 15:35:56.560 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 15:35:56.561 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 15:35:56.561 +03:00 [DBG] Rendering check session result
2019-07-26 15:35:57.335 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:35:57.336 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:35:57.337 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:35:57.337 +03:00 [DBG] Start discovery request
2019-07-26 15:35:57.559 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 15:35:57.560 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 15:35:57.562 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 15:35:57.562 +03:00 [DBG] Start key discovery request
2019-07-26 15:38:22.166 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:38:22.168 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:38:22.169 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:38:22.174 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:38:22.176 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:38:22.176 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:38:22.176 +03:00 [DBG] Start discovery request
2019-07-26 15:38:22.401 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 15:38:22.401 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 15:38:22.402 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 15:38:22.402 +03:00 [DBG] Rendering check session result
2019-07-26 15:52:34.370 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:52:34.393 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:52:34.394 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:52:34.394 +03:00 [DBG] Start discovery request
2019-07-26 15:52:34.814 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 15:52:34.817 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 15:52:34.817 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 15:52:34.818 +03:00 [DBG] Start key discovery request
2019-07-26 15:53:43.509 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 15:53:43.516 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 15:53:43.516 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 15:53:43.517 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 15:53:43.517 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 15:53:43.518 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 15:53:43.518 +03:00 [DBG] Start discovery request
2019-07-26 15:53:44.194 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 15:53:44.194 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 15:53:44.195 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 15:53:44.196 +03:00 [DBG] Rendering check session result
2019-07-26 16:00:08.490 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:00:08.496 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:00:08.497 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:00:08.504 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:00:08.515 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:00:08.516 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:00:08.517 +03:00 [DBG] Start discovery request
2019-07-26 16:00:08.807 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:00:08.807 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:00:08.808 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:00:08.809 +03:00 [DBG] Rendering check session result
2019-07-26 16:00:29.791 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:00:29.794 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:00:29.794 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:00:29.794 +03:00 [DBG] Start discovery request
2019-07-26 16:00:30.164 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 16:00:30.167 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 16:00:30.167 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 16:00:30.167 +03:00 [DBG] Start key discovery request
2019-07-26 16:07:03.923 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:07:03.924 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:07:03.924 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:07:03.925 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:07:03.926 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:07:03.926 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:07:03.926 +03:00 [DBG] Start discovery request
2019-07-26 16:07:04.933 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 16:07:04.935 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 16:07:04.935 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 16:07:04.936 +03:00 [DBG] Start authorize request
2019-07-26 16:07:04.937 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 16:07:04.937 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 16:07:04.940 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 16:07:04.942 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 16:07:04.948 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"890acc4b08f649178a4052723dd06d0b","UiLocales":null,"Nonce":"f8d220253a8b478eac64f407cab65b63","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"a9f041b10046916578e74be7a76ebb93","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"890acc4b08f649178a4052723dd06d0b","nonce":"f8d220253a8b478eac64f407cab65b63"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 16:07:04.971 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-26 16:07:04.971 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 16:07:04.971 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 16:07:04.971 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 16:07:04.992 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-26 16:07:04.992 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 16:07:05.007 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Ki5g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Z-hw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHM40EA845:00000002","TimeStamp":"2019-07-26T13:07:05.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 16:07:05.009 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"890acc4b08f649178a4052723dd06d0b","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 16:07:07.326 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:07:07.329 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:07:07.330 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:07:07.330 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:07:07.333 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:07:07.333 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:07:07.334 +03:00 [DBG] Start discovery request
2019-07-26 16:07:07.435 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 16:07:07.436 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:07:07.436 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:07:07.437 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 16:07:07.440 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 16:07:07.440 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 16:07:07.440 +03:00 [DBG] Start key discovery request
2019-07-26 16:07:07.537 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 16:07:07.537 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:07:07.537 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:07:08.147 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 16:07:08.198 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:07:08.199 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:07:08.199 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 16:07:08.210 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 16:07:08.210 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 16:07:08.218 +03:00 [DBG] Start userinfo request
2019-07-26 16:07:08.219 +03:00 [DBG] Bearer token found in header
2019-07-26 16:07:08.242 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 16:07:08.242 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 16:07:08.274 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 16:07:08.277 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564146424,"exp":1564150024,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564144554,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-26 16:07:08.278 +03:00 [DBG] Creating userinfo response
2019-07-26 16:07:08.279 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 16:07:08.280 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 16:07:08.281 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 16:07:08.281 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 16:07:08.293 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 16:07:08.294 +03:00 [DBG] End userinfo request
2019-07-26 16:07:08.425 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:07:08.425 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:07:08.426 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:07:08.426 +03:00 [DBG] Rendering check session result
2019-07-26 16:08:12.391 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:08:12.392 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:08:12.392 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:08:12.393 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:08:12.394 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:08:12.394 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:08:12.394 +03:00 [DBG] Start discovery request
2019-07-26 16:08:12.529 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:08:12.530 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:08:12.530 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:08:12.530 +03:00 [DBG] Rendering check session result
2019-07-26 16:08:13.980 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:08:13.984 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:08:13.984 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:08:13.985 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:08:13.986 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:08:13.986 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:08:13.986 +03:00 [DBG] Start discovery request
2019-07-26 16:08:14.252 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:08:14.253 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:08:14.253 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:08:14.253 +03:00 [DBG] Rendering check session result
2019-07-26 16:09:10.080 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:09:10.081 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:09:10.081 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:09:10.082 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:09:10.083 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:09:10.083 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:09:10.083 +03:00 [DBG] Start discovery request
2019-07-26 16:09:10.162 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:09:10.162 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:09:10.162 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:09:10.163 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:09:10.163 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:09:10.163 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:09:10.163 +03:00 [DBG] Start discovery request
2019-07-26 16:09:10.315 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:09:10.316 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:09:10.316 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:09:10.317 +03:00 [DBG] Rendering check session result
2019-07-26 16:09:10.553 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:09:10.554 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:09:10.554 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:09:10.555 +03:00 [DBG] Rendering check session result
2019-07-26 16:41:44.997 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:41:45.037 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:41:45.038 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:41:45.079 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:41:45.154 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:41:45.155 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:41:45.160 +03:00 [DBG] Start discovery request
2019-07-26 16:41:45.848 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 16:41:45.866 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 16:41:45.867 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 16:41:45.867 +03:00 [DBG] Start authorize request
2019-07-26 16:41:45.873 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 16:41:45.875 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 16:41:45.877 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 16:41:45.883 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 16:41:45.898 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"742bcc77e6b94a6eb5c5867cb46fa17f","UiLocales":null,"Nonce":"e6c96f292e5147b3b2f89de0e5856d7f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"a9f041b10046916578e74be7a76ebb93","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"742bcc77e6b94a6eb5c5867cb46fa17f","nonce":"e6c96f292e5147b3b2f89de0e5856d7f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 16:41:45.978 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-26 16:41:45.978 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 16:41:45.979 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 16:41:45.979 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 16:41:46.017 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-26 16:41:46.017 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 16:41:46.035 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****mXcw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****989Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHM40EA847:00000002","TimeStamp":"2019-07-26T13:41:46.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 16:41:46.037 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"742bcc77e6b94a6eb5c5867cb46fa17f","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 16:41:47.522 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:41:47.523 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:41:47.525 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:41:47.526 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:41:47.528 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:41:47.529 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:41:47.529 +03:00 [DBG] Start discovery request
2019-07-26 16:41:48.214 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 16:41:48.214 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:41:48.214 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:41:48.216 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 16:41:48.234 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 16:41:48.234 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 16:41:48.234 +03:00 [DBG] Start key discovery request
2019-07-26 16:41:48.414 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 16:41:48.414 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:41:48.414 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:41:48.441 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 16:41:48.441 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:41:48.442 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:41:48.443 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 16:41:48.447 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 16:41:48.447 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 16:41:48.448 +03:00 [DBG] Start userinfo request
2019-07-26 16:41:48.449 +03:00 [DBG] Bearer token found in header
2019-07-26 16:41:48.458 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 16:41:48.458 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 16:41:48.465 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 16:41:48.466 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564148505,"exp":1564152105,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564144554,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-26 16:41:48.468 +03:00 [DBG] Creating userinfo response
2019-07-26 16:41:48.468 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 16:41:48.468 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 16:41:48.469 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 16:41:48.469 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 16:41:48.476 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 16:41:48.477 +03:00 [DBG] End userinfo request
2019-07-26 16:41:48.593 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:41:48.594 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:41:48.594 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:41:48.594 +03:00 [DBG] Rendering check session result
2019-07-26 16:43:43.205 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:43:43.235 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:43:43.235 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:43:43.269 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:43:43.336 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:43:43.340 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:43:43.341 +03:00 [DBG] Start discovery request
2019-07-26 16:43:43.545 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:43:43.549 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:43:43.549 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:43:43.551 +03:00 [DBG] Rendering check session result
2019-07-26 16:45:02.944 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:45:02.954 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:45:02.954 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:45:02.974 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:45:03.026 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:45:03.028 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:45:03.029 +03:00 [DBG] Start discovery request
2019-07-26 16:45:03.291 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:45:03.292 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:45:03.292 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:45:03.295 +03:00 [DBG] Rendering check session result
2019-07-26 16:50:20.347 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:50:20.392 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:50:20.393 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:50:20.435 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:50:20.482 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:50:20.483 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:50:20.484 +03:00 [DBG] Start discovery request
2019-07-26 16:50:21.292 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:50:21.300 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:50:21.311 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:50:21.344 +03:00 [DBG] Rendering check session result
2019-07-26 16:50:58.941 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:50:58.941 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:50:58.941 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:50:58.942 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:50:58.943 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:50:58.943 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:50:58.943 +03:00 [DBG] Start discovery request
2019-07-26 16:50:59.062 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:50:59.063 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:50:59.063 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:50:59.063 +03:00 [DBG] Rendering check session result
2019-07-26 16:51:34.394 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:51:34.445 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:51:34.446 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:51:34.449 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:51:34.451 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:51:34.452 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:51:34.452 +03:00 [DBG] Start discovery request
2019-07-26 16:51:35.057 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:51:35.058 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:51:35.058 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:51:35.058 +03:00 [DBG] Rendering check session result
2019-07-26 16:52:08.335 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:52:08.335 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:52:08.335 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:52:08.338 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:52:08.350 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:52:08.357 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:52:08.358 +03:00 [DBG] Start discovery request
2019-07-26 16:52:08.829 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:52:08.831 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:52:08.832 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:52:08.832 +03:00 [DBG] Rendering check session result
2019-07-26 16:57:15.070 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 16:57:15.072 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 16:57:15.073 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 16:57:15.074 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 16:57:15.078 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 16:57:15.078 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 16:57:15.079 +03:00 [DBG] Start discovery request
2019-07-26 16:57:15.196 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 16:57:15.196 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 16:57:15.197 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 16:57:15.197 +03:00 [DBG] Rendering check session result
2019-07-26 17:02:19.902 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 17:02:19.919 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 17:02:19.919 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 17:02:19.940 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 17:02:19.993 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 17:02:19.993 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 17:02:19.995 +03:00 [DBG] Start discovery request
2019-07-26 17:02:20.203 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 17:02:20.203 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 17:02:20.204 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 17:02:20.204 +03:00 [DBG] Rendering check session result
2019-07-26 17:02:47.169 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 17:02:47.170 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 17:02:47.170 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 17:02:47.171 +03:00 [DBG] Start discovery request
2019-07-26 17:02:47.506 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 17:02:47.509 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 17:02:47.510 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 17:02:47.510 +03:00 [DBG] Start key discovery request
2019-07-26 17:09:00.235 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 17:09:00.243 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 17:09:00.243 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 17:09:00.251 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 17:09:00.275 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 17:09:00.275 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 17:09:00.276 +03:00 [DBG] Start discovery request
2019-07-26 17:09:00.375 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 17:09:00.377 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 17:09:00.377 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 17:09:00.379 +03:00 [DBG] Rendering check session result
2019-07-26 17:14:18.956 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 17:14:18.990 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 17:14:18.992 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 17:14:18.994 +03:00 [DBG] Start discovery request
2019-07-26 17:14:19.355 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 17:14:19.358 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 17:14:19.358 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 17:14:19.359 +03:00 [DBG] Start key discovery request
2019-07-26 17:19:10.571 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 17:19:10.580 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 17:19:10.580 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 17:19:10.588 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 17:19:10.610 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 17:19:10.610 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 17:19:10.611 +03:00 [DBG] Start discovery request
2019-07-26 17:19:10.948 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 17:19:10.949 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 17:19:10.949 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 17:19:10.952 +03:00 [DBG] Rendering check session result
2019-07-26 17:20:42.306 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 17:20:42.307 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 17:20:42.308 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 17:20:42.308 +03:00 [DBG] Start discovery request
2019-07-26 17:20:42.749 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 17:20:42.751 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 17:20:42.751 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 17:20:42.751 +03:00 [DBG] Start key discovery request
2019-07-26 17:21:14.443 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 17:21:14.443 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 17:21:14.443 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 17:21:14.443 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 17:21:14.445 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 17:21:14.445 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 17:21:14.445 +03:00 [DBG] Start discovery request
2019-07-26 17:21:14.527 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 17:21:14.528 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 17:21:14.528 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 17:21:14.528 +03:00 [DBG] Rendering check session result
2019-07-26 17:25:43.155 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 17:25:43.155 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 17:25:43.156 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 17:25:43.158 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 17:25:43.160 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 17:25:43.160 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 17:25:43.161 +03:00 [DBG] Start discovery request
2019-07-26 17:25:43.262 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 17:25:43.262 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 17:25:43.263 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 17:25:43.263 +03:00 [DBG] Rendering check session result
2019-07-26 17:27:33.932 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 17:27:33.933 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 17:27:33.933 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 17:27:33.934 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 17:27:33.936 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 17:27:33.936 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 17:27:33.936 +03:00 [DBG] Start discovery request
2019-07-26 17:27:34.041 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 17:27:34.041 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 17:27:34.041 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 17:27:34.041 +03:00 [DBG] Rendering check session result
2019-07-26 17:27:58.639 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 17:27:58.640 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 17:27:58.640 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 17:27:58.641 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 17:27:58.641 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 17:27:58.641 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 17:27:58.641 +03:00 [DBG] Start discovery request
2019-07-26 17:27:58.680 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 17:27:58.685 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 17:27:58.686 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 17:27:58.686 +03:00 [DBG] Start authorize request
2019-07-26 17:27:58.689 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 17:27:58.689 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 17:27:58.692 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 17:27:58.697 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 17:27:58.706 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"db9b71c765c44f8e990da000d82eaf3d","UiLocales":null,"Nonce":"b7b24e8e934f40ce81d816fc1f0c7633","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"a9f041b10046916578e74be7a76ebb93","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"db9b71c765c44f8e990da000d82eaf3d","nonce":"b7b24e8e934f40ce81d816fc1f0c7633"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 17:27:58.826 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-26 17:27:58.827 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 17:27:58.827 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 17:27:58.827 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 17:27:58.862 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-26 17:27:58.862 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 17:27:58.880 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****9f4w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****sT_A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHM40EA84I:00000004","TimeStamp":"2019-07-26T14:27:58.0000000Z","ProcessId":11136,"LocalIpAddress":"127.0.0.1:44658","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 17:27:58.883 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"db9b71c765c44f8e990da000d82eaf3d","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 17:27:59.843 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 17:27:59.845 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 17:27:59.845 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 17:27:59.846 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 17:27:59.846 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 17:27:59.847 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 17:27:59.847 +03:00 [DBG] Start discovery request
2019-07-26 17:27:59.999 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 17:27:59.999 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 17:27:59.999 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 17:28:00.001 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 17:28:00.003 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 17:28:00.003 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 17:28:00.003 +03:00 [DBG] Start key discovery request
2019-07-26 17:28:00.153 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 17:28:00.153 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 17:28:00.153 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 17:28:00.178 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 17:28:00.179 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 17:28:00.179 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 17:28:00.180 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 17:28:00.182 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 17:28:00.184 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 17:28:00.186 +03:00 [DBG] Start userinfo request
2019-07-26 17:28:00.187 +03:00 [DBG] Bearer token found in header
2019-07-26 17:28:00.198 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 17:28:00.198 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 17:28:00.210 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 17:28:00.214 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564151278,"exp":1564154878,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564144554,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-26 17:28:00.215 +03:00 [DBG] Creating userinfo response
2019-07-26 17:28:00.216 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 17:28:00.216 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 17:28:00.233 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 17:28:00.235 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 17:28:00.261 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 17:28:00.261 +03:00 [DBG] End userinfo request
2019-07-26 17:28:00.626 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 17:28:00.626 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 17:28:00.627 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 17:28:00.627 +03:00 [DBG] Rendering check session result
2019-07-26 18:45:22.232 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 18:45:22.485 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 18:45:22.510 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 18:45:22.510 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 18:45:22.510 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 18:45:22.511 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 18:45:22.511 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 18:45:23.866 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 18:45:23.870 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 18:45:23.870 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 18:45:23.871 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 18:45:23.871 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 18:45:23.871 +03:00 [DBG] Error Url: /home/error
2019-07-26 18:45:23.871 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 18:45:23.894 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-26 18:45:23.932 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-26 19:00:37.471 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 19:00:37.515 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:00:37.516 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:00:37.556 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:00:38.109 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:00:38.109 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:00:38.121 +03:00 [DBG] Start discovery request
2019-07-26 19:00:38.647 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 19:00:38.685 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 19:00:38.689 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 19:00:38.704 +03:00 [DBG] Start authorize request
2019-07-26 19:00:38.872 +03:00 [DBG] No user present in authorize request
2019-07-26 19:00:38.935 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:00:39.055 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:39.145 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:00:39.172 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8ee71b818cd34fe781d7571c6c66be29","UiLocales":null,"Nonce":"751a3aa0787644ed8d41e1758c61deea","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8ee71b818cd34fe781d7571c6c66be29","nonce":"751a3aa0787644ed8d41e1758c61deea"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 19:00:39.213 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 19:00:39.377 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:00:39.377 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:39.378 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:00:39.386 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:46.154 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 19:00:46.256 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:00:46.257 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:46.257 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:00:49.965 +03:00 [DBG] Augmenting SignInContext
2019-07-26 19:00:49.972 +03:00 [DBG] Adding idp claim with value: local
2019-07-26 19:00:49.973 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-26 19:00:49.974 +03:00 [DBG] Adding auth_time claim with value: 1564156849
2019-07-26 19:00:49.995 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 19:00:50.015 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHS12PH3JB:00000004","TimeStamp":"2019-07-26T16:00:50.0000000Z","ProcessId":16156,"LocalIpAddress":"127.0.0.1:8953","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 19:00:50.019 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:50.053 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 19:00:50.055 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 19:00:50.055 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 19:00:50.067 +03:00 [DBG] Start authorize callback request
2019-07-26 19:00:50.079 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:00:50.079 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:00:50.079 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:50.079 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:00:50.080 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8ee71b818cd34fe781d7571c6c66be29","UiLocales":null,"Nonce":"751a3aa0787644ed8d41e1758c61deea","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"c25d6ba39958c8dcde0588e18af7ec60","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8ee71b818cd34fe781d7571c6c66be29","nonce":"751a3aa0787644ed8d41e1758c61deea"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 19:00:50.191 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-26 19:00:50.191 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 19:00:50.191 +03:00 [INF] Showing consent: User has not yet consented
2019-07-26 19:00:50.245 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:00:50.245 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:50.246 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:00:50.246 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:51.972 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 19:00:52.013 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:00:52.014 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:52.015 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:00:52.019 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOHS12PH3JB:00000007","TimeStamp":"2019-07-26T16:00:52.0000000Z","ProcessId":16156,"LocalIpAddress":"127.0.0.1:8953","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-26 19:00:52.057 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:52.074 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 19:00:52.075 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 19:00:52.075 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 19:00:52.075 +03:00 [DBG] Start authorize callback request
2019-07-26 19:00:52.087 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:00:52.087 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:00:52.087 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:52.088 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:00:52.088 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8ee71b818cd34fe781d7571c6c66be29","UiLocales":null,"Nonce":"751a3aa0787644ed8d41e1758c61deea","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"c25d6ba39958c8dcde0588e18af7ec60","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8ee71b818cd34fe781d7571c6c66be29","nonce":"751a3aa0787644ed8d41e1758c61deea"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 19:00:52.108 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-26 19:00:52.108 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 19:00:52.131 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-26 19:00:52.136 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-26 19:00:52.148 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:00:52.220 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 19:00:52.262 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 19:00:52.265 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:00:52.479 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-26 19:00:52.480 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 19:00:52.501 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3v-A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ibUg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHS12PH3JB:00000008","TimeStamp":"2019-07-26T16:00:52.0000000Z","ProcessId":16156,"LocalIpAddress":"127.0.0.1:8953","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 19:00:52.504 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"8ee71b818cd34fe781d7571c6c66be29","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 19:00:52.551 +03:00 [DBG] Augmenting SignInContext
2019-07-26 19:00:52.552 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 19:00:54.628 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 19:00:54.630 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:00:54.631 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:00:54.632 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:00:54.634 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:00:54.634 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:00:54.635 +03:00 [DBG] Start discovery request
2019-07-26 19:00:54.733 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 19:00:54.733 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:00:54.733 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:00:54.734 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 19:00:54.736 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 19:00:54.737 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 19:00:54.764 +03:00 [DBG] Start key discovery request
2019-07-26 19:00:54.857 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 19:00:54.858 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:00:54.858 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:00:54.870 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 19:00:54.870 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:00:54.870 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:00:54.871 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 19:00:54.879 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 19:00:54.879 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 19:00:54.893 +03:00 [DBG] Start userinfo request
2019-07-26 19:00:54.899 +03:00 [DBG] Bearer token found in header
2019-07-26 19:00:54.957 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:54.962 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:00:54.967 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 19:00:54.972 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564156852,"exp":1564160452,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564156849,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-26 19:00:54.984 +03:00 [DBG] Creating userinfo response
2019-07-26 19:00:54.997 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 19:00:55.008 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 19:00:55.013 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 19:00:55.013 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 19:00:55.021 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 19:00:55.023 +03:00 [DBG] End userinfo request
2019-07-26 19:00:55.066 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 19:00:55.073 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 19:00:55.074 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 19:00:55.078 +03:00 [DBG] Rendering check session result
2019-07-26 19:00:55.719 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:00:55.720 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:00:55.720 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:00:55.720 +03:00 [DBG] Start discovery request
2019-07-26 19:00:55.876 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 19:00:55.877 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 19:00:55.878 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 19:00:55.878 +03:00 [DBG] Start key discovery request
2019-07-26 19:02:22.457 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 19:02:22.458 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:02:22.458 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:02:22.459 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:02:22.459 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:02:22.460 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:02:22.460 +03:00 [DBG] Start discovery request
2019-07-26 19:02:22.749 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 19:02:22.749 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 19:02:22.749 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 19:02:22.749 +03:00 [DBG] Rendering check session result
2019-07-26 19:03:01.926 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 19:03:01.926 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:03:01.927 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:03:01.927 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:03:01.929 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:03:01.930 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:03:01.930 +03:00 [DBG] Start discovery request
2019-07-26 19:03:02.027 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 19:03:02.028 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 19:03:02.028 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 19:03:02.030 +03:00 [DBG] Rendering check session result
2019-07-26 19:03:19.679 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 19:03:19.679 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:03:19.679 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:03:19.682 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:03:19.683 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:03:19.684 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:03:19.684 +03:00 [DBG] Start discovery request
2019-07-26 19:03:19.712 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 19:03:19.716 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 19:03:19.716 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 19:03:19.717 +03:00 [DBG] Start authorize request
2019-07-26 19:03:19.718 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:03:19.718 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:03:19.719 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:03:19.719 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:03:19.721 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ead784d8e7284ac88f722b763514254d","UiLocales":null,"Nonce":"7f6476717ad0422d8883ecc4e1414e15","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"c25d6ba39958c8dcde0588e18af7ec60","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ead784d8e7284ac88f722b763514254d","nonce":"7f6476717ad0422d8883ecc4e1414e15"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 19:03:19.787 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-26 19:03:19.788 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 19:03:19.788 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 19:03:19.789 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:03:19.808 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-26 19:03:19.809 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 19:03:19.820 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****1UxQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****DrCw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHS12PH3JC:00000006","TimeStamp":"2019-07-26T16:03:19.0000000Z","ProcessId":16156,"LocalIpAddress":"127.0.0.1:8953","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 19:03:19.821 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"ead784d8e7284ac88f722b763514254d","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 19:03:20.949 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 19:03:20.960 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:03:20.965 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:03:20.969 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:03:20.970 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:03:20.970 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:03:20.970 +03:00 [DBG] Start discovery request
2019-07-26 19:03:21.053 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 19:03:21.055 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:03:21.055 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:03:21.056 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 19:03:21.057 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 19:03:21.057 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 19:03:21.057 +03:00 [DBG] Start key discovery request
2019-07-26 19:03:21.122 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 19:03:21.132 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:03:21.132 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:03:21.175 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 19:03:21.176 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:03:21.176 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:03:21.177 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 19:03:21.178 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 19:03:21.178 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 19:03:21.178 +03:00 [DBG] Start userinfo request
2019-07-26 19:03:21.179 +03:00 [DBG] Bearer token found in header
2019-07-26 19:03:21.187 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:03:21.188 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:03:21.193 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 19:03:21.193 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564156999,"exp":1564160599,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564156849,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-26 19:03:21.194 +03:00 [DBG] Creating userinfo response
2019-07-26 19:03:21.194 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 19:03:21.194 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 19:03:21.194 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 19:03:21.194 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 19:03:21.200 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 19:03:21.201 +03:00 [DBG] End userinfo request
2019-07-26 19:03:21.363 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 19:03:21.363 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 19:03:21.363 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 19:03:21.363 +03:00 [DBG] Rendering check session result
2019-07-26 19:04:30.309 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:04:30.311 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:04:30.311 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:04:30.311 +03:00 [DBG] Start discovery request
2019-07-26 19:04:30.624 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 19:04:30.624 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 19:04:30.624 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 19:04:30.624 +03:00 [DBG] Start key discovery request
2019-07-26 19:13:24.418 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-26 19:13:24.513 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-26 19:13:24.520 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-26 19:13:24.521 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-26 19:13:24.521 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-26 19:13:24.521 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-26 19:13:24.522 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-26 19:13:25.247 +03:00 [DBG] Login Url: /Account/Login
2019-07-26 19:13:25.250 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-26 19:13:25.250 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-26 19:13:25.251 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-26 19:13:25.251 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-26 19:13:25.251 +03:00 [DBG] Error Url: /home/error
2019-07-26 19:13:25.251 +03:00 [DBG] Error Id Parameter: errorId
2019-07-26 19:13:32.015 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 19:13:32.022 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:13:32.022 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:13:32.026 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:13:32.354 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:13:32.355 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:13:32.364 +03:00 [DBG] Start discovery request
2019-07-26 19:13:32.494 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 19:13:32.514 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 19:13:32.514 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 19:13:32.526 +03:00 [DBG] Start authorize request
2019-07-26 19:13:32.547 +03:00 [DBG] No user present in authorize request
2019-07-26 19:13:32.559 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:13:32.598 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:32.676 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:13:32.706 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a3fd320783784327b05730974b5876ec","UiLocales":null,"Nonce":"50a6c94d4b5c461abc4e5dded1f71cd2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a3fd320783784327b05730974b5876ec","nonce":"50a6c94d4b5c461abc4e5dded1f71cd2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 19:13:32.748 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 19:13:32.874 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:13:32.875 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:32.875 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:13:32.881 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:38.670 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 19:13:38.767 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:13:38.767 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:38.767 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:13:41.843 +03:00 [DBG] Augmenting SignInContext
2019-07-26 19:13:41.848 +03:00 [DBG] Adding idp claim with value: local
2019-07-26 19:13:41.848 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-26 19:13:41.849 +03:00 [DBG] Adding auth_time claim with value: 1564157621
2019-07-26 19:13:41.871 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 19:13:41.891 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHSGNU1SVJ:00000005","TimeStamp":"2019-07-26T16:13:41.0000000Z","ProcessId":2068,"LocalIpAddress":"127.0.0.1:17487","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 19:13:41.896 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:41.922 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 19:13:41.924 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 19:13:41.924 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 19:13:41.940 +03:00 [DBG] Start authorize callback request
2019-07-26 19:13:41.957 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:13:41.957 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:13:41.957 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:41.958 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:13:41.958 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a3fd320783784327b05730974b5876ec","UiLocales":null,"Nonce":"50a6c94d4b5c461abc4e5dded1f71cd2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4cfce7cd0586e07b9a6749c45ff3436e","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a3fd320783784327b05730974b5876ec","nonce":"50a6c94d4b5c461abc4e5dded1f71cd2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 19:13:42.078 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-26 19:13:42.078 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 19:13:42.078 +03:00 [INF] Showing consent: User has not yet consented
2019-07-26 19:13:42.133 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:13:42.133 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:42.133 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:13:42.134 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:43.669 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 19:13:43.703 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:13:43.703 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:43.703 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:13:43.708 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOHSGNU1SVJ:00000008","TimeStamp":"2019-07-26T16:13:43.0000000Z","ProcessId":2068,"LocalIpAddress":"127.0.0.1:17487","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-26 19:13:43.736 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:43.747 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 19:13:43.747 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 19:13:43.748 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 19:13:43.748 +03:00 [DBG] Start authorize callback request
2019-07-26 19:13:43.758 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:13:43.758 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:13:43.758 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:43.758 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:13:43.759 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a3fd320783784327b05730974b5876ec","UiLocales":null,"Nonce":"50a6c94d4b5c461abc4e5dded1f71cd2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4cfce7cd0586e07b9a6749c45ff3436e","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a3fd320783784327b05730974b5876ec","nonce":"50a6c94d4b5c461abc4e5dded1f71cd2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 19:13:43.780 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-26 19:13:43.780 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-26 19:13:43.800 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-26 19:13:43.807 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-26 19:13:43.816 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:13:43.878 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 19:13:43.910 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 19:13:43.911 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:13:44.072 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-26 19:13:44.072 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 19:13:44.091 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ygtA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kWbg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHSGNU1SVJ:00000009","TimeStamp":"2019-07-26T16:13:44.0000000Z","ProcessId":2068,"LocalIpAddress":"127.0.0.1:17487","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 19:13:44.094 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"a3fd320783784327b05730974b5876ec","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 19:13:44.131 +03:00 [DBG] Augmenting SignInContext
2019-07-26 19:13:44.132 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 19:13:45.414 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 19:13:45.419 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:13:45.419 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:13:45.456 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:13:45.457 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:13:45.458 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:13:45.459 +03:00 [DBG] Start discovery request
2019-07-26 19:13:45.621 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 19:13:45.622 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:13:45.622 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:13:45.624 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 19:13:45.626 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 19:13:45.626 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 19:13:45.646 +03:00 [DBG] Start key discovery request
2019-07-26 19:13:45.777 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 19:13:45.780 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:13:45.781 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:13:45.815 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 19:13:45.816 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:13:45.816 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:13:45.817 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 19:13:45.824 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 19:13:45.827 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 19:13:45.849 +03:00 [DBG] Start userinfo request
2019-07-26 19:13:45.858 +03:00 [DBG] Bearer token found in header
2019-07-26 19:13:45.923 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:45.929 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:13:45.935 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 19:13:45.938 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564157623,"exp":1564161223,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564157621,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-26 19:13:45.956 +03:00 [DBG] Creating userinfo response
2019-07-26 19:13:45.971 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 19:13:45.980 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 19:13:45.986 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 19:13:45.986 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 19:13:45.997 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 19:13:45.999 +03:00 [DBG] End userinfo request
2019-07-26 19:13:46.053 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 19:13:46.054 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 19:13:46.054 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 19:13:46.061 +03:00 [DBG] Rendering check session result
2019-07-26 19:13:50.842 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:13:50.843 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:13:50.843 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:13:50.843 +03:00 [DBG] Start discovery request
2019-07-26 19:13:50.982 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 19:13:50.983 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 19:13:50.983 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 19:13:50.984 +03:00 [DBG] Start key discovery request
2019-07-26 19:14:07.651 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-26 19:14:07.653 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-26 19:14:07.653 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-26 19:14:07.668 +03:00 [DBG] Processing signout request for 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:14:07.679 +03:00 [DBG] Start end session request validation
2019-07-26 19:14:07.691 +03:00 [DBG] Start identity token validation
2019-07-26 19:14:07.692 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:14:07.692 +03:00 [DBG] Client found: spa / SPA Client
2019-07-26 19:14:07.703 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 19:14:07.704 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564157624,"exp":1564157924,"iss":"http://localhost:5000","aud":"spa","nonce":"50a6c94d4b5c461abc4e5dded1f71cd2","iat":1564157624,"at_hash":"Zmh0r77MhbsJGub-sqAgBQ","sid":"4cfce7cd0586e07b9a6749c45ff3436e","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564157621,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-26 19:14:07.709 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQxNTc2MjQsImV4cCI6MTU2NDE1NzkyNCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1MGE2Yzk0ZDRiNWM0NjFhYmM0ZTVkZGVkMWY3MWNkMiIsImlhdCI6MTU2NDE1NzYyNCwiYXRfaGFzaCI6IlptaDByNzdNaGJzSkd1Yi1zcUFnQlEiLCJzaWQiOiI0Y2ZjZTdjZDA1ODZlMDdiOWE2NzQ5YzQ1ZmYzNDM2ZSIsInN1YiI6IjZiMjQ4NDRlLWZmN2MtNDVkYy04Zjk0LTk4ZjhkNDYzYzcxOSIsImF1dGhfdGltZSI6MTU2NDE1NzYyMSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.HLSL7Jvzzk3s8olhcRODJclvFuFePdc1KSHQiVNpRiEDcDI0HIYo139kxbXKJt_LVHvNQ5qGUaxMilnRYSrOZxigW15L_pwwZ-Jn2B0PKCn5u2EUAtZS7Wv8cEunii3Z1pH9El_srnwtY8-Y0V7KjX-lYjLBt3WjRbnJUBqs9TWt3oLC6Bb9tVwt7Fi0amUrA2z0IP4XAIz6k-C4Eeerv9Q9n2PZxvk_t6r3IQ76uTGNfolw6fqTOWdW1U13TJIhGfawUcitJomR0LXa4Ej_z4wofRfiWy3wNJF6HhkjRaC1lV1ua0f-efDCgARROIUxVfyIefnW8QtQs2SgxlygtA"},"$type":"EndSessionRequestValidationLog"}
2019-07-26 19:14:07.710 +03:00 [DBG] Success validating end session request from spa
2019-07-26 19:14:07.799 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 19:14:07.801 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 19:14:07.802 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 19:14:07.804 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHSGNU1SVJ:00000012","TimeStamp":"2019-07-26T16:14:07.0000000Z","ProcessId":2068,"LocalIpAddress":"127.0.0.1:17487","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-26 19:14:26.517 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 19:14:26.518 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:14:26.518 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:14:26.519 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:14:26.519 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:14:26.519 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:14:26.520 +03:00 [DBG] Start discovery request
2019-07-26 19:14:26.544 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-26 19:14:26.546 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-26 19:14:26.546 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-26 19:14:26.547 +03:00 [DBG] Start authorize request
2019-07-26 19:14:26.547 +03:00 [DBG] No user present in authorize request
2019-07-26 19:14:26.547 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:14:26.547 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:14:26.547 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:14:26.548 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2596c7858eab4213b5129e0cf0f57bbb","UiLocales":null,"Nonce":"7ccb5f00175249318f2b93bf2211f515","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2596c7858eab4213b5129e0cf0f57bbb","nonce":"7ccb5f00175249318f2b93bf2211f515"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 19:14:26.548 +03:00 [INF] Showing login: User is not authenticated
2019-07-26 19:14:26.569 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:14:26.570 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:14:26.570 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:14:26.570 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:14:34.631 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-26 19:14:34.636 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:14:34.638 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:14:34.638 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:14:34.678 +03:00 [DBG] Augmenting SignInContext
2019-07-26 19:14:34.678 +03:00 [DBG] Adding idp claim with value: local
2019-07-26 19:14:34.678 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-26 19:14:34.678 +03:00 [DBG] Adding auth_time claim with value: 1564157674
2019-07-26 19:14:34.679 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 19:14:34.680 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOHSGNU1SVJ:00000016","TimeStamp":"2019-07-26T16:14:34.0000000Z","ProcessId":2068,"LocalIpAddress":"127.0.0.1:17487","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-26 19:14:34.680 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:14:34.697 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-26 19:14:34.697 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-26 19:14:34.697 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-26 19:14:34.697 +03:00 [DBG] Start authorize callback request
2019-07-26 19:14:34.698 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:14:34.698 +03:00 [DBG] Start authorize request protocol validation
2019-07-26 19:14:34.698 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:14:34.699 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-26 19:14:34.699 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2596c7858eab4213b5129e0cf0f57bbb","UiLocales":null,"Nonce":"7ccb5f00175249318f2b93bf2211f515","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"67450e48fa2191b0ee400e593b710185","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2596c7858eab4213b5129e0cf0f57bbb","nonce":"7ccb5f00175249318f2b93bf2211f515"},"$type":"AuthorizeRequestValidationLog"}
2019-07-26 19:14:34.727 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-26 19:14:34.727 +03:00 [DBG] Creating Implicit Flow response.
2019-07-26 19:14:34.728 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-26 19:14:34.728 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:14:34.743 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-26 19:14:34.743 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-26 19:14:34.755 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****337A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****WqKg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOHSGNU1SVJ:00000017","TimeStamp":"2019-07-26T16:14:34.0000000Z","ProcessId":2068,"LocalIpAddress":"127.0.0.1:17487","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-26 19:14:34.756 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"2596c7858eab4213b5129e0cf0f57bbb","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-26 19:14:34.757 +03:00 [DBG] Augmenting SignInContext
2019-07-26 19:14:34.758 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-26 19:14:36.721 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-26 19:14:36.723 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:14:36.724 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:14:36.724 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-26 19:14:36.725 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-26 19:14:36.725 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-26 19:14:36.725 +03:00 [DBG] Start discovery request
2019-07-26 19:14:36.828 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-26 19:14:36.845 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:14:36.845 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:14:36.846 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-26 19:14:36.846 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-26 19:14:36.846 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-26 19:14:36.847 +03:00 [DBG] Start key discovery request
2019-07-26 19:14:36.946 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 19:14:36.947 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:14:36.948 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:14:36.960 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-26 19:14:36.961 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-26 19:14:36.961 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-26 19:14:36.961 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-26 19:14:36.964 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-26 19:14:36.964 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-26 19:14:36.964 +03:00 [DBG] Start userinfo request
2019-07-26 19:14:36.964 +03:00 [DBG] Bearer token found in header
2019-07-26 19:14:36.969 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:14:36.970 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:14:36.974 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 19:14:36.983 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564157674,"exp":1564161274,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564157674,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-26 19:14:36.983 +03:00 [DBG] Creating userinfo response
2019-07-26 19:14:36.983 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 19:14:36.983 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 19:14:36.984 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-26 19:14:36.984 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-26 19:14:36.990 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-26 19:14:36.991 +03:00 [DBG] End userinfo request
2019-07-26 19:14:37.077 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-26 19:14:37.077 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-26 19:14:37.077 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-26 19:14:37.077 +03:00 [DBG] Rendering check session result
2019-07-26 19:15:12.829 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-26 19:15:12.830 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-26 19:15:12.831 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-26 19:15:12.832 +03:00 [DBG] Processing signout request for 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-26 19:15:12.832 +03:00 [DBG] Start end session request validation
2019-07-26 19:15:12.832 +03:00 [DBG] Start identity token validation
2019-07-26 19:15:12.833 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-26 19:15:12.833 +03:00 [DBG] Client found: spa / SPA Client
2019-07-26 19:15:12.846 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-26 19:15:12.846 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564157674,"exp":1564157974,"iss":"http://localhost:5000","aud":"spa","nonce":"7ccb5f00175249318f2b93bf2211f515","iat":1564157674,"at_hash":"CnjUAHh0DCGxyYXa4VT0Bg","sid":"67450e48fa2191b0ee400e593b710185","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564157674,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-26 19:15:12.846 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQxNTc2NzQsImV4cCI6MTU2NDE1Nzk3NCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI3Y2NiNWYwMDE3NTI0OTMxOGYyYjkzYmYyMjExZjUxNSIsImlhdCI6MTU2NDE1NzY3NCwiYXRfaGFzaCI6IkNualVBSGgwRENHeHlZWGE0VlQwQmciLCJzaWQiOiI2NzQ1MGU0OGZhMjE5MWIwZWU0MDBlNTkzYjcxMDE4NSIsInN1YiI6IjZiMjQ4NDRlLWZmN2MtNDVkYy04Zjk0LTk4ZjhkNDYzYzcxOSIsImF1dGhfdGltZSI6MTU2NDE1NzY3NCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.Vl_1-7SltkHuXpYmxUw2RzrP86GWi7oycUookZ_L6oF-DCs6lw9LkE8A2TNnLQ8GPdJL05imcJ6lix70wENivyc2TDdVyjJgWcs7TNuI-GMPkxvwWFHfxrcZVBiQ4EjuD_wwjmV5blQkEwL310sudlMHIXBjlbVMLgd1VIW4q0kWeONp7Uz3fNL2c22qd_5LapOFT57HLWqxVQ-wlgKE4pLHU60YrWxcOHT0Xch-QpfcgEN-6ULjwT7R0_8jrqNz2SNwDjA0CAJXhe3sNEOLDg3hp9hlEjWv2eGEdJ4JHNwnkRF_qlAaDwsQi6lvgvgRvLrVTtdfhyYHyWv0q2337A"},"$type":"EndSessionRequestValidationLog"}
2019-07-26 19:15:12.847 +03:00 [DBG] Success validating end session request from spa
2019-07-26 19:15:12.870 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-26 19:15:12.872 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-26 19:15:12.873 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-26 19:15:12.874 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOHSGNU1SVJ:0000001E","TimeStamp":"2019-07-26T16:15:12.0000000Z","ProcessId":2068,"LocalIpAddress":"127.0.0.1:17487","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-27 21:00:43.926 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-27 21:00:44.428 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-27 21:00:44.436 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-27 21:00:44.436 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-27 21:00:44.437 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-27 21:00:44.437 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-27 21:00:44.437 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-27 21:00:46.214 +03:00 [DBG] Login Url: /Account/Login
2019-07-27 21:00:46.220 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-27 21:00:46.234 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-27 21:00:46.234 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-27 21:00:46.235 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-27 21:00:46.235 +03:00 [DBG] Error Url: /home/error
2019-07-27 21:00:46.235 +03:00 [DBG] Error Id Parameter: errorId
2019-07-27 21:04:24.245 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-27 21:04:24.319 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-27 21:04:24.323 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-27 21:04:24.324 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-27 21:04:24.324 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-27 21:04:24.324 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-27 21:04:24.324 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-27 21:04:25.093 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-27 21:04:25.114 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:04:25.114 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:04:25.196 +03:00 [DBG] Login Url: /Account/Login
2019-07-27 21:04:25.196 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-27 21:04:25.196 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-27 21:04:25.196 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-27 21:04:25.197 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-27 21:04:25.197 +03:00 [DBG] Error Url: /home/error
2019-07-27 21:04:25.197 +03:00 [DBG] Error Id Parameter: errorId
2019-07-27 21:04:25.246 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-27 21:04:25.532 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-27 21:04:25.532 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-27 21:04:25.541 +03:00 [DBG] Start discovery request
2019-07-27 21:04:25.690 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-27 21:04:25.709 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-27 21:04:25.710 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-27 21:04:25.719 +03:00 [DBG] Start authorize request
2019-07-27 21:04:25.741 +03:00 [DBG] No user present in authorize request
2019-07-27 21:04:25.754 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:04:25.794 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:04:25.874 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:04:25.905 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0508146dabdf43d9a41477069f2224d8","UiLocales":null,"Nonce":"63fbdab28bd549da8bf5b213ad8c18f6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0508146dabdf43d9a41477069f2224d8","nonce":"63fbdab28bd549da8bf5b213ad8c18f6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-27 21:04:25.950 +03:00 [INF] Showing login: User is not authenticated
2019-07-27 21:04:26.295 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:04:26.296 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:04:26.296 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:04:26.303 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:04:32.289 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-27 21:04:39.154 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-27 21:04:42.747 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"112262384376329039327","SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","DisplayName":"Илья","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOINJDTTTJD:00000006","TimeStamp":"2019-07-27T18:04:42.0000000Z","ProcessId":13128,"LocalIpAddress":"127.0.0.1:3612","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-27 21:04:42.780 +03:00 [DBG] Augmenting SignInContext
2019-07-27 21:04:42.787 +03:00 [DBG] Adding amr claim with value: external
2019-07-27 21:04:42.799 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-27 21:04:42.813 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-27 21:04:42.841 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-27 21:04:42.843 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-27 21:04:42.843 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-27 21:04:42.856 +03:00 [DBG] Start authorize callback request
2019-07-27 21:04:42.870 +03:00 [DBG] User in authorize request: 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-27 21:04:42.870 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:04:42.870 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:04:42.871 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:04:42.871 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0508146dabdf43d9a41477069f2224d8","UiLocales":null,"Nonce":"63fbdab28bd549da8bf5b213ad8c18f6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f4c6a815eb22cde7fd7e389952643d63","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0508146dabdf43d9a41477069f2224d8","nonce":"63fbdab28bd549da8bf5b213ad8c18f6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-27 21:04:43.022 +03:00 [DBG] user_consent grant with value: spa|951678ae-e2c5-4fe9-8742-2be3bc55c043 not found in store.
2019-07-27 21:04:43.022 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-27 21:04:43.023 +03:00 [INF] Showing consent: User has not yet consented
2019-07-27 21:04:43.088 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:04:43.088 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:04:43.089 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:04:43.089 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:04:46.114 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-27 21:04:46.260 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:04:46.260 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:04:46.261 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:04:46.263 +03:00 [INF] {"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOINJDTTTJD:0000000A","TimeStamp":"2019-07-27T18:04:46.0000000Z","ProcessId":13128,"LocalIpAddress":"127.0.0.1:3612","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-27 21:04:46.300 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:04:46.312 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-27 21:04:46.313 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-27 21:04:46.313 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-27 21:04:46.313 +03:00 [DBG] Start authorize callback request
2019-07-27 21:04:46.321 +03:00 [DBG] User in authorize request: 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-27 21:04:46.321 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:04:46.321 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:04:46.322 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:04:46.322 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"0508146dabdf43d9a41477069f2224d8","UiLocales":null,"Nonce":"63fbdab28bd549da8bf5b213ad8c18f6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f4c6a815eb22cde7fd7e389952643d63","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"0508146dabdf43d9a41477069f2224d8","nonce":"63fbdab28bd549da8bf5b213ad8c18f6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-27 21:04:46.338 +03:00 [DBG] user_consent grant with value: spa|951678ae-e2c5-4fe9-8742-2be3bc55c043 not found in store.
2019-07-27 21:04:46.338 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-27 21:04:46.354 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-27 21:04:46.358 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-27 21:04:46.367 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-27 21:04:46.407 +03:00 [DBG] Creating Implicit Flow response.
2019-07-27 21:04:46.439 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-27 21:04:46.441 +03:00 [DBG] Getting claims for access token for subject: 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-27 21:04:46.578 +03:00 [DBG] Getting claims for identity token for subject: 951678ae-e2c5-4fe9-8742-2be3bc55c043 and client: spa
2019-07-27 21:04:46.578 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-27 21:04:46.594 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Bzsw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5lYg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOINJDTTTJD:0000000B","TimeStamp":"2019-07-27T18:04:46.0000000Z","ProcessId":13128,"LocalIpAddress":"127.0.0.1:3612","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-27 21:04:46.598 +03:00 [INF] Authorize endpoint response
{"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"0508146dabdf43d9a41477069f2224d8","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-27 21:04:46.629 +03:00 [DBG] Augmenting SignInContext
2019-07-27 21:04:46.629 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-27 21:04:48.747 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-27 21:04:48.748 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:04:48.748 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:04:48.749 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-27 21:04:48.749 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-27 21:04:48.750 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-27 21:04:48.750 +03:00 [DBG] Start discovery request
2019-07-27 21:04:48.870 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-27 21:04:48.870 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:04:48.870 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:04:48.871 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-27 21:04:48.872 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-27 21:04:48.873 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-27 21:04:48.896 +03:00 [DBG] Start key discovery request
2019-07-27 21:04:49.004 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-27 21:04:49.005 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:04:49.005 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:04:49.044 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-27 21:04:49.044 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:04:49.044 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:04:49.045 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-27 21:04:49.052 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-27 21:04:49.052 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-27 21:04:49.078 +03:00 [DBG] Start userinfo request
2019-07-27 21:04:49.087 +03:00 [DBG] Bearer token found in header
2019-07-27 21:04:49.146 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:04:49.152 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:04:49.158 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-27 21:04:49.162 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564250686,"exp":1564254286,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"951678ae-e2c5-4fe9-8742-2be3bc55c043","auth_time":1564250682,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-27 21:04:49.176 +03:00 [DBG] Creating userinfo response
2019-07-27 21:04:49.186 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-27 21:04:49.196 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-27 21:04:49.204 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-27 21:04:49.204 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-27 21:04:49.213 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-27 21:04:49.214 +03:00 [DBG] End userinfo request
2019-07-27 21:04:49.250 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-27 21:04:49.253 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-27 21:04:49.254 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-27 21:04:49.263 +03:00 [DBG] Rendering check session result
2019-07-27 21:04:49.598 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-27 21:04:49.601 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-27 21:04:49.602 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-27 21:04:49.602 +03:00 [DBG] Start discovery request
2019-07-27 21:04:49.747 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-27 21:04:49.748 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-27 21:04:49.748 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-27 21:04:49.748 +03:00 [DBG] Start key discovery request
2019-07-27 21:05:26.830 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-27 21:05:26.833 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-27 21:05:26.833 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-27 21:05:26.850 +03:00 [DBG] Processing signout request for 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-27 21:05:26.866 +03:00 [DBG] Start end session request validation
2019-07-27 21:05:26.879 +03:00 [DBG] Start identity token validation
2019-07-27 21:05:26.881 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:05:26.881 +03:00 [DBG] Client found: spa / SPA Client
2019-07-27 21:05:26.904 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-27 21:05:26.905 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564250686,"exp":1564250986,"iss":"http://localhost:5000","aud":"spa","nonce":"63fbdab28bd549da8bf5b213ad8c18f6","iat":1564250686,"at_hash":"EsbBTN-Y4ZtwKqTQnsMEXQ","sid":"f4c6a815eb22cde7fd7e389952643d63","sub":"951678ae-e2c5-4fe9-8742-2be3bc55c043","auth_time":1564250682,"idp":"Google","amr":"external"},"$type":"TokenValidationLog"}
2019-07-27 21:05:26.912 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQyNTA2ODYsImV4cCI6MTU2NDI1MDk4NiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI2M2ZiZGFiMjhiZDU0OWRhOGJmNWIyMTNhZDhjMThmNiIsImlhdCI6MTU2NDI1MDY4NiwiYXRfaGFzaCI6IkVzYkJUTi1ZNFp0d0txVFFuc01FWFEiLCJzaWQiOiJmNGM2YTgxNWViMjJjZGU3ZmQ3ZTM4OTk1MjY0M2Q2MyIsInN1YiI6Ijk1MTY3OGFlLWUyYzUtNGZlOS04NzQyLTJiZTNiYzU1YzA0MyIsImF1dGhfdGltZSI6MTU2NDI1MDY4MiwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.qqB2-HXGwmDyGbpFF12j3JMDN8vkl40axwBTbazN8w_hLACtIwg0lMcDnpmIAf4u-1jrqABU6vhGlzrz2SXnpXnvUAdKbjNkdRc_bENqUqZ4zeulFYuqBL3orYAz3TsLSzhdrAkgjW-r07KHFZ_WGnswG89sggJGKexQ_n59jCoo9KrSyiAazoB2yMfqTzlnm__N6_CZGH87sDWsH-Sh0R2j9869vmFUUgZI_UckBrV--WKu6HcOiSxagCqfv18kj5oLyB_B18nA8hLfo1on4tOvTcO68_csRoioXrElqwaWMkY-o7kVt0c1asY99pKMuRySr4BeHr-hg3xxwHBzsw"},"$type":"EndSessionRequestValidationLog"}
2019-07-27 21:05:26.912 +03:00 [DBG] Success validating end session request from spa
2019-07-27 21:05:27.009 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-27 21:05:27.010 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-27 21:05:27.011 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-27 21:05:27.012 +03:00 [INF] {"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","DisplayName":"Илья","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOINJDTTTJD:00000014","TimeStamp":"2019-07-27T18:05:27.0000000Z","ProcessId":13128,"LocalIpAddress":"127.0.0.1:3612","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-27 21:08:33.583 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-27 21:08:33.656 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-27 21:08:33.661 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-27 21:08:33.661 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-27 21:08:33.661 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-27 21:08:33.661 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-27 21:08:33.661 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-27 21:08:34.229 +03:00 [DBG] Login Url: /Account/Login
2019-07-27 21:08:34.232 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-27 21:08:34.233 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-27 21:08:34.234 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-27 21:08:34.234 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-27 21:08:34.234 +03:00 [DBG] Error Url: /home/error
2019-07-27 21:08:34.234 +03:00 [DBG] Error Id Parameter: errorId
2019-07-27 21:09:57.628 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-27 21:09:57.636 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:09:57.636 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:09:57.641 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-27 21:09:57.960 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-27 21:09:57.960 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-27 21:09:57.968 +03:00 [DBG] Start discovery request
2019-07-27 21:09:58.091 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-27 21:09:58.100 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-27 21:09:58.100 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-27 21:09:58.110 +03:00 [DBG] Start authorize request
2019-07-27 21:09:58.130 +03:00 [DBG] No user present in authorize request
2019-07-27 21:09:58.146 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:09:58.190 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:09:58.279 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:09:58.314 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"5726bccaaa1547e4b0629de193169a28","UiLocales":null,"Nonce":"38c0d0db6ec147f6bc090068526301db","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"5726bccaaa1547e4b0629de193169a28","nonce":"38c0d0db6ec147f6bc090068526301db"},"$type":"AuthorizeRequestValidationLog"}
2019-07-27 21:09:58.353 +03:00 [INF] Showing login: User is not authenticated
2019-07-27 21:09:58.503 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:09:58.506 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:09:58.509 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:09:58.518 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:10:01.690 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-27 21:10:02.651 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-27 21:10:05.284 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"112262384376329039327","SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","DisplayName":"Илья","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOINLO67P03:00000002","TimeStamp":"2019-07-27T18:10:05.0000000Z","ProcessId":7364,"LocalIpAddress":"127.0.0.1:1455","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-27 21:10:05.302 +03:00 [DBG] Augmenting SignInContext
2019-07-27 21:10:05.308 +03:00 [DBG] Adding amr claim with value: external
2019-07-27 21:10:05.316 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-27 21:10:05.326 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-27 21:10:05.352 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-27 21:10:05.353 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-27 21:10:05.354 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-27 21:10:05.368 +03:00 [DBG] Start authorize callback request
2019-07-27 21:10:05.378 +03:00 [DBG] User in authorize request: 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-27 21:10:05.378 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:10:05.378 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:10:05.379 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:10:05.379 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"5726bccaaa1547e4b0629de193169a28","UiLocales":null,"Nonce":"38c0d0db6ec147f6bc090068526301db","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"75ca7249483e00c359ca6650e66fcbae","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"5726bccaaa1547e4b0629de193169a28","nonce":"38c0d0db6ec147f6bc090068526301db"},"$type":"AuthorizeRequestValidationLog"}
2019-07-27 21:10:05.497 +03:00 [DBG] user_consent grant with value: spa|951678ae-e2c5-4fe9-8742-2be3bc55c043 not found in store.
2019-07-27 21:10:05.498 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-27 21:10:05.498 +03:00 [INF] Showing consent: User has not yet consented
2019-07-27 21:10:05.581 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:10:05.581 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:10:05.582 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:10:05.582 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:10:07.620 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-27 21:10:07.732 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:10:07.732 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:10:07.733 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:10:07.735 +03:00 [INF] {"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOINLO67P00:00000007","TimeStamp":"2019-07-27T18:10:07.0000000Z","ProcessId":7364,"LocalIpAddress":"127.0.0.1:1455","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-27 21:10:07.758 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:10:07.770 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-27 21:10:07.771 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-27 21:10:07.771 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-27 21:10:07.771 +03:00 [DBG] Start authorize callback request
2019-07-27 21:10:07.779 +03:00 [DBG] User in authorize request: 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-27 21:10:07.780 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:10:07.780 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:10:07.780 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:10:07.781 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"5726bccaaa1547e4b0629de193169a28","UiLocales":null,"Nonce":"38c0d0db6ec147f6bc090068526301db","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"75ca7249483e00c359ca6650e66fcbae","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"5726bccaaa1547e4b0629de193169a28","nonce":"38c0d0db6ec147f6bc090068526301db"},"$type":"AuthorizeRequestValidationLog"}
2019-07-27 21:10:07.796 +03:00 [DBG] user_consent grant with value: spa|951678ae-e2c5-4fe9-8742-2be3bc55c043 not found in store.
2019-07-27 21:10:07.796 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-27 21:10:07.815 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-27 21:10:07.820 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-27 21:10:07.833 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-27 21:10:07.880 +03:00 [DBG] Creating Implicit Flow response.
2019-07-27 21:10:07.911 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-27 21:10:07.913 +03:00 [DBG] Getting claims for access token for subject: 951678ae-e2c5-4fe9-8742-2be3bc55c043
2019-07-27 21:10:08.052 +03:00 [DBG] Getting claims for identity token for subject: 951678ae-e2c5-4fe9-8742-2be3bc55c043 and client: spa
2019-07-27 21:10:08.052 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-27 21:10:08.075 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ornA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****VQhw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOINLO67P01:00000004","TimeStamp":"2019-07-27T18:10:08.0000000Z","ProcessId":7364,"LocalIpAddress":"127.0.0.1:1455","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-27 21:10:08.079 +03:00 [INF] Authorize endpoint response
{"SubjectId":"951678ae-e2c5-4fe9-8742-2be3bc55c043","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"5726bccaaa1547e4b0629de193169a28","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-27 21:10:08.125 +03:00 [DBG] Augmenting SignInContext
2019-07-27 21:10:08.125 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-27 21:10:10.995 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-27 21:10:10.997 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:10:10.997 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:10:10.998 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-27 21:10:10.999 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-27 21:10:10.999 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-27 21:10:10.999 +03:00 [DBG] Start discovery request
2019-07-27 21:10:11.123 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-27 21:10:11.124 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:10:11.124 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:10:11.124 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-27 21:10:11.126 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-27 21:10:11.126 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-27 21:10:11.138 +03:00 [DBG] Start key discovery request
2019-07-27 21:10:11.260 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-27 21:10:11.260 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:10:11.260 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:10:11.279 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-27 21:10:11.279 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:10:11.279 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:10:11.280 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-27 21:10:11.285 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-27 21:10:11.285 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-27 21:10:11.305 +03:00 [DBG] Start userinfo request
2019-07-27 21:10:11.314 +03:00 [DBG] Bearer token found in header
2019-07-27 21:10:11.430 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:10:11.441 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:10:11.451 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-27 21:10:11.457 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564251007,"exp":1564254607,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"951678ae-e2c5-4fe9-8742-2be3bc55c043","auth_time":1564251005,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-27 21:10:11.480 +03:00 [DBG] Creating userinfo response
2019-07-27 21:10:11.491 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-27 21:10:11.499 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-27 21:10:11.512 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-27 21:10:11.512 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-27 21:10:11.529 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-27 21:10:11.530 +03:00 [DBG] End userinfo request
2019-07-27 21:10:11.600 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-27 21:10:11.601 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-27 21:10:11.602 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-27 21:10:11.607 +03:00 [DBG] Rendering check session result
2019-07-27 21:16:38.461 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-27 21:16:38.548 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-27 21:16:38.554 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-27 21:16:38.554 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-27 21:16:38.554 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-27 21:16:38.554 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-27 21:16:38.554 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-27 21:16:39.455 +03:00 [DBG] Login Url: /Account/Login
2019-07-27 21:16:39.460 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-27 21:16:39.460 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-27 21:16:39.460 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-27 21:16:39.460 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-27 21:16:39.460 +03:00 [DBG] Error Url: /home/error
2019-07-27 21:16:39.460 +03:00 [DBG] Error Id Parameter: errorId
2019-07-27 21:24:03.151 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-27 21:24:03.251 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-27 21:24:03.255 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-27 21:24:03.256 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-27 21:24:03.256 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-27 21:24:03.257 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-27 21:24:03.257 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-27 21:24:04.288 +03:00 [DBG] Login Url: /Account/Login
2019-07-27 21:24:04.291 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-27 21:24:04.291 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-27 21:24:04.291 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-27 21:24:04.292 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-27 21:24:04.292 +03:00 [DBG] Error Url: /home/error
2019-07-27 21:24:04.292 +03:00 [DBG] Error Id Parameter: errorId
2019-07-27 21:27:01.189 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-27 21:27:01.251 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-27 21:27:01.257 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-27 21:27:01.257 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-27 21:27:01.257 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-27 21:27:01.257 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-27 21:27:01.257 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-27 21:27:01.684 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-27 21:27:01.692 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:27:01.692 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:27:01.754 +03:00 [DBG] Login Url: /Account/Login
2019-07-27 21:27:01.754 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-27 21:27:01.754 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-27 21:27:01.754 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-27 21:27:01.754 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-27 21:27:01.755 +03:00 [DBG] Error Url: /home/error
2019-07-27 21:27:01.755 +03:00 [DBG] Error Id Parameter: errorId
2019-07-27 21:27:01.795 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-27 21:27:02.047 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-27 21:27:02.048 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-27 21:27:02.054 +03:00 [DBG] Start discovery request
2019-07-27 21:27:02.192 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-27 21:27:02.222 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-27 21:27:02.222 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-27 21:27:02.231 +03:00 [DBG] Start authorize request
2019-07-27 21:27:02.255 +03:00 [DBG] No user present in authorize request
2019-07-27 21:27:02.267 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:27:02.298 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:02.374 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:27:02.397 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"37a14f3b9f4940d980fc1ebc466a26cd","UiLocales":null,"Nonce":"f880d5a3d24e498dbabd66501988f125","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"37a14f3b9f4940d980fc1ebc466a26cd","nonce":"f880d5a3d24e498dbabd66501988f125"},"$type":"AuthorizeRequestValidationLog"}
2019-07-27 21:27:02.431 +03:00 [INF] Showing login: User is not authenticated
2019-07-27 21:27:02.764 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:27:02.765 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:02.765 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:27:02.770 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:11.986 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-27 21:27:12.099 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:27:12.100 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:12.101 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:27:15.221 +03:00 [DBG] Augmenting SignInContext
2019-07-27 21:27:15.228 +03:00 [DBG] Adding idp claim with value: local
2019-07-27 21:27:15.228 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-27 21:27:15.228 +03:00 [DBG] Adding auth_time claim with value: 1564252035
2019-07-27 21:27:15.249 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-27 21:27:15.266 +03:00 [INF] {"Username":"ilyaaa","Provider":null,"ProviderUserId":null,"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOIO028CVPP:00000002","TimeStamp":"2019-07-27T18:27:15.0000000Z","ProcessId":9144,"LocalIpAddress":"127.0.0.1:41437","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-27 21:27:15.271 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:15.308 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-27 21:27:15.310 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-27 21:27:15.311 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-27 21:27:15.323 +03:00 [DBG] Start authorize callback request
2019-07-27 21:27:15.338 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-27 21:27:15.339 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:27:15.339 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:15.339 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:27:15.340 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"37a14f3b9f4940d980fc1ebc466a26cd","UiLocales":null,"Nonce":"f880d5a3d24e498dbabd66501988f125","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"32d896205413cee2c4de62b43c70f568","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"37a14f3b9f4940d980fc1ebc466a26cd","nonce":"f880d5a3d24e498dbabd66501988f125"},"$type":"AuthorizeRequestValidationLog"}
2019-07-27 21:27:15.458 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-27 21:27:15.458 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-27 21:27:15.459 +03:00 [INF] Showing consent: User has not yet consented
2019-07-27 21:27:15.541 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:27:15.542 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:15.544 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:27:15.544 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:17.735 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-27 21:27:17.796 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:27:17.796 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:17.797 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:27:17.800 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOIO028CVPR:00000004","TimeStamp":"2019-07-27T18:27:17.0000000Z","ProcessId":9144,"LocalIpAddress":"127.0.0.1:41437","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-27 21:27:17.827 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:17.844 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-27 21:27:17.845 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-27 21:27:17.845 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-27 21:27:17.845 +03:00 [DBG] Start authorize callback request
2019-07-27 21:27:17.857 +03:00 [DBG] User in authorize request: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-27 21:27:17.857 +03:00 [DBG] Start authorize request protocol validation
2019-07-27 21:27:17.857 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:17.858 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-27 21:27:17.858 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"37a14f3b9f4940d980fc1ebc466a26cd","UiLocales":null,"Nonce":"f880d5a3d24e498dbabd66501988f125","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"32d896205413cee2c4de62b43c70f568","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"37a14f3b9f4940d980fc1ebc466a26cd","nonce":"f880d5a3d24e498dbabd66501988f125"},"$type":"AuthorizeRequestValidationLog"}
2019-07-27 21:27:17.888 +03:00 [DBG] user_consent grant with value: spa|6b24844e-ff7c-45dc-8f94-98f8d463c719 not found in store.
2019-07-27 21:27:17.888 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-27 21:27:17.909 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-27 21:27:17.913 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-27 21:27:17.926 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-27 21:27:17.988 +03:00 [DBG] Creating Implicit Flow response.
2019-07-27 21:27:18.046 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-27 21:27:18.048 +03:00 [DBG] Getting claims for access token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-27 21:27:18.259 +03:00 [DBG] Getting claims for identity token for subject: 6b24844e-ff7c-45dc-8f94-98f8d463c719 and client: spa
2019-07-27 21:27:18.259 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-27 21:27:18.286 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****szlQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****QfCQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOIO028CVPQ:00000004","TimeStamp":"2019-07-27T18:27:18.0000000Z","ProcessId":9144,"LocalIpAddress":"127.0.0.1:41437","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-27 21:27:18.293 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"37a14f3b9f4940d980fc1ebc466a26cd","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-27 21:27:18.374 +03:00 [DBG] Augmenting SignInContext
2019-07-27 21:27:18.378 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-27 21:27:22.069 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-27 21:27:22.069 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:27:22.070 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:27:22.070 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-27 21:27:22.071 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-27 21:27:22.071 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-27 21:27:22.072 +03:00 [DBG] Start discovery request
2019-07-27 21:27:22.124 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-27 21:27:22.125 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:27:22.125 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:27:22.126 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-27 21:27:22.127 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-27 21:27:22.128 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-27 21:27:22.139 +03:00 [DBG] Start key discovery request
2019-07-27 21:27:22.231 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-27 21:27:22.231 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:27:22.231 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:27:22.243 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-27 21:27:22.243 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-27 21:27:22.243 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-27 21:27:22.244 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-27 21:27:22.248 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-27 21:27:22.248 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-27 21:27:22.268 +03:00 [DBG] Start userinfo request
2019-07-27 21:27:22.284 +03:00 [DBG] Bearer token found in header
2019-07-27 21:27:22.389 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:22.397 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:22.404 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-27 21:27:22.406 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564252038,"exp":1564255638,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564252035,"idp":"local","scope":["openid","email","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-27 21:27:22.421 +03:00 [DBG] Creating userinfo response
2019-07-27 21:27:22.435 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-27 21:27:22.440 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-27 21:27:22.447 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-27 21:27:22.447 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-27 21:27:22.454 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-27 21:27:22.455 +03:00 [DBG] End userinfo request
2019-07-27 21:27:22.569 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-27 21:27:22.570 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-27 21:27:22.570 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-27 21:27:22.573 +03:00 [DBG] Rendering check session result
2019-07-27 21:27:22.996 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-27 21:27:22.996 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-27 21:27:22.996 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-27 21:27:22.996 +03:00 [DBG] Start discovery request
2019-07-27 21:27:23.377 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-27 21:27:23.379 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-27 21:27:23.379 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-27 21:27:23.379 +03:00 [DBG] Start key discovery request
2019-07-27 21:27:58.903 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-27 21:27:58.910 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-27 21:27:58.910 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-27 21:27:58.920 +03:00 [DBG] Processing signout request for 6b24844e-ff7c-45dc-8f94-98f8d463c719
2019-07-27 21:27:58.934 +03:00 [DBG] Start end session request validation
2019-07-27 21:27:58.948 +03:00 [DBG] Start identity token validation
2019-07-27 21:27:58.950 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-27 21:27:58.951 +03:00 [DBG] Client found: spa / SPA Client
2019-07-27 21:27:58.961 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-27 21:27:58.963 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564252038,"exp":1564252338,"iss":"http://localhost:5000","aud":"spa","nonce":"f880d5a3d24e498dbabd66501988f125","iat":1564252038,"at_hash":"QLX9GK4_n9Kf_UXxOsc6ww","sid":"32d896205413cee2c4de62b43c70f568","sub":"6b24844e-ff7c-45dc-8f94-98f8d463c719","auth_time":1564252035,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-27 21:27:58.968 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQyNTIwMzgsImV4cCI6MTU2NDI1MjMzOCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJmODgwZDVhM2QyNGU0OThkYmFiZDY2NTAxOTg4ZjEyNSIsImlhdCI6MTU2NDI1MjAzOCwiYXRfaGFzaCI6IlFMWDlHSzRfbjlLZl9VWHhPc2M2d3ciLCJzaWQiOiIzMmQ4OTYyMDU0MTNjZWUyYzRkZTYyYjQzYzcwZjU2OCIsInN1YiI6IjZiMjQ4NDRlLWZmN2MtNDVkYy04Zjk0LTk4ZjhkNDYzYzcxOSIsImF1dGhfdGltZSI6MTU2NDI1MjAzNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.YIK8Jc6Rbf-c6y7gZ21dEDxYURU0z5AF5EOhYxAibDnA10cn87GPANz5AxJyi1EXaRmMTybQEwjC_qRmMJ2NEsPafmhqI-IJIzS5e0RKJFiMo-AWRQK2UlWI8lKUVllfzRKJGaov2sOngyDnGmnfi9fzm0DRXPFR2-XyaxQfbKJ6hzsmHrumM-O2JZmeGaJMCGr1wsKt0h5to3--aH0ruFnSFyKOcDAuGCOo1inip6LAKY-_WWGWtjdbEhV_4OuZCwS8t0Ox9sjRbjjdu1n5aVIubUDm3ydrqzcUtyhdGDUVrcevGzwqtv1tnxnvHabe0BBAgMP7MSDY3iOvjpszlQ"},"$type":"EndSessionRequestValidationLog"}
2019-07-27 21:27:58.968 +03:00 [DBG] Success validating end session request from spa
2019-07-27 21:27:59.091 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-27 21:27:59.094 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-27 21:27:59.095 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-27 21:27:59.096 +03:00 [INF] {"SubjectId":"6b24844e-ff7c-45dc-8f94-98f8d463c719","DisplayName":"ilyaaa","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOIO028CVPR:00000006","TimeStamp":"2019-07-27T18:27:59.0000000Z","ProcessId":9144,"LocalIpAddress":"127.0.0.1:41437","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
>>>>>>> 15Puzzle
2019-07-29 16:19:22.649 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 16:19:22.774 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 16:19:22.837 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 16:19:22.837 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 16:19:22.838 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 16:19:22.838 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 16:19:22.838 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 16:19:22.838 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 16:19:24.850 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 16:19:24.858 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 16:19:24.858 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 16:19:24.858 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 16:19:24.858 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 16:19:24.859 +03:00 [DBG] Error Url: /home/error
2019-07-29 16:19:24.859 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 16:19:24.896 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-29 16:19:24.957 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-29 16:19:29.749 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-29 16:19:29.749 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-29 16:19:29.811 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-29 16:19:29.829 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-29 16:19:29.829 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-29 16:19:34.738 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-29 16:19:34.738 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-29 16:19:34.859 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 16:19:37.666 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 16:19:37.718 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-29 16:19:37.719 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-29 16:19:43.314 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"14e8cf7b-ca57-443e-9715-89049dbd65fc","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK4TFQ7CNP:00000004","TimeStamp":"2019-07-29T13:19:43.0000000Z","ProcessId":8668,"LocalIpAddress":"127.0.0.1:28211","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 16:19:43.352 +03:00 [DBG] Augmenting SignInContext
2019-07-29 16:19:43.357 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 16:19:43.366 +03:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-07-29 16:19:43.370 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 16:19:43.381 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:19:56.236 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:19:56.471 +03:00 [WRN] User 14e8cf7b-ca57-443e-9715-89049dbd65fc validation failed: InvalidUserName.
2019-07-29 16:19:56.475 +03:00 [WRN] User 14e8cf7b-ca57-443e-9715-89049dbd65fc validation failed: InvalidUserName.
2019-07-29 16:20:00.747 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-29 16:20:00.748 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:20:00.750 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-29 16:20:00.753 +03:00 [INF] {"SubjectId":"14e8cf7b-ca57-443e-9715-89049dbd65fc","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOK4TFQ7CNP:00000006","TimeStamp":"2019-07-29T13:20:00.0000000Z","ProcessId":8668,"LocalIpAddress":"127.0.0.1:28211","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-29 16:23:13.603 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 16:23:13.707 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 16:23:13.748 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 16:23:13.748 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 16:23:13.749 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 16:23:13.749 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 16:23:13.749 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 16:23:13.749 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 16:23:15.901 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 16:23:15.911 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 16:23:15.911 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 16:23:15.911 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 16:23:15.911 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 16:23:15.911 +03:00 [DBG] Error Url: /home/error
2019-07-29 16:23:15.911 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 16:23:21.162 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-29 16:23:25.249 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 16:23:27.829 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 16:23:32.648 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"14e8cf7b-ca57-443e-9715-89049dbd65fc","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK4VKM6825:00000004","TimeStamp":"2019-07-29T13:23:32.0000000Z","ProcessId":1348,"LocalIpAddress":"127.0.0.1:30315","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 16:23:32.700 +03:00 [DBG] Augmenting SignInContext
2019-07-29 16:23:32.708 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 16:23:32.721 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 16:23:32.735 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:29:10.130 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 16:29:10.225 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 16:29:10.308 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 16:29:10.308 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 16:29:10.308 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 16:29:10.308 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 16:29:10.309 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 16:29:10.309 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 16:29:12.041 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 16:29:12.047 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 16:29:12.049 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 16:29:12.050 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 16:29:12.050 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 16:29:12.050 +03:00 [DBG] Error Url: /home/error
2019-07-29 16:29:12.051 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 16:29:29.841 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-29 16:29:29.843 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:29:29.847 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-29 16:29:29.911 +03:00 [INF] {"SubjectId":"14e8cf7b-ca57-443e-9715-89049dbd65fc","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOK52UTI64S:00000002","TimeStamp":"2019-07-29T13:29:29.0000000Z","ProcessId":5412,"LocalIpAddress":"127.0.0.1:3108","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-29 16:29:41.466 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-29 16:29:43.242 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 16:30:53.478 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-29 16:30:55.771 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 16:31:03.070 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 16:31:11.794 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"14e8cf7b-ca57-443e-9715-89049dbd65fc","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK52UTI64U:00000005","TimeStamp":"2019-07-29T13:31:11.0000000Z","ProcessId":5412,"LocalIpAddress":"127.0.0.1:3108","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 16:31:11.818 +03:00 [DBG] Augmenting SignInContext
2019-07-29 16:31:11.823 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 16:31:11.833 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 16:31:11.833 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:32:16.313 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 16:32:16.396 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 16:32:16.441 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 16:32:16.441 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 16:32:16.441 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 16:32:16.442 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 16:32:16.442 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 16:32:16.442 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 16:32:18.801 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 16:32:18.809 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 16:32:18.809 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 16:32:18.809 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 16:32:18.809 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 16:32:18.809 +03:00 [DBG] Error Url: /home/error
2019-07-29 16:32:18.809 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 16:32:27.589 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-29 16:32:27.593 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:32:27.601 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-29 16:32:27.701 +03:00 [INF] {"SubjectId":"14e8cf7b-ca57-443e-9715-89049dbd65fc","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOK54MF9NK1:00000002","TimeStamp":"2019-07-29T13:32:27.0000000Z","ProcessId":16080,"LocalIpAddress":"127.0.0.1:20898","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-29 16:32:30.908 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-29 16:32:33.343 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 16:32:35.619 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 16:32:40.078 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"14e8cf7b-ca57-443e-9715-89049dbd65fc","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK54MF9NK1:00000005","TimeStamp":"2019-07-29T13:32:40.0000000Z","ProcessId":16080,"LocalIpAddress":"127.0.0.1:20898","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 16:32:40.098 +03:00 [DBG] Augmenting SignInContext
2019-07-29 16:32:40.102 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 16:32:40.109 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 16:32:40.109 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:32:46.894 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:33:08.784 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 16:33:08.833 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 16:33:08.854 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 16:33:08.854 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 16:33:08.855 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 16:33:08.855 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 16:33:08.855 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 16:33:08.855 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 16:33:09.287 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:33:09.347 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 16:33:09.348 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 16:33:09.348 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 16:33:09.348 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 16:33:09.348 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 16:33:09.348 +03:00 [DBG] Error Url: /home/error
2019-07-29 16:33:09.348 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 16:36:29.203 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 16:36:29.382 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 16:36:29.430 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 16:36:29.430 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 16:36:29.430 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 16:36:29.430 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 16:36:29.435 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 16:36:29.435 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 16:36:31.564 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 16:36:31.580 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 16:36:31.580 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 16:36:31.580 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 16:36:31.580 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 16:36:31.581 +03:00 [DBG] Error Url: /home/error
2019-07-29 16:36:31.581 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 16:41:49.705 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 16:41:50.172 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 16:41:50.227 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 16:41:50.228 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 16:41:50.228 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 16:41:50.228 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 16:41:50.228 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 16:41:50.228 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 16:41:52.691 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 16:41:52.697 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 16:41:52.697 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 16:41:52.697 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 16:41:52.697 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 16:41:52.697 +03:00 [DBG] Error Url: /home/error
2019-07-29 16:41:52.698 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 16:42:37.615 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-07-29 16:42:40.952 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 16:42:43.185 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 16:42:47.376 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"14e8cf7b-ca57-443e-9715-89049dbd65fc","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK5A1D8LAB:00000004","TimeStamp":"2019-07-29T13:42:47.0000000Z","ProcessId":6924,"LocalIpAddress":"127.0.0.1:39488","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 16:42:47.425 +03:00 [DBG] Augmenting SignInContext
2019-07-29 16:42:47.431 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 16:42:47.452 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 16:42:47.472 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:43:03.707 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:43:47.202 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:44:24.716 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:44:24.902 +03:00 [WRN] User 14e8cf7b-ca57-443e-9715-89049dbd65fc validation failed: InvalidUserName.
2019-07-29 16:44:24.907 +03:00 [WRN] User 14e8cf7b-ca57-443e-9715-89049dbd65fc validation failed: InvalidUserName.
2019-07-29 16:44:48.995 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-29 16:44:48.996 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:44:48.997 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-29 16:44:49.000 +03:00 [INF] {"SubjectId":"14e8cf7b-ca57-443e-9715-89049dbd65fc","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOK5A1D8LAC:00000008","TimeStamp":"2019-07-29T13:44:48.0000000Z","ProcessId":6924,"LocalIpAddress":"127.0.0.1:39488","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-29 16:51:35.560 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 16:51:35.757 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 16:51:35.812 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 16:51:35.812 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 16:51:35.812 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 16:51:35.812 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 16:51:35.812 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 16:51:35.813 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 16:51:39.012 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 16:51:39.016 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 16:51:39.017 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 16:51:39.017 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 16:51:39.017 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 16:51:39.017 +03:00 [DBG] Error Url: /home/error
2019-07-29 16:51:39.017 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 16:51:52.675 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 16:51:52.855 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:51:52.855 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:51:52.866 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 16:51:54.163 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 16:51:54.163 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 16:51:54.172 +03:00 [DBG] Start discovery request
2019-07-29 16:51:54.370 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-29 16:51:54.397 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-29 16:51:54.397 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-29 16:51:54.417 +03:00 [DBG] Start authorize request
2019-07-29 16:51:54.449 +03:00 [DBG] No user present in authorize request
2019-07-29 16:51:54.471 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:51:54.549 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:51:54.756 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:51:54.808 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"da25144d2f12411ca2ba32ac76fee7ca","UiLocales":null,"Nonce":"dbe52fcd52334bd0bcf4b9bacf37c5e7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"da25144d2f12411ca2ba32ac76fee7ca","nonce":"dbe52fcd52334bd0bcf4b9bacf37c5e7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 16:51:54.873 +03:00 [INF] Showing login: User is not authenticated
2019-07-29 16:51:55.259 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:51:55.260 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:51:55.261 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:51:55.267 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:51:58.004 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 16:52:00.885 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 16:52:07.505 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"76c91b6e-d02f-42f5-ac14-dfac89db6194","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK5FG5ONLL:00000004","TimeStamp":"2019-07-29T13:52:07.0000000Z","ProcessId":11580,"LocalIpAddress":"127.0.0.1:27310","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 16:52:07.529 +03:00 [DBG] Augmenting SignInContext
2019-07-29 16:52:07.534 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 16:52:07.550 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 16:52:07.567 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:52:15.044 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:52:25.621 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:52:25.732 +03:00 [WRN] User 76c91b6e-d02f-42f5-ac14-dfac89db6194 validation failed: InvalidUserName.
2019-07-29 16:52:25.736 +03:00 [WRN] User 76c91b6e-d02f-42f5-ac14-dfac89db6194 validation failed: InvalidUserName.
2019-07-29 16:52:25.747 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 16:52:25.749 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 16:52:25.749 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 16:52:25.771 +03:00 [DBG] Start authorize callback request
2019-07-29 16:52:25.785 +03:00 [DBG] User in authorize request: 76c91b6e-d02f-42f5-ac14-dfac89db6194
2019-07-29 16:52:25.785 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:52:25.785 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:52:25.786 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:52:25.786 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"76c91b6e-d02f-42f5-ac14-dfac89db6194","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"da25144d2f12411ca2ba32ac76fee7ca","UiLocales":null,"Nonce":"dbe52fcd52334bd0bcf4b9bacf37c5e7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"595b3c06bb990ff092d0b47e269fcb74","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"da25144d2f12411ca2ba32ac76fee7ca","nonce":"dbe52fcd52334bd0bcf4b9bacf37c5e7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 16:52:25.910 +03:00 [DBG] user_consent grant with value: spa|76c91b6e-d02f-42f5-ac14-dfac89db6194 not found in store.
2019-07-29 16:52:25.912 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 16:52:25.912 +03:00 [INF] Showing consent: User has not yet consented
2019-07-29 16:52:26.074 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:52:26.075 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:52:26.075 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:52:26.076 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:52:29.335 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:52:29.494 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:52:29.495 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:52:29.495 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:52:29.500 +03:00 [INF] {"SubjectId":"76c91b6e-d02f-42f5-ac14-dfac89db6194","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOK5FG5ONLL:00000007","TimeStamp":"2019-07-29T13:52:29.0000000Z","ProcessId":11580,"LocalIpAddress":"127.0.0.1:27310","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-29 16:52:29.547 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:52:29.558 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 16:52:29.559 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 16:52:29.559 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 16:52:29.559 +03:00 [DBG] Start authorize callback request
2019-07-29 16:52:29.570 +03:00 [DBG] User in authorize request: 76c91b6e-d02f-42f5-ac14-dfac89db6194
2019-07-29 16:52:29.570 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:52:29.570 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:52:29.571 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:52:29.571 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"76c91b6e-d02f-42f5-ac14-dfac89db6194","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"da25144d2f12411ca2ba32ac76fee7ca","UiLocales":null,"Nonce":"dbe52fcd52334bd0bcf4b9bacf37c5e7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"595b3c06bb990ff092d0b47e269fcb74","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"da25144d2f12411ca2ba32ac76fee7ca","nonce":"dbe52fcd52334bd0bcf4b9bacf37c5e7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 16:52:29.578 +03:00 [DBG] user_consent grant with value: spa|76c91b6e-d02f-42f5-ac14-dfac89db6194 not found in store.
2019-07-29 16:52:29.579 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 16:52:29.603 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-29 16:52:29.610 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-29 16:52:29.624 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 76c91b6e-d02f-42f5-ac14-dfac89db6194
2019-07-29 16:52:29.706 +03:00 [DBG] Creating Implicit Flow response.
2019-07-29 16:52:29.760 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-29 16:52:29.762 +03:00 [DBG] Getting claims for access token for subject: 76c91b6e-d02f-42f5-ac14-dfac89db6194
2019-07-29 16:52:30.140 +03:00 [DBG] Getting claims for identity token for subject: 76c91b6e-d02f-42f5-ac14-dfac89db6194 and client: spa
2019-07-29 16:52:30.141 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-29 16:52:30.175 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"76c91b6e-d02f-42f5-ac14-dfac89db6194","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****84Xw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Rnrg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOK5FG5ONLK:00000008","TimeStamp":"2019-07-29T13:52:30.0000000Z","ProcessId":11580,"LocalIpAddress":"127.0.0.1:27310","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-29 16:52:30.180 +03:00 [INF] Authorize endpoint response
{"SubjectId":"76c91b6e-d02f-42f5-ac14-dfac89db6194","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"da25144d2f12411ca2ba32ac76fee7ca","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-29 16:52:30.246 +03:00 [DBG] Augmenting SignInContext
2019-07-29 16:52:30.248 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 16:52:33.120 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 16:52:33.122 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:52:33.122 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:52:33.125 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 16:52:33.128 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 16:52:33.137 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 16:52:33.137 +03:00 [DBG] Start discovery request
2019-07-29 16:52:33.246 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-29 16:52:33.247 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:52:33.247 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:52:33.247 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-29 16:52:33.250 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-29 16:52:33.250 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-29 16:52:33.263 +03:00 [DBG] Start key discovery request
2019-07-29 16:52:33.380 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 16:52:33.381 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:52:33.382 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:52:33.404 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 16:52:33.405 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:52:33.405 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:52:33.406 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-29 16:52:33.413 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-29 16:52:33.413 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-29 16:52:33.435 +03:00 [DBG] Start userinfo request
2019-07-29 16:52:33.448 +03:00 [DBG] Bearer token found in header
2019-07-29 16:52:33.539 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:52:33.550 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:52:33.558 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 16:52:33.564 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564408349,"exp":1564411949,"iss":"http://172.21.0.2:80","aud":["http://172.21.0.2:80/resources","pyatnashki_api"],"client_id":"spa","sub":"76c91b6e-d02f-42f5-ac14-dfac89db6194","auth_time":1564408327,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 16:52:33.589 +03:00 [DBG] Creating userinfo response
2019-07-29 16:52:33.601 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 16:52:33.607 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 16:52:33.612 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-29 16:52:33.612 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 16:52:33.619 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-29 16:52:33.620 +03:00 [DBG] End userinfo request
2019-07-29 16:52:33.649 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-29 16:52:33.650 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-29 16:52:33.651 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-29 16:52:33.654 +03:00 [DBG] Rendering check session result
2019-07-29 16:54:44.622 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 16:54:44.765 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 16:54:44.800 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 16:54:44.800 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 16:54:44.800 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 16:54:44.800 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 16:54:44.800 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 16:54:44.800 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 16:54:47.071 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 16:54:47.087 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:54:47.087 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:54:47.395 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 16:54:47.396 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 16:54:47.396 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 16:54:47.396 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 16:54:47.396 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 16:54:47.396 +03:00 [DBG] Error Url: /home/error
2019-07-29 16:54:47.396 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 16:54:47.489 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 16:54:48.737 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 16:54:48.737 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 16:54:48.746 +03:00 [DBG] Start discovery request
2019-07-29 16:54:49.145 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-29 16:54:49.170 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-29 16:54:49.170 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-29 16:54:49.184 +03:00 [DBG] Start authorize request
2019-07-29 16:54:49.229 +03:00 [DBG] No user present in authorize request
2019-07-29 16:54:49.273 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:54:49.362 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:54:49.545 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:54:49.662 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"7fc7af1dcb674e9fafc0fca7ed265bb0","UiLocales":null,"Nonce":"676f09d5ce284761ac06cf54be8ed27e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"7fc7af1dcb674e9fafc0fca7ed265bb0","nonce":"676f09d5ce284761ac06cf54be8ed27e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 16:54:50.217 +03:00 [INF] Showing login: User is not authenticated
2019-07-29 16:54:50.602 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:54:50.603 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:54:50.604 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:54:50.612 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:54:54.468 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 16:54:57.848 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 16:55:03.814 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK5H8615TO:00000003","TimeStamp":"2019-07-29T13:55:03.0000000Z","ProcessId":9188,"LocalIpAddress":"127.0.0.1:30075","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 16:55:03.849 +03:00 [DBG] Augmenting SignInContext
2019-07-29 16:55:03.867 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 16:55:03.925 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 16:55:03.962 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:55:15.053 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:55:26.023 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:55:37.778 +03:00 [WRN] User da3c13b6-fed5-4572-82e5-ad20ba899799 validation failed: InvalidUserName.
2019-07-29 16:55:50.553 +03:00 [WRN] User da3c13b6-fed5-4572-82e5-ad20ba899799 validation failed: InvalidUserName.
2019-07-29 16:56:06.360 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 16:56:06.363 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 16:56:06.364 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 16:56:06.382 +03:00 [DBG] Start authorize callback request
2019-07-29 16:56:06.397 +03:00 [DBG] User in authorize request: da3c13b6-fed5-4572-82e5-ad20ba899799
2019-07-29 16:56:06.398 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:56:06.398 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:56:06.399 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:56:06.402 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"7fc7af1dcb674e9fafc0fca7ed265bb0","UiLocales":null,"Nonce":"676f09d5ce284761ac06cf54be8ed27e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"dea8b7544c59aca5474b7f8c3edaa204","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"7fc7af1dcb674e9fafc0fca7ed265bb0","nonce":"676f09d5ce284761ac06cf54be8ed27e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 16:56:06.589 +03:00 [DBG] user_consent grant with value: spa|da3c13b6-fed5-4572-82e5-ad20ba899799 not found in store.
2019-07-29 16:56:06.591 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 16:56:06.592 +03:00 [INF] Showing consent: User has not yet consented
2019-07-29 16:56:06.830 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:56:06.830 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:56:06.831 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:56:06.832 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:56:12.703 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:56:12.842 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:56:12.842 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:56:12.843 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:56:12.848 +03:00 [INF] {"SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOK5H8615TM:00000005","TimeStamp":"2019-07-29T13:56:12.0000000Z","ProcessId":9188,"LocalIpAddress":"127.0.0.1:30075","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-29 16:56:12.887 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:56:12.898 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 16:56:12.899 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 16:56:12.899 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 16:56:12.899 +03:00 [DBG] Start authorize callback request
2019-07-29 16:56:12.910 +03:00 [DBG] User in authorize request: da3c13b6-fed5-4572-82e5-ad20ba899799
2019-07-29 16:56:12.910 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:56:12.910 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:56:12.911 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:56:12.911 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"7fc7af1dcb674e9fafc0fca7ed265bb0","UiLocales":null,"Nonce":"676f09d5ce284761ac06cf54be8ed27e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"dea8b7544c59aca5474b7f8c3edaa204","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"7fc7af1dcb674e9fafc0fca7ed265bb0","nonce":"676f09d5ce284761ac06cf54be8ed27e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 16:56:12.917 +03:00 [DBG] user_consent grant with value: spa|da3c13b6-fed5-4572-82e5-ad20ba899799 not found in store.
2019-07-29 16:56:12.917 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 16:56:12.937 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-29 16:56:12.943 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-29 16:56:12.951 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: da3c13b6-fed5-4572-82e5-ad20ba899799
2019-07-29 16:56:13.026 +03:00 [DBG] Creating Implicit Flow response.
2019-07-29 16:56:13.086 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-29 16:56:13.090 +03:00 [DBG] Getting claims for access token for subject: da3c13b6-fed5-4572-82e5-ad20ba899799
2019-07-29 16:56:13.360 +03:00 [DBG] Getting claims for identity token for subject: da3c13b6-fed5-4572-82e5-ad20ba899799 and client: spa
2019-07-29 16:56:13.360 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-29 16:56:13.382 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****vTQw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5k-Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOK5H8615TO:00000006","TimeStamp":"2019-07-29T13:56:13.0000000Z","ProcessId":9188,"LocalIpAddress":"127.0.0.1:30075","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-29 16:56:13.389 +03:00 [INF] Authorize endpoint response
{"SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"7fc7af1dcb674e9fafc0fca7ed265bb0","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-29 16:56:13.442 +03:00 [DBG] Augmenting SignInContext
2019-07-29 16:56:13.443 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 16:56:15.625 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 16:56:15.683 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:56:15.684 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:56:15.686 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 16:56:15.687 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 16:56:15.687 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 16:56:15.687 +03:00 [DBG] Start discovery request
2019-07-29 16:56:15.829 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-29 16:56:15.831 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:56:15.831 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:56:15.831 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-29 16:56:15.833 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-29 16:56:15.833 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-29 16:56:15.845 +03:00 [DBG] Start key discovery request
2019-07-29 16:56:15.987 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 16:56:15.987 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:56:15.987 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:56:16.015 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 16:56:16.040 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:56:16.041 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:56:16.041 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-29 16:56:16.047 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-29 16:56:16.047 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-29 16:56:16.063 +03:00 [DBG] Start userinfo request
2019-07-29 16:56:16.071 +03:00 [DBG] Bearer token found in header
2019-07-29 16:56:16.129 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:56:16.137 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:56:16.144 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 16:56:16.148 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564408573,"exp":1564412173,"iss":"http://172.21.0.2:80","aud":["http://172.21.0.2:80/resources","pyatnashki_api"],"client_id":"spa","sub":"da3c13b6-fed5-4572-82e5-ad20ba899799","auth_time":1564408503,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 16:56:16.169 +03:00 [DBG] Creating userinfo response
2019-07-29 16:56:16.182 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 16:56:16.193 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 16:56:16.208 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-29 16:56:16.208 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 16:56:16.218 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-29 16:56:16.218 +03:00 [DBG] End userinfo request
2019-07-29 16:56:16.258 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-29 16:56:16.262 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-29 16:56:16.262 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-29 16:56:16.265 +03:00 [DBG] Rendering check session result
2019-07-29 16:58:36.242 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 16:58:36.366 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 16:58:36.444 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 16:58:36.444 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 16:58:36.444 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 16:58:36.445 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 16:58:36.445 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 16:58:36.445 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 16:58:38.293 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 16:58:38.400 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:58:38.401 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:58:38.481 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 16:58:38.481 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 16:58:38.481 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 16:58:38.481 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 16:58:38.482 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 16:58:38.482 +03:00 [DBG] Error Url: /home/error
2019-07-29 16:58:38.482 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 16:58:38.552 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 16:58:40.411 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 16:58:40.412 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 16:58:40.423 +03:00 [DBG] Start discovery request
2019-07-29 16:58:40.696 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-29 16:58:40.741 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-29 16:58:40.741 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-29 16:58:40.771 +03:00 [DBG] Start authorize request
2019-07-29 16:58:40.805 +03:00 [DBG] No user present in authorize request
2019-07-29 16:58:40.820 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:58:40.921 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:58:41.184 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:58:41.247 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cfa8b34149fb4eb2b356ae40b3548e7f","UiLocales":null,"Nonce":"b184192efb004f728bd1a2322772d9ab","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cfa8b34149fb4eb2b356ae40b3548e7f","nonce":"b184192efb004f728bd1a2322772d9ab"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 16:58:41.353 +03:00 [INF] Showing login: User is not authenticated
2019-07-29 16:58:41.909 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:58:41.910 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:58:41.911 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:58:41.920 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:58:45.523 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 16:58:48.678 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 16:58:53.943 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK5JD8170F:00000003","TimeStamp":"2019-07-29T13:58:53.0000000Z","ProcessId":5652,"LocalIpAddress":"127.0.0.1:5417","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 16:58:53.976 +03:00 [DBG] Augmenting SignInContext
2019-07-29 16:58:53.988 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 16:58:54.006 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 16:58:54.034 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:59:10.428 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:59:16.264 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:59:16.377 +03:00 [WRN] User da3c13b6-fed5-4572-82e5-ad20ba899799 validation failed: InvalidUserName.
2019-07-29 16:59:16.383 +03:00 [WRN] User da3c13b6-fed5-4572-82e5-ad20ba899799 validation failed: InvalidUserName.
2019-07-29 16:59:16.478 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 16:59:16.481 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 16:59:16.481 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 16:59:16.494 +03:00 [DBG] Start authorize callback request
2019-07-29 16:59:16.506 +03:00 [DBG] User in authorize request: da3c13b6-fed5-4572-82e5-ad20ba899799
2019-07-29 16:59:16.507 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:59:16.507 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:59:16.507 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:59:16.508 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cfa8b34149fb4eb2b356ae40b3548e7f","UiLocales":null,"Nonce":"b184192efb004f728bd1a2322772d9ab","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"848c012fb89b9e04a3c6d19c297f40cb","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cfa8b34149fb4eb2b356ae40b3548e7f","nonce":"b184192efb004f728bd1a2322772d9ab"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 16:59:16.614 +03:00 [DBG] user_consent grant with value: spa|da3c13b6-fed5-4572-82e5-ad20ba899799 not found in store.
2019-07-29 16:59:16.624 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 16:59:16.625 +03:00 [INF] Showing consent: User has not yet consented
2019-07-29 16:59:16.809 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:59:16.809 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:59:16.810 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:59:16.810 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:59:18.729 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 16:59:18.869 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:59:18.870 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:59:18.871 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:59:18.879 +03:00 [INF] {"SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOK5JD8170F:00000005","TimeStamp":"2019-07-29T13:59:18.0000000Z","ProcessId":5652,"LocalIpAddress":"127.0.0.1:5417","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-29 16:59:18.964 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:59:18.981 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 16:59:18.982 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 16:59:18.982 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 16:59:18.982 +03:00 [DBG] Start authorize callback request
2019-07-29 16:59:18.997 +03:00 [DBG] User in authorize request: da3c13b6-fed5-4572-82e5-ad20ba899799
2019-07-29 16:59:18.998 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:59:18.998 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:59:18.999 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:59:18.999 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"cfa8b34149fb4eb2b356ae40b3548e7f","UiLocales":null,"Nonce":"b184192efb004f728bd1a2322772d9ab","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"848c012fb89b9e04a3c6d19c297f40cb","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"cfa8b34149fb4eb2b356ae40b3548e7f","nonce":"b184192efb004f728bd1a2322772d9ab"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 16:59:19.006 +03:00 [DBG] user_consent grant with value: spa|da3c13b6-fed5-4572-82e5-ad20ba899799 not found in store.
2019-07-29 16:59:19.006 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 16:59:19.035 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-29 16:59:19.043 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-29 16:59:19.057 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: da3c13b6-fed5-4572-82e5-ad20ba899799
2019-07-29 16:59:19.128 +03:00 [DBG] Creating Implicit Flow response.
2019-07-29 16:59:19.218 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-29 16:59:19.221 +03:00 [DBG] Getting claims for access token for subject: da3c13b6-fed5-4572-82e5-ad20ba899799
2019-07-29 16:59:19.641 +03:00 [DBG] Getting claims for identity token for subject: da3c13b6-fed5-4572-82e5-ad20ba899799 and client: spa
2019-07-29 16:59:19.642 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-29 16:59:19.676 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****PzEg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****OY1w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOK5JD8170E:00000005","TimeStamp":"2019-07-29T13:59:19.0000000Z","ProcessId":5652,"LocalIpAddress":"127.0.0.1:5417","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-29 16:59:19.681 +03:00 [INF] Authorize endpoint response
{"SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"cfa8b34149fb4eb2b356ae40b3548e7f","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-29 16:59:19.749 +03:00 [DBG] Augmenting SignInContext
2019-07-29 16:59:19.750 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 16:59:21.934 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 16:59:21.961 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:59:21.962 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:59:21.962 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 16:59:21.968 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 16:59:21.969 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 16:59:21.969 +03:00 [DBG] Start discovery request
2019-07-29 16:59:22.086 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-29 16:59:22.087 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:59:22.087 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:59:22.088 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-29 16:59:22.090 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-29 16:59:22.090 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-29 16:59:22.129 +03:00 [DBG] Start key discovery request
2019-07-29 16:59:22.266 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 16:59:22.271 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:59:22.277 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:59:22.318 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 16:59:22.319 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:59:22.320 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:59:22.320 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-29 16:59:22.330 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-29 16:59:22.330 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-29 16:59:22.359 +03:00 [DBG] Start userinfo request
2019-07-29 16:59:22.380 +03:00 [DBG] Bearer token found in header
2019-07-29 16:59:22.465 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:59:22.473 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:59:22.481 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 16:59:22.486 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564408759,"exp":1564412359,"iss":"http://172.21.0.2:80","aud":["http://172.21.0.2:80/resources","pyatnashki_api"],"client_id":"spa","sub":"da3c13b6-fed5-4572-82e5-ad20ba899799","auth_time":1564408733,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 16:59:22.504 +03:00 [DBG] Creating userinfo response
2019-07-29 16:59:22.516 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 16:59:22.523 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 16:59:22.532 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-29 16:59:22.533 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 16:59:22.546 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-29 16:59:22.547 +03:00 [DBG] End userinfo request
2019-07-29 16:59:22.598 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-29 16:59:22.600 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-29 16:59:22.600 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-29 16:59:22.603 +03:00 [DBG] Rendering check session result
2019-07-29 16:59:26.556 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-29 16:59:26.562 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-29 16:59:26.563 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-29 16:59:26.584 +03:00 [DBG] Processing signout request for da3c13b6-fed5-4572-82e5-ad20ba899799
2019-07-29 16:59:26.603 +03:00 [DBG] Start end session request validation
2019-07-29 16:59:26.627 +03:00 [DBG] Start identity token validation
2019-07-29 16:59:26.629 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:59:26.629 +03:00 [DBG] Client found: spa / SPA Client
2019-07-29 16:59:26.653 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 16:59:26.654 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564408759,"exp":1564409059,"iss":"http://172.21.0.2:80","aud":"spa","nonce":"b184192efb004f728bd1a2322772d9ab","iat":1564408759,"at_hash":"Yr8BcVJvixVcXGmGlQNbzg","sid":"848c012fb89b9e04a3c6d19c297f40cb","sub":"da3c13b6-fed5-4572-82e5-ad20ba899799","auth_time":1564408733,"idp":"Facebook","amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 16:59:26.667 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQ0MDg3NTksImV4cCI6MTU2NDQwOTA1OSwiaXNzIjoiaHR0cDovLzE3Mi4yMS4wLjI6ODAiLCJhdWQiOiJzcGEiLCJub25jZSI6ImIxODQxOTJlZmIwMDRmNzI4YmQxYTIzMjI3NzJkOWFiIiwiaWF0IjoxNTY0NDA4NzU5LCJhdF9oYXNoIjoiWXI4QmNWSnZpeFZjWEdtR2xRTmJ6ZyIsInNpZCI6Ijg0OGMwMTJmYjg5YjllMDRhM2M2ZDE5YzI5N2Y0MGNiIiwic3ViIjoiZGEzYzEzYjYtZmVkNS00NTcyLTgyZTUtYWQyMGJhODk5Nzk5IiwiYXV0aF90aW1lIjoxNTY0NDA4NzMzLCJpZHAiOiJGYWNlYm9vayIsImFtciI6WyJleHRlcm5hbCJdfQ.sYeoicmtPUoVquZ48rjSKl2G9el56pz_67ssGJ_JakLxUpvu7TqIb9w89Cf0HHJoyxTo_po0NCQ4sRByh4r0P6bU7Shan0g9mALoOci-F6zm0ekkUWIQ0kYdd3xxzPfTfIythsDfZ3vbGQhk0YjvvvHhDFkLB-K3wrkyXCh72gPJ3H1_yykI90WDf36rdgyd5GZBaUyMGZB805hVOHXEKfVHx0AXbBDzgMnRKwqSZMy1TznCWLmZzIw0RxlDRoa7Ur2yv3dm8ATt1osoOjCxTq5f-jiZ4i0EqcOmgapWFBDWufX8JLy7EVYzwfAn9SSxSAnD6brbeL9ITJBFQ2PzEg"},"$type":"EndSessionRequestValidationLog"}
2019-07-29 16:59:26.667 +03:00 [DBG] Success validating end session request from spa
2019-07-29 16:59:26.932 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-29 16:59:26.933 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 16:59:26.935 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-29 16:59:26.938 +03:00 [INF] {"SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOK5JD8170D:00000008","TimeStamp":"2019-07-29T13:59:26.0000000Z","ProcessId":5652,"LocalIpAddress":"127.0.0.1:5417","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-29 16:59:44.670 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 16:59:44.671 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 16:59:44.671 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 16:59:44.672 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 16:59:44.673 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 16:59:44.673 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 16:59:44.673 +03:00 [DBG] Start discovery request
2019-07-29 16:59:44.736 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-29 16:59:44.737 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-29 16:59:44.738 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-29 16:59:44.738 +03:00 [DBG] Start authorize request
2019-07-29 16:59:44.738 +03:00 [DBG] No user present in authorize request
2019-07-29 16:59:44.738 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:59:44.739 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:59:44.739 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:59:44.741 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2edd3518c2dc4962b7c73535292ad708","UiLocales":null,"Nonce":"b2c9379417b44f50be9e832db7107477","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2edd3518c2dc4962b7c73535292ad708","nonce":"b2c9379417b44f50be9e832db7107477"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 16:59:44.741 +03:00 [INF] Showing login: User is not authenticated
2019-07-29 16:59:44.871 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 16:59:44.871 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:59:44.872 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 16:59:44.873 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 16:59:47.102 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 16:59:48.461 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 16:59:48.569 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK5JD8170D:0000000A","TimeStamp":"2019-07-29T13:59:48.0000000Z","ProcessId":5652,"LocalIpAddress":"127.0.0.1:5417","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 16:59:48.571 +03:00 [DBG] Augmenting SignInContext
2019-07-29 16:59:48.571 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 16:59:48.572 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 16:59:48.572 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 17:00:17.088 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:00:17.956 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 17:00:17.957 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 17:00:17.957 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 17:00:17.957 +03:00 [DBG] Start authorize callback request
2019-07-29 17:00:17.958 +03:00 [DBG] User in authorize request: da3c13b6-fed5-4572-82e5-ad20ba899799
2019-07-29 17:00:17.958 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:00:17.958 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:00:17.959 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:00:17.960 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"2edd3518c2dc4962b7c73535292ad708","UiLocales":null,"Nonce":"b2c9379417b44f50be9e832db7107477","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"c212e1cc8bec1a462ee6635c10be4c6f","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"2edd3518c2dc4962b7c73535292ad708","nonce":"b2c9379417b44f50be9e832db7107477"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:00:18.006 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-29 17:00:18.006 +03:00 [DBG] Creating Implicit Flow response.
2019-07-29 17:00:18.007 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-29 17:00:18.007 +03:00 [DBG] Getting claims for access token for subject: da3c13b6-fed5-4572-82e5-ad20ba899799
2019-07-29 17:00:18.037 +03:00 [DBG] Getting claims for identity token for subject: da3c13b6-fed5-4572-82e5-ad20ba899799 and client: spa
2019-07-29 17:00:18.037 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-29 17:00:18.049 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****CnaQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9Mag","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOK5JD8170D:0000000B","TimeStamp":"2019-07-29T14:00:18.0000000Z","ProcessId":5652,"LocalIpAddress":"127.0.0.1:5417","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-29 17:00:18.050 +03:00 [INF] Authorize endpoint response
{"SubjectId":"da3c13b6-fed5-4572-82e5-ad20ba899799","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"2edd3518c2dc4962b7c73535292ad708","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-29 17:00:18.051 +03:00 [DBG] Augmenting SignInContext
2019-07-29 17:00:18.051 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 17:00:20.736 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 17:00:20.738 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:00:20.741 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:00:20.757 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 17:00:20.766 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 17:00:20.766 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 17:00:20.767 +03:00 [DBG] Start discovery request
2019-07-29 17:00:20.931 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-29 17:00:20.931 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:00:20.931 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:00:20.933 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-29 17:00:20.933 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-29 17:00:20.934 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-29 17:00:20.934 +03:00 [DBG] Start key discovery request
2019-07-29 17:00:21.051 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 17:00:21.054 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:00:21.054 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:00:21.072 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 17:00:21.072 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:00:21.072 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:00:21.073 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-29 17:00:21.073 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-29 17:00:21.074 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-29 17:00:21.074 +03:00 [DBG] Start userinfo request
2019-07-29 17:00:21.074 +03:00 [DBG] Bearer token found in header
2019-07-29 17:00:21.080 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:00:21.080 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:00:21.091 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 17:00:21.092 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564408818,"exp":1564412418,"iss":"http://172.21.0.2:80","aud":["http://172.21.0.2:80/resources","pyatnashki_api"],"client_id":"spa","sub":"da3c13b6-fed5-4572-82e5-ad20ba899799","auth_time":1564408788,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 17:00:21.092 +03:00 [DBG] Creating userinfo response
2019-07-29 17:00:21.092 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:00:21.092 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:00:21.093 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-29 17:00:21.093 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:00:21.100 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-29 17:00:21.100 +03:00 [DBG] End userinfo request
2019-07-29 17:00:21.165 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-29 17:00:21.166 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-29 17:00:21.166 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-29 17:00:21.166 +03:00 [DBG] Rendering check session result
2019-07-29 17:10:52.508 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 17:10:52.618 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 17:10:52.704 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 17:10:52.705 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 17:10:52.705 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 17:10:52.705 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 17:10:52.705 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 17:10:52.705 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 17:10:54.339 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 17:10:54.380 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:10:54.380 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:10:54.421 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 17:10:54.421 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 17:10:54.421 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 17:10:54.421 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 17:10:54.421 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 17:10:54.421 +03:00 [DBG] Error Url: /home/error
2019-07-29 17:10:54.422 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 17:10:54.462 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 17:10:56.572 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 17:10:56.575 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 17:10:56.611 +03:00 [DBG] Start discovery request
2019-07-29 17:10:57.011 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-29 17:10:57.022 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-29 17:10:57.022 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-29 17:10:57.032 +03:00 [DBG] Start authorize request
2019-07-29 17:10:57.068 +03:00 [DBG] No user present in authorize request
2019-07-29 17:10:57.085 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:10:57.186 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:10:57.247 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-29 17:10:57.248 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-29 17:10:57.248 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-29 17:10:57.248 +03:00 [DBG] Start authorize request
2019-07-29 17:10:57.249 +03:00 [DBG] No user present in authorize request
2019-07-29 17:10:57.249 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:10:57.249 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:10:57.351 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:10:57.351 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:10:57.401 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"bcaa96aa84eb4c619168258e45d2fb77","UiLocales":null,"Nonce":"9c77da9477014ce38ea65345ed13f133","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"bcaa96aa84eb4c619168258e45d2fb77","nonce":"9c77da9477014ce38ea65345ed13f133"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:10:57.401 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b4addc3b655b4e1fa2b69855521a1855","UiLocales":null,"Nonce":"e114b399d1074b728034cca0a5f7c078","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b4addc3b655b4e1fa2b69855521a1855","nonce":"e114b399d1074b728034cca0a5f7c078"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:10:57.465 +03:00 [INF] Showing login: User is not authenticated
2019-07-29 17:10:57.465 +03:00 [INF] Showing login: User is not authenticated
2019-07-29 17:10:57.806 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:10:57.808 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:10:57.813 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:10:57.821 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:00.690 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 17:11:03.177 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 17:11:09.137 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK5Q8LEKEA:00000003","TimeStamp":"2019-07-29T14:11:09.0000000Z","ProcessId":13620,"LocalIpAddress":"127.0.0.1:8035","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 17:11:09.180 +03:00 [DBG] Augmenting SignInContext
2019-07-29 17:11:09.193 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 17:11:09.213 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 17:11:09.251 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 17:11:16.215 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:11:23.695 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:11:35.898 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:11:36.297 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 17:11:36.299 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 17:11:36.300 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 17:11:36.322 +03:00 [DBG] Start authorize callback request
2019-07-29 17:11:36.336 +03:00 [DBG] User in authorize request: f81704a8-cb12-4baf-b1d5-8e559257f8e0
2019-07-29 17:11:36.339 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:11:36.340 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:36.340 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:11:36.341 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b4addc3b655b4e1fa2b69855521a1855","UiLocales":null,"Nonce":"e114b399d1074b728034cca0a5f7c078","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3ebd5cf5156aca2e9275a8929d7c3452","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b4addc3b655b4e1fa2b69855521a1855","nonce":"e114b399d1074b728034cca0a5f7c078"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:11:36.592 +03:00 [DBG] user_consent grant with value: spa|f81704a8-cb12-4baf-b1d5-8e559257f8e0 not found in store.
2019-07-29 17:11:36.593 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 17:11:36.593 +03:00 [INF] Showing consent: User has not yet consented
2019-07-29 17:11:36.778 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:11:36.778 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:36.779 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:11:36.779 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:38.439 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:11:38.958 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:11:38.960 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:38.960 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:11:38.966 +03:00 [INF] {"SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOK5Q8LEKEB:00000006","TimeStamp":"2019-07-29T14:11:38.0000000Z","ProcessId":13620,"LocalIpAddress":"127.0.0.1:8035","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-29 17:11:39.035 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:39.081 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 17:11:39.082 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 17:11:39.082 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 17:11:39.082 +03:00 [DBG] Start authorize callback request
2019-07-29 17:11:39.093 +03:00 [DBG] User in authorize request: f81704a8-cb12-4baf-b1d5-8e559257f8e0
2019-07-29 17:11:39.093 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:11:39.093 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:39.093 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:11:39.094 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b4addc3b655b4e1fa2b69855521a1855","UiLocales":null,"Nonce":"e114b399d1074b728034cca0a5f7c078","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3ebd5cf5156aca2e9275a8929d7c3452","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b4addc3b655b4e1fa2b69855521a1855","nonce":"e114b399d1074b728034cca0a5f7c078"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:11:39.100 +03:00 [DBG] user_consent grant with value: spa|f81704a8-cb12-4baf-b1d5-8e559257f8e0 not found in store.
2019-07-29 17:11:39.100 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 17:11:39.134 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-29 17:11:39.139 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-29 17:11:39.149 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: f81704a8-cb12-4baf-b1d5-8e559257f8e0
2019-07-29 17:11:39.257 +03:00 [DBG] Creating Implicit Flow response.
2019-07-29 17:11:39.296 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-29 17:11:39.304 +03:00 [DBG] Getting claims for access token for subject: f81704a8-cb12-4baf-b1d5-8e559257f8e0
2019-07-29 17:11:39.737 +03:00 [DBG] Getting claims for identity token for subject: f81704a8-cb12-4baf-b1d5-8e559257f8e0 and client: spa
2019-07-29 17:11:39.737 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-29 17:11:39.762 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****PrQw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****hozg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOK5Q8LEKE9:00000006","TimeStamp":"2019-07-29T14:11:39.0000000Z","ProcessId":13620,"LocalIpAddress":"127.0.0.1:8035","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-29 17:11:39.769 +03:00 [INF] Authorize endpoint response
{"SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"b4addc3b655b4e1fa2b69855521a1855","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-29 17:11:39.841 +03:00 [DBG] Augmenting SignInContext
2019-07-29 17:11:39.843 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 17:11:43.408 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 17:11:43.412 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:11:43.413 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:11:43.417 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 17:11:43.420 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 17:11:43.421 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 17:11:43.421 +03:00 [DBG] Start discovery request
2019-07-29 17:11:43.539 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-29 17:11:43.540 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:11:43.540 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:11:43.541 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-29 17:11:43.548 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-29 17:11:43.548 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-29 17:11:43.564 +03:00 [DBG] Start key discovery request
2019-07-29 17:11:43.703 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 17:11:43.704 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:11:43.706 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:11:43.752 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 17:11:43.752 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:11:43.753 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:11:43.753 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-29 17:11:43.760 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-29 17:11:43.763 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-29 17:11:43.784 +03:00 [DBG] Start userinfo request
2019-07-29 17:11:43.794 +03:00 [DBG] Bearer token found in header
2019-07-29 17:11:43.892 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:43.906 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:43.919 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 17:11:43.923 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564409499,"exp":1564413099,"iss":"http://172.21.0.2:80","aud":["http://172.21.0.2:80/resources","pyatnashki_api"],"client_id":"spa","sub":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","auth_time":1564409469,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 17:11:43.945 +03:00 [DBG] Creating userinfo response
2019-07-29 17:11:43.957 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:11:43.965 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:11:43.974 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-29 17:11:43.974 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:11:43.986 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-29 17:11:43.986 +03:00 [DBG] End userinfo request
2019-07-29 17:11:44.024 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-29 17:11:44.027 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-29 17:11:44.028 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-29 17:11:44.038 +03:00 [DBG] Rendering check session result
2019-07-29 17:11:47.405 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-29 17:11:47.409 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-29 17:11:47.409 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-29 17:11:47.425 +03:00 [DBG] Processing signout request for f81704a8-cb12-4baf-b1d5-8e559257f8e0
2019-07-29 17:11:47.437 +03:00 [DBG] Start end session request validation
2019-07-29 17:11:47.449 +03:00 [DBG] Start identity token validation
2019-07-29 17:11:47.451 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:47.451 +03:00 [DBG] Client found: spa / SPA Client
2019-07-29 17:11:47.461 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 17:11:47.462 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564409499,"exp":1564409799,"iss":"http://172.21.0.2:80","aud":"spa","nonce":"e114b399d1074b728034cca0a5f7c078","iat":1564409499,"at_hash":"s-mIHvc_asdrc8QBjF7chw","sid":"3ebd5cf5156aca2e9275a8929d7c3452","sub":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","auth_time":1564409469,"idp":"Facebook","amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 17:11:47.468 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQ0MDk0OTksImV4cCI6MTU2NDQwOTc5OSwiaXNzIjoiaHR0cDovLzE3Mi4yMS4wLjI6ODAiLCJhdWQiOiJzcGEiLCJub25jZSI6ImUxMTRiMzk5ZDEwNzRiNzI4MDM0Y2NhMGE1ZjdjMDc4IiwiaWF0IjoxNTY0NDA5NDk5LCJhdF9oYXNoIjoicy1tSUh2Y19hc2RyYzhRQmpGN2NodyIsInNpZCI6IjNlYmQ1Y2Y1MTU2YWNhMmU5Mjc1YTg5MjlkN2MzNDUyIiwic3ViIjoiZjgxNzA0YTgtY2IxMi00YmFmLWIxZDUtOGU1NTkyNTdmOGUwIiwiYXV0aF90aW1lIjoxNTY0NDA5NDY5LCJpZHAiOiJGYWNlYm9vayIsImFtciI6WyJleHRlcm5hbCJdfQ.ObSdtw42h3hyG2-PBtRLu3VKQ06Y7eVCSvGUeimy2NiZKmVBi35ehggFieqb8B97XnIslmHhjLkh6MsWeqE7hIovi6UcRkTgkbza_MBG213_LdUE0YPJryoSpA29HDZ-FGC6kjZ6PfXQN0Scuoup-X8dGxMTJR_KwN_fFkjs25U0a5FJy1IiCV-1pdkmGGK-_nD1Yeh8qV2PZ79Wb1pm0oCFYBJ7seMWQ-fr-f9Ofwapsdc9lFmdg30pblBlFwR3WhloJaQBLZY4pRgRidzU8h1z5-mk9dc_8jXXXOZvlFPd1PvdUwD6xbDKK22saOYKOFEmvDK6n3jIfBLmKHPrQw"},"$type":"EndSessionRequestValidationLog"}
2019-07-29 17:11:47.468 +03:00 [DBG] Success validating end session request from spa
2019-07-29 17:11:47.677 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-29 17:11:47.678 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 17:11:47.679 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-29 17:11:47.681 +03:00 [INF] {"SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOK5Q8LEKEA:00000008","TimeStamp":"2019-07-29T14:11:47.0000000Z","ProcessId":13620,"LocalIpAddress":"127.0.0.1:8035","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-29 17:11:50.460 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 17:11:50.465 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:11:50.466 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:11:50.467 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 17:11:50.468 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 17:11:50.468 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 17:11:50.468 +03:00 [DBG] Start discovery request
2019-07-29 17:11:50.537 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-29 17:11:50.540 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-29 17:11:50.540 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-29 17:11:50.540 +03:00 [DBG] Start authorize request
2019-07-29 17:11:50.541 +03:00 [DBG] No user present in authorize request
2019-07-29 17:11:50.543 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:11:50.543 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:50.544 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:11:50.546 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8ef4cf206c134f628740ac58088271c1","UiLocales":null,"Nonce":"edb899d6b74640fd9241349cbbc7d87e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8ef4cf206c134f628740ac58088271c1","nonce":"edb899d6b74640fd9241349cbbc7d87e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:11:50.546 +03:00 [INF] Showing login: User is not authenticated
2019-07-29 17:11:50.671 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:11:50.672 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:50.672 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:11:50.673 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:51.861 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 17:11:53.206 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 17:11:53.325 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK5Q8LEKEA:0000000A","TimeStamp":"2019-07-29T14:11:53.0000000Z","ProcessId":13620,"LocalIpAddress":"127.0.0.1:8035","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 17:11:53.325 +03:00 [DBG] Augmenting SignInContext
2019-07-29 17:11:53.326 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 17:11:53.326 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 17:11:53.327 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 17:11:53.364 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 17:11:53.364 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 17:11:53.365 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 17:11:53.365 +03:00 [DBG] Start authorize callback request
2019-07-29 17:11:53.365 +03:00 [DBG] User in authorize request: f81704a8-cb12-4baf-b1d5-8e559257f8e0
2019-07-29 17:11:53.365 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:11:53.365 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:53.366 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:11:53.366 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"8ef4cf206c134f628740ac58088271c1","UiLocales":null,"Nonce":"edb899d6b74640fd9241349cbbc7d87e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"138a529367f40a2bc263915758feb7ca","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"8ef4cf206c134f628740ac58088271c1","nonce":"edb899d6b74640fd9241349cbbc7d87e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:11:53.389 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-29 17:11:53.390 +03:00 [DBG] Creating Implicit Flow response.
2019-07-29 17:11:53.392 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-29 17:11:53.392 +03:00 [DBG] Getting claims for access token for subject: f81704a8-cb12-4baf-b1d5-8e559257f8e0
2019-07-29 17:11:53.407 +03:00 [DBG] Getting claims for identity token for subject: f81704a8-cb12-4baf-b1d5-8e559257f8e0 and client: spa
2019-07-29 17:11:53.408 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-29 17:11:53.417 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****TRGA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8tHg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOK5Q8LEKEB:0000000B","TimeStamp":"2019-07-29T14:11:53.0000000Z","ProcessId":13620,"LocalIpAddress":"127.0.0.1:8035","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-29 17:11:53.418 +03:00 [INF] Authorize endpoint response
{"SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"8ef4cf206c134f628740ac58088271c1","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-29 17:11:53.419 +03:00 [DBG] Augmenting SignInContext
2019-07-29 17:11:53.420 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 17:11:54.694 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 17:11:54.696 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:11:54.696 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:11:54.699 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 17:11:54.700 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 17:11:54.701 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 17:11:54.701 +03:00 [DBG] Start discovery request
2019-07-29 17:11:54.802 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-29 17:11:54.802 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:11:54.802 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:11:54.803 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-29 17:11:54.804 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-29 17:11:54.804 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-29 17:11:54.804 +03:00 [DBG] Start key discovery request
2019-07-29 17:11:54.962 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 17:11:54.962 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:11:54.963 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:11:55.013 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 17:11:55.013 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:11:55.013 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:11:55.014 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-29 17:11:55.016 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-29 17:11:55.016 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-29 17:11:55.016 +03:00 [DBG] Start userinfo request
2019-07-29 17:11:55.016 +03:00 [DBG] Bearer token found in header
2019-07-29 17:11:55.022 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:55.024 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:55.042 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 17:11:55.043 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564409513,"exp":1564413113,"iss":"http://172.21.0.2:80","aud":["http://172.21.0.2:80/resources","pyatnashki_api"],"client_id":"spa","sub":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","auth_time":1564409513,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 17:11:55.044 +03:00 [DBG] Creating userinfo response
2019-07-29 17:11:55.044 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:11:55.044 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:11:55.044 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-29 17:11:55.044 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:11:55.056 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-29 17:11:55.056 +03:00 [DBG] End userinfo request
2019-07-29 17:11:55.255 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-29 17:11:55.256 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-29 17:11:55.256 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-29 17:11:55.256 +03:00 [DBG] Rendering check session result
2019-07-29 17:11:57.488 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-29 17:11:57.489 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-29 17:11:57.489 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-29 17:11:57.489 +03:00 [DBG] Processing signout request for f81704a8-cb12-4baf-b1d5-8e559257f8e0
2019-07-29 17:11:57.489 +03:00 [DBG] Start end session request validation
2019-07-29 17:11:57.490 +03:00 [DBG] Start identity token validation
2019-07-29 17:11:57.490 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:11:57.490 +03:00 [DBG] Client found: spa / SPA Client
2019-07-29 17:11:57.502 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 17:11:57.503 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564409513,"exp":1564409813,"iss":"http://172.21.0.2:80","aud":"spa","nonce":"edb899d6b74640fd9241349cbbc7d87e","iat":1564409513,"at_hash":"opWSkQ_7_l12XT64BZig7w","sid":"138a529367f40a2bc263915758feb7ca","sub":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","auth_time":1564409513,"idp":"Facebook","amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 17:11:57.504 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQ0MDk1MTMsImV4cCI6MTU2NDQwOTgxMywiaXNzIjoiaHR0cDovLzE3Mi4yMS4wLjI6ODAiLCJhdWQiOiJzcGEiLCJub25jZSI6ImVkYjg5OWQ2Yjc0NjQwZmQ5MjQxMzQ5Y2JiYzdkODdlIiwiaWF0IjoxNTY0NDA5NTEzLCJhdF9oYXNoIjoib3BXU2tRXzdfbDEyWFQ2NEJaaWc3dyIsInNpZCI6IjEzOGE1MjkzNjdmNDBhMmJjMjYzOTE1NzU4ZmViN2NhIiwic3ViIjoiZjgxNzA0YTgtY2IxMi00YmFmLWIxZDUtOGU1NTkyNTdmOGUwIiwiYXV0aF90aW1lIjoxNTY0NDA5NTEzLCJpZHAiOiJGYWNlYm9vayIsImFtciI6WyJleHRlcm5hbCJdfQ.Cq1AWs1Cwv0m3L1tmmgmYlQO4qLMlBjtX7vxR0tgPrIbsqkZXjpVf91GNlY-iJuCc2HAVFkePYif1cc0M1hlulC-GJmTqrlTgp8gJecMTwkwGDi-xHvOYcIkstFiJDy2BJMzUE-AExmJbrsl3yR1J4S2ESnVibfn02yNsulsQb9aJYUoz13Gev2x1jKSA1S5lMw9KXG-_MNuxGokK7ZLcJ7ENsr17HCPy2XRpeIEia7rYQeAZLmv3cye9ePJP8xQziA70vBuZy6XwjirphU0pSC4vJTxc3EHwCCQb8f9ZJyhAq1mhfThGMojtBQfMbQGgv8_WT3crab6fA1I_7TRGA"},"$type":"EndSessionRequestValidationLog"}
2019-07-29 17:11:57.504 +03:00 [DBG] Success validating end session request from spa
2019-07-29 17:11:57.627 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-29 17:11:57.628 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 17:11:57.628 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-29 17:11:57.628 +03:00 [INF] {"SubjectId":"f81704a8-cb12-4baf-b1d5-8e559257f8e0","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOK5Q8LEKE9:0000000D","TimeStamp":"2019-07-29T14:11:57.0000000Z","ProcessId":13620,"LocalIpAddress":"127.0.0.1:8035","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-29 17:12:00.424 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 17:12:00.425 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:12:00.425 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:12:00.426 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 17:12:00.426 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 17:12:00.426 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 17:12:00.426 +03:00 [DBG] Start discovery request
2019-07-29 17:12:00.467 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-29 17:12:00.468 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-29 17:12:00.468 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-29 17:12:00.468 +03:00 [DBG] Start authorize request
2019-07-29 17:12:00.468 +03:00 [DBG] No user present in authorize request
2019-07-29 17:12:00.468 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:12:00.469 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:12:00.469 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:12:00.470 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a2964ac5297241fab30cd0208d30209d","UiLocales":null,"Nonce":"bfc1dcf8b0914a82b004fbe9c1ddd958","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a2964ac5297241fab30cd0208d30209d","nonce":"bfc1dcf8b0914a82b004fbe9c1ddd958"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:12:00.470 +03:00 [INF] Showing login: User is not authenticated
2019-07-29 17:12:00.612 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:12:00.612 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:12:00.613 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:12:00.614 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:12:02.311 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-29 17:12:09.972 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 17:12:10.379 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"42ba3842-4f1a-486e-aa48-99f1020e6f67","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK5Q8LEKE9:0000000F","TimeStamp":"2019-07-29T14:12:10.0000000Z","ProcessId":13620,"LocalIpAddress":"127.0.0.1:8035","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 17:12:10.380 +03:00 [DBG] Augmenting SignInContext
2019-07-29 17:12:10.381 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 17:12:10.382 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 17:12:10.387 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 17:12:29.135 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:12:29.444 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 17:12:29.444 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 17:12:29.445 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 17:12:29.445 +03:00 [DBG] Start authorize callback request
2019-07-29 17:12:29.445 +03:00 [DBG] User in authorize request: 42ba3842-4f1a-486e-aa48-99f1020e6f67
2019-07-29 17:12:29.445 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:12:29.450 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:12:29.450 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:12:29.452 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"42ba3842-4f1a-486e-aa48-99f1020e6f67","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a2964ac5297241fab30cd0208d30209d","UiLocales":null,"Nonce":"bfc1dcf8b0914a82b004fbe9c1ddd958","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"269c036cbe6ccb7e92845ce680dab6ef","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a2964ac5297241fab30cd0208d30209d","nonce":"bfc1dcf8b0914a82b004fbe9c1ddd958"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:12:29.477 +03:00 [DBG] user_consent grant with value: spa|42ba3842-4f1a-486e-aa48-99f1020e6f67 not found in store.
2019-07-29 17:12:29.477 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 17:12:29.477 +03:00 [INF] Showing consent: User has not yet consented
2019-07-29 17:12:29.680 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:12:29.680 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:12:29.681 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:12:29.681 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:12:31.858 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:12:31.991 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:12:31.992 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:12:31.993 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:12:31.994 +03:00 [INF] {"SubjectId":"42ba3842-4f1a-486e-aa48-99f1020e6f67","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOK5Q8LEKEB:00000011","TimeStamp":"2019-07-29T14:12:31.0000000Z","ProcessId":13620,"LocalIpAddress":"127.0.0.1:8035","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-29 17:12:31.996 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:12:32.042 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 17:12:32.043 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 17:12:32.043 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 17:12:32.044 +03:00 [DBG] Start authorize callback request
2019-07-29 17:12:32.044 +03:00 [DBG] User in authorize request: 42ba3842-4f1a-486e-aa48-99f1020e6f67
2019-07-29 17:12:32.044 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:12:32.044 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:12:32.045 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:12:32.046 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"42ba3842-4f1a-486e-aa48-99f1020e6f67","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a2964ac5297241fab30cd0208d30209d","UiLocales":null,"Nonce":"bfc1dcf8b0914a82b004fbe9c1ddd958","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"269c036cbe6ccb7e92845ce680dab6ef","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a2964ac5297241fab30cd0208d30209d","nonce":"bfc1dcf8b0914a82b004fbe9c1ddd958"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:12:32.058 +03:00 [DBG] user_consent grant with value: spa|42ba3842-4f1a-486e-aa48-99f1020e6f67 not found in store.
2019-07-29 17:12:32.059 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 17:12:32.059 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-29 17:12:32.059 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-29 17:12:32.059 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 42ba3842-4f1a-486e-aa48-99f1020e6f67
2019-07-29 17:12:32.069 +03:00 [DBG] Creating Implicit Flow response.
2019-07-29 17:12:32.069 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-29 17:12:32.069 +03:00 [DBG] Getting claims for access token for subject: 42ba3842-4f1a-486e-aa48-99f1020e6f67
2019-07-29 17:12:32.085 +03:00 [DBG] Getting claims for identity token for subject: 42ba3842-4f1a-486e-aa48-99f1020e6f67 and client: spa
2019-07-29 17:12:32.085 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-29 17:12:32.095 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"42ba3842-4f1a-486e-aa48-99f1020e6f67","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3Ilg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****N5ew","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOK5Q8LEKE9:00000011","TimeStamp":"2019-07-29T14:12:32.0000000Z","ProcessId":13620,"LocalIpAddress":"127.0.0.1:8035","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-29 17:12:32.096 +03:00 [INF] Authorize endpoint response
{"SubjectId":"42ba3842-4f1a-486e-aa48-99f1020e6f67","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"a2964ac5297241fab30cd0208d30209d","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-29 17:12:32.096 +03:00 [DBG] Augmenting SignInContext
2019-07-29 17:12:32.097 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 17:12:35.132 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 17:12:35.133 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:12:35.133 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:12:35.134 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 17:12:35.135 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 17:12:35.136 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 17:12:35.136 +03:00 [DBG] Start discovery request
2019-07-29 17:12:35.310 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-29 17:12:35.310 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:12:35.310 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:12:35.312 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-29 17:12:35.313 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-29 17:12:35.313 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-29 17:12:35.313 +03:00 [DBG] Start key discovery request
2019-07-29 17:12:35.472 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 17:12:35.473 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:12:35.473 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:12:35.537 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 17:12:35.538 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:12:35.538 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:12:35.538 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-29 17:12:35.539 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-29 17:12:35.539 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-29 17:12:35.539 +03:00 [DBG] Start userinfo request
2019-07-29 17:12:35.539 +03:00 [DBG] Bearer token found in header
2019-07-29 17:12:35.545 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:12:35.545 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:12:35.555 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 17:12:35.556 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564409552,"exp":1564413152,"iss":"http://172.21.0.2:80","aud":["http://172.21.0.2:80/resources","pyatnashki_api"],"client_id":"spa","sub":"42ba3842-4f1a-486e-aa48-99f1020e6f67","auth_time":1564409530,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 17:12:35.561 +03:00 [DBG] Creating userinfo response
2019-07-29 17:12:35.562 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:12:35.562 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:12:35.563 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-29 17:12:35.563 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:12:35.574 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-29 17:12:35.574 +03:00 [DBG] End userinfo request
2019-07-29 17:12:35.663 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-29 17:12:35.663 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-29 17:12:35.664 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-29 17:12:35.664 +03:00 [DBG] Rendering check session result
2019-07-29 17:15:35.213 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 17:15:35.321 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 17:15:35.362 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 17:15:35.363 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 17:15:35.363 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 17:15:35.363 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 17:15:35.363 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 17:15:35.363 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 17:15:37.505 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 17:15:37.524 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:15:37.524 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:15:37.620 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 17:15:37.620 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 17:15:37.620 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 17:15:37.620 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 17:15:37.621 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 17:15:37.621 +03:00 [DBG] Error Url: /home/error
2019-07-29 17:15:37.621 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 17:15:37.705 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 17:15:40.667 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 17:15:40.667 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 17:15:40.677 +03:00 [DBG] Start discovery request
2019-07-29 17:15:40.976 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-29 17:15:40.987 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-29 17:15:40.987 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-29 17:15:41.005 +03:00 [DBG] Start authorize request
2019-07-29 17:15:41.071 +03:00 [DBG] No user present in authorize request
2019-07-29 17:15:41.135 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:15:41.214 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:15:41.382 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:15:41.439 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"21d5f41b24ba4d588b7887e4c90fa10b","UiLocales":null,"Nonce":"3b5bcaa856354ef886073013867175a7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"21d5f41b24ba4d588b7887e4c90fa10b","nonce":"3b5bcaa856354ef886073013867175a7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:15:41.507 +03:00 [INF] Showing login: User is not authenticated
2019-07-29 17:15:41.766 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:15:41.767 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:15:41.771 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:15:41.783 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:15:46.125 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 17:15:48.457 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 17:15:54.961 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"7eec334d-5e26-4a77-8362-9d3f7b943aff","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK5ST0DRE3:00000003","TimeStamp":"2019-07-29T14:15:54.0000000Z","ProcessId":15088,"LocalIpAddress":"127.0.0.1:47841","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 17:15:55.001 +03:00 [DBG] Augmenting SignInContext
2019-07-29 17:15:55.010 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 17:15:55.027 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 17:15:55.045 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 17:16:00.430 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:16:00.787 +03:00 [WRN] User 7eec334d-5e26-4a77-8362-9d3f7b943aff validation failed: InvalidUserName.
2019-07-29 17:16:00.803 +03:00 [WRN] User 7eec334d-5e26-4a77-8362-9d3f7b943aff validation failed: InvalidUserName.
2019-07-29 17:16:00.830 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 17:16:00.832 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 17:16:00.832 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 17:16:00.851 +03:00 [DBG] Start authorize callback request
2019-07-29 17:16:00.869 +03:00 [DBG] User in authorize request: 7eec334d-5e26-4a77-8362-9d3f7b943aff
2019-07-29 17:16:00.869 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:16:00.871 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:16:00.872 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:16:00.873 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"7eec334d-5e26-4a77-8362-9d3f7b943aff","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"21d5f41b24ba4d588b7887e4c90fa10b","UiLocales":null,"Nonce":"3b5bcaa856354ef886073013867175a7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"eec6420d1c19acc63fa02b1567e61069","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"21d5f41b24ba4d588b7887e4c90fa10b","nonce":"3b5bcaa856354ef886073013867175a7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:16:01.053 +03:00 [DBG] user_consent grant with value: spa|7eec334d-5e26-4a77-8362-9d3f7b943aff not found in store.
2019-07-29 17:16:01.054 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 17:16:01.054 +03:00 [INF] Showing consent: User has not yet consented
2019-07-29 17:16:01.211 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:16:01.211 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:16:01.212 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:16:01.214 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:16:08.051 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:16:08.220 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:16:08.225 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:16:08.226 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:16:08.233 +03:00 [INF] {"SubjectId":"7eec334d-5e26-4a77-8362-9d3f7b943aff","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOK5ST0DRE5:00000005","TimeStamp":"2019-07-29T14:16:08.0000000Z","ProcessId":15088,"LocalIpAddress":"127.0.0.1:47841","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-29 17:16:08.352 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:16:08.365 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 17:16:08.366 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 17:16:08.366 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 17:16:08.366 +03:00 [DBG] Start authorize callback request
2019-07-29 17:16:08.379 +03:00 [DBG] User in authorize request: 7eec334d-5e26-4a77-8362-9d3f7b943aff
2019-07-29 17:16:08.379 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:16:08.379 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:16:08.380 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:16:08.380 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"7eec334d-5e26-4a77-8362-9d3f7b943aff","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"21d5f41b24ba4d588b7887e4c90fa10b","UiLocales":null,"Nonce":"3b5bcaa856354ef886073013867175a7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"eec6420d1c19acc63fa02b1567e61069","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"21d5f41b24ba4d588b7887e4c90fa10b","nonce":"3b5bcaa856354ef886073013867175a7"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:16:08.386 +03:00 [DBG] user_consent grant with value: spa|7eec334d-5e26-4a77-8362-9d3f7b943aff not found in store.
2019-07-29 17:16:08.386 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 17:16:08.413 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-29 17:16:08.418 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-29 17:16:08.433 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 7eec334d-5e26-4a77-8362-9d3f7b943aff
2019-07-29 17:16:08.537 +03:00 [DBG] Creating Implicit Flow response.
2019-07-29 17:16:08.585 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-29 17:16:08.587 +03:00 [DBG] Getting claims for access token for subject: 7eec334d-5e26-4a77-8362-9d3f7b943aff
2019-07-29 17:16:08.848 +03:00 [DBG] Getting claims for identity token for subject: 7eec334d-5e26-4a77-8362-9d3f7b943aff and client: spa
2019-07-29 17:16:08.849 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-29 17:16:08.871 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"7eec334d-5e26-4a77-8362-9d3f7b943aff","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Ge3A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****7KBQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOK5ST0DRE3:00000005","TimeStamp":"2019-07-29T14:16:08.0000000Z","ProcessId":15088,"LocalIpAddress":"127.0.0.1:47841","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-29 17:16:08.878 +03:00 [INF] Authorize endpoint response
{"SubjectId":"7eec334d-5e26-4a77-8362-9d3f7b943aff","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"21d5f41b24ba4d588b7887e4c90fa10b","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-29 17:16:08.954 +03:00 [DBG] Augmenting SignInContext
2019-07-29 17:16:08.955 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 17:16:10.532 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 17:16:10.534 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:16:10.534 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:16:10.535 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 17:16:10.535 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 17:16:10.536 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 17:16:10.536 +03:00 [DBG] Start discovery request
2019-07-29 17:16:10.718 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-29 17:16:10.719 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:16:10.719 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:16:10.719 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-29 17:16:10.722 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-29 17:16:10.722 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-29 17:16:10.737 +03:00 [DBG] Start key discovery request
2019-07-29 17:16:10.892 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 17:16:10.892 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:16:10.892 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:16:10.913 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 17:16:10.914 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:16:10.914 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:16:10.915 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-29 17:16:10.925 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-29 17:16:10.925 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-29 17:16:10.943 +03:00 [DBG] Start userinfo request
2019-07-29 17:16:10.959 +03:00 [DBG] Bearer token found in header
2019-07-29 17:16:11.046 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:16:11.054 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:16:11.060 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 17:16:11.064 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564409768,"exp":1564413368,"iss":"http://172.21.0.2:80","aud":["http://172.21.0.2:80/resources","pyatnashki_api"],"client_id":"spa","sub":"7eec334d-5e26-4a77-8362-9d3f7b943aff","auth_time":1564409754,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 17:16:11.076 +03:00 [DBG] Creating userinfo response
2019-07-29 17:16:11.088 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:16:11.094 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:16:11.099 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-29 17:16:11.100 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:16:11.107 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-29 17:16:11.108 +03:00 [DBG] End userinfo request
2019-07-29 17:16:11.157 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-29 17:16:11.159 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-29 17:16:11.160 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-29 17:16:11.166 +03:00 [DBG] Rendering check session result
2019-07-29 17:19:55.848 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-29 17:19:55.938 +03:00 [DBG] Custom IssuerUri set to http://172.21.0.2:80
2019-07-29 17:19:55.983 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-07-29 17:19:55.984 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-07-29 17:19:55.984 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-07-29 17:19:55.984 +03:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-07-29 17:19:55.984 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-07-29 17:19:55.984 +03:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-07-29 17:19:58.162 +03:00 [DBG] Login Url: /Account/Login
2019-07-29 17:19:58.169 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-29 17:19:58.169 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-29 17:19:58.169 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-29 17:19:58.169 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-29 17:19:58.169 +03:00 [DBG] Error Url: /home/error
2019-07-29 17:19:58.169 +03:00 [DBG] Error Id Parameter: errorId
2019-07-29 17:19:59.439 +03:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-07-29 17:19:59.456 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-07-29 17:19:59.456 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-07-29 17:19:59.498 +03:00 [DBG] Processing signout request for 7eec334d-5e26-4a77-8362-9d3f7b943aff
2019-07-29 17:19:59.535 +03:00 [DBG] Start end session request validation
2019-07-29 17:19:59.566 +03:00 [DBG] Start identity token validation
2019-07-29 17:19:59.786 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:19:59.787 +03:00 [DBG] Client found: spa / SPA Client
2019-07-29 17:20:06.143 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 17:20:06.171 +03:00 [DBG] Token validation success
{"ClientId":"spa","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564409768,"exp":1564410068,"iss":"http://172.21.0.2:80","aud":"spa","nonce":"3b5bcaa856354ef886073013867175a7","iat":1564409768,"at_hash":"wT5GzSsYc-CvnKMpseivqw","sid":"eec6420d1c19acc63fa02b1567e61069","sub":"7eec334d-5e26-4a77-8362-9d3f7b943aff","auth_time":1564409754,"idp":"Facebook","amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 17:20:06.222 +03:00 [INF] End session request validation success
{"ClientId":"spa","ClientName":"SPA Client","SubjectId":"7eec334d-5e26-4a77-8362-9d3f7b943aff","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjcxYjI5NGY4MTVkZDE4ZTQ5NGUyMDk4ODk2ZGJmZWYxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjQ0MDk3NjgsImV4cCI6MTU2NDQxMDA2OCwiaXNzIjoiaHR0cDovLzE3Mi4yMS4wLjI6ODAiLCJhdWQiOiJzcGEiLCJub25jZSI6IjNiNWJjYWE4NTYzNTRlZjg4NjA3MzAxMzg2NzE3NWE3IiwiaWF0IjoxNTY0NDA5NzY4LCJhdF9oYXNoIjoid1Q1R3pTc1ljLUN2bktNcHNlaXZxdyIsInNpZCI6ImVlYzY0MjBkMWMxOWFjYzYzZmEwMmIxNTY3ZTYxMDY5Iiwic3ViIjoiN2VlYzMzNGQtNWUyNi00YTc3LTgzNjItOWQzZjdiOTQzYWZmIiwiYXV0aF90aW1lIjoxNTY0NDA5NzU0LCJpZHAiOiJGYWNlYm9vayIsImFtciI6WyJleHRlcm5hbCJdfQ.kJmkWyFT_YUoF0YRXgJ8tvQiNJN3-noguBYUG6ohk0EG1yyipFBRXpJrpkwBdUutwTpEYC4O4_xgK9MmfY3aquxNvqtUw-gTJAQLwjHB2vMQWmoPKgvBT8QyKGotwx5Gjwn5evkyqz7J32JsRLseCR_ZvLNgTqoM--FUh4BtDO9Ba55a78GNRU6K9KPcH0Zcn1gE9wRw805BmyOBzjatSG9FhL-OirupIFp9lXh9CZOKnNNQtEM3iMOb1t3ZUltMk2a3hoTxp9x3I7g6st1eJhs-4-6k-Q5_8YifMYy61ULKCfRzeJfBhJ3z4O-AhYTcMkos1yxW-Be-ZmGnG-Ge3A"},"$type":"EndSessionRequestValidationLog"}
2019-07-29 17:20:06.222 +03:00 [DBG] Success validating end session request from spa
2019-07-29 17:20:06.723 +03:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-07-29 17:20:06.725 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 17:20:06.727 +03:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-07-29 17:20:06.764 +03:00 [INF] {"SubjectId":"7eec334d-5e26-4a77-8362-9d3f7b943aff","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLOK5VAM2RI4:00000002","TimeStamp":"2019-07-29T14:20:06.0000000Z","ProcessId":7216,"LocalIpAddress":"127.0.0.1:6735","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-29 17:20:11.677 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 17:20:11.689 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:20:11.689 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:20:11.694 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 17:20:11.699 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 17:20:11.699 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 17:20:11.709 +03:00 [DBG] Start discovery request
2019-07-29 17:20:11.844 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-29 17:20:11.866 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-29 17:20:11.866 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-29 17:20:11.879 +03:00 [DBG] Start authorize request
2019-07-29 17:20:11.906 +03:00 [DBG] No user present in authorize request
2019-07-29 17:20:11.945 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:20:11.959 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:20:12.206 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:20:12.225 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"3a21df88f65b4749ad3f47452522956e","UiLocales":null,"Nonce":"68d44612607f453b969722f58cfc5dbe","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"3a21df88f65b4749ad3f47452522956e","nonce":"68d44612607f453b969722f58cfc5dbe"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:20:12.257 +03:00 [INF] Showing login: User is not authenticated
2019-07-29 17:20:12.485 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:20:12.485 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:20:12.486 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:20:12.492 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:20:30.544 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-29 17:20:34.437 +03:00 [INF] AuthenticationScheme: Identity.External signed in.
2019-07-29 17:20:36.857 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"fff5ff5e-c581-4e72-8614-da365257791e","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLOK5VAM2RI4:00000004","TimeStamp":"2019-07-29T14:20:36.0000000Z","ProcessId":7216,"LocalIpAddress":"127.0.0.1:6735","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-29 17:20:36.922 +03:00 [DBG] Augmenting SignInContext
2019-07-29 17:20:36.934 +03:00 [DBG] Adding amr claim with value: external
2019-07-29 17:20:36.946 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 17:20:36.947 +03:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-07-29 17:20:46.190 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:20:47.602 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:20:51.138 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:20:53.083 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:20:55.858 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:20:59.623 +03:00 [DBG] CORS request made for path: /External/ChangeUsername from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:20:59.989 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 17:20:59.997 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 17:21:00.001 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 17:21:00.032 +03:00 [DBG] Start authorize callback request
2019-07-29 17:21:00.122 +03:00 [DBG] User in authorize request: fff5ff5e-c581-4e72-8614-da365257791e
2019-07-29 17:21:00.123 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:21:00.123 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:21:00.123 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:21:00.124 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"fff5ff5e-c581-4e72-8614-da365257791e","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"3a21df88f65b4749ad3f47452522956e","UiLocales":null,"Nonce":"68d44612607f453b969722f58cfc5dbe","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e23a955002518c38a0da444986129cc3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"3a21df88f65b4749ad3f47452522956e","nonce":"68d44612607f453b969722f58cfc5dbe"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:21:00.211 +03:00 [DBG] user_consent grant with value: spa|fff5ff5e-c581-4e72-8614-da365257791e not found in store.
2019-07-29 17:21:00.213 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 17:21:00.213 +03:00 [INF] Showing consent: User has not yet consented
2019-07-29 17:21:00.434 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:21:00.434 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:21:00.435 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:21:00.435 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:21:02.060 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-29 17:21:02.355 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:21:02.355 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:21:02.356 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:21:02.365 +03:00 [INF] {"SubjectId":"fff5ff5e-c581-4e72-8614-da365257791e","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLOK5VAM2RI5:00000007","TimeStamp":"2019-07-29T14:21:02.0000000Z","ProcessId":7216,"LocalIpAddress":"127.0.0.1:6735","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-29 17:21:02.424 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:21:02.503 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-29 17:21:02.505 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-29 17:21:02.507 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-29 17:21:02.507 +03:00 [DBG] Start authorize callback request
2019-07-29 17:21:02.517 +03:00 [DBG] User in authorize request: fff5ff5e-c581-4e72-8614-da365257791e
2019-07-29 17:21:02.518 +03:00 [DBG] Start authorize request protocol validation
2019-07-29 17:21:02.518 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:21:02.518 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-29 17:21:02.518 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"fff5ff5e-c581-4e72-8614-da365257791e","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"3a21df88f65b4749ad3f47452522956e","UiLocales":null,"Nonce":"68d44612607f453b969722f58cfc5dbe","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e23a955002518c38a0da444986129cc3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"3a21df88f65b4749ad3f47452522956e","nonce":"68d44612607f453b969722f58cfc5dbe"},"$type":"AuthorizeRequestValidationLog"}
2019-07-29 17:21:02.523 +03:00 [DBG] user_consent grant with value: spa|fff5ff5e-c581-4e72-8614-da365257791e not found in store.
2019-07-29 17:21:02.524 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-29 17:21:02.541 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-29 17:21:02.550 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","email","profile","pyatnashki_api"]
2019-07-29 17:21:02.560 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: fff5ff5e-c581-4e72-8614-da365257791e
2019-07-29 17:21:02.657 +03:00 [DBG] Creating Implicit Flow response.
2019-07-29 17:21:02.709 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-29 17:21:02.712 +03:00 [DBG] Getting claims for access token for subject: fff5ff5e-c581-4e72-8614-da365257791e
2019-07-29 17:21:02.903 +03:00 [DBG] Getting claims for identity token for subject: fff5ff5e-c581-4e72-8614-da365257791e and client: spa
2019-07-29 17:21:02.903 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-29 17:21:02.942 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"fff5ff5e-c581-4e72-8614-da365257791e","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****QYUw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****dVWA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLOK5VAM2RI6:00000007","TimeStamp":"2019-07-29T14:21:02.0000000Z","ProcessId":7216,"LocalIpAddress":"127.0.0.1:6735","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-29 17:21:02.950 +03:00 [INF] Authorize endpoint response
{"SubjectId":"fff5ff5e-c581-4e72-8614-da365257791e","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"3a21df88f65b4749ad3f47452522956e","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-29 17:21:03.009 +03:00 [DBG] Augmenting SignInContext
2019-07-29 17:21:03.010 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-07-29 17:21:06.206 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-29 17:21:06.211 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:21:06.212 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:21:06.214 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-29 17:21:06.217 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-29 17:21:06.217 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-29 17:21:06.220 +03:00 [DBG] Start discovery request
2019-07-29 17:21:06.283 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-29 17:21:06.284 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:21:06.284 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:21:06.285 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-29 17:21:06.287 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-29 17:21:06.288 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-29 17:21:06.302 +03:00 [DBG] Start key discovery request
2019-07-29 17:21:06.460 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 17:21:06.460 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:21:06.460 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:21:06.495 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-29 17:21:06.496 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-29 17:21:06.496 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-29 17:21:06.496 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-29 17:21:06.500 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-29 17:21:06.501 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-29 17:21:06.529 +03:00 [DBG] Start userinfo request
2019-07-29 17:21:06.547 +03:00 [DBG] Bearer token found in header
2019-07-29 17:21:06.599 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:21:06.600 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-29 17:21:06.613 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-29 17:21:06.615 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1564410062,"exp":1564413662,"iss":"http://172.21.0.2:80","aud":["http://172.21.0.2:80/resources","pyatnashki_api"],"client_id":"spa","sub":"fff5ff5e-c581-4e72-8614-da365257791e","auth_time":1564410036,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-29 17:21:06.638 +03:00 [DBG] Creating userinfo response
2019-07-29 17:21:06.647 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:21:06.656 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:21:06.661 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-29 17:21:06.661 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-29 17:21:06.672 +03:00 [INF] Profile service returned the following claim types: sub name email preferred_username email
2019-07-29 17:21:06.672 +03:00 [DBG] End userinfo request
2019-07-29 17:21:06.745 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-29 17:21:06.746 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-29 17:21:06.747 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-29 17:21:06.751 +03:00 [DBG] Rendering check session result
